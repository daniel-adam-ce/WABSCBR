
BT_Master.elf:     file format elf32-littlenios2
BT_Master.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000244

Program Header:
    LOAD off    0x00001000 vaddr 0x08000000 paddr 0x08000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08000020 paddr 0x08000020 align 2**12
         filesz 0x00020464 memsz 0x00020464 flags r-x
    LOAD off    0x00021484 vaddr 0x08020484 paddr 0x08022088 align 2**12
         filesz 0x00001c04 memsz 0x00001c04 flags rw-
    LOAD off    0x00023c8c vaddr 0x08023c8c paddr 0x08023c8c align 2**12
         filesz 0x00000000 memsz 0x0000017c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08000000  08000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  08000020  08000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001f6d0  08000244  08000244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000b70  0801f914  0801f914  00020914  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001c04  08020484  08022088  00021484  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000017c  08023c8c  08023c8c  00023c8c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  08023e08  08023e08  00023088  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  00023088  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001920  00000000  00000000  000230b0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00041052  00000000  00000000  000249d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00010c11  00000000  00000000  00065a22  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00015f7a  00000000  00000000  00076633  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00003e4c  00000000  00000000  0008c5b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00007b7f  00000000  00000000  000903fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0002bcc7  00000000  00000000  00097f7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  000c3c44  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00002b10  00000000  00000000  000c3ca8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000cc572  2**0
                  CONTENTS, READONLY
 18 .cpu          0000000c  00000000  00000000  000cc575  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000cc581  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000cc582  2**0
                  CONTENTS, READONLY
 21 .stderr_dev   0000000b  00000000  00000000  000cc583  2**0
                  CONTENTS, READONLY
 22 .stdin_dev    0000000b  00000000  00000000  000cc58e  2**0
                  CONTENTS, READONLY
 23 .stdout_dev   0000000b  00000000  00000000  000cc599  2**0
                  CONTENTS, READONLY
 24 .sopc_system_name 00000004  00000000  00000000  000cc5a4  2**0
                  CONTENTS, READONLY
 25 .quartus_project_dir 0000003e  00000000  00000000  000cc5a8  2**0
                  CONTENTS, READONLY
 26 .jdi          00003d2c  00000000  00000000  000cc5e6  2**0
                  CONTENTS, READONLY
 27 .sopcinfo     0005ba77  00000000  00000000  000d0312  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08000000 l    d  .entry	00000000 .entry
08000020 l    d  .exceptions	00000000 .exceptions
08000244 l    d  .text	00000000 .text
0801f914 l    d  .rodata	00000000 .rodata
08020484 l    d  .rwdata	00000000 .rwdata
08023c8c l    d  .bss	00000000 .bss
08023e08 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../BT_Master_bsp//obj/HAL/src/crt0.o
0800028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 CHC05.cpp
00000000 l    df *ABS*	00000000 CUart.cpp
00000000 l    df *ABS*	00000000 main.cpp
08022014 l     O .rwdata	00000004 _ZL7MaxList
00000000 l    df *ABS*	00000000 del_op.cc
00000000 l    df *ABS*	00000000 eh_personality.cc
08001b18 l     F .text	000000a4 _ZL21size_of_encoded_valueh
08001bbc l     F .text	0000020c _ZL28read_encoded_value_with_basehjPKhPj
08001dc8 l     F .text	00000054 _ZL15get_ttype_entryP16lsda_header_infom
08001e1c l     F .text	0000008c _ZL21base_of_encoded_valuehP15_Unwind_Context
08001ea8 l     F .text	00000134 _ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info
08001fdc l     F .text	00000088 _ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3
08002064 l     F .text	000001c0 _ZL28check_compact_exception_specPKSt9type_infoPvPKhij
08002224 l     F .text	000000a8 _ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl
00000000 l    df *ABS*	00000000 eh_catch.cc
00000000 l    df *ABS*	00000000 eh_terminate.cc
00000000 l    df *ABS*	00000000 eh_globals.cc
08023c8c l     O .bss	00000008 _ZL10eh_globals
00000000 l    df *ABS*	00000000 eh_alloc.cc
08002dec l     F .text	000000b8 _ZN12_GLOBAL__N_14pool4freeEPv.constprop.4
08023cd0 l     O .bss	00000010 _ZN12_GLOBAL__N_114emergency_poolE
08002ea4 l     F .text	000000a8 _ZN12_GLOBAL__N_14pool8allocateEj.constprop.5
08003054 l     F .text	0000005c _GLOBAL__sub_I___cxa_allocate_exception
00000000 l    df *ABS*	00000000 class_type_info.cc
00000000 l    df *ABS*	00000000 eh_exception.cc
00000000 l    df *ABS*	00000000 eh_throw.cc
080033b0 l     F .text	00000044 _ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception
00000000 l    df *ABS*	00000000 eh_call.cc
00000000 l    df *ABS*	00000000 si_class_type_info.cc
00000000 l    df *ABS*	00000000 tinfo.cc
00000000 l    df *ABS*	00000000 eh_term_handler.cc
00000000 l    df *ABS*	00000000 eh_unex_handler.cc
00000000 l    df *ABS*	00000000 pure.cc
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 unwind-sjlj.c
08003a74 l     F .text	00000118 _Unwind_ForcedUnwind_Phase2
08023c94 l     O .bss	00000004 fc_static
08003b8c l     F .text	000000c0 _Unwind_RaiseException_Phase2
08003c4c l     F .text	00000030 uw_install_context.isra.1
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 sscanf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0801fd2a l     O .rodata	00000010 zeroes.4389
0801fd3a l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfscanf.c
0801fd52 l     O .rodata	00000022 basefix.4340
00000000 l    df *ABS*	00000000 vfprintf.c
0801fd74 l     O .rodata	00000010 zeroes.4404
0800aeac l     F .text	000000bc __sbprintf
0801fd84 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vfscanf.c
0801fd94 l     O .rodata	00000022 basefix.4359
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
0801feb7 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
0800c9fc l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0800e52c l     F .text	00000008 __fp_unlock
0800e540 l     F .text	0000019c __sinit.part.1
0800e6dc l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0802088c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
08020cd0 l     O .rwdata	00000020 lc_ctype_charset
08020cb0 l     O .rwdata	00000020 lc_message_charset
08020cf0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mprec.c
08020058 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
08011438 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 strtod.c
08011774 l     F .text	00000064 sulp
080201a0 l     O .rodata	00000014 fpi.2737
080201b4 l     O .rodata	00000028 tinytens
0802018c l     O .rodata	00000014 fpinan.2773
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 vfprintf.c
080201ec l     O .rodata	00000010 blanks.4332
080201dc l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfscanf.c
080201fc l     O .rodata	00000022 basefix.3791
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 vfprintf.c
080163b4 l     F .text	000000fc __sprint_r.part.0
0802022e l     O .rodata	00000010 blanks.4348
0802021e l     O .rodata	00000010 zeroes.4349
08017940 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
08017e28 l     F .text	00000100 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 eqsf2.c
00000000 l    df *ABS*	00000000 gesf2.c
00000000 l    df *ABS*	00000000 lesf2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0801c3a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0801c4b4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fcntl.c
0801c514 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_fstat.c
0801c670 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0801c77c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0801c85c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0801c9c8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0801cab4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_open.c
0801cc88 l     F .text	0000003c alt_get_errno
0801ccc4 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_read.c
0801cedc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
08022078 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0801d2fc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0801d430 l     F .text	00000034 alt_dev_reg
08020ed0 l     O .rwdata	00001060 jtag_uart_0
08021f30 l     O .rwdata	000000c4 hc_05_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0801d73c l     F .text	0000020c altera_avalon_jtag_uart_irq
0801d948 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0801df80 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_init.c
0801e230 l     F .text	0000009c altera_avalon_uart_irq
0801e2cc l     F .text	000000e4 altera_avalon_uart_rxirq
0801e3b0 l     F .text	00000148 altera_avalon_uart_txirq
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
0801e54c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
0801e764 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0801ec18 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0801f2c8 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
08023ccc g     O .bss	00000004 alt_instruction_exception_handler
08002fac g     F .text	00000028 __cxa_free_exception
08003828 g     F .text	00000008 _ZNKSt9type_info15__is_function_pEv
08010cfc g     F .text	00000074 _mprec_log10
08002d74 g     F .text	00000018 _ZSt10unexpectedv
08010de8 g     F .text	0000008c __any_on
080189b4 g     F .text	00000054 _isatty_r
08020064 g     O .rodata	00000028 __mprec_tinytens
0801cbc4 g     F .text	0000007c alt_main
080051dc g     F .text	00000090 strcpy
08004974 g     F .text	000000c0 _puts_r
08023d08 g     O .bss	00000100 alt_irq
080033a0 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD1Ev
0800f6b0 g     F .text	00000060 _lseek_r
08003d08 g     F .text	00000020 .hidden _Unwind_GetIPInfo
08022088 g       *ABS*	00000000 __flash_rwdata_start
08000e48  w    F .text	00000048 _ZN5CUartC1ERKS_
0801ad2c g     F .text	00000088 .hidden __eqdf2
08003484 g     F .text	00000084 __cxa_rethrow
08003c94 g     F .text	00000014 .hidden _Unwind_SjLj_Unregister
08002db0 g     F .text	00000014 _ZSt14set_unexpectedPFvvE
08003cf8 g     F .text	00000010 .hidden _Unwind_GetIP
08023e08 g       *ABS*	00000000 __alt_heap_start
08004dac g     F .text	0000005c _kill_r
08004938 g     F .text	0000003c printf
08018c30 g     F .text	0000009c _wcrtomb_r
08004b74 g     F .text	00000084 _signal_r
0800509c g     F .text	0000005c __sseek
0800e87c g     F .text	00000010 __sinit
08018ad8 g     F .text	00000140 __swbuf_r
08003028 g     F .text	0000002c __cxa_free_dependent_exception
08003560 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD2Ev
0800f5d4 g     F .text	0000007c _setlocale_r
0801fc18  w    O .rodata	00000025 _ZTSN10__cxxabiv120__si_class_type_infoE
0800e6e4 g     F .text	00000068 __sfmoreglue
0801639c g     F .text	00000018 ungetc
080012e0 g     F .text	00000050 _Z11query_usersv
0801cc64 g     F .text	00000024 __malloc_unlock
080033a0 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD2Ev
080117d8 g     F .text	000015f8 _strtod_r
08002c6c g     F .text	00000020 _ZSt18uncaught_exceptionv
080038a0 g     F .text	00000020 __cxa_deleted_virtual
08014f4c g     F .text	000000f4 _sfread_r
0800fd1c g     F .text	0000015c memmove
08003378 g     F .text	00000004 _ZNSt9exceptionD2Ev
0800e864 g     F .text	00000018 _cleanup
0800fe78 g     F .text	000000a8 _Balloc
08000ecc g     F .text	00000048 _ZN5CUartD2Ev
08000f4c g     F .text	00000048 _ZN5CUart4OpenEPc
0801adb4 g     F .text	000000dc .hidden __gtdf2
0801fbdc  w    O .rodata	00000014 _ZTVSt13bad_exception
0801f408 g     F .text	00000024 altera_nios2_gen2_irq_init
08000000 g     F .entry	0000001c __reset
08003d44 g     F .text	00000008 .hidden _Unwind_GetRegionStart
08000020 g       *ABS*	00000000 __flash_exceptions_start
08017dcc g     F .text	0000005c _fstat_r
08023ca4 g     O .bss	00000004 errno
0800c78c g     F .text	0000001c __svfscanf
08005018 g     F .text	00000008 __seofread
08013b98 g     F .text	0000123c ___svfiprintf_internal_r
080012a8 g     F .text	00000038 _Z9SetConfigb
08003f20 g     F .text	00000074 .hidden _Unwind_Backtrace
08023cb8 g     O .bss	00000004 alt_argv
08029ff4 g       *ABS*	00000000 _gp
0801d2cc g     F .text	00000030 usleep
0801c75c g     F .text	00000020 getpid
080028cc g     F .text	00000230 __cxa_call_unexpected
08002afc g     F .text	00000008 __cxa_get_exception_ptr
08020d50 g     O .rwdata	00000180 alt_fd_list
08003e34 g     F .text	00000044 .hidden _Unwind_SjLj_ForcedUnwind
08003cc4 g     F .text	00000018 .hidden _Unwind_GetCFA
08002d8c g     F .text	00000014 _ZSt13set_terminatePFvvE
0801edb8 g     F .text	00000090 alt_find_dev
0800fbd4 g     F .text	00000148 memcpy
08018758 g     F .text	0000025c __hexnan
08002fd4 g     F .text	00000054 __cxa_allocate_dependent_exception
0800e534 g     F .text	0000000c _cleanup_r
08003128 g     F .text	00000018 _ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_
0801c018 g     F .text	000000dc .hidden __floatsidf
0801f38c g     F .text	0000007c alt_io_redirect
0801ae90 g     F .text	000000f4 .hidden __ltdf2
080004f4 g     F .text	00000198 _ZN5CHC0511CommandReadER5CUartPciPi
0801f914 g       *ABS*	00000000 __DTOR_END__
08003140 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD1Ev
08004a34 g     F .text	00000014 puts
0801f4bc g     F .text	0000009c alt_exception_cause_generated_bad_addr
0800f978 g     F .text	000000d8 mbrtowc
08011628 g     F .text	00000074 __fpclassifyd
0800c7a8 g     F .text	0000004c _vfscanf_r
08010c58 g     F .text	000000a4 __ratio
08017924 g     F .text	0000001c __vfiprintf_internal
0801db40 g     F .text	0000021c altera_avalon_jtag_uart_read
08003fac g     F .text	00000014 malloc
08004908 g     F .text	00000030 _printf_r
080039b8 g     F .text	00000064 .hidden __udivsi3
0801c7b8 g     F .text	000000a4 isatty
08004bf8 g     F .text	000000bc _raise_r
0800f5a4 g     F .text	00000030 iswspace
080200b4 g     O .rodata	000000c8 __mprec_tens
0800f650 g     F .text	0000000c __locale_charset
08019ad0 g     F .text	000000c8 .hidden __lesf2
08018e78 g     F .text	00000074 .hidden __fixunsdfsi
0801f42c g     F .text	00000090 alt_icache_flush
08023ca0 g     O .bss	00000004 __malloc_top_pad
08000794 g     F .text	00000048 _ZN5CHC0511MessageSendE5CUartPc
08014edc g     F .text	00000070 __ssrefill_r
08004e08 g     F .text	00000004 _getpid_r
0801368c g     F .text	0000001c strtoul
08022054 g     O .rwdata	00000004 __mb_cur_max
0800f680 g     F .text	0000000c _localeconv_r
080136a8 g     F .text	00000320 _strtoull_r
08010284 g     F .text	0000003c __i2b
0800ef60 g     F .text	000004bc __sfvwrite_r
080032c0 g     F .text	000000b8 _ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj
08004cb4 g     F .text	000000a8 __sigtramp_r
08004a48 g     F .text	00000054 _sbrk_r
0801fc88  w    O .rodata	00000020 _ZTVSt9type_info
08000350 g     F .text	000001a4 _ZN5CHC0511MessageReadER5CUartPciPi
08010e74 g     F .text	00000060 _read_r
08003380 g     F .text	0000000c _ZNKSt9exception4whatEv
08001060 g     F .text	0000007c _ZN5CUart5WriteEPci
08022070 g     O .rwdata	00000004 alt_max_fd
08017ac0 g     F .text	000000f0 _fclose_r
0800e4fc g     F .text	00000030 fflush
08000e90 g     F .text	0000003c _ZN5CUartC1Ev
08023c9c g     O .bss	00000004 __malloc_max_sbrked_mem
080011a0 g     F .text	00000108 _ZN5CUart15ReadWithTimeoutEPhtPtm
080074dc g     F .text	000017bc __ssvfscanf_r
08019b98 g     F .text	000008ac .hidden __adddf3
0801999c g     F .text	00000078 .hidden __nesf2
0801fc4c  w    O .rodata	0000002c _ZTVN10__cxxabiv120__si_class_type_infoE
08021ffc  w    O .rwdata	00000007 _ZTS5CHC05
08010a00 g     F .text	0000010c __b2d
08019464 g     F .text	00000538 .hidden __umoddi3
0801caf0 g     F .text	000000d4 lseek
08003184 g     F .text	0000006c _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE
08000318 g     F .text	00000038 _ZN5CHC05D0Ev
08001b14 g     F .text	00000004 _ZdlPv
0802204c g     O .rwdata	00000004 _global_impure_ptr
08010ed4 g     F .text	00000564 _realloc_r
08023e08 g       *ABS*	00000000 __bss_end
0801f1d8 g     F .text	000000f0 alt_iic_isr_register
0801d1c4 g     F .text	00000108 alt_tick
08003c7c g     F .text	00000018 .hidden _Unwind_SjLj_Register
0802023e g     O .rodata	00000100 __hexdig
08018eec g     F .text	00000578 .hidden __udivdi3
08017d28 g     F .text	00000024 _fputwc_r
0802008c g     O .rodata	00000028 __mprec_bigtens
08010068 g     F .text	00000104 __s2b
08003f94 g     F .text	00000018 abort
0801c0f4 g     F .text	000000a8 .hidden __floatunsidf
08010740 g     F .text	00000060 __mcmp
0801e184 g     F .text	000000ac altera_avalon_uart_init
08002bb8 g     F .text	000000b4 __cxa_end_catch
0800e89c g     F .text	00000018 __fp_lock_all
0801f18c g     F .text	0000004c alt_ic_irq_enabled
0800337c g     F .text	00000004 _ZNSt13bad_exceptionD2Ev
0801d128 g     F .text	0000009c alt_alarm_stop
08013120 g     F .text	0000001c strtol
08000f14 g     F .text	00000038 _ZN5CUartD0Ev
08023cc8 g     O .bss	00000004 alt_irq_active
08002d4c g     F .text	00000018 _ZSt9terminatev
080000fc g     F .exceptions	000000d4 alt_irq_handler
08020d28 g     O .rwdata	00000028 alt_dev_null
080002d0 g     F .text	00000048 _ZN5CHC05D1Ev
080033a8 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD2Ev
0801fad4  w    O .rodata	00000022 _ZTSN10__cxxabiv117__class_type_infoE
0801ebd0 g     F .text	00000048 alt_dcache_flush_all
0801016c g     F .text	00000068 __hi0bits
08022018  w    O .rwdata	00000008 _ZTISt9exception
080007dc g     F .text	00000170 _ZN5CHC0516SetInquireDeviceE5CUartiii
0801bf98 g     F .text	00000080 .hidden __fixdfsi
08012dd0 g     F .text	00000018 strtod
08022088 g       *ABS*	00000000 __ram_rwdata_end
08003824 g     F .text	00000004 _ZNSt9type_infoD1Ev
08022068 g     O .rwdata	00000008 alt_dev_list
080033a8 g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD1Ev
0801d338 g     F .text	000000f8 write
08003838 g     F .text	00000004 _ZNSt9type_infoD0Ev
08019a14 g     F .text	000000bc .hidden __gtsf2
08020484 g       *ABS*	00000000 __ram_rodata_end
0801c6ac g     F .text	000000b0 fstat
0801c898 g     F .text	00000130 kill
0801ae90 g     F .text	000000f4 .hidden __ledf2
080104b8 g     F .text	00000140 __pow5mult
080164c8 g     F .text	0000145c ___vfiprintf_internal_r
08023cb0 g     O .bss	00000004 __nlocale_changed
08003a1c g     F .text	00000058 .hidden __umodsi3
08003830 g     F .text	00000008 _ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv
08004ad8 g     F .text	00000030 _scanf_r
08002da0 g     F .text	00000010 _ZSt13get_terminatev
08023e08 g       *ABS*	00000000 end
0801e7a0 g     F .text	000001ac altera_avalon_uart_write
08003f08 g     F .text	00000018 .hidden _Unwind_DeleteException
0801d67c g     F .text	000000c0 altera_avalon_jtag_uart_init
080001d0 g     F .exceptions	00000074 alt_instruction_exception_entry
080031f0 g     F .text	000000d0 _ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE
0801f90d g       *ABS*	00000000 __CTOR_LIST__
10000000 g       *ABS*	00000000 __alt_stack_pointer
0801dff8 g     F .text	0000007c alt_avalon_timer_sc_init
0801e0d4 g     F .text	00000060 altera_avalon_uart_write_fd
0801c344 g     F .text	00000064 .hidden __clzsi2
0801e134 g     F .text	00000050 altera_avalon_uart_close_fd
080030b0 g     F .text	00000078 _ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv
0801dd5c g     F .text	00000224 altera_avalon_jtag_uart_write
0800e88c g     F .text	00000004 __sfp_lock_acquire
0801fb64  w    O .rodata	00000012 _ZTSSt13bad_exception
0800faf0 g     F .text	000000e4 memchr
08008c98 g     F .text	000021f8 ___vfprintf_internal_r
08000e90 g     F .text	0000003c _ZN5CUartC2Ev
08004e0c g     F .text	00000058 _sprintf_r
0800ec50 g     F .text	00000310 _free_r
08021ff4  w    O .rwdata	00000008 _ZTI5CHC05
0800f65c g     F .text	00000010 __locale_mb_cur_max
0801f738 g     F .text	00000180 __call_exitprocs
08014dd4 g     F .text	00000108 _sungetc_r
08023cac g     O .bss	00000004 __mlocale_changed
08022040 g     O .rwdata	00000004 __malloc_sbrk_base
08000244 g     F .text	0000004c _start
08023cc0 g     O .bss	00000004 _alt_tick_rate
0801313c g     F .text	00000304 _strtoll_r
0801fc78  w    O .rodata	0000000d _ZTSSt9type_info
0801f988  w    O .rodata	00000010 _ZTV5CHC05
08003880 g     F .text	00000020 __cxa_pure_virtual
080105f8 g     F .text	00000148 __lshift
08023cc4 g     O .bss	00000004 _alt_nticks
08004d70 g     F .text	00000018 signal
0801cf18 g     F .text	000000fc read
0801d49c g     F .text	0000007c alt_sys_init
080139c8 g     F .text	000001d0 __ssprint_r
0801f620 g     F .text	00000118 __register_exitproc
08018a08 g     F .text	000000d0 strncmp
080035a4 g     F .text	00000160 _ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE
080102c0 g     F .text	000001f8 __multiply
0801d9e8 g     F .text	00000068 altera_avalon_jtag_uart_close
08020484 g       *ABS*	00000000 __ram_rwdata_start
08003d64 g     F .text	000000d0 .hidden _Unwind_SjLj_RaiseException
0801f914 g       *ABS*	00000000 __ram_rodata_start
08023ce0 g     O .bss	00000028 __malloc_current_mallinfo
08003e78 g     F .text	00000044 .hidden _Unwind_SjLj_Resume
0801999c g     F .text	00000078 .hidden __eqsf2
08010b0c g     F .text	0000014c __d2b
0801fc04  w    O .rodata	00000014 _ZTVN10__cxxabiv119__foreign_exceptionE
08003824 g     F .text	00000004 _ZNSt9type_infoD2Ev
080033ac g     F .text	00000004 _ZN10__cxxabiv119__foreign_exceptionD0Ev
080037a0 g     F .text	00000084 _ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE
0801d518 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
08013440 g     F .text	0000024c _strtoul_r
0801ef50 g     F .text	000000a4 alt_get_fd
0801ea78 g     F .text	00000158 alt_busy_sleep
08022028  w    O .rwdata	00000008 _ZTIN10__cxxabiv119__foreign_exceptionE
0800c9a8 g     F .text	00000054 _close_r
0802200c  w    O .rwdata	00000007 _ZTS5CUart
0801f5a4 g     F .text	0000007c memcmp
0801d5d8 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
08023e08 g       *ABS*	00000000 __alt_stack_base
0801d628 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
08003560 g     F .text	00000010 _ZN10__cxxabiv120__si_class_type_infoD1Ev
08004ed0 g     F .text	0000007c sscanf
0800c854 g     F .text	00000154 __swsetup_r
08003ebc g     F .text	0000004c .hidden _Unwind_SjLj_Resume_or_Rethrow
0801a444 g     F .text	000008e8 .hidden __divdf3
0800e74c g     F .text	00000118 __sfp
08010d70 g     F .text	00000078 __copybits
08003828 g     F .text	00000008 _ZNKSt9type_info14__is_pointer_pEv
08020484 g     O .rwdata	00000408 __malloc_av_
0800e898 g     F .text	00000004 __sinit_lock_release
0801af84 g     F .text	00000718 .hidden __muldf3
08004fc4 g     F .text	00000054 __sread
0800eaf8 g     F .text	00000034 fread
0801fbc8  w    O .rodata	00000014 _ZTVSt9exception
080033a4 g     F .text	00000004 _ZN10__cxxabiv115__forced_unwindD0Ev
0801ee48 g     F .text	00000108 alt_find_file
0801ec54 g     F .text	000000a4 alt_dev_llist_insert
0801cc40 g     F .text	00000024 __malloc_lock
0801d078 g     F .text	000000b0 sbrk
08005304 g     F .text	000021d8 ___svfprintf_internal_r
0801fb04  w    O .rodata	0000002c _ZTVN10__cxxabiv117__class_type_infoE
080033f4 g     F .text	00000090 __cxa_throw
0800e4a0 g     F .text	0000005c _fflush_r
08003d28 g     F .text	00000010 .hidden _Unwind_SetIP
080179fc g     F .text	000000c4 _calloc_r
08023c8c g       *ABS*	00000000 __bss_start
080047e0 g     F .text	00000128 memset
0800094c g     F .text	00000108 _ZN5CHC0511GetNameListE5CUartPc
08001330 g     F .text	000007e4 main
08023cbc g     O .bss	00000004 alt_envp
08023c98 g     O .bss	00000004 __malloc_max_total_mem
0801d578 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
08018c18 g     F .text	00000018 __swbuf
08002dd4 g     F .text	0000000c __cxa_get_globals_fast
08019ad0 g     F .text	000000c8 .hidden __ltsf2
0800e8cc g     F .text	0000022c _fread_r
08000290 g     F .text	00000040 _ZN5CHC05C2Ev
080050f8 g     F .text	00000008 __sclose
10000000 g       *ABS*	00000000 __alt_heap_limit
08017bb0 g     F .text	00000014 fclose
08012ee8 g     F .text	00000238 _strtol_r
0801c19c g     F .text	000001a8 .hidden __truncdfsf2
0800cbfc g     F .text	00001688 _dtoa_r
08003fd4 g     F .text	0000080c _malloc_r
08018d8c g     F .text	00000030 __ascii_wctomb
0800338c g     F .text	0000000c _ZNKSt13bad_exception4whatEv
08022074 g     O .rwdata	00000004 alt_errno
08016134 g     F .text	000000d4 __submore
08004d88 g     F .text	00000010 _init_signal
0801faf8  w    O .rodata	0000000c _ZTIN10__cxxabiv117__class_type_infoE
0800f41c g     F .text	000000c4 _fwalk
0800fa94 g     F .text	0000005c _mbtowc_r
0800337c g     F .text	00000004 _ZNSt13bad_exceptionD1Ev
080038c0 g     F .text	00000084 .hidden __divsi3
0800eb2c g     F .text	00000124 _malloc_trim_r
0801f914 g       *ABS*	00000000 __CTOR_END__
08005100 g     F .text	000000dc strcmp
08001120 g     F .text	00000080 _ZN5CUart16NoneBlockingReadEPciPi
0801f914 g       *ABS*	00000000 __flash_rodata_start
0801fbf0  w    O .rodata	00000014 _ZTVN10__cxxabiv115__forced_unwindE
0801f914 g       *ABS*	00000000 __DTOR_LIST__
0801ad2c g     F .text	00000088 .hidden __nedf2
0801d464 g     F .text	00000038 alt_irq_init
0801d014 g     F .text	00000064 alt_release_fd
08003570 g     F .text	00000034 _ZN10__cxxabiv120__si_class_type_infoD0Ev
08000ecc g     F .text	00000048 _ZN5CUartD1Ev
08004e64 g     F .text	0000006c sprintf
0802033e g     O .rodata	00000100 .hidden __clz_tab
08023ca8 g     O .bss	00000004 _PathLocale
08000f94 g     F .text	00000048 _ZN5CUart5CloseEv
08012de8 g     F .text	00000100 strtof
0801f558 g     F .text	00000014 atexit
08019a14 g     F .text	000000bc .hidden __gesf2
0800c7f4 g     F .text	00000060 _write_r
0800f68c g     F .text	00000018 setlocale
08004a9c g     F .text	0000003c scanf
08003d5c g     F .text	00000008 .hidden _Unwind_GetTextRelBase
08003508 g     F .text	00000058 __cxa_call_terminate
08000e48  w    F .text	00000048 _ZN5CUartC2ERKS_
0801176c g     F .text	00000008 nanf
08022050 g     O .rwdata	00000004 _impure_ptr
08022020  w    O .rwdata	00000008 _ZTIN10__cxxabiv115__forced_unwindE
08023cb4 g     O .bss	00000004 alt_argc
0800e284 g     F .text	0000021c __sflush_r
0800f8cc g     F .text	000000ac _mbrtowc_r
0801ed58 g     F .text	00000060 _do_dtors
0800f678 g     F .text	00000008 __locale_cjk_lang
08022004  w    O .rwdata	00000008 _ZTI5CUart
08011454 g     F .text	000001d4 __srefill_r
08002dc4 g     F .text	00000010 _ZSt14get_unexpectedv
08000020 g       .exceptions	00000000 alt_irq_entry
0800fa50 g     F .text	00000044 __ascii_mbtowc
0801099c g     F .text	00000064 __ulp
08003d4c g     F .text	00000008 .hidden _Unwind_FindEnclosingFunction
0800e8b4 g     F .text	00000018 __fp_unlock_all
08022060 g     O .rwdata	00000008 alt_fs_list
0801fba4  w    O .rodata	00000024 _ZTSN10__cxxabiv119__foreign_exceptionE
08003d38 g     F .text	0000000c .hidden _Unwind_GetLanguageSpecificData
08002b04 g     F .text	000000b4 __cxa_begin_catch
08003140 g     F .text	00000010 _ZN10__cxxabiv117__class_type_infoD2Ev
08002d64 g     F .text	00000010 _ZN10__cxxabiv112__unexpectedEPFvvE
08015040 g     F .text	000010f4 __ssvfiscanf_r
08000020 g       *ABS*	00000000 __ram_exceptions_start
0800f6a4 g     F .text	0000000c localeconv
0800339c g     F .text	00000004 _ZNSt13bad_exceptionD0Ev
08022038 g     O .rwdata	00000004 _ZN10__cxxabiv119__terminate_handlerE
080010dc g     F .text	00000044 _ZN5CUart11WriteStringEPc
0801f028 g     F .text	00000050 alt_ic_isr_register
08002f4c g     F .text	00000060 __cxa_allocate_exception
08004f4c g     F .text	00000078 _sscanf_r
0801fc40  w    O .rodata	0000000c _ZTIN10__cxxabiv120__si_class_type_infoE
08022088 g       *ABS*	00000000 _edata
0801e074 g     F .text	00000060 altera_avalon_uart_read_fd
08023e08 g       *ABS*	00000000 _end
080022cc g     F .text	00000600 __gxx_personality_sj0
08017bc4 g     F .text	00000164 __fputwc
08000244 g       *ABS*	00000000 __ram_exceptions_end
0800c724 g     F .text	00000068 vfscanf
0801da50 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
08000fdc g     F .text	00000084 _ZN5CUart4ReadEPciPi
08003378 g     F .text	00000004 _ZNSt9exceptionD1Ev
0801f100 g     F .text	0000008c alt_ic_irq_disable
08005020 g     F .text	0000007c __swrite
08022044 g     O .rwdata	00000004 __malloc_trim_threshold
0800f66c g     F .text	0000000c __locale_msgcharset
0801f56c g     F .text	00000038 exit
08003cdc g     F .text	0000001c .hidden _Unwind_SetGR
0800f4e0 g     F .text	000000c4 _fwalk_reent
08003704 g     F .text	0000009c _ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_
080107a0 g     F .text	000001fc __mdiff
08002c8c g     F .text	000000c0 _ZN10__cxxabiv111__terminateEPFvvE
08003944 g     F .text	00000074 .hidden __modsi3
08022048 g     O .rwdata	00000004 __ctype_ptr__
0800068c g     F .text	00000108 _ZN5CHC059SetupSendE5CUartPc
10000000 g       *ABS*	00000000 __alt_data_end
08000020 g     F .exceptions	00000000 alt_exception
0800e890 g     F .text	00000004 __sfp_lock_release
0801fb78  w    O .rodata	0000000c _ZTISt13bad_exception
08000000 g       *ABS*	00000000 __alt_mem_sdram
08000a54 g     F .text	000003f4 _ZN5CHC0510DeviceListE5CUartPcPS1_
0801169c g     F .text	000000d0 __sccl
0801fdb6 g     O .rodata	00000101 _ctype_
08022058 g     O .rwdata	00000004 __mbtowc
0801e4f8 g     F .text	00000054 altera_avalon_uart_close
0801c4e0 g     F .text	00000034 _exit
0801e94c g     F .text	0000012c alt_alarm_start
08018e18 g     F .text	00000060 .hidden __muldi3
08003ca8 g     F .text	0000001c .hidden _Unwind_GetGR
08002de0 g     F .text	0000000c __cxa_get_globals
0800f710 g     F .text	000001bc __smakebuf_r
0802203c g     O .rwdata	00000004 _ZN10__cxxabiv120__unexpected_handlerE
0800526c g     F .text	00000098 strlen
08004b08 g     F .text	0000006c _init_signal_r
08022030  w    O .rwdata	00000008 _ZTISt9type_info
0801cd88 g     F .text	00000154 open
0801adb4 g     F .text	000000dc .hidden __gedf2
0801fb54  w    O .rodata	0000000d _ZTSSt9exception
08017f28 g     F .text	00000830 __gethex
0802205c g     O .rwdata	00000004 __wctomb
08003398 g     F .text	00000004 _ZNSt9exceptionD0Ev
080164b0 g     F .text	00000018 __sprint_r
0801eff4 g     F .text	00000034 alt_icache_flush_all
0801f998  w    O .rodata	00000010 _ZTV5CUart
08003d54 g     F .text	00000008 .hidden _Unwind_GetDataRelBase
08022084 g     O .rwdata	00000004 alt_priority_mask
080002d0 g     F .text	00000048 _ZN5CHC05D2Ev
0801f078 g     F .text	00000088 alt_ic_irq_enable
0800ae90 g     F .text	0000001c __vfprintf_internal
0801e588 g     F .text	000001dc altera_avalon_uart_read
08018dbc g     F .text	0000005c _wctomb_r
08000290 g     F .text	00000040 _ZN5CHC05C1Ev
0801b69c g     F .text	000008fc .hidden __subdf3
0801c550 g     F .text	00000120 fcntl
080101d4 g     F .text	000000b0 __lo0bits
0800af68 g     F .text	000017bc __svfscanf_r
0802207c g     O .rwdata	00000008 alt_alarm_list
08016208 g     F .text	00000194 _ungetc_r
0801ecf8 g     F .text	00000060 _do_ctors
08004d98 g     F .text	00000014 __sigtramp
08018ccc g     F .text	000000c0 wcrtomb
0801c3e4 g     F .text	000000d0 close
0801fb84  w    O .rodata	00000020 _ZTSN10__cxxabiv115__forced_unwindE
0801ca30 g     F .text	00000084 alt_load
0800383c g     F .text	00000044 _ZNKSt9type_info10__do_catchEPKS_PPvj
08017d4c g     F .text	00000080 fputwc
08004d5c g     F .text	00000014 raise
08003fc0 g     F .text	00000014 free
0800e894 g     F .text	00000004 __sinit_lock_acquire
0800ff48 g     F .text	00000120 __multadd
08003150 g     F .text	00000034 _ZN10__cxxabiv117__class_type_infoD0Ev
0800ff20 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08000000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 8000000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 8000004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 8000008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 800000c:	00bffd16 	blt	zero,r2,8000004 <__alt_data_end+0xf8000004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8000010:	00420034 	movhi	at,2048
    ori r1, r1, %lo(_start)
 8000014:	08409114 	ori	at,at,580
    jmp r1
 8000018:	0800683a 	jmp	at
 800001c:	00000000 	call	0 <__alt_mem_sdram-0x8000000>

Disassembly of section .exceptions:

08000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 800002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 800003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 800004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 800005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 800006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 800007c:	10000326 	beq	r2,zero,800008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8000080:	20000226 	beq	r4,zero,800008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8000084:	80000fc0 	call	80000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8000088:	00000706 	br	80000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 800008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 8000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8000098:	80001d00 	call	80001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 800009c:	1000021e 	bne	r2,zero,80000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80000f8:	ef80083a 	eret

080000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80000fc:	defff904 	addi	sp,sp,-28
 8000100:	dfc00615 	stw	ra,24(sp)
 8000104:	df000515 	stw	fp,20(sp)
 8000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 800010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8000110:	0005313a 	rdctl	r2,ipending
 8000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 800011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8000124:	00800044 	movi	r2,1
 8000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 800012c:	e0fffb17 	ldw	r3,-20(fp)
 8000130:	e0bffc17 	ldw	r2,-16(fp)
 8000134:	1884703a 	and	r2,r3,r2
 8000138:	10001426 	beq	r2,zero,800018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 800013c:	008200b4 	movhi	r2,2050
 8000140:	108f4204 	addi	r2,r2,15624
 8000144:	e0fffd17 	ldw	r3,-12(fp)
 8000148:	180690fa 	slli	r3,r3,3
 800014c:	10c5883a 	add	r2,r2,r3
 8000150:	10c00017 	ldw	r3,0(r2)
 8000154:	008200b4 	movhi	r2,2050
 8000158:	108f4204 	addi	r2,r2,15624
 800015c:	e13ffd17 	ldw	r4,-12(fp)
 8000160:	200890fa 	slli	r4,r4,3
 8000164:	1105883a 	add	r2,r2,r4
 8000168:	10800104 	addi	r2,r2,4
 800016c:	10800017 	ldw	r2,0(r2)
 8000170:	1009883a 	mov	r4,r2
 8000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 8000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 800017c:	0005313a 	rdctl	r2,ipending
 8000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8000184:	e0bfff17 	ldw	r2,-4(fp)
 8000188:	00000706 	br	80001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 800018c:	e0bffc17 	ldw	r2,-16(fp)
 8000190:	1085883a 	add	r2,r2,r2
 8000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 8000198:	e0bffd17 	ldw	r2,-12(fp)
 800019c:	10800044 	addi	r2,r2,1
 80001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80001a4:	003fe106 	br	800012c <__alt_data_end+0xf800012c>

    active = alt_irq_pending ();
 80001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80001ac:	e0bffb17 	ldw	r2,-20(fp)
 80001b0:	103fdb1e 	bne	r2,zero,8000120 <__alt_data_end+0xf8000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80001b4:	0001883a 	nop
}
 80001b8:	0001883a 	nop
 80001bc:	e037883a 	mov	sp,fp
 80001c0:	dfc00117 	ldw	ra,4(sp)
 80001c4:	df000017 	ldw	fp,0(sp)
 80001c8:	dec00204 	addi	sp,sp,8
 80001cc:	f800283a 	ret

080001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80001d0:	defffb04 	addi	sp,sp,-20
 80001d4:	dfc00415 	stw	ra,16(sp)
 80001d8:	df000315 	stw	fp,12(sp)
 80001dc:	df000304 	addi	fp,sp,12
 80001e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 80001e4:	000531fa 	rdctl	r2,exception
 80001e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 80001ec:	e0bffd17 	ldw	r2,-12(fp)
 80001f0:	10801f0c 	andi	r2,r2,124
 80001f4:	1004d0ba 	srli	r2,r2,2
 80001f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 80001fc:	0005333a 	rdctl	r2,badaddr
 8000200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 8000204:	d0a73617 	ldw	r2,-25384(gp)
 8000208:	10000726 	beq	r2,zero,8000228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 800020c:	d0a73617 	ldw	r2,-25384(gp)
 8000210:	e0fffd17 	ldw	r3,-12(fp)
 8000214:	e1bffe17 	ldw	r6,-8(fp)
 8000218:	e17fff17 	ldw	r5,-4(fp)
 800021c:	1809883a 	mov	r4,r3
 8000220:	103ee83a 	callr	r2
 8000224:	00000206 	br	8000230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8000228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 800022c:	0005883a 	mov	r2,zero
}
 8000230:	e037883a 	mov	sp,fp
 8000234:	dfc00117 	ldw	ra,4(sp)
 8000238:	df000017 	ldw	fp,0(sp)
 800023c:	dec00204 	addi	sp,sp,8
 8000240:	f800283a 	ret

Disassembly of section .text:

08000244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 8000244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 8000248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 800024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 8000250:	00bffd16 	blt	zero,r2,8000248 <__alt_data_end+0xf8000248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8000254:	06c40034 	movhi	sp,4096
    ori sp, sp, %lo(__alt_stack_pointer)
 8000258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 800025c:	068200b4 	movhi	gp,2050
    ori gp, gp, %lo(_gp)
 8000260:	d6a7fd14 	ori	gp,gp,40948
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8000264:	008200b4 	movhi	r2,2050
    ori r2, r2, %lo(__bss_start)
 8000268:	108f2314 	ori	r2,r2,15500

    movhi r3, %hi(__bss_end)
 800026c:	00c200b4 	movhi	r3,2050
    ori r3, r3, %lo(__bss_end)
 8000270:	18cf8214 	ori	r3,r3,15880

    beq r2, r3, 1f
 8000274:	10c00326 	beq	r2,r3,8000284 <_start+0x40>

0:
    stw zero, (r2)
 8000278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 800027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 8000280:	10fffd36 	bltu	r2,r3,8000278 <__alt_data_end+0xf8000278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8000284:	801ca300 	call	801ca30 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8000288:	801cbc40 	call	801cbc4 <alt_main>

0800028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 800028c:	003fff06 	br	800028c <__alt_data_end+0xf800028c>

08000290 <_ZN5CHC05C1Ev>:
#include "CUart.h"
#include "CHC05.h"
#include "sys/alt_dev.h"
#include "altera_avalon_uart.h"

CHC05::CHC05():
 8000290:	defffe04 	addi	sp,sp,-8
 8000294:	df000115 	stw	fp,4(sp)
 8000298:	df000104 	addi	fp,sp,4
 800029c:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated constructor stub
	NumDeviceMax(9)
 80002a0:	008200b4 	movhi	r2,2050
 80002a4:	10be6404 	addi	r2,r2,-1648
 80002a8:	e0ffff17 	ldw	r3,-4(fp)
 80002ac:	18800015 	stw	r2,0(r3)
 80002b0:	e0bfff17 	ldw	r2,-4(fp)
 80002b4:	00c00244 	movi	r3,9
 80002b8:	10c00115 	stw	r3,4(r2)
{

}
 80002bc:	0001883a 	nop
 80002c0:	e037883a 	mov	sp,fp
 80002c4:	df000017 	ldw	fp,0(sp)
 80002c8:	dec00104 	addi	sp,sp,4
 80002cc:	f800283a 	ret

080002d0 <_ZN5CHC05D1Ev>:

CHC05::~CHC05() {
 80002d0:	defffd04 	addi	sp,sp,-12
 80002d4:	dfc00215 	stw	ra,8(sp)
 80002d8:	df000115 	stw	fp,4(sp)
 80002dc:	df000104 	addi	fp,sp,4
 80002e0:	e13fff15 	stw	r4,-4(fp)
 80002e4:	008200b4 	movhi	r2,2050
 80002e8:	10be6404 	addi	r2,r2,-1648
 80002ec:	e0ffff17 	ldw	r3,-4(fp)
 80002f0:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated destructor stub


}
 80002f4:	0005883a 	mov	r2,zero
 80002f8:	10000226 	beq	r2,zero,8000304 <_ZN5CHC05D1Ev+0x34>
 80002fc:	e13fff17 	ldw	r4,-4(fp)
 8000300:	8001b140 	call	8001b14 <_ZdlPv>
 8000304:	e037883a 	mov	sp,fp
 8000308:	dfc00117 	ldw	ra,4(sp)
 800030c:	df000017 	ldw	fp,0(sp)
 8000310:	dec00204 	addi	sp,sp,8
 8000314:	f800283a 	ret

08000318 <_ZN5CHC05D0Ev>:
	NumDeviceMax(9)
{

}

CHC05::~CHC05() {
 8000318:	defffd04 	addi	sp,sp,-12
 800031c:	dfc00215 	stw	ra,8(sp)
 8000320:	df000115 	stw	fp,4(sp)
 8000324:	df000104 	addi	fp,sp,4
 8000328:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated destructor stub


}
 800032c:	e13fff17 	ldw	r4,-4(fp)
 8000330:	80002d00 	call	80002d0 <_ZN5CHC05D1Ev>
 8000334:	e13fff17 	ldw	r4,-4(fp)
 8000338:	8001b140 	call	8001b14 <_ZdlPv>
 800033c:	e037883a 	mov	sp,fp
 8000340:	dfc00117 	ldw	ra,4(sp)
 8000344:	df000017 	ldw	fp,0(sp)
 8000348:	dec00204 	addi	sp,sp,8
 800034c:	f800283a 	ret

08000350 <_ZN5CHC0511MessageReadER5CUartPciPi>:



bool CHC05::MessageRead(CUart   &Uart, char *pBuffer, int nBufferSize, int *prx_lenmand){
 8000350:	defff404 	addi	sp,sp,-48
 8000354:	dfc00b15 	stw	ra,44(sp)
 8000358:	df000a15 	stw	fp,40(sp)
 800035c:	dc000915 	stw	r16,36(sp)
 8000360:	df000a04 	addi	fp,sp,40
 8000364:	e13ffb15 	stw	r4,-20(fp)
 8000368:	e17ffc15 	stw	r5,-16(fp)
 800036c:	e1bffd15 	stw	r6,-12(fp)
 8000370:	e1fffe15 	stw	r7,-8(fp)
	int RxLen;
	char Data;
	bool bDone = false;
 8000374:	e03ff605 	stb	zero,-40(fp)
	int Len = 0;
 8000378:	e03ff715 	stw	zero,-36(fp)
	alt_u32 timeout;

	if (!Uart.Read((char *)&Data, sizeof(Data), &RxLen) || RxLen == 0)
 800037c:	00c00044 	movi	r3,1
 8000380:	e13ff904 	addi	r4,fp,-28
 8000384:	e0bffa04 	addi	r2,fp,-24
 8000388:	200f883a 	mov	r7,r4
 800038c:	180d883a 	mov	r6,r3
 8000390:	100b883a 	mov	r5,r2
 8000394:	e13ffc17 	ldw	r4,-16(fp)
 8000398:	8000fdc0 	call	8000fdc <_ZN5CUart4ReadEPciPi>
 800039c:	1080005c 	xori	r2,r2,1
 80003a0:	10803fcc 	andi	r2,r2,255
 80003a4:	1000021e 	bne	r2,zero,80003b0 <_ZN5CHC0511MessageReadER5CUartPciPi+0x60>
 80003a8:	e0bff917 	ldw	r2,-28(fp)
 80003ac:	1000021e 	bne	r2,zero,80003b8 <_ZN5CHC0511MessageReadER5CUartPciPi+0x68>
 80003b0:	00800044 	movi	r2,1
 80003b4:	00000106 	br	80003bc <_ZN5CHC0511MessageReadER5CUartPciPi+0x6c>
 80003b8:	0005883a 	mov	r2,zero
 80003bc:	10803fcc 	andi	r2,r2,255
 80003c0:	10000226 	beq	r2,zero,80003cc <_ZN5CHC0511MessageReadER5CUartPciPi+0x7c>
			return false;
 80003c4:	0005883a 	mov	r2,zero
 80003c8:	00004406 	br	80004dc <_ZN5CHC0511MessageReadER5CUartPciPi+0x18c>

	*(pBuffer + 0) = Data;
 80003cc:	e0fffa03 	ldbu	r3,-24(fp)
 80003d0:	e0bffd17 	ldw	r2,-12(fp)
 80003d4:	10c00005 	stb	r3,0(r2)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 80003d8:	d4273417 	ldw	r16,-25392(gp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 80003dc:	d0a73317 	ldw	r2,-25396(gp)

	timeout = alt_nticks() + (alt_ticks_per_second()/10);
 80003e0:	01400284 	movi	r5,10
 80003e4:	1009883a 	mov	r4,r2
 80003e8:	80039b80 	call	80039b8 <__udivsi3>
 80003ec:	8085883a 	add	r2,r16,r2
 80003f0:	e0bff815 	stw	r2,-32(fp)
	Len = 1;
 80003f4:	00800044 	movi	r2,1
 80003f8:	e0bff715 	stw	r2,-36(fp)
	while(!bDone){
 80003fc:	e0bff603 	ldbu	r2,-40(fp)
 8000400:	1000321e 	bne	r2,zero,80004cc <_ZN5CHC0511MessageReadER5CUartPciPi+0x17c>
		if (Uart.NoneBlockingRead((char *)&Data, sizeof(Data), &RxLen) && RxLen == sizeof(Data)){
 8000404:	00c00044 	movi	r3,1
 8000408:	e13ff904 	addi	r4,fp,-28
 800040c:	e0bffa04 	addi	r2,fp,-24
 8000410:	200f883a 	mov	r7,r4
 8000414:	180d883a 	mov	r6,r3
 8000418:	100b883a 	mov	r5,r2
 800041c:	e13ffc17 	ldw	r4,-16(fp)
 8000420:	80011200 	call	8001120 <_ZN5CUart16NoneBlockingReadEPciPi>
 8000424:	10803fcc 	andi	r2,r2,255
 8000428:	10000526 	beq	r2,zero,8000440 <_ZN5CHC0511MessageReadER5CUartPciPi+0xf0>
 800042c:	e0bff917 	ldw	r2,-28(fp)
 8000430:	10800058 	cmpnei	r2,r2,1
 8000434:	1000021e 	bne	r2,zero,8000440 <_ZN5CHC0511MessageReadER5CUartPciPi+0xf0>
 8000438:	00800044 	movi	r2,1
 800043c:	00000106 	br	8000444 <_ZN5CHC0511MessageReadER5CUartPciPi+0xf4>
 8000440:	0005883a 	mov	r2,zero
 8000444:	10803fcc 	andi	r2,r2,255
 8000448:	10001026 	beq	r2,zero,800048c <_ZN5CHC0511MessageReadER5CUartPciPi+0x13c>
			*(pBuffer + Len) = Data;
 800044c:	e0bff717 	ldw	r2,-36(fp)
 8000450:	e0fffd17 	ldw	r3,-12(fp)
 8000454:	1885883a 	add	r2,r3,r2
 8000458:	e0fffa03 	ldbu	r3,-24(fp)
 800045c:	10c00005 	stb	r3,0(r2)
			Len++;
 8000460:	e0bff717 	ldw	r2,-36(fp)
 8000464:	10800044 	addi	r2,r2,1
 8000468:	e0bff715 	stw	r2,-36(fp)
			if (Data != 0)
 800046c:	e0bffa03 	ldbu	r2,-24(fp)
 8000470:	10803fcc 	andi	r2,r2,255
 8000474:	1080201c 	xori	r2,r2,128
 8000478:	10bfe004 	addi	r2,r2,-128
 800047c:	10001026 	beq	r2,zero,80004c0 <_ZN5CHC0511MessageReadER5CUartPciPi+0x170>
				bDone = true;
 8000480:	00800044 	movi	r2,1
 8000484:	e0bff605 	stb	r2,-40(fp)
 8000488:	00000d06 	br	80004c0 <_ZN5CHC0511MessageReadER5CUartPciPi+0x170>
		}else if (Len >= nBufferSize){
 800048c:	e0fff717 	ldw	r3,-36(fp)
 8000490:	e0bffe17 	ldw	r2,-8(fp)
 8000494:	18800316 	blt	r3,r2,80004a4 <_ZN5CHC0511MessageReadER5CUartPciPi+0x154>
			// buffer full
			bDone = true;
 8000498:	00800044 	movi	r2,1
 800049c:	e0bff605 	stb	r2,-40(fp)
 80004a0:	00000706 	br	80004c0 <_ZN5CHC0511MessageReadER5CUartPciPi+0x170>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 80004a4:	d0a73417 	ldw	r2,-25392(gp)
		}else if (alt_nticks() > timeout){
 80004a8:	e0fff817 	ldw	r3,-32(fp)
 80004ac:	1885803a 	cmpltu	r2,r3,r2
 80004b0:	10803fcc 	andi	r2,r2,255
 80004b4:	10000226 	beq	r2,zero,80004c0 <_ZN5CHC0511MessageReadER5CUartPciPi+0x170>
			// timeout
			bDone = true;
 80004b8:	00800044 	movi	r2,1
 80004bc:	e0bff605 	stb	r2,-40(fp)
		}else{
		}
		usleep(10);
 80004c0:	01000284 	movi	r4,10
 80004c4:	801d2cc0 	call	801d2cc <usleep>

	*(pBuffer + 0) = Data;

	timeout = alt_nticks() + (alt_ticks_per_second()/10);
	Len = 1;
	while(!bDone){
 80004c8:	003fcc06 	br	80003fc <__alt_data_end+0xf80003fc>
		}else{
		}
		usleep(10);

	}
	*prx_lenmand = Len;
 80004cc:	e0800217 	ldw	r2,8(fp)
 80004d0:	e0fff717 	ldw	r3,-36(fp)
 80004d4:	10c00015 	stw	r3,0(r2)
	return true;
 80004d8:	00800044 	movi	r2,1
}
 80004dc:	e6ffff04 	addi	sp,fp,-4
 80004e0:	dfc00217 	ldw	ra,8(sp)
 80004e4:	df000117 	ldw	fp,4(sp)
 80004e8:	dc000017 	ldw	r16,0(sp)
 80004ec:	dec00304 	addi	sp,sp,12
 80004f0:	f800283a 	ret

080004f4 <_ZN5CHC0511CommandReadER5CUartPciPi>:



bool CHC05::CommandRead(CUart   &Uart, char *pBuffer, int nBufferSize, int *prx_lenmand){
 80004f4:	defff504 	addi	sp,sp,-44
 80004f8:	dfc00a15 	stw	ra,40(sp)
 80004fc:	df000915 	stw	fp,36(sp)
 8000500:	df000904 	addi	fp,sp,36
 8000504:	e13ffc15 	stw	r4,-16(fp)
 8000508:	e17ffd15 	stw	r5,-12(fp)
 800050c:	e1bffe15 	stw	r6,-8(fp)
 8000510:	e1ffff15 	stw	r7,-4(fp)
	int RxLen;
	char Data;
	bool bDone = false;
 8000514:	e03ff705 	stb	zero,-36(fp)
	int Len = 0;
 8000518:	e03ff815 	stw	zero,-32(fp)
	alt_u32 timeout;

	if (!Uart.Read((char *)&Data, sizeof(Data), &RxLen) || RxLen == 0)
 800051c:	00c00044 	movi	r3,1
 8000520:	e13ffa04 	addi	r4,fp,-24
 8000524:	e0bffb04 	addi	r2,fp,-20
 8000528:	200f883a 	mov	r7,r4
 800052c:	180d883a 	mov	r6,r3
 8000530:	100b883a 	mov	r5,r2
 8000534:	e13ffd17 	ldw	r4,-12(fp)
 8000538:	8000fdc0 	call	8000fdc <_ZN5CUart4ReadEPciPi>
 800053c:	1080005c 	xori	r2,r2,1
 8000540:	10803fcc 	andi	r2,r2,255
 8000544:	1000021e 	bne	r2,zero,8000550 <_ZN5CHC0511CommandReadER5CUartPciPi+0x5c>
 8000548:	e0bffa17 	ldw	r2,-24(fp)
 800054c:	1000021e 	bne	r2,zero,8000558 <_ZN5CHC0511CommandReadER5CUartPciPi+0x64>
 8000550:	00800044 	movi	r2,1
 8000554:	00000106 	br	800055c <_ZN5CHC0511CommandReadER5CUartPciPi+0x68>
 8000558:	0005883a 	mov	r2,zero
 800055c:	10803fcc 	andi	r2,r2,255
 8000560:	10000226 	beq	r2,zero,800056c <_ZN5CHC0511CommandReadER5CUartPciPi+0x78>
			return false;
 8000564:	0005883a 	mov	r2,zero
 8000568:	00004306 	br	8000678 <_ZN5CHC0511CommandReadER5CUartPciPi+0x184>

	*(pBuffer + 0) = Data;
 800056c:	e0fffb03 	ldbu	r3,-20(fp)
 8000570:	e0bffe17 	ldw	r2,-8(fp)
 8000574:	10c00005 	stb	r3,0(r2)
 8000578:	d0e73417 	ldw	r3,-25392(gp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 800057c:	d0a73317 	ldw	r2,-25396(gp)

	// read until find '\r'
	//timeout = alt_nticks() + alt_ticks_per_second()/1000;
	timeout = alt_nticks() + (alt_ticks_per_second()*30);
 8000580:	108007a4 	muli	r2,r2,30
 8000584:	1885883a 	add	r2,r3,r2
 8000588:	e0bff915 	stw	r2,-28(fp)
	Len = 1;
 800058c:	00800044 	movi	r2,1
 8000590:	e0bff815 	stw	r2,-32(fp)
	while(!bDone){
 8000594:	e0bff703 	ldbu	r2,-36(fp)
 8000598:	1000331e 	bne	r2,zero,8000668 <_ZN5CHC0511CommandReadER5CUartPciPi+0x174>
		if (Uart.NoneBlockingRead((char *)&Data, sizeof(Data), &RxLen) && RxLen == sizeof(Data)){
 800059c:	00c00044 	movi	r3,1
 80005a0:	e13ffa04 	addi	r4,fp,-24
 80005a4:	e0bffb04 	addi	r2,fp,-20
 80005a8:	200f883a 	mov	r7,r4
 80005ac:	180d883a 	mov	r6,r3
 80005b0:	100b883a 	mov	r5,r2
 80005b4:	e13ffd17 	ldw	r4,-12(fp)
 80005b8:	80011200 	call	8001120 <_ZN5CUart16NoneBlockingReadEPciPi>
 80005bc:	10803fcc 	andi	r2,r2,255
 80005c0:	10000526 	beq	r2,zero,80005d8 <_ZN5CHC0511CommandReadER5CUartPciPi+0xe4>
 80005c4:	e0bffa17 	ldw	r2,-24(fp)
 80005c8:	10800058 	cmpnei	r2,r2,1
 80005cc:	1000021e 	bne	r2,zero,80005d8 <_ZN5CHC0511CommandReadER5CUartPciPi+0xe4>
 80005d0:	00800044 	movi	r2,1
 80005d4:	00000106 	br	80005dc <_ZN5CHC0511CommandReadER5CUartPciPi+0xe8>
 80005d8:	0005883a 	mov	r2,zero
 80005dc:	10803fcc 	andi	r2,r2,255
 80005e0:	10001126 	beq	r2,zero,8000628 <_ZN5CHC0511CommandReadER5CUartPciPi+0x134>
			*(pBuffer + Len) = Data;
 80005e4:	e0bff817 	ldw	r2,-32(fp)
 80005e8:	e0fffe17 	ldw	r3,-8(fp)
 80005ec:	1885883a 	add	r2,r3,r2
 80005f0:	e0fffb03 	ldbu	r3,-20(fp)
 80005f4:	10c00005 	stb	r3,0(r2)
			Len++;
 80005f8:	e0bff817 	ldw	r2,-32(fp)
 80005fc:	10800044 	addi	r2,r2,1
 8000600:	e0bff815 	stw	r2,-32(fp)
			if (Data == '\n')
 8000604:	e0bffb03 	ldbu	r2,-20(fp)
 8000608:	10803fcc 	andi	r2,r2,255
 800060c:	1080201c 	xori	r2,r2,128
 8000610:	10bfe004 	addi	r2,r2,-128
 8000614:	10800298 	cmpnei	r2,r2,10
 8000618:	1000101e 	bne	r2,zero,800065c <_ZN5CHC0511CommandReadER5CUartPciPi+0x168>
				bDone = true;
 800061c:	00800044 	movi	r2,1
 8000620:	e0bff705 	stb	r2,-36(fp)
 8000624:	00000d06 	br	800065c <_ZN5CHC0511CommandReadER5CUartPciPi+0x168>
		}else if (Len >= nBufferSize){
 8000628:	e0fff817 	ldw	r3,-32(fp)
 800062c:	e0bfff17 	ldw	r2,-4(fp)
 8000630:	18800316 	blt	r3,r2,8000640 <_ZN5CHC0511CommandReadER5CUartPciPi+0x14c>
			// buffer full
			bDone = true;
 8000634:	00800044 	movi	r2,1
 8000638:	e0bff705 	stb	r2,-36(fp)
 800063c:	00000706 	br	800065c <_ZN5CHC0511CommandReadER5CUartPciPi+0x168>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8000640:	d0a73417 	ldw	r2,-25392(gp)
		}else if (alt_nticks() > timeout){
 8000644:	e0fff917 	ldw	r3,-28(fp)
 8000648:	1885803a 	cmpltu	r2,r3,r2
 800064c:	10803fcc 	andi	r2,r2,255
 8000650:	10000226 	beq	r2,zero,800065c <_ZN5CHC0511CommandReadER5CUartPciPi+0x168>
			// timeout
			bDone = true;
 8000654:	00800044 	movi	r2,1
 8000658:	e0bff705 	stb	r2,-36(fp)
		}else{
		}
		usleep(10);
 800065c:	01000284 	movi	r4,10
 8000660:	801d2cc0 	call	801d2cc <usleep>

	// read until find '\r'
	//timeout = alt_nticks() + alt_ticks_per_second()/1000;
	timeout = alt_nticks() + (alt_ticks_per_second()*30);
	Len = 1;
	while(!bDone){
 8000664:	003fcb06 	br	8000594 <__alt_data_end+0xf8000594>
		}else{
		}
		usleep(10);

	}
	*prx_lenmand = Len;
 8000668:	e0800217 	ldw	r2,8(fp)
 800066c:	e0fff817 	ldw	r3,-32(fp)
 8000670:	10c00015 	stw	r3,0(r2)
	return true;
 8000674:	00800044 	movi	r2,1
}
 8000678:	e037883a 	mov	sp,fp
 800067c:	dfc00117 	ldw	ra,4(sp)
 8000680:	df000017 	ldw	fp,0(sp)
 8000684:	dec00204 	addi	sp,sp,8
 8000688:	f800283a 	ret

0800068c <_ZN5CHC059SetupSendE5CUartPc>:


bool CHC05::SetupSend(CUart Uart,char *cmd)
{
 800068c:	deffee04 	addi	sp,sp,-72
 8000690:	dfc01115 	stw	ra,68(sp)
 8000694:	df001015 	stw	fp,64(sp)
 8000698:	df001004 	addi	fp,sp,64
 800069c:	e13ffd15 	stw	r4,-12(fp)
 80006a0:	e17ffe15 	stw	r5,-8(fp)
 80006a4:	e1bfff15 	stw	r6,-4(fp)
	bool bFindOK=false;
 80006a8:	e03ff105 	stb	zero,-60(fp)
	int  nReadLen;
    char szData[35];
    alt_u32 timeout;
    printf("TX-->%s",cmd);
 80006ac:	e17fff17 	ldw	r5,-4(fp)
 80006b0:	010200b4 	movhi	r4,2050
 80006b4:	213e4504 	addi	r4,r4,-1772
 80006b8:	80049380 	call	8004938 <printf>
 80006bc:	d0e73417 	ldw	r3,-25392(gp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 80006c0:	d0a73317 	ldw	r2,-25396(gp)

    timeout = alt_nticks() + (alt_ticks_per_second()*30);
 80006c4:	108007a4 	muli	r2,r2,30
 80006c8:	1885883a 	add	r2,r3,r2
 80006cc:	e0bff215 	stw	r2,-56(fp)

	Uart.WriteString(cmd);
 80006d0:	e17fff17 	ldw	r5,-4(fp)
 80006d4:	e13ffe17 	ldw	r4,-8(fp)
 80006d8:	80010dc0 	call	80010dc <_ZN5CUart11WriteStringEPc>
	while(!bFindOK){
 80006dc:	e0bff103 	ldbu	r2,-60(fp)
 80006e0:	1000261e 	bne	r2,zero,800077c <_ZN5CHC059SetupSendE5CUartPc+0xf0>
	  if(CommandRead(Uart, szData, sizeof(szData), &nReadLen)){
 80006e4:	010008c4 	movi	r4,35
 80006e8:	e0fff404 	addi	r3,fp,-48
 80006ec:	e0bff304 	addi	r2,fp,-52
 80006f0:	d8800015 	stw	r2,0(sp)
 80006f4:	200f883a 	mov	r7,r4
 80006f8:	180d883a 	mov	r6,r3
 80006fc:	e17ffe17 	ldw	r5,-8(fp)
 8000700:	e13ffd17 	ldw	r4,-12(fp)
 8000704:	80004f40 	call	80004f4 <_ZN5CHC0511CommandReadER5CUartPciPi>
 8000708:	10803fcc 	andi	r2,r2,255
 800070c:	10000926 	beq	r2,zero,8000734 <_ZN5CHC059SetupSendE5CUartPc+0xa8>
	      szData[nReadLen] = 0;
 8000710:	e0bff317 	ldw	r2,-52(fp)
 8000714:	e0fff404 	addi	r3,fp,-48
 8000718:	1885883a 	add	r2,r3,r2
 800071c:	10000005 	stb	zero,0(r2)
	      printf("RX<--%s \n",szData);
 8000720:	e0bff404 	addi	r2,fp,-48
 8000724:	100b883a 	mov	r5,r2
 8000728:	010200b4 	movhi	r4,2050
 800072c:	213e4704 	addi	r4,r4,-1764
 8000730:	80049380 	call	8004938 <printf>
	  }
	  if(!(strcmp(szData, "OK\r\n")))
 8000734:	e0bff404 	addi	r2,fp,-48
 8000738:	014200b4 	movhi	r5,2050
 800073c:	297e4a04 	addi	r5,r5,-1752
 8000740:	1009883a 	mov	r4,r2
 8000744:	80051000 	call	8005100 <strcmp>
 8000748:	1000021e 	bne	r2,zero,8000754 <_ZN5CHC059SetupSendE5CUartPc+0xc8>
		  bFindOK = true;
 800074c:	00800044 	movi	r2,1
 8000750:	e0bff105 	stb	r2,-60(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8000754:	d0a73417 	ldw	r2,-25392(gp)
	  if(alt_nticks() > timeout){
 8000758:	e0fff217 	ldw	r3,-56(fp)
 800075c:	1885803a 	cmpltu	r2,r3,r2
 8000760:	10803fcc 	andi	r2,r2,255
 8000764:	103fdd26 	beq	r2,zero,80006dc <__alt_data_end+0xf80006dc>
		  printf("Time Out\n");
 8000768:	010200b4 	movhi	r4,2050
 800076c:	213e4c04 	addi	r4,r4,-1744
 8000770:	8004a340 	call	8004a34 <puts>
		  return false;
 8000774:	0005883a 	mov	r2,zero
 8000778:	00000106 	br	8000780 <_ZN5CHC059SetupSendE5CUartPc+0xf4>
	  }

	}

	return bFindOK;
 800077c:	e0bff103 	ldbu	r2,-60(fp)
}
 8000780:	e037883a 	mov	sp,fp
 8000784:	dfc00117 	ldw	ra,4(sp)
 8000788:	df000017 	ldw	fp,0(sp)
 800078c:	dec00204 	addi	sp,sp,8
 8000790:	f800283a 	ret

08000794 <_ZN5CHC0511MessageSendE5CUartPc>:


bool CHC05::MessageSend(CUart Uart,char *cmd)
{
 8000794:	defffa04 	addi	sp,sp,-24
 8000798:	dfc00515 	stw	ra,20(sp)
 800079c:	df000415 	stw	fp,16(sp)
 80007a0:	df000404 	addi	fp,sp,16
 80007a4:	e13ffd15 	stw	r4,-12(fp)
 80007a8:	e17ffe15 	stw	r5,-8(fp)
 80007ac:	e1bfff15 	stw	r6,-4(fp)
	bool bOK=false;
 80007b0:	e03ffc05 	stb	zero,-16(fp)

	bOK = Uart.WriteString(cmd);
 80007b4:	e17fff17 	ldw	r5,-4(fp)
 80007b8:	e13ffe17 	ldw	r4,-8(fp)
 80007bc:	80010dc0 	call	80010dc <_ZN5CUart11WriteStringEPc>
 80007c0:	e0bffc05 	stb	r2,-16(fp)

	return bOK;
 80007c4:	e0bffc03 	ldbu	r2,-16(fp)
}
 80007c8:	e037883a 	mov	sp,fp
 80007cc:	dfc00117 	ldw	ra,4(sp)
 80007d0:	df000017 	ldw	fp,0(sp)
 80007d4:	dec00204 	addi	sp,sp,8
 80007d8:	f800283a 	ret

080007dc <_ZN5CHC0516SetInquireDeviceE5CUartiii>:


bool  CHC05::SetInquireDevice(CUart Uart,int mode,int NumDevice,int time){
 80007dc:	deffd704 	addi	sp,sp,-164
 80007e0:	dfc02815 	stw	ra,160(sp)
 80007e4:	df002715 	stw	fp,156(sp)
 80007e8:	ddc02615 	stw	r23,152(sp)
 80007ec:	dd802515 	stw	r22,148(sp)
 80007f0:	dd402415 	stw	r21,144(sp)
 80007f4:	dd002315 	stw	r20,140(sp)
 80007f8:	dcc02215 	stw	r19,136(sp)
 80007fc:	dc802115 	stw	r18,132(sp)
 8000800:	dc402015 	stw	r17,128(sp)
 8000804:	dc001f15 	stw	r16,124(sp)
 8000808:	df002704 	addi	fp,sp,156
 800080c:	e13fe515 	stw	r4,-108(fp)
 8000810:	e17fe615 	stw	r5,-104(fp)
 8000814:	e1bfe715 	stw	r6,-100(fp)
 8000818:	e1ffe815 	stw	r7,-96(fp)
 800081c:	00820034 	movhi	r2,2048
 8000820:	1088b304 	addi	r2,r2,8908
 8000824:	e0bfef15 	stw	r2,-68(fp)
 8000828:	008200b4 	movhi	r2,2050
 800082c:	10be2e04 	addi	r2,r2,-1864
 8000830:	e0bff015 	stw	r2,-64(fp)
 8000834:	e0bff104 	addi	r2,fp,-60
 8000838:	e0ffda04 	addi	r3,fp,-152
 800083c:	10c00015 	stw	r3,0(r2)
 8000840:	00c20034 	movhi	r3,2048
 8000844:	18c23604 	addi	r3,r3,2264
 8000848:	10c00115 	stw	r3,4(r2)
 800084c:	16c00215 	stw	sp,8(r2)
 8000850:	e0bfe904 	addi	r2,fp,-92
 8000854:	1009883a 	mov	r4,r2
 8000858:	8003c7c0 	call	8003c7c <_Unwind_SjLj_Register>

	bool bOK = false;
 800085c:	e03fda05 	stb	zero,-152(fp)
	char szInquire[30];
	sprintf(szInquire,"AT+INQM=%d,%d,%d\r\n",mode,NumDevice,time);
 8000860:	e0ffdd04 	addi	r3,fp,-140
 8000864:	e0800217 	ldw	r2,8(fp)
 8000868:	d8800015 	stw	r2,0(sp)
 800086c:	e1ffe817 	ldw	r7,-96(fp)
 8000870:	e1bfe717 	ldw	r6,-100(fp)
 8000874:	014200b4 	movhi	r5,2050
 8000878:	297e4f04 	addi	r5,r5,-1732
 800087c:	1809883a 	mov	r4,r3
 8000880:	8004e640 	call	8004e64 <sprintf>
	bOK = SetupSend(Uart,szInquire);
 8000884:	e0bfdb04 	addi	r2,fp,-148
 8000888:	e17fe617 	ldw	r5,-104(fp)
 800088c:	1009883a 	mov	r4,r2
 8000890:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 8000894:	e13fdd04 	addi	r4,fp,-140
 8000898:	e0ffdb04 	addi	r3,fp,-148
 800089c:	00800044 	movi	r2,1
 80008a0:	e0bfea15 	stw	r2,-88(fp)
 80008a4:	200d883a 	mov	r6,r4
 80008a8:	180b883a 	mov	r5,r3
 80008ac:	e13fe517 	ldw	r4,-108(fp)
 80008b0:	800068c0 	call	800068c <_ZN5CHC059SetupSendE5CUartPc>
 80008b4:	e0bfda05 	stb	r2,-152(fp)
 80008b8:	e0ffdb04 	addi	r3,fp,-148
 80008bc:	00bfffc4 	movi	r2,-1
 80008c0:	e0bfea15 	stw	r2,-88(fp)
 80008c4:	1809883a 	mov	r4,r3
 80008c8:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
	return bOK;
 80008cc:	e0bfda03 	ldbu	r2,-152(fp)
 80008d0:	e0bff605 	stb	r2,-40(fp)
 80008d4:	00000c06 	br	8000908 <_ZN5CHC0516SetInquireDeviceE5CUartiii+0x12c>
 80008d8:	e7002604 	addi	fp,fp,152
 80008dc:	e0bfeb17 	ldw	r2,-84(fp)
 80008e0:	e0bff715 	stw	r2,-36(fp)
bool  CHC05::SetInquireDevice(CUart Uart,int mode,int NumDevice,int time){

	bool bOK = false;
	char szInquire[30];
	sprintf(szInquire,"AT+INQM=%d,%d,%d\r\n",mode,NumDevice,time);
	bOK = SetupSend(Uart,szInquire);
 80008e4:	e0bfdb04 	addi	r2,fp,-148
 80008e8:	e03fea15 	stw	zero,-88(fp)
 80008ec:	1009883a 	mov	r4,r2
 80008f0:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 80008f4:	e0fff717 	ldw	r3,-36(fp)
 80008f8:	00bfffc4 	movi	r2,-1
 80008fc:	e0bfea15 	stw	r2,-88(fp)
 8000900:	1809883a 	mov	r4,r3
 8000904:	8003e780 	call	8003e78 <_Unwind_SjLj_Resume>
 8000908:	e0bfe904 	addi	r2,fp,-92
 800090c:	1009883a 	mov	r4,r2
 8000910:	8003c940 	call	8003c94 <_Unwind_SjLj_Unregister>
	return bOK;
}
 8000914:	e0bff603 	ldbu	r2,-40(fp)
 8000918:	e6fff804 	addi	sp,fp,-32
 800091c:	dfc00917 	ldw	ra,36(sp)
 8000920:	df000817 	ldw	fp,32(sp)
 8000924:	ddc00717 	ldw	r23,28(sp)
 8000928:	dd800617 	ldw	r22,24(sp)
 800092c:	dd400517 	ldw	r21,20(sp)
 8000930:	dd000417 	ldw	r20,16(sp)
 8000934:	dcc00317 	ldw	r19,12(sp)
 8000938:	dc800217 	ldw	r18,8(sp)
 800093c:	dc400117 	ldw	r17,4(sp)
 8000940:	dc000017 	ldw	r16,0(sp)
 8000944:	dec00a04 	addi	sp,sp,40
 8000948:	f800283a 	ret

0800094c <_ZN5CHC0511GetNameListE5CUartPc>:

bool CHC05::GetNameList(CUart Uart, char *cmd){
 800094c:	deffed04 	addi	sp,sp,-76
 8000950:	dfc01215 	stw	ra,72(sp)
 8000954:	df001115 	stw	fp,68(sp)
 8000958:	df001104 	addi	fp,sp,68
 800095c:	e13ffd15 	stw	r4,-12(fp)
 8000960:	e17ffe15 	stw	r5,-8(fp)
 8000964:	e1bfff15 	stw	r6,-4(fp)

	bool bFindOK=false;
 8000968:	e03ff005 	stb	zero,-64(fp)
    alt_u32 timeout;
    int i=0;
 800096c:	e03ff115 	stw	zero,-60(fp)
 8000970:	d0e73417 	ldw	r3,-25392(gp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8000974:	d0a73317 	ldw	r2,-25396(gp)
	int  nReadLen;
    char szData[35];
    timeout = alt_nticks() + (alt_ticks_per_second()*15);
 8000978:	108003e4 	muli	r2,r2,15
 800097c:	1885883a 	add	r2,r3,r2
 8000980:	e0bff215 	stw	r2,-56(fp)
    printf("TX-->%s",cmd);
 8000984:	e17fff17 	ldw	r5,-4(fp)
 8000988:	010200b4 	movhi	r4,2050
 800098c:	213e4504 	addi	r4,r4,-1772
 8000990:	80049380 	call	8004938 <printf>
    Uart.WriteString(cmd);
 8000994:	e17fff17 	ldw	r5,-4(fp)
 8000998:	e13ffe17 	ldw	r4,-8(fp)
 800099c:	80010dc0 	call	80010dc <_ZN5CUart11WriteStringEPc>
    while(!bFindOK){
 80009a0:	e0bff003 	ldbu	r2,-64(fp)
 80009a4:	1000251e 	bne	r2,zero,8000a3c <_ZN5CHC0511GetNameListE5CUartPc+0xf0>
    	if(CommandRead(Uart, szData, sizeof(szData), &nReadLen)){
 80009a8:	010008c4 	movi	r4,35
 80009ac:	e0fff404 	addi	r3,fp,-48
 80009b0:	e0bff304 	addi	r2,fp,-52
 80009b4:	d8800015 	stw	r2,0(sp)
 80009b8:	200f883a 	mov	r7,r4
 80009bc:	180d883a 	mov	r6,r3
 80009c0:	e17ffe17 	ldw	r5,-8(fp)
 80009c4:	e13ffd17 	ldw	r4,-12(fp)
 80009c8:	80004f40 	call	80004f4 <_ZN5CHC0511CommandReadER5CUartPciPi>
 80009cc:	10803fcc 	andi	r2,r2,255
 80009d0:	10001026 	beq	r2,zero,8000a14 <_ZN5CHC0511GetNameListE5CUartPc+0xc8>
    		szData[nReadLen] = 0;
 80009d4:	e0bff317 	ldw	r2,-52(fp)
 80009d8:	e0fff404 	addi	r3,fp,-48
 80009dc:	1885883a 	add	r2,r3,r2
 80009e0:	10000005 	stb	zero,0(r2)
    		if(!(strcmp(szData,"OK\r\n"))){
 80009e4:	e0bff404 	addi	r2,fp,-48
 80009e8:	014200b4 	movhi	r5,2050
 80009ec:	297e4a04 	addi	r5,r5,-1752
 80009f0:	1009883a 	mov	r4,r2
 80009f4:	80051000 	call	8005100 <strcmp>
 80009f8:	1000031e 	bne	r2,zero,8000a08 <_ZN5CHC0511GetNameListE5CUartPc+0xbc>
    			 bFindOK = true;
 80009fc:	00800044 	movi	r2,1
 8000a00:	e0bff005 	stb	r2,-64(fp)
 8000a04:	00000306 	br	8000a14 <_ZN5CHC0511GetNameListE5CUartPc+0xc8>
    		}else
    			printf("%s\n",szData);
 8000a08:	e0bff404 	addi	r2,fp,-48
 8000a0c:	1009883a 	mov	r4,r2
 8000a10:	8004a340 	call	8004a34 <puts>
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8000a14:	d0a73417 	ldw	r2,-25392(gp)

    	}

  	   if(alt_nticks() > timeout){
 8000a18:	e0fff217 	ldw	r3,-56(fp)
 8000a1c:	1885803a 	cmpltu	r2,r3,r2
 8000a20:	10803fcc 	andi	r2,r2,255
 8000a24:	103fde26 	beq	r2,zero,80009a0 <__alt_data_end+0xf80009a0>
  		  printf("Time Out\n");
 8000a28:	010200b4 	movhi	r4,2050
 8000a2c:	213e4c04 	addi	r4,r4,-1744
 8000a30:	8004a340 	call	8004a34 <puts>
  		  return false;
 8000a34:	0005883a 	mov	r2,zero
 8000a38:	00000106 	br	8000a40 <_ZN5CHC0511GetNameListE5CUartPc+0xf4>
  	  }
    }
	return bFindOK;
 8000a3c:	e0bff003 	ldbu	r2,-64(fp)
}
 8000a40:	e037883a 	mov	sp,fp
 8000a44:	dfc00117 	ldw	ra,4(sp)
 8000a48:	df000017 	ldw	fp,0(sp)
 8000a4c:	dec00204 	addi	sp,sp,8
 8000a50:	f800283a 	ret

08000a54 <_ZN5CHC0510DeviceListE5CUartPcPS1_>:


bool CHC05::DeviceList(CUart Uart, char *cmd, char **szDeviceData){
 8000a54:	deffb204 	addi	sp,sp,-312
 8000a58:	dfc04d15 	stw	ra,308(sp)
 8000a5c:	df004c15 	stw	fp,304(sp)
 8000a60:	df004c04 	addi	fp,sp,304
 8000a64:	e13ffc15 	stw	r4,-16(fp)
 8000a68:	e17ffd15 	stw	r5,-12(fp)
 8000a6c:	e1bffe15 	stw	r6,-8(fp)
 8000a70:	e1ffff15 	stw	r7,-4(fp)
	bool bFindOK=false;
 8000a74:	e03fb505 	stb	zero,-300(fp)
	int  nReadLen;
    char szData[36];
    alt_u32 count=0;
 8000a78:	e03fb615 	stw	zero,-296(fp)
 8000a7c:	d0e73417 	ldw	r3,-25392(gp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 8000a80:	d0a73317 	ldw	r2,-25396(gp)
    alt_u32 timeout;
    char Address1[9][8],Address2[9][8],Address3[9][8];
    timeout = alt_nticks() + (alt_ticks_per_second()*30);
 8000a84:	108007a4 	muli	r2,r2,30
 8000a88:	1885883a 	add	r2,r3,r2
 8000a8c:	e0bfbb15 	stw	r2,-276(fp)
    printf("TX-->%s",cmd);
 8000a90:	e17ffe17 	ldw	r5,-8(fp)
 8000a94:	010200b4 	movhi	r4,2050
 8000a98:	213e4504 	addi	r4,r4,-1772
 8000a9c:	80049380 	call	8004938 <printf>
	Uart.WriteString(cmd);
 8000aa0:	e17ffe17 	ldw	r5,-8(fp)
 8000aa4:	e13ffd17 	ldw	r4,-12(fp)
 8000aa8:	80010dc0 	call	80010dc <_ZN5CUart11WriteStringEPc>
	while(!bFindOK){
 8000aac:	e0bfb503 	ldbu	r2,-300(fp)
 8000ab0:	10006c1e 	bne	r2,zero,8000c64 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x210>
	  if(CommandRead(Uart, szData, sizeof(szData), &nReadLen)){
 8000ab4:	01000904 	movi	r4,36
 8000ab8:	e0ffbd04 	addi	r3,fp,-268
 8000abc:	e0bfbc04 	addi	r2,fp,-272
 8000ac0:	d8800015 	stw	r2,0(sp)
 8000ac4:	200f883a 	mov	r7,r4
 8000ac8:	180d883a 	mov	r6,r3
 8000acc:	e17ffd17 	ldw	r5,-12(fp)
 8000ad0:	e13ffc17 	ldw	r4,-16(fp)
 8000ad4:	80004f40 	call	80004f4 <_ZN5CHC0511CommandReadER5CUartPciPi>
 8000ad8:	10803fcc 	andi	r2,r2,255
 8000adc:	10005726 	beq	r2,zero,8000c3c <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x1e8>
	      szData[nReadLen] = 0;
 8000ae0:	e0bfbc17 	ldw	r2,-272(fp)
 8000ae4:	e0ffbd04 	addi	r3,fp,-268
 8000ae8:	1885883a 	add	r2,r3,r2
 8000aec:	10000005 	stb	zero,0(r2)
		  if(!(strcmp(szData, "OK\r\n"))){
 8000af0:	e0bfbd04 	addi	r2,fp,-268
 8000af4:	014200b4 	movhi	r5,2050
 8000af8:	297e4a04 	addi	r5,r5,-1752
 8000afc:	1009883a 	mov	r4,r2
 8000b00:	80051000 	call	8005100 <strcmp>
 8000b04:	1000081e 	bne	r2,zero,8000b28 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0xd4>
			  bFindOK = true;
 8000b08:	00800044 	movi	r2,1
 8000b0c:	e0bfb505 	stb	r2,-300(fp)
			  printf("RX<--%s\n",szData);
 8000b10:	e0bfbd04 	addi	r2,fp,-268
 8000b14:	100b883a 	mov	r5,r2
 8000b18:	010200b4 	movhi	r4,2050
 8000b1c:	213e5404 	addi	r4,r4,-1712
 8000b20:	80049380 	call	8004938 <printf>
 8000b24:	00004506 	br	8000c3c <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x1e8>
		  }
		  else{
	        printf("RX<--%s\n",szData);
 8000b28:	e0bfbd04 	addi	r2,fp,-268
 8000b2c:	100b883a 	mov	r5,r2
 8000b30:	010200b4 	movhi	r4,2050
 8000b34:	213e5404 	addi	r4,r4,-1712
 8000b38:	80049380 	call	8004938 <printf>
            strcpy(szDeviceData[count],szData);
 8000b3c:	e0bfb617 	ldw	r2,-296(fp)
 8000b40:	1085883a 	add	r2,r2,r2
 8000b44:	1085883a 	add	r2,r2,r2
 8000b48:	1007883a 	mov	r3,r2
 8000b4c:	e0bfff17 	ldw	r2,-4(fp)
 8000b50:	10c5883a 	add	r2,r2,r3
 8000b54:	10800017 	ldw	r2,0(r2)
 8000b58:	e0ffbd04 	addi	r3,fp,-268
 8000b5c:	180b883a 	mov	r5,r3
 8000b60:	1009883a 	mov	r4,r2
 8000b64:	80051dc0 	call	80051dc <strcpy>
            sscanf(szDeviceData[count],"+INQ:%[^:]:%[^:]:%[^,],%[^,],%s",Address1[count],Address2[count],Address3[count]);
 8000b68:	e0bfb617 	ldw	r2,-296(fp)
 8000b6c:	1085883a 	add	r2,r2,r2
 8000b70:	1085883a 	add	r2,r2,r2
 8000b74:	1007883a 	mov	r3,r2
 8000b78:	e0bfff17 	ldw	r2,-4(fp)
 8000b7c:	10c5883a 	add	r2,r2,r3
 8000b80:	11000017 	ldw	r4,0(r2)
 8000b84:	e0ffc604 	addi	r3,fp,-232
 8000b88:	e0bfb617 	ldw	r2,-296(fp)
 8000b8c:	100490fa 	slli	r2,r2,3
 8000b90:	188b883a 	add	r5,r3,r2
 8000b94:	e0ffd804 	addi	r3,fp,-160
 8000b98:	e0bfb617 	ldw	r2,-296(fp)
 8000b9c:	100490fa 	slli	r2,r2,3
 8000ba0:	188d883a 	add	r6,r3,r2
 8000ba4:	e0ffea04 	addi	r3,fp,-88
 8000ba8:	e0bfb617 	ldw	r2,-296(fp)
 8000bac:	100490fa 	slli	r2,r2,3
 8000bb0:	1885883a 	add	r2,r3,r2
 8000bb4:	d8800015 	stw	r2,0(sp)
 8000bb8:	300f883a 	mov	r7,r6
 8000bbc:	280d883a 	mov	r6,r5
 8000bc0:	014200b4 	movhi	r5,2050
 8000bc4:	297e5704 	addi	r5,r5,-1700
 8000bc8:	8004ed00 	call	8004ed0 <sscanf>
            sprintf(szDeviceData[count],"%s,%s,%s",Address1[count],Address2[count],Address3[count]);
 8000bcc:	e0bfb617 	ldw	r2,-296(fp)
 8000bd0:	1085883a 	add	r2,r2,r2
 8000bd4:	1085883a 	add	r2,r2,r2
 8000bd8:	1007883a 	mov	r3,r2
 8000bdc:	e0bfff17 	ldw	r2,-4(fp)
 8000be0:	10c5883a 	add	r2,r2,r3
 8000be4:	11000017 	ldw	r4,0(r2)
 8000be8:	e0ffc604 	addi	r3,fp,-232
 8000bec:	e0bfb617 	ldw	r2,-296(fp)
 8000bf0:	100490fa 	slli	r2,r2,3
 8000bf4:	188b883a 	add	r5,r3,r2
 8000bf8:	e0ffd804 	addi	r3,fp,-160
 8000bfc:	e0bfb617 	ldw	r2,-296(fp)
 8000c00:	100490fa 	slli	r2,r2,3
 8000c04:	188d883a 	add	r6,r3,r2
 8000c08:	e0ffea04 	addi	r3,fp,-88
 8000c0c:	e0bfb617 	ldw	r2,-296(fp)
 8000c10:	100490fa 	slli	r2,r2,3
 8000c14:	1885883a 	add	r2,r3,r2
 8000c18:	d8800015 	stw	r2,0(sp)
 8000c1c:	300f883a 	mov	r7,r6
 8000c20:	280d883a 	mov	r6,r5
 8000c24:	014200b4 	movhi	r5,2050
 8000c28:	297e5f04 	addi	r5,r5,-1668
 8000c2c:	8004e640 	call	8004e64 <sprintf>
            count++;
 8000c30:	e0bfb617 	ldw	r2,-296(fp)
 8000c34:	10800044 	addi	r2,r2,1
 8000c38:	e0bfb615 	stw	r2,-296(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 8000c3c:	d0a73417 	ldw	r2,-25392(gp)
		  }
	  }

	  if(alt_nticks() > timeout){
 8000c40:	e0ffbb17 	ldw	r3,-276(fp)
 8000c44:	1885803a 	cmpltu	r2,r3,r2
 8000c48:	10803fcc 	andi	r2,r2,255
 8000c4c:	103f9726 	beq	r2,zero,8000aac <__alt_data_end+0xf8000aac>
		  printf("Time Out\n");
 8000c50:	010200b4 	movhi	r4,2050
 8000c54:	213e4c04 	addi	r4,r4,-1744
 8000c58:	8004a340 	call	8004a34 <puts>
		  return false;
 8000c5c:	0005883a 	mov	r2,zero
 8000c60:	00007406 	br	8000e34 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3e0>
	  }
	}
	if(bFindOK){
 8000c64:	e0bfb503 	ldbu	r2,-300(fp)
 8000c68:	10007126 	beq	r2,zero,8000e30 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3dc>
	      for(int j=0;j<=8;j++){
 8000c6c:	e03fb715 	stw	zero,-292(fp)
 8000c70:	e0bfb717 	ldw	r2,-292(fp)
 8000c74:	10800248 	cmpgei	r2,r2,9
 8000c78:	1000291e 	bne	r2,zero,8000d20 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x2cc>
	          for(int i=0;i<=8;i++){
 8000c7c:	e03fb815 	stw	zero,-288(fp)
 8000c80:	e0bfb817 	ldw	r2,-288(fp)
 8000c84:	10800248 	cmpgei	r2,r2,9
 8000c88:	1000211e 	bne	r2,zero,8000d10 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x2bc>
	        	  if(i!=j){
 8000c8c:	e0ffb817 	ldw	r3,-288(fp)
 8000c90:	e0bfb717 	ldw	r2,-292(fp)
 8000c94:	18801a26 	beq	r3,r2,8000d00 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x2ac>
	    	        if(!strcmp(szDeviceData[j],szDeviceData[i])){
 8000c98:	e0bfb717 	ldw	r2,-292(fp)
 8000c9c:	1085883a 	add	r2,r2,r2
 8000ca0:	1085883a 	add	r2,r2,r2
 8000ca4:	1007883a 	mov	r3,r2
 8000ca8:	e0bfff17 	ldw	r2,-4(fp)
 8000cac:	10c5883a 	add	r2,r2,r3
 8000cb0:	10c00017 	ldw	r3,0(r2)
 8000cb4:	e0bfb817 	ldw	r2,-288(fp)
 8000cb8:	1085883a 	add	r2,r2,r2
 8000cbc:	1085883a 	add	r2,r2,r2
 8000cc0:	1009883a 	mov	r4,r2
 8000cc4:	e0bfff17 	ldw	r2,-4(fp)
 8000cc8:	1105883a 	add	r2,r2,r4
 8000ccc:	10800017 	ldw	r2,0(r2)
 8000cd0:	100b883a 	mov	r5,r2
 8000cd4:	1809883a 	mov	r4,r3
 8000cd8:	80051000 	call	8005100 <strcmp>
 8000cdc:	1000081e 	bne	r2,zero,8000d00 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x2ac>
	    	        	szDeviceData[i][0]='\0';
 8000ce0:	e0bfb817 	ldw	r2,-288(fp)
 8000ce4:	1085883a 	add	r2,r2,r2
 8000ce8:	1085883a 	add	r2,r2,r2
 8000cec:	1007883a 	mov	r3,r2
 8000cf0:	e0bfff17 	ldw	r2,-4(fp)
 8000cf4:	10c5883a 	add	r2,r2,r3
 8000cf8:	10800017 	ldw	r2,0(r2)
 8000cfc:	10000005 	stb	zero,0(r2)
		  return false;
	  }
	}
	if(bFindOK){
	      for(int j=0;j<=8;j++){
	          for(int i=0;i<=8;i++){
 8000d00:	e0bfb817 	ldw	r2,-288(fp)
 8000d04:	10800044 	addi	r2,r2,1
 8000d08:	e0bfb815 	stw	r2,-288(fp)
 8000d0c:	003fdc06 	br	8000c80 <__alt_data_end+0xf8000c80>
		  printf("Time Out\n");
		  return false;
	  }
	}
	if(bFindOK){
	      for(int j=0;j<=8;j++){
 8000d10:	e0bfb717 	ldw	r2,-292(fp)
 8000d14:	10800044 	addi	r2,r2,1
 8000d18:	e0bfb715 	stw	r2,-292(fp)
 8000d1c:	003fd406 	br	8000c70 <__alt_data_end+0xf8000c70>
	    	        }
	        	  }
	          }
	      }

	      for(int i=0;i<=8;i++){
 8000d20:	e03fb915 	stw	zero,-284(fp)
 8000d24:	e0bfb917 	ldw	r2,-284(fp)
 8000d28:	10800248 	cmpgei	r2,r2,9
 8000d2c:	1000401e 	bne	r2,zero,8000e30 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3dc>
	          for(int j=0;j<=8;j++){
 8000d30:	e03fba15 	stw	zero,-280(fp)
 8000d34:	e0bfba17 	ldw	r2,-280(fp)
 8000d38:	10800248 	cmpgei	r2,r2,9
 8000d3c:	1000381e 	bne	r2,zero,8000e20 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3cc>
	        	  if(i<j){
 8000d40:	e0ffb917 	ldw	r3,-284(fp)
 8000d44:	e0bfba17 	ldw	r2,-280(fp)
 8000d48:	1880310e 	bge	r3,r2,8000e10 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3bc>
	    	        if(szDeviceData[i][0]=='\0' && szDeviceData[j][0]!='\0'){
 8000d4c:	e0bfb917 	ldw	r2,-284(fp)
 8000d50:	1085883a 	add	r2,r2,r2
 8000d54:	1085883a 	add	r2,r2,r2
 8000d58:	1007883a 	mov	r3,r2
 8000d5c:	e0bfff17 	ldw	r2,-4(fp)
 8000d60:	10c5883a 	add	r2,r2,r3
 8000d64:	10800017 	ldw	r2,0(r2)
 8000d68:	10800003 	ldbu	r2,0(r2)
 8000d6c:	10803fcc 	andi	r2,r2,255
 8000d70:	1080201c 	xori	r2,r2,128
 8000d74:	10bfe004 	addi	r2,r2,-128
 8000d78:	1000251e 	bne	r2,zero,8000e10 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3bc>
 8000d7c:	e0bfba17 	ldw	r2,-280(fp)
 8000d80:	1085883a 	add	r2,r2,r2
 8000d84:	1085883a 	add	r2,r2,r2
 8000d88:	1007883a 	mov	r3,r2
 8000d8c:	e0bfff17 	ldw	r2,-4(fp)
 8000d90:	10c5883a 	add	r2,r2,r3
 8000d94:	10800017 	ldw	r2,0(r2)
 8000d98:	10800003 	ldbu	r2,0(r2)
 8000d9c:	10803fcc 	andi	r2,r2,255
 8000da0:	1080201c 	xori	r2,r2,128
 8000da4:	10bfe004 	addi	r2,r2,-128
 8000da8:	10001926 	beq	r2,zero,8000e10 <_ZN5CHC0510DeviceListE5CUartPcPS1_+0x3bc>
	    	        	 strcpy(szDeviceData[i],szDeviceData[j]);
 8000dac:	e0bfb917 	ldw	r2,-284(fp)
 8000db0:	1085883a 	add	r2,r2,r2
 8000db4:	1085883a 	add	r2,r2,r2
 8000db8:	1007883a 	mov	r3,r2
 8000dbc:	e0bfff17 	ldw	r2,-4(fp)
 8000dc0:	10c5883a 	add	r2,r2,r3
 8000dc4:	10c00017 	ldw	r3,0(r2)
 8000dc8:	e0bfba17 	ldw	r2,-280(fp)
 8000dcc:	1085883a 	add	r2,r2,r2
 8000dd0:	1085883a 	add	r2,r2,r2
 8000dd4:	1009883a 	mov	r4,r2
 8000dd8:	e0bfff17 	ldw	r2,-4(fp)
 8000ddc:	1105883a 	add	r2,r2,r4
 8000de0:	10800017 	ldw	r2,0(r2)
 8000de4:	100b883a 	mov	r5,r2
 8000de8:	1809883a 	mov	r4,r3
 8000dec:	80051dc0 	call	80051dc <strcpy>
	    	        	 szDeviceData[j][0]='\0';
 8000df0:	e0bfba17 	ldw	r2,-280(fp)
 8000df4:	1085883a 	add	r2,r2,r2
 8000df8:	1085883a 	add	r2,r2,r2
 8000dfc:	1007883a 	mov	r3,r2
 8000e00:	e0bfff17 	ldw	r2,-4(fp)
 8000e04:	10c5883a 	add	r2,r2,r3
 8000e08:	10800017 	ldw	r2,0(r2)
 8000e0c:	10000005 	stb	zero,0(r2)
	        	  }
	          }
	      }

	      for(int i=0;i<=8;i++){
	          for(int j=0;j<=8;j++){
 8000e10:	e0bfba17 	ldw	r2,-280(fp)
 8000e14:	10800044 	addi	r2,r2,1
 8000e18:	e0bfba15 	stw	r2,-280(fp)
 8000e1c:	003fc506 	br	8000d34 <__alt_data_end+0xf8000d34>
	    	        }
	        	  }
	          }
	      }

	      for(int i=0;i<=8;i++){
 8000e20:	e0bfb917 	ldw	r2,-284(fp)
 8000e24:	10800044 	addi	r2,r2,1
 8000e28:	e0bfb915 	stw	r2,-284(fp)
 8000e2c:	003fbd06 	br	8000d24 <__alt_data_end+0xf8000d24>
	    	        }
	        	  }
	          }
	      }
	}
	return bFindOK;
 8000e30:	e0bfb503 	ldbu	r2,-300(fp)
}
 8000e34:	e037883a 	mov	sp,fp
 8000e38:	dfc00117 	ldw	ra,4(sp)
 8000e3c:	df000017 	ldw	fp,0(sp)
 8000e40:	dec00204 	addi	sp,sp,8
 8000e44:	f800283a 	ret

08000e48 <_ZN5CUartC1ERKS_>:
#include "terasic_includes.h"




class CUart {
 8000e48:	defffd04 	addi	sp,sp,-12
 8000e4c:	df000215 	stw	fp,8(sp)
 8000e50:	df000204 	addi	fp,sp,8
 8000e54:	e13ffe15 	stw	r4,-8(fp)
 8000e58:	e17fff15 	stw	r5,-4(fp)
 8000e5c:	008200b4 	movhi	r2,2050
 8000e60:	10be6804 	addi	r2,r2,-1632
 8000e64:	e0fffe17 	ldw	r3,-8(fp)
 8000e68:	18800015 	stw	r2,0(r3)
 8000e6c:	e0bfff17 	ldw	r2,-4(fp)
 8000e70:	10c00117 	ldw	r3,4(r2)
 8000e74:	e0bffe17 	ldw	r2,-8(fp)
 8000e78:	10c00115 	stw	r3,4(r2)
 8000e7c:	0001883a 	nop
 8000e80:	e037883a 	mov	sp,fp
 8000e84:	df000017 	ldw	fp,0(sp)
 8000e88:	dec00104 	addi	sp,sp,4
 8000e8c:	f800283a 	ret

08000e90 <_ZN5CUartC1Ev>:
 */
#include "CUart.h"
#include "sys/alt_dev.h"
#include "altera_avalon_uart.h"

CUart::CUart():
 8000e90:	defffe04 	addi	sp,sp,-8
 8000e94:	df000115 	stw	fp,4(sp)
 8000e98:	df000104 	addi	fp,sp,4
 8000e9c:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated constructor stub
	UartHandle(0)
 8000ea0:	008200b4 	movhi	r2,2050
 8000ea4:	10be6804 	addi	r2,r2,-1632
 8000ea8:	e0ffff17 	ldw	r3,-4(fp)
 8000eac:	18800015 	stw	r2,0(r3)
 8000eb0:	e0bfff17 	ldw	r2,-4(fp)
 8000eb4:	10000115 	stw	zero,4(r2)
{

}
 8000eb8:	0001883a 	nop
 8000ebc:	e037883a 	mov	sp,fp
 8000ec0:	df000017 	ldw	fp,0(sp)
 8000ec4:	dec00104 	addi	sp,sp,4
 8000ec8:	f800283a 	ret

08000ecc <_ZN5CUartD1Ev>:

CUart::~CUart() {
 8000ecc:	defffd04 	addi	sp,sp,-12
 8000ed0:	dfc00215 	stw	ra,8(sp)
 8000ed4:	df000115 	stw	fp,4(sp)
 8000ed8:	df000104 	addi	fp,sp,4
 8000edc:	e13fff15 	stw	r4,-4(fp)
 8000ee0:	008200b4 	movhi	r2,2050
 8000ee4:	10be6804 	addi	r2,r2,-1632
 8000ee8:	e0ffff17 	ldw	r3,-4(fp)
 8000eec:	18800015 	stw	r2,0(r3)
	// TODO Auto-generated destructor stub


}
 8000ef0:	0005883a 	mov	r2,zero
 8000ef4:	10000226 	beq	r2,zero,8000f00 <_ZN5CUartD1Ev+0x34>
 8000ef8:	e13fff17 	ldw	r4,-4(fp)
 8000efc:	8001b140 	call	8001b14 <_ZdlPv>
 8000f00:	e037883a 	mov	sp,fp
 8000f04:	dfc00117 	ldw	ra,4(sp)
 8000f08:	df000017 	ldw	fp,0(sp)
 8000f0c:	dec00204 	addi	sp,sp,8
 8000f10:	f800283a 	ret

08000f14 <_ZN5CUartD0Ev>:
	UartHandle(0)
{

}

CUart::~CUart() {
 8000f14:	defffd04 	addi	sp,sp,-12
 8000f18:	dfc00215 	stw	ra,8(sp)
 8000f1c:	df000115 	stw	fp,4(sp)
 8000f20:	df000104 	addi	fp,sp,4
 8000f24:	e13fff15 	stw	r4,-4(fp)
	// TODO Auto-generated destructor stub


}
 8000f28:	e13fff17 	ldw	r4,-4(fp)
 8000f2c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8000f30:	e13fff17 	ldw	r4,-4(fp)
 8000f34:	8001b140 	call	8001b14 <_ZdlPv>
 8000f38:	e037883a 	mov	sp,fp
 8000f3c:	dfc00117 	ldw	ra,4(sp)
 8000f40:	df000017 	ldw	fp,0(sp)
 8000f44:	dec00204 	addi	sp,sp,8
 8000f48:	f800283a 	ret

08000f4c <_ZN5CUart4OpenEPc>:

void CUart::Open(char *pDeviceName)
{
 8000f4c:	defffc04 	addi	sp,sp,-16
 8000f50:	dfc00315 	stw	ra,12(sp)
 8000f54:	df000215 	stw	fp,8(sp)
 8000f58:	df000204 	addi	fp,sp,8
 8000f5c:	e13ffe15 	stw	r4,-8(fp)
 8000f60:	e17fff15 	stw	r5,-4(fp)
	UartHandle = open(pDeviceName, O_ACCMODE); // open file for reading and writing
 8000f64:	014000c4 	movi	r5,3
 8000f68:	e13fff17 	ldw	r4,-4(fp)
 8000f6c:	801cd880 	call	801cd88 <open>
 8000f70:	1007883a 	mov	r3,r2
 8000f74:	e0bffe17 	ldw	r2,-8(fp)
 8000f78:	10c00115 	stw	r3,4(r2)
}
 8000f7c:	0001883a 	nop
 8000f80:	e037883a 	mov	sp,fp
 8000f84:	dfc00117 	ldw	ra,4(sp)
 8000f88:	df000017 	ldw	fp,0(sp)
 8000f8c:	dec00204 	addi	sp,sp,8
 8000f90:	f800283a 	ret

08000f94 <_ZN5CUart5CloseEv>:

void  CUart::Close()
{
 8000f94:	defffd04 	addi	sp,sp,-12
 8000f98:	dfc00215 	stw	ra,8(sp)
 8000f9c:	df000115 	stw	fp,4(sp)
 8000fa0:	df000104 	addi	fp,sp,4
 8000fa4:	e13fff15 	stw	r4,-4(fp)
    if (UartHandle)
 8000fa8:	e0bfff17 	ldw	r2,-4(fp)
 8000fac:	10800117 	ldw	r2,4(r2)
 8000fb0:	10000426 	beq	r2,zero,8000fc4 <_ZN5CUart5CloseEv+0x30>
      close(UartHandle);
 8000fb4:	e0bfff17 	ldw	r2,-4(fp)
 8000fb8:	10800117 	ldw	r2,4(r2)
 8000fbc:	1009883a 	mov	r4,r2
 8000fc0:	801c3e40 	call	801c3e4 <close>
}
 8000fc4:	0001883a 	nop
 8000fc8:	e037883a 	mov	sp,fp
 8000fcc:	dfc00117 	ldw	ra,4(sp)
 8000fd0:	df000017 	ldw	fp,0(sp)
 8000fd4:	dec00204 	addi	sp,sp,8
 8000fd8:	f800283a 	ret

08000fdc <_ZN5CUart4ReadEPciPi>:

bool CUart::Read(char *pBuffer, int nBufferSize, int *prx_len){
 8000fdc:	defff804 	addi	sp,sp,-32
 8000fe0:	dfc00715 	stw	ra,28(sp)
 8000fe4:	df000615 	stw	fp,24(sp)
 8000fe8:	df000604 	addi	fp,sp,24
 8000fec:	e13ffc15 	stw	r4,-16(fp)
 8000ff0:	e17ffd15 	stw	r5,-12(fp)
 8000ff4:	e1bffe15 	stw	r6,-8(fp)
 8000ff8:	e1ffff15 	stw	r7,-4(fp)
	int nResult;
    bool bSuccess = FALSE;
 8000ffc:	e03ffa05 	stb	zero,-24(fp)
    if (UartHandle){
 8001000:	e0bffc17 	ldw	r2,-16(fp)
 8001004:	10800117 	ldw	r2,4(r2)
 8001008:	10000f26 	beq	r2,zero,8001048 <_ZN5CUart4ReadEPciPi+0x6c>
        nResult = read(UartHandle, pBuffer, nBufferSize);
 800100c:	e0bffc17 	ldw	r2,-16(fp)
 8001010:	10800117 	ldw	r2,4(r2)
 8001014:	e0fffe17 	ldw	r3,-8(fp)
 8001018:	180d883a 	mov	r6,r3
 800101c:	e17ffd17 	ldw	r5,-12(fp)
 8001020:	1009883a 	mov	r4,r2
 8001024:	801cf180 	call	801cf18 <read>
 8001028:	e0bffb15 	stw	r2,-20(fp)
        if (nResult >= 0){
 800102c:	e0bffb17 	ldw	r2,-20(fp)
 8001030:	10000516 	blt	r2,zero,8001048 <_ZN5CUart4ReadEPciPi+0x6c>
            *prx_len = nResult;
 8001034:	e0bfff17 	ldw	r2,-4(fp)
 8001038:	e0fffb17 	ldw	r3,-20(fp)
 800103c:	10c00015 	stw	r3,0(r2)
            bSuccess = TRUE;
 8001040:	00800044 	movi	r2,1
 8001044:	e0bffa05 	stb	r2,-24(fp)
            //if (*prx_len == nBufferSize)
            //    bSuccess = TRUE;
        }
    }
    return bSuccess;
 8001048:	e0bffa03 	ldbu	r2,-24(fp)
}
 800104c:	e037883a 	mov	sp,fp
 8001050:	dfc00117 	ldw	ra,4(sp)
 8001054:	df000017 	ldw	fp,0(sp)
 8001058:	dec00204 	addi	sp,sp,8
 800105c:	f800283a 	ret

08001060 <_ZN5CUart5WriteEPci>:




bool  CUart::Write(char *pData, int nDataSize)
{
 8001060:	defffa04 	addi	sp,sp,-24
 8001064:	dfc00515 	stw	ra,20(sp)
 8001068:	df000415 	stw	fp,16(sp)
 800106c:	df000404 	addi	fp,sp,16
 8001070:	e13ffd15 	stw	r4,-12(fp)
 8001074:	e17ffe15 	stw	r5,-8(fp)
 8001078:	e1bfff15 	stw	r6,-4(fp)
    bool bSuccess = FALSE;
 800107c:	e03ffc05 	stb	zero,-16(fp)
    if (UartHandle){
 8001080:	e0bffd17 	ldw	r2,-12(fp)
 8001084:	10800117 	ldw	r2,4(r2)
 8001088:	10000e26 	beq	r2,zero,80010c4 <_ZN5CUart5WriteEPci+0x64>
    	// write(UartHandle, pData, nDataSize);
        if (write(UartHandle, pData, nDataSize) == nDataSize)
 800108c:	e0bffd17 	ldw	r2,-12(fp)
 8001090:	10800117 	ldw	r2,4(r2)
 8001094:	e0ffff17 	ldw	r3,-4(fp)
 8001098:	180d883a 	mov	r6,r3
 800109c:	e17ffe17 	ldw	r5,-8(fp)
 80010a0:	1009883a 	mov	r4,r2
 80010a4:	801d3380 	call	801d338 <write>
 80010a8:	1007883a 	mov	r3,r2
 80010ac:	e0bfff17 	ldw	r2,-4(fp)
 80010b0:	1885003a 	cmpeq	r2,r3,r2
 80010b4:	10803fcc 	andi	r2,r2,255
 80010b8:	10000226 	beq	r2,zero,80010c4 <_ZN5CUart5WriteEPci+0x64>
            bSuccess = TRUE;
 80010bc:	00800044 	movi	r2,1
 80010c0:	e0bffc05 	stb	r2,-16(fp)
    }
    return bSuccess;
 80010c4:	e0bffc03 	ldbu	r2,-16(fp)
}
 80010c8:	e037883a 	mov	sp,fp
 80010cc:	dfc00117 	ldw	ra,4(sp)
 80010d0:	df000017 	ldw	fp,0(sp)
 80010d4:	dec00204 	addi	sp,sp,8
 80010d8:	f800283a 	ret

080010dc <_ZN5CUart11WriteStringEPc>:


bool CUart::WriteString(char *pString)
{
 80010dc:	defffc04 	addi	sp,sp,-16
 80010e0:	dfc00315 	stw	ra,12(sp)
 80010e4:	df000215 	stw	fp,8(sp)
 80010e8:	df000204 	addi	fp,sp,8
 80010ec:	e13ffe15 	stw	r4,-8(fp)
 80010f0:	e17fff15 	stw	r5,-4(fp)
	return CUart::Write(pString, strlen(pString));
 80010f4:	e13fff17 	ldw	r4,-4(fp)
 80010f8:	800526c0 	call	800526c <strlen>
 80010fc:	100d883a 	mov	r6,r2
 8001100:	e17fff17 	ldw	r5,-4(fp)
 8001104:	e13ffe17 	ldw	r4,-8(fp)
 8001108:	80010600 	call	8001060 <_ZN5CUart5WriteEPci>
}
 800110c:	e037883a 	mov	sp,fp
 8001110:	dfc00117 	ldw	ra,4(sp)
 8001114:	df000017 	ldw	fp,0(sp)
 8001118:	dec00204 	addi	sp,sp,8
 800111c:	f800283a 	ret

08001120 <_ZN5CUart16NoneBlockingReadEPciPi>:

bool CUart::NoneBlockingRead(char *pBuffer, int nBufferSize, int *prx_len){
 8001120:	defff904 	addi	sp,sp,-28
 8001124:	dfc00615 	stw	ra,24(sp)
 8001128:	df000515 	stw	fp,20(sp)
 800112c:	df000504 	addi	fp,sp,20
 8001130:	e13ffc15 	stw	r4,-16(fp)
 8001134:	e17ffd15 	stw	r5,-12(fp)
 8001138:	e1bffe15 	stw	r6,-8(fp)
 800113c:	e1ffff15 	stw	r7,-4(fp)
    bool bSuccess;
    fcntl(UartHandle, F_SETFL, O_ACCMODE | O_NONBLOCK);
 8001140:	e0bffc17 	ldw	r2,-16(fp)
 8001144:	10800117 	ldw	r2,4(r2)
 8001148:	019000c4 	movi	r6,16387
 800114c:	01400104 	movi	r5,4
 8001150:	1009883a 	mov	r4,r2
 8001154:	801c5500 	call	801c550 <fcntl>
    bSuccess = CUart::Read(pBuffer, nBufferSize, prx_len);
 8001158:	e1ffff17 	ldw	r7,-4(fp)
 800115c:	e1bffe17 	ldw	r6,-8(fp)
 8001160:	e17ffd17 	ldw	r5,-12(fp)
 8001164:	e13ffc17 	ldw	r4,-16(fp)
 8001168:	8000fdc0 	call	8000fdc <_ZN5CUart4ReadEPciPi>
 800116c:	e0bffb05 	stb	r2,-20(fp)
    fcntl(UartHandle, F_SETFL, O_ACCMODE);
 8001170:	e0bffc17 	ldw	r2,-16(fp)
 8001174:	10800117 	ldw	r2,4(r2)
 8001178:	018000c4 	movi	r6,3
 800117c:	01400104 	movi	r5,4
 8001180:	1009883a 	mov	r4,r2
 8001184:	801c5500 	call	801c550 <fcntl>
    return bSuccess;
 8001188:	e0bffb03 	ldbu	r2,-20(fp)
}
 800118c:	e037883a 	mov	sp,fp
 8001190:	dfc00117 	ldw	ra,4(sp)
 8001194:	df000017 	ldw	fp,0(sp)
 8001198:	dec00204 	addi	sp,sp,8
 800119c:	f800283a 	ret

080011a0 <_ZN5CUart15ReadWithTimeoutEPhtPtm>:


bool CUart::ReadWithTimeout(alt_u8 *pBuffer, alt_u16 nBufferSize, alt_u16 *prx_len, alt_u32 timeout){
 80011a0:	defff504 	addi	sp,sp,-44
 80011a4:	dfc00a15 	stw	ra,40(sp)
 80011a8:	df000915 	stw	fp,36(sp)
 80011ac:	df000904 	addi	fp,sp,36
 80011b0:	e13ffc15 	stw	r4,-16(fp)
 80011b4:	e17ffd15 	stw	r5,-12(fp)
 80011b8:	3005883a 	mov	r2,r6
 80011bc:	e1ffff15 	stw	r7,-4(fp)
 80011c0:	e0bffe0d 	sth	r2,-8(fp)
    bool bSuccess = FALSE;
 80011c4:	e03ff705 	stb	zero,-36(fp)
    if (UartHandle){
 80011c8:	e0bffc17 	ldw	r2,-16(fp)
 80011cc:	10800117 	ldw	r2,4(r2)
 80011d0:	10002f26 	beq	r2,zero,8001290 <_ZN5CUart15ReadWithTimeoutEPhtPtm+0xf0>
        int rx_total_cnt = 0, rx_cnt;
 80011d4:	e03ff815 	stw	zero,-32(fp)
        alt_u32 time_start;
        bool bTimeout = FALSE;
 80011d8:	e03ff905 	stb	zero,-28(fp)
 80011dc:	d0a73417 	ldw	r2,-25392(gp)
        time_start = alt_nticks();
 80011e0:	e0bffa15 	stw	r2,-24(fp)
        while(!bSuccess && !bTimeout){
 80011e4:	e0bff703 	ldbu	r2,-36(fp)
 80011e8:	1000251e 	bne	r2,zero,8001280 <_ZN5CUart15ReadWithTimeoutEPhtPtm+0xe0>
 80011ec:	e0bff903 	ldbu	r2,-28(fp)
 80011f0:	1000231e 	bne	r2,zero,8001280 <_ZN5CUart15ReadWithTimeoutEPhtPtm+0xe0>
        	NoneBlockingRead((char *)pBuffer+rx_total_cnt, nBufferSize-rx_total_cnt, &rx_cnt);
 80011f4:	e0bff817 	ldw	r2,-32(fp)
 80011f8:	e0fffd17 	ldw	r3,-12(fp)
 80011fc:	1889883a 	add	r4,r3,r2
 8001200:	e0fffe0b 	ldhu	r3,-8(fp)
 8001204:	e0bff817 	ldw	r2,-32(fp)
 8001208:	1885c83a 	sub	r2,r3,r2
 800120c:	e0fffb04 	addi	r3,fp,-20
 8001210:	180f883a 	mov	r7,r3
 8001214:	100d883a 	mov	r6,r2
 8001218:	200b883a 	mov	r5,r4
 800121c:	e13ffc17 	ldw	r4,-16(fp)
 8001220:	80011200 	call	8001120 <_ZN5CUart16NoneBlockingReadEPciPi>
            //rx_cnt = read(pUart, pBuffer+rx_total_cnt, nBufferSize-rx_total_cnt);
            rx_total_cnt += rx_cnt;
 8001224:	e0bffb17 	ldw	r2,-20(fp)
 8001228:	e0fff817 	ldw	r3,-32(fp)
 800122c:	1885883a 	add	r2,r3,r2
 8001230:	e0bff815 	stw	r2,-32(fp)
            if (rx_total_cnt == nBufferSize)
 8001234:	e0fffe0b 	ldhu	r3,-8(fp)
 8001238:	e0bff817 	ldw	r2,-32(fp)
 800123c:	1880031e 	bne	r3,r2,800124c <_ZN5CUart15ReadWithTimeoutEPhtPtm+0xac>
                bSuccess = TRUE;
 8001240:	00800044 	movi	r2,1
 8001244:	e0bff705 	stb	r2,-36(fp)
 8001248:	003fe606 	br	80011e4 <__alt_data_end+0xf80011e4>
 800124c:	d0e73417 	ldw	r3,-25392(gp)
            else if ((alt_nticks() - time_start) > timeout)
 8001250:	e0bffa17 	ldw	r2,-24(fp)
 8001254:	1885c83a 	sub	r2,r3,r2
 8001258:	e0c00217 	ldw	r3,8(fp)
 800125c:	1885803a 	cmpltu	r2,r3,r2
 8001260:	10803fcc 	andi	r2,r2,255
 8001264:	10000326 	beq	r2,zero,8001274 <_ZN5CUart15ReadWithTimeoutEPhtPtm+0xd4>
                bTimeout = TRUE;
 8001268:	00800044 	movi	r2,1
 800126c:	e0bff905 	stb	r2,-28(fp)
 8001270:	003fdc06 	br	80011e4 <__alt_data_end+0xf80011e4>
            else
                usleep(1);
 8001274:	01000044 	movi	r4,1
 8001278:	801d2cc0 	call	801d2cc <usleep>
    if (UartHandle){
        int rx_total_cnt = 0, rx_cnt;
        alt_u32 time_start;
        bool bTimeout = FALSE;
        time_start = alt_nticks();
        while(!bSuccess && !bTimeout){
 800127c:	003fd906 	br	80011e4 <__alt_data_end+0xf80011e4>
            else if ((alt_nticks() - time_start) > timeout)
                bTimeout = TRUE;
            else
                usleep(1);
        }
        *prx_len = rx_total_cnt;
 8001280:	e0bff817 	ldw	r2,-32(fp)
 8001284:	1007883a 	mov	r3,r2
 8001288:	e0bfff17 	ldw	r2,-4(fp)
 800128c:	10c0000d 	sth	r3,0(r2)
    }
    return bSuccess;
 8001290:	e0bff703 	ldbu	r2,-36(fp)
}
 8001294:	e037883a 	mov	sp,fp
 8001298:	dfc00117 	ldw	ra,4(sp)
 800129c:	df000017 	ldw	fp,0(sp)
 80012a0:	dec00204 	addi	sp,sp,8
 80012a4:	f800283a 	ret

080012a8 <_Z9SetConfigb>:


const int MaxList = 9;


void SetConfig(bool bEnable){
 80012a8:	defffe04 	addi	sp,sp,-8
 80012ac:	df000115 	stw	fp,4(sp)
 80012b0:	df000104 	addi	fp,sp,4
 80012b4:	2005883a 	mov	r2,r4
 80012b8:	e0bfff05 	stb	r2,-4(fp)
	IOWR(GPIO_CONTROLLER_BASE,0,bEnable);
 80012bc:	e0ffff03 	ldbu	r3,-4(fp)
 80012c0:	00840034 	movhi	r2,4096
 80012c4:	10801404 	addi	r2,r2,80
 80012c8:	10c00035 	stwio	r3,0(r2)
}
 80012cc:	0001883a 	nop
 80012d0:	e037883a 	mov	sp,fp
 80012d4:	df000017 	ldw	fp,0(sp)
 80012d8:	dec00104 	addi	sp,sp,4
 80012dc:	f800283a 	ret

080012e0 <_Z11query_usersv>:

int query_users(void){
 80012e0:	defffd04 	addi	sp,sp,-12
 80012e4:	dfc00215 	stw	ra,8(sp)
 80012e8:	df000115 	stw	fp,4(sp)
 80012ec:	df000104 	addi	fp,sp,4
    int nChoice = 0;
 80012f0:	e03fff15 	stw	zero,-4(fp)
    scanf("%d", &nChoice);
 80012f4:	e17fff04 	addi	r5,fp,-4
 80012f8:	010200b4 	movhi	r4,2050
 80012fc:	213e6a04 	addi	r4,r4,-1624
 8001300:	8004a9c0 	call	8004a9c <scanf>
    printf("%d\r\n", nChoice);
 8001304:	e0bfff17 	ldw	r2,-4(fp)
 8001308:	100b883a 	mov	r5,r2
 800130c:	010200b4 	movhi	r4,2050
 8001310:	213e6b04 	addi	r4,r4,-1620
 8001314:	80049380 	call	8004938 <printf>
    return nChoice;
 8001318:	e0bfff17 	ldw	r2,-4(fp)
}
 800131c:	e037883a 	mov	sp,fp
 8001320:	dfc00117 	ldw	ra,4(sp)
 8001324:	df000017 	ldw	fp,0(sp)
 8001328:	dec00204 	addi	sp,sp,8
 800132c:	f800283a 	ret

08001330 <main>:


int main()
{
 8001330:	deffa504 	addi	sp,sp,-364
 8001334:	dfc05a15 	stw	ra,360(sp)
 8001338:	df005915 	stw	fp,356(sp)
 800133c:	ddc05815 	stw	r23,352(sp)
 8001340:	dd805715 	stw	r22,348(sp)
 8001344:	dd405615 	stw	r21,344(sp)
 8001348:	dd005515 	stw	r20,340(sp)
 800134c:	dcc05415 	stw	r19,336(sp)
 8001350:	dc805315 	stw	r18,332(sp)
 8001354:	dc405215 	stw	r17,328(sp)
 8001358:	dc005115 	stw	r16,324(sp)
 800135c:	df005904 	addi	fp,sp,356
 8001360:	00820034 	movhi	r2,2048
 8001364:	1088b304 	addi	r2,r2,8908
 8001368:	e0bfe515 	stw	r2,-108(fp)
 800136c:	008200b4 	movhi	r2,2050
 8001370:	10be2f84 	addi	r2,r2,-1858
 8001374:	e0bfe615 	stw	r2,-104(fp)
 8001378:	e0bfe704 	addi	r2,fp,-100
 800137c:	e0ffa804 	addi	r3,fp,-352
 8001380:	10c00015 	stw	r3,0(r2)
 8001384:	00c20034 	movhi	r3,2048
 8001388:	18c6a304 	addi	r3,r3,6796
 800138c:	10c00115 	stw	r3,4(r2)
 8001390:	16c00215 	stw	sp,8(r2)
 8001394:	e0bfdf04 	addi	r2,fp,-132
 8001398:	1009883a 	mov	r4,r2
 800139c:	8003c7c0 	call	8003c7c <_Unwind_SjLj_Register>
	CUart Uart;
 80013a0:	e0ffbe04 	addi	r3,fp,-264
 80013a4:	00bfffc4 	movi	r2,-1
 80013a8:	e0bfe015 	stw	r2,-128(fp)
 80013ac:	1809883a 	mov	r4,r3
 80013b0:	8000e900 	call	8000e90 <_ZN5CUartC1Ev>
 	Uart.Open(HC_05_UART_NAME);
 80013b4:	e0ffbe04 	addi	r3,fp,-264
 80013b8:	014200b4 	movhi	r5,2050
 80013bc:	00800044 	movi	r2,1
 80013c0:	e0bfe015 	stw	r2,-128(fp)
 80013c4:	297e6d04 	addi	r5,r5,-1612
 80013c8:	1809883a 	mov	r4,r3
 80013cc:	8000f4c0 	call	8000f4c <_ZN5CUart4OpenEPc>
 	CHC05 HC05;
 80013d0:	e0bfc004 	addi	r2,fp,-256
 80013d4:	1009883a 	mov	r4,r2
 80013d8:	80002900 	call	8000290 <_ZN5CHC05C1Ev>
 	int nReadLen;
	int RxLen;
 	char szData[45];
 	char ReveiveData[30];
 	int nChoice = 0;
 80013dc:	e03fab15 	stw	zero,-340(fp)
 	char *szDeviceList[MaxList];
 	for(int i=0;i<9;i++)
 80013e0:	e03fa815 	stw	zero,-352(fp)
 80013e4:	e0bfa817 	ldw	r2,-352(fp)
 80013e8:	10800248 	cmpgei	r2,r2,9
 80013ec:	10000f1e 	bne	r2,zero,800142c <main+0xfc>
 		szDeviceList[i] = (char *)malloc(35*sizeof(char));
 80013f0:	008008c4 	movi	r2,35
 80013f4:	1009883a 	mov	r4,r2
 80013f8:	8003fac0 	call	8003fac <malloc>
 80013fc:	1007883a 	mov	r3,r2
 8001400:	e0bfa817 	ldw	r2,-352(fp)
 8001404:	1085883a 	add	r2,r2,r2
 8001408:	1085883a 	add	r2,r2,r2
 800140c:	e13fa804 	addi	r4,fp,-352
 8001410:	2085883a 	add	r2,r4,r2
 8001414:	10802e04 	addi	r2,r2,184
 8001418:	10c00015 	stw	r3,0(r2)
	int RxLen;
 	char szData[45];
 	char ReveiveData[30];
 	int nChoice = 0;
 	char *szDeviceList[MaxList];
 	for(int i=0;i<9;i++)
 800141c:	e0bfa817 	ldw	r2,-352(fp)
 8001420:	10800044 	addi	r2,r2,1
 8001424:	e0bfa815 	stw	r2,-352(fp)
 8001428:	003fee06 	br	80013e4 <__alt_data_end+0xf80013e4>
 		szDeviceList[i] = (char *)malloc(35*sizeof(char));

 	printf("HC-05 Master Demo\r\n");
 800142c:	010200b4 	movhi	r4,2050
 8001430:	00800084 	movi	r2,2
 8001434:	e0bfe015 	stw	r2,-128(fp)
 8001438:	213e7104 	addi	r4,r4,-1596
 800143c:	8004a340 	call	8004a34 <puts>
 	SetConfig(true);
 8001440:	01000044 	movi	r4,1
 8001444:	80012a80 	call	80012a8 <_Z9SetConfigb>
  	HC05.SetupSend(Uart,"AT+INIT\r\n");
 8001448:	e0ffbe04 	addi	r3,fp,-264
 800144c:	e0bfbc04 	addi	r2,fp,-272
 8001450:	180b883a 	mov	r5,r3
 8001454:	1009883a 	mov	r4,r2
 8001458:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 800145c:	e13fbc04 	addi	r4,fp,-272
 8001460:	e0ffc004 	addi	r3,fp,-256
 8001464:	018200b4 	movhi	r6,2050
 8001468:	008000c4 	movi	r2,3
 800146c:	e0bfe015 	stw	r2,-128(fp)
 8001470:	31be7604 	addi	r6,r6,-1576
 8001474:	200b883a 	mov	r5,r4
 8001478:	1809883a 	mov	r4,r3
 800147c:	800068c0 	call	800068c <_ZN5CHC059SetupSendE5CUartPc>
 8001480:	e0ffbc04 	addi	r3,fp,-272
 8001484:	00800084 	movi	r2,2
 8001488:	e0bfe015 	stw	r2,-128(fp)
 800148c:	1809883a 	mov	r4,r3
 8001490:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
  	usleep(1000000);
 8001494:	010003f4 	movhi	r4,15
 8001498:	21109004 	addi	r4,r4,16960
 800149c:	801d2cc0 	call	801d2cc <usleep>
    HC05.SetupSend(Uart,"AT+UART=115200,0,0\r\n");
 80014a0:	e0ffbe04 	addi	r3,fp,-264
 80014a4:	e0bfba04 	addi	r2,fp,-280
 80014a8:	180b883a 	mov	r5,r3
 80014ac:	1009883a 	mov	r4,r2
 80014b0:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 80014b4:	e13fba04 	addi	r4,fp,-280
 80014b8:	e0ffc004 	addi	r3,fp,-256
 80014bc:	018200b4 	movhi	r6,2050
 80014c0:	00800104 	movi	r2,4
 80014c4:	e0bfe015 	stw	r2,-128(fp)
 80014c8:	31be7904 	addi	r6,r6,-1564
 80014cc:	200b883a 	mov	r5,r4
 80014d0:	1809883a 	mov	r4,r3
 80014d4:	800068c0 	call	800068c <_ZN5CHC059SetupSendE5CUartPc>
 80014d8:	e0ffba04 	addi	r3,fp,-280
 80014dc:	00800084 	movi	r2,2
 80014e0:	e0bfe015 	stw	r2,-128(fp)
 80014e4:	1809883a 	mov	r4,r3
 80014e8:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
    usleep(1000000);
 80014ec:	010003f4 	movhi	r4,15
 80014f0:	21109004 	addi	r4,r4,16960
 80014f4:	801d2cc0 	call	801d2cc <usleep>
    HC05.SetupSend(Uart,"AT+ROLE=1\r\n");
 80014f8:	e0ffbe04 	addi	r3,fp,-264
 80014fc:	e0bfb804 	addi	r2,fp,-288
 8001500:	180b883a 	mov	r5,r3
 8001504:	1009883a 	mov	r4,r2
 8001508:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 800150c:	e13fb804 	addi	r4,fp,-288
 8001510:	e0ffc004 	addi	r3,fp,-256
 8001514:	018200b4 	movhi	r6,2050
 8001518:	00800144 	movi	r2,5
 800151c:	e0bfe015 	stw	r2,-128(fp)
 8001520:	31be7f04 	addi	r6,r6,-1540
 8001524:	200b883a 	mov	r5,r4
 8001528:	1809883a 	mov	r4,r3
 800152c:	800068c0 	call	800068c <_ZN5CHC059SetupSendE5CUartPc>
 8001530:	e0ffb804 	addi	r3,fp,-288
 8001534:	00800084 	movi	r2,2
 8001538:	e0bfe015 	stw	r2,-128(fp)
 800153c:	1809883a 	mov	r4,r3
 8001540:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
    usleep(1000000);
 8001544:	010003f4 	movhi	r4,15
 8001548:	21109004 	addi	r4,r4,16960
 800154c:	801d2cc0 	call	801d2cc <usleep>
  	HC05.SetInquireDevice(Uart,1,9,48);
 8001550:	e0ffbe04 	addi	r3,fp,-264
 8001554:	e0bfb604 	addi	r2,fp,-296
 8001558:	180b883a 	mov	r5,r3
 800155c:	1009883a 	mov	r4,r2
 8001560:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 8001564:	e13fb604 	addi	r4,fp,-296
 8001568:	e0ffc004 	addi	r3,fp,-256
 800156c:	00800c04 	movi	r2,48
 8001570:	d8800015 	stw	r2,0(sp)
 8001574:	00800184 	movi	r2,6
 8001578:	e0bfe015 	stw	r2,-128(fp)
 800157c:	01c00244 	movi	r7,9
 8001580:	01800044 	movi	r6,1
 8001584:	200b883a 	mov	r5,r4
 8001588:	1809883a 	mov	r4,r3
 800158c:	80007dc0 	call	80007dc <_ZN5CHC0516SetInquireDeviceE5CUartiii>
 8001590:	e0ffb604 	addi	r3,fp,-296
 8001594:	00800084 	movi	r2,2
 8001598:	e0bfe015 	stw	r2,-128(fp)
 800159c:	1809883a 	mov	r4,r3
 80015a0:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
  	usleep(1000000);
 80015a4:	010003f4 	movhi	r4,15
 80015a8:	21109004 	addi	r4,r4,16960
 80015ac:	801d2cc0 	call	801d2cc <usleep>
    HC05.DeviceList(Uart,"AT+INQ\r\n",szDeviceList);
 80015b0:	e0ffbe04 	addi	r3,fp,-264
 80015b4:	e0bfb404 	addi	r2,fp,-304
 80015b8:	180b883a 	mov	r5,r3
 80015bc:	1009883a 	mov	r4,r2
 80015c0:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 80015c4:	e0bfd604 	addi	r2,fp,-168
 80015c8:	e13fb404 	addi	r4,fp,-304
 80015cc:	e0ffc004 	addi	r3,fp,-256
 80015d0:	100f883a 	mov	r7,r2
 80015d4:	018200b4 	movhi	r6,2050
 80015d8:	008001c4 	movi	r2,7
 80015dc:	e0bfe015 	stw	r2,-128(fp)
 80015e0:	31be8204 	addi	r6,r6,-1528
 80015e4:	200b883a 	mov	r5,r4
 80015e8:	1809883a 	mov	r4,r3
 80015ec:	8000a540 	call	8000a54 <_ZN5CHC0510DeviceListE5CUartPcPS1_>
 80015f0:	e0ffb404 	addi	r3,fp,-304
 80015f4:	00800084 	movi	r2,2
 80015f8:	e0bfe015 	stw	r2,-128(fp)
 80015fc:	1809883a 	mov	r4,r3
 8001600:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>


    for(int i=0;i<=8;i++){
 8001604:	e03fa915 	stw	zero,-348(fp)
 8001608:	e0bfa917 	ldw	r2,-348(fp)
 800160c:	10800248 	cmpgei	r2,r2,9
 8001610:	10003e1e 	bne	r2,zero,800170c <main+0x3dc>
      if(!strcmp(szDeviceList[i],"\0")){
 8001614:	e0bfa917 	ldw	r2,-348(fp)
 8001618:	1085883a 	add	r2,r2,r2
 800161c:	1085883a 	add	r2,r2,r2
 8001620:	e0ffa804 	addi	r3,fp,-352
 8001624:	1885883a 	add	r2,r3,r2
 8001628:	10802e04 	addi	r2,r2,184
 800162c:	10800017 	ldw	r2,0(r2)
 8001630:	10800003 	ldbu	r2,0(r2)
 8001634:	10803fcc 	andi	r2,r2,255
 8001638:	10002f26 	beq	r2,zero,80016f8 <main+0x3c8>
       continue;
      }else{
    	printf("Device[%d]:%s\n",i,szDeviceList[i]);
 800163c:	e0bfa917 	ldw	r2,-348(fp)
 8001640:	1085883a 	add	r2,r2,r2
 8001644:	1085883a 	add	r2,r2,r2
 8001648:	e13fa804 	addi	r4,fp,-352
 800164c:	2085883a 	add	r2,r4,r2
 8001650:	10802e04 	addi	r2,r2,184
 8001654:	10800017 	ldw	r2,0(r2)
 8001658:	100d883a 	mov	r6,r2
 800165c:	e17fa917 	ldw	r5,-348(fp)
 8001660:	010200b4 	movhi	r4,2050
 8001664:	00800084 	movi	r2,2
 8001668:	e0bfe015 	stw	r2,-128(fp)
 800166c:	213e8504 	addi	r4,r4,-1516
 8001670:	80049380 	call	8004938 <printf>
        sprintf(szData,"AT+RNAME?%s\r\n",szDeviceList[i]);
 8001674:	e0bfa917 	ldw	r2,-348(fp)
 8001678:	1085883a 	add	r2,r2,r2
 800167c:	1085883a 	add	r2,r2,r2
 8001680:	e0ffa804 	addi	r3,fp,-352
 8001684:	1885883a 	add	r2,r3,r2
 8001688:	10802e04 	addi	r2,r2,184
 800168c:	10c00017 	ldw	r3,0(r2)
 8001690:	e0bfc304 	addi	r2,fp,-244
 8001694:	180d883a 	mov	r6,r3
 8001698:	014200b4 	movhi	r5,2050
 800169c:	297e8904 	addi	r5,r5,-1500
 80016a0:	1009883a 	mov	r4,r2
 80016a4:	8004e640 	call	8004e64 <sprintf>
        HC05.GetNameList(Uart,szData);
 80016a8:	e0ffbe04 	addi	r3,fp,-264
 80016ac:	e0bfb204 	addi	r2,fp,-312
 80016b0:	180b883a 	mov	r5,r3
 80016b4:	1009883a 	mov	r4,r2
 80016b8:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 80016bc:	e17fc304 	addi	r5,fp,-244
 80016c0:	e13fb204 	addi	r4,fp,-312
 80016c4:	e0ffc004 	addi	r3,fp,-256
 80016c8:	00800204 	movi	r2,8
 80016cc:	e0bfe015 	stw	r2,-128(fp)
 80016d0:	280d883a 	mov	r6,r5
 80016d4:	200b883a 	mov	r5,r4
 80016d8:	1809883a 	mov	r4,r3
 80016dc:	800094c0 	call	800094c <_ZN5CHC0511GetNameListE5CUartPc>
 80016e0:	e0ffb204 	addi	r3,fp,-312
 80016e4:	00800084 	movi	r2,2
 80016e8:	e0bfe015 	stw	r2,-128(fp)
 80016ec:	1809883a 	mov	r4,r3
 80016f0:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 80016f4:	00000106 	br	80016fc <main+0x3cc>
    HC05.DeviceList(Uart,"AT+INQ\r\n",szDeviceList);


    for(int i=0;i<=8;i++){
      if(!strcmp(szDeviceList[i],"\0")){
       continue;
 80016f8:	0001883a 	nop
  	HC05.SetInquireDevice(Uart,1,9,48);
  	usleep(1000000);
    HC05.DeviceList(Uart,"AT+INQ\r\n",szDeviceList);


    for(int i=0;i<=8;i++){
 80016fc:	e0bfa917 	ldw	r2,-348(fp)
 8001700:	10800044 	addi	r2,r2,1
 8001704:	e0bfa915 	stw	r2,-348(fp)
 8001708:	003fbf06 	br	8001608 <__alt_data_end+0xf8001608>
        sprintf(szData,"AT+RNAME?%s\r\n",szDeviceList[i]);
        HC05.GetNameList(Uart,szData);
      }
    }

    printf("Please input a number to select the desired device.\n");
 800170c:	010200b4 	movhi	r4,2050
 8001710:	00800084 	movi	r2,2
 8001714:	e0bfe015 	stw	r2,-128(fp)
 8001718:	213e8d04 	addi	r4,r4,-1484
 800171c:	8004a340 	call	8004a34 <puts>
    printf("For example, input 0 to select first device.\n");
 8001720:	010200b4 	movhi	r4,2050
 8001724:	213e9a04 	addi	r4,r4,-1432
 8001728:	8004a340 	call	8004a34 <puts>
    nChoice = query_users();
 800172c:	80012e00 	call	80012e0 <_Z11query_usersv>
 8001730:	e0bfab15 	stw	r2,-340(fp)
    sprintf(szData,"AT+PAIR=%s,%d\r\n",szDeviceList[nChoice],30);
 8001734:	e0bfab17 	ldw	r2,-340(fp)
 8001738:	1085883a 	add	r2,r2,r2
 800173c:	1085883a 	add	r2,r2,r2
 8001740:	e13fa804 	addi	r4,fp,-352
 8001744:	2085883a 	add	r2,r4,r2
 8001748:	10802e04 	addi	r2,r2,184
 800174c:	10c00017 	ldw	r3,0(r2)
 8001750:	e0bfc304 	addi	r2,fp,-244
 8001754:	01c00784 	movi	r7,30
 8001758:	180d883a 	mov	r6,r3
 800175c:	014200b4 	movhi	r5,2050
 8001760:	297ea604 	addi	r5,r5,-1384
 8001764:	1009883a 	mov	r4,r2
 8001768:	8004e640 	call	8004e64 <sprintf>
    HC05.SetupSend(Uart,szData);
 800176c:	e0ffbe04 	addi	r3,fp,-264
 8001770:	e0bfb004 	addi	r2,fp,-320
 8001774:	180b883a 	mov	r5,r3
 8001778:	1009883a 	mov	r4,r2
 800177c:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 8001780:	e17fc304 	addi	r5,fp,-244
 8001784:	e13fb004 	addi	r4,fp,-320
 8001788:	e0ffc004 	addi	r3,fp,-256
 800178c:	00800244 	movi	r2,9
 8001790:	e0bfe015 	stw	r2,-128(fp)
 8001794:	280d883a 	mov	r6,r5
 8001798:	200b883a 	mov	r5,r4
 800179c:	1809883a 	mov	r4,r3
 80017a0:	800068c0 	call	800068c <_ZN5CHC059SetupSendE5CUartPc>
 80017a4:	e0ffb004 	addi	r3,fp,-320
 80017a8:	00800084 	movi	r2,2
 80017ac:	e0bfe015 	stw	r2,-128(fp)
 80017b0:	1809883a 	mov	r4,r3
 80017b4:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>

    usleep(1000000);
 80017b8:	010003f4 	movhi	r4,15
 80017bc:	21109004 	addi	r4,r4,16960
 80017c0:	801d2cc0 	call	801d2cc <usleep>
    sprintf(szData,"AT+BIND=%s\r\n",szDeviceList[nChoice]);
 80017c4:	e0bfab17 	ldw	r2,-340(fp)
 80017c8:	1085883a 	add	r2,r2,r2
 80017cc:	1085883a 	add	r2,r2,r2
 80017d0:	e0ffa804 	addi	r3,fp,-352
 80017d4:	1885883a 	add	r2,r3,r2
 80017d8:	10802e04 	addi	r2,r2,184
 80017dc:	10c00017 	ldw	r3,0(r2)
 80017e0:	e0bfc304 	addi	r2,fp,-244
 80017e4:	180d883a 	mov	r6,r3
 80017e8:	014200b4 	movhi	r5,2050
 80017ec:	297eaa04 	addi	r5,r5,-1368
 80017f0:	1009883a 	mov	r4,r2
 80017f4:	8004e640 	call	8004e64 <sprintf>
    HC05.SetupSend(Uart,szData);
 80017f8:	e0ffbe04 	addi	r3,fp,-264
 80017fc:	e0bfae04 	addi	r2,fp,-328
 8001800:	180b883a 	mov	r5,r3
 8001804:	1009883a 	mov	r4,r2
 8001808:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 800180c:	e17fc304 	addi	r5,fp,-244
 8001810:	e13fae04 	addi	r4,fp,-328
 8001814:	e0ffc004 	addi	r3,fp,-256
 8001818:	00800284 	movi	r2,10
 800181c:	e0bfe015 	stw	r2,-128(fp)
 8001820:	280d883a 	mov	r6,r5
 8001824:	200b883a 	mov	r5,r4
 8001828:	1809883a 	mov	r4,r3
 800182c:	800068c0 	call	800068c <_ZN5CHC059SetupSendE5CUartPc>
 8001830:	e0ffae04 	addi	r3,fp,-328
 8001834:	00800084 	movi	r2,2
 8001838:	e0bfe015 	stw	r2,-128(fp)
 800183c:	1809883a 	mov	r4,r3
 8001840:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
    SetConfig(false);
 8001844:	0009883a 	mov	r4,zero
 8001848:	80012a80 	call	80012a8 <_Z9SetConfigb>
    usleep(1000000);
 800184c:	010003f4 	movhi	r4,15
 8001850:	21109004 	addi	r4,r4,16960
 8001854:	801d2cc0 	call	801d2cc <usleep>
 	for(int i=0;i<9;i++)
 8001858:	e03faa15 	stw	zero,-344(fp)
 800185c:	e0bfaa17 	ldw	r2,-344(fp)
 8001860:	10800248 	cmpgei	r2,r2,9
 8001864:	10000d1e 	bne	r2,zero,800189c <main+0x56c>
 		free(szDeviceList[i]);
 8001868:	e0bfaa17 	ldw	r2,-344(fp)
 800186c:	1085883a 	add	r2,r2,r2
 8001870:	1085883a 	add	r2,r2,r2
 8001874:	e13fa804 	addi	r4,fp,-352
 8001878:	2085883a 	add	r2,r4,r2
 800187c:	10802e04 	addi	r2,r2,184
 8001880:	10800017 	ldw	r2,0(r2)
 8001884:	1009883a 	mov	r4,r2
 8001888:	8003fc00 	call	8003fc0 <free>
    usleep(1000000);
    sprintf(szData,"AT+BIND=%s\r\n",szDeviceList[nChoice]);
    HC05.SetupSend(Uart,szData);
    SetConfig(false);
    usleep(1000000);
 	for(int i=0;i<9;i++)
 800188c:	e0bfaa17 	ldw	r2,-344(fp)
 8001890:	10800044 	addi	r2,r2,1
 8001894:	e0bfaa15 	stw	r2,-344(fp)
 8001898:	003ff006 	br	800185c <__alt_data_end+0xf800185c>
 		free(szDeviceList[i]);
 	HC05.MessageSend(Uart,"Hello World!\n");
 800189c:	e0ffbe04 	addi	r3,fp,-264
 80018a0:	e0bfac04 	addi	r2,fp,-336
 80018a4:	180b883a 	mov	r5,r3
 80018a8:	1009883a 	mov	r4,r2
 80018ac:	8000e480 	call	8000e48 <_ZN5CUartC1ERKS_>
 80018b0:	e13fac04 	addi	r4,fp,-336
 80018b4:	e0ffc004 	addi	r3,fp,-256
 80018b8:	018200b4 	movhi	r6,2050
 80018bc:	008002c4 	movi	r2,11
 80018c0:	e0bfe015 	stw	r2,-128(fp)
 80018c4:	31beae04 	addi	r6,r6,-1352
 80018c8:	200b883a 	mov	r5,r4
 80018cc:	1809883a 	mov	r4,r3
 80018d0:	80007940 	call	8000794 <_ZN5CHC0511MessageSendE5CUartPc>
 80018d4:	e0ffac04 	addi	r3,fp,-336
 80018d8:	00800084 	movi	r2,2
 80018dc:	e0bfe015 	stw	r2,-128(fp)
 80018e0:	1809883a 	mov	r4,r3
 80018e4:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>

    while(1){

		if(HC05.MessageRead(Uart, ReveiveData, sizeof(ReveiveData), &nReadLen))
 80018e8:	01800784 	movi	r6,30
 80018ec:	e17fce44 	addi	r5,fp,-199
 80018f0:	e13fbe04 	addi	r4,fp,-264
 80018f4:	e0ffc004 	addi	r3,fp,-256
 80018f8:	e0bfc204 	addi	r2,fp,-248
 80018fc:	d8800015 	stw	r2,0(sp)
 8001900:	00800084 	movi	r2,2
 8001904:	e0bfe015 	stw	r2,-128(fp)
 8001908:	300f883a 	mov	r7,r6
 800190c:	280d883a 	mov	r6,r5
 8001910:	200b883a 	mov	r5,r4
 8001914:	1809883a 	mov	r4,r3
 8001918:	80003500 	call	8000350 <_ZN5CHC0511MessageReadER5CUartPciPi>
 800191c:	10803fcc 	andi	r2,r2,255
 8001920:	103ff126 	beq	r2,zero,80018e8 <__alt_data_end+0xf80018e8>
		{
			  ReveiveData[nReadLen] = 0;
 8001924:	e0bfc217 	ldw	r2,-248(fp)
 8001928:	e0ffce44 	addi	r3,fp,-199
 800192c:	1885883a 	add	r2,r3,r2
 8001930:	10000005 	stb	zero,0(r2)
		      printf("RX<--%s\n",ReveiveData);
 8001934:	e0bfce44 	addi	r2,fp,-199
 8001938:	100b883a 	mov	r5,r2
 800193c:	010200b4 	movhi	r4,2050
 8001940:	213eb204 	addi	r4,r4,-1336
 8001944:	80049380 	call	8004938 <printf>
    usleep(1000000);
 	for(int i=0;i<9;i++)
 		free(szDeviceList[i]);
 	HC05.MessageSend(Uart,"Hello World!\n");

    while(1){
 8001948:	003fe706 	br	80018e8 <__alt_data_end+0xf80018e8>
 800194c:	e0bfed15 	stw	r2,-76(fp)
 	for(int i=0;i<9;i++)
 		szDeviceList[i] = (char *)malloc(35*sizeof(char));

 	printf("HC-05 Master Demo\r\n");
 	SetConfig(true);
  	HC05.SetupSend(Uart,"AT+INIT\r\n");
 8001950:	e0bfbc04 	addi	r2,fp,-272
 8001954:	e03fe015 	stw	zero,-128(fp)
 8001958:	1009883a 	mov	r4,r2
 800195c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001960:	e0bfed17 	ldw	r2,-76(fp)
 8001964:	e0bfec15 	stw	r2,-80(fp)
 8001968:	00004106 	br	8001a70 <main+0x740>
 800196c:	e0bfee15 	stw	r2,-72(fp)
  	usleep(1000000);
    HC05.SetupSend(Uart,"AT+UART=115200,0,0\r\n");
 8001970:	e0bfba04 	addi	r2,fp,-280
 8001974:	e03fe015 	stw	zero,-128(fp)
 8001978:	1009883a 	mov	r4,r2
 800197c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001980:	e0ffee17 	ldw	r3,-72(fp)
 8001984:	e0ffec15 	stw	r3,-80(fp)
 8001988:	00003906 	br	8001a70 <main+0x740>
 800198c:	e0bfef15 	stw	r2,-68(fp)
    usleep(1000000);
    HC05.SetupSend(Uart,"AT+ROLE=1\r\n");
 8001990:	e0bfb804 	addi	r2,fp,-288
 8001994:	e03fe015 	stw	zero,-128(fp)
 8001998:	1009883a 	mov	r4,r2
 800199c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 80019a0:	e13fef17 	ldw	r4,-68(fp)
 80019a4:	e13fec15 	stw	r4,-80(fp)
 80019a8:	00003106 	br	8001a70 <main+0x740>
 80019ac:	e0bff015 	stw	r2,-64(fp)
    usleep(1000000);
  	HC05.SetInquireDevice(Uart,1,9,48);
 80019b0:	e0bfb604 	addi	r2,fp,-296
 80019b4:	e03fe015 	stw	zero,-128(fp)
 80019b8:	1009883a 	mov	r4,r2
 80019bc:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 80019c0:	e0bff017 	ldw	r2,-64(fp)
 80019c4:	e0bfec15 	stw	r2,-80(fp)
 80019c8:	00002906 	br	8001a70 <main+0x740>
 80019cc:	e0bff115 	stw	r2,-60(fp)
  	usleep(1000000);
    HC05.DeviceList(Uart,"AT+INQ\r\n",szDeviceList);
 80019d0:	e0bfb404 	addi	r2,fp,-304
 80019d4:	e03fe015 	stw	zero,-128(fp)
 80019d8:	1009883a 	mov	r4,r2
 80019dc:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 80019e0:	e0fff117 	ldw	r3,-60(fp)
 80019e4:	e0ffec15 	stw	r3,-80(fp)
 80019e8:	00002106 	br	8001a70 <main+0x740>
 80019ec:	e0bff215 	stw	r2,-56(fp)
      if(!strcmp(szDeviceList[i],"\0")){
       continue;
      }else{
    	printf("Device[%d]:%s\n",i,szDeviceList[i]);
        sprintf(szData,"AT+RNAME?%s\r\n",szDeviceList[i]);
        HC05.GetNameList(Uart,szData);
 80019f0:	e0bfb204 	addi	r2,fp,-312
 80019f4:	e03fe015 	stw	zero,-128(fp)
 80019f8:	1009883a 	mov	r4,r2
 80019fc:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001a00:	e13ff217 	ldw	r4,-56(fp)
 8001a04:	e13fec15 	stw	r4,-80(fp)
 8001a08:	00001906 	br	8001a70 <main+0x740>
 8001a0c:	e0bff315 	stw	r2,-52(fp)

    printf("Please input a number to select the desired device.\n");
    printf("For example, input 0 to select first device.\n");
    nChoice = query_users();
    sprintf(szData,"AT+PAIR=%s,%d\r\n",szDeviceList[nChoice],30);
    HC05.SetupSend(Uart,szData);
 8001a10:	e0bfb004 	addi	r2,fp,-320
 8001a14:	e03fe015 	stw	zero,-128(fp)
 8001a18:	1009883a 	mov	r4,r2
 8001a1c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001a20:	e0bff317 	ldw	r2,-52(fp)
 8001a24:	e0bfec15 	stw	r2,-80(fp)
 8001a28:	00001106 	br	8001a70 <main+0x740>
 8001a2c:	e0bff415 	stw	r2,-48(fp)

    usleep(1000000);
    sprintf(szData,"AT+BIND=%s\r\n",szDeviceList[nChoice]);
    HC05.SetupSend(Uart,szData);
 8001a30:	e0bfae04 	addi	r2,fp,-328
 8001a34:	e03fe015 	stw	zero,-128(fp)
 8001a38:	1009883a 	mov	r4,r2
 8001a3c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001a40:	e0fff417 	ldw	r3,-48(fp)
 8001a44:	e0ffec15 	stw	r3,-80(fp)
 8001a48:	00000906 	br	8001a70 <main+0x740>
 8001a4c:	e0bff515 	stw	r2,-44(fp)
    SetConfig(false);
    usleep(1000000);
 	for(int i=0;i<9;i++)
 		free(szDeviceList[i]);
 	HC05.MessageSend(Uart,"Hello World!\n");
 8001a50:	e0bfac04 	addi	r2,fp,-336
 8001a54:	e03fe015 	stw	zero,-128(fp)
 8001a58:	1009883a 	mov	r4,r2
 8001a5c:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001a60:	e13ff517 	ldw	r4,-44(fp)
 8001a64:	e13fec15 	stw	r4,-80(fp)
 8001a68:	00000106 	br	8001a70 <main+0x740>
 8001a6c:	e0bfec15 	stw	r2,-80(fp)

int main()
{
	CUart Uart;
 	Uart.Open(HC_05_UART_NAME);
 	CHC05 HC05;
 8001a70:	e0bfc004 	addi	r2,fp,-256
 8001a74:	e03fe015 	stw	zero,-128(fp)
 8001a78:	1009883a 	mov	r4,r2
 8001a7c:	80002d00 	call	80002d0 <_ZN5CHC05D1Ev>
 8001a80:	e0bfec17 	ldw	r2,-80(fp)
 8001a84:	e0bff615 	stw	r2,-40(fp)
 8001a88:	00001906 	br	8001af0 <main+0x7c0>
 8001a8c:	e7005804 	addi	fp,fp,352
 8001a90:	e0bfe117 	ldw	r2,-124(fp)
 8001a94:	e0ffe017 	ldw	r3,-128(fp)
 8001a98:	18c002e8 	cmpgeui	r3,r3,11
 8001a9c:	1800121e 	bne	r3,zero,8001ae8 <main+0x7b8>
 8001aa0:	e0ffe017 	ldw	r3,-128(fp)
 8001aa4:	180890ba 	slli	r4,r3,2
 8001aa8:	00c20034 	movhi	r3,2048
 8001aac:	18c6af04 	addi	r3,r3,6844
 8001ab0:	20c7883a 	add	r3,r4,r3
 8001ab4:	18c00017 	ldw	r3,0(r3)
 8001ab8:	1800683a 	jmp	r3
 8001abc:	08001aec 	andhi	zero,at,107
 8001ac0:	08001a6c 	andhi	zero,at,105
 8001ac4:	0800194c 	andi	zero,at,101
 8001ac8:	0800196c 	andhi	zero,at,101
 8001acc:	0800198c 	andi	zero,at,102
 8001ad0:	080019ac 	andhi	zero,at,102
 8001ad4:	080019cc 	andi	zero,at,103
 8001ad8:	080019ec 	andhi	zero,at,103
 8001adc:	08001a0c 	andi	zero,at,104
 8001ae0:	08001a2c 	andhi	zero,at,104
 8001ae4:	08001a4c 	andi	zero,at,105
 8001ae8:	003b68fa 	trap	3
 8001aec:	e0bff615 	stw	r2,-40(fp)
}


int main()
{
	CUart Uart;
 8001af0:	e0bfbe04 	addi	r2,fp,-264
 8001af4:	e03fe015 	stw	zero,-128(fp)
 8001af8:	1009883a 	mov	r4,r2
 8001afc:	8000ecc0 	call	8000ecc <_ZN5CUartD1Ev>
 8001b00:	e0fff617 	ldw	r3,-40(fp)
 8001b04:	00bfffc4 	movi	r2,-1
 8001b08:	e0bfe015 	stw	r2,-128(fp)
 8001b0c:	1809883a 	mov	r4,r3
 8001b10:	8003e780 	call	8003e78 <_Unwind_SjLj_Resume>

08001b14 <_ZdlPv>:
 8001b14:	8003fc01 	jmpi	8003fc0 <free>

08001b18 <_ZL21size_of_encoded_valueh>:
 8001b18:	deffff04 	addi	sp,sp,-4
 8001b1c:	dfc00015 	stw	ra,0(sp)
 8001b20:	20c03fcc 	andi	r3,r4,255
 8001b24:	00803fc4 	movi	r2,255
 8001b28:	18802026 	beq	r3,r2,8001bac <_ZL21size_of_encoded_valueh+0x94>
 8001b2c:	210001cc 	andi	r4,r4,7
 8001b30:	00800144 	movi	r2,5
 8001b34:	11001c36 	bltu	r2,r4,8001ba8 <_ZL21size_of_encoded_valueh+0x90>
 8001b38:	200890ba 	slli	r4,r4,2
 8001b3c:	00820034 	movhi	r2,2048
 8001b40:	1086d404 	addi	r2,r2,6992
 8001b44:	2089883a 	add	r4,r4,r2
 8001b48:	20800017 	ldw	r2,0(r4)
 8001b4c:	1000683a 	jmp	r2
 8001b50:	08001b68 	cmpgeui	zero,at,109
 8001b54:	08001ba8 	cmpgeui	zero,at,110
 8001b58:	08001b78 	rdprs	zero,at,109
 8001b5c:	08001b68 	cmpgeui	zero,at,109
 8001b60:	08001b98 	cmpnei	zero,at,110
 8001b64:	08001b88 	cmpgei	zero,at,110
 8001b68:	00800104 	movi	r2,4
 8001b6c:	dfc00017 	ldw	ra,0(sp)
 8001b70:	dec00104 	addi	sp,sp,4
 8001b74:	f800283a 	ret
 8001b78:	00800084 	movi	r2,2
 8001b7c:	dfc00017 	ldw	ra,0(sp)
 8001b80:	dec00104 	addi	sp,sp,4
 8001b84:	f800283a 	ret
 8001b88:	00800044 	movi	r2,1
 8001b8c:	dfc00017 	ldw	ra,0(sp)
 8001b90:	dec00104 	addi	sp,sp,4
 8001b94:	f800283a 	ret
 8001b98:	00800204 	movi	r2,8
 8001b9c:	dfc00017 	ldw	ra,0(sp)
 8001ba0:	dec00104 	addi	sp,sp,4
 8001ba4:	f800283a 	ret
 8001ba8:	8003f940 	call	8003f94 <abort>
 8001bac:	0005883a 	mov	r2,zero
 8001bb0:	dfc00017 	ldw	ra,0(sp)
 8001bb4:	dec00104 	addi	sp,sp,4
 8001bb8:	f800283a 	ret

08001bbc <_ZL28read_encoded_value_with_basehjPKhPj>:
 8001bbc:	deffff04 	addi	sp,sp,-4
 8001bc0:	dfc00015 	stw	ra,0(sp)
 8001bc4:	20c03fcc 	andi	r3,r4,255
 8001bc8:	00801404 	movi	r2,80
 8001bcc:	18807326 	beq	r3,r2,8001d9c <_ZL28read_encoded_value_with_basehjPKhPj+0x1e0>
 8001bd0:	20c003cc 	andi	r3,r4,15
 8001bd4:	00800304 	movi	r2,12
 8001bd8:	10c06f36 	bltu	r2,r3,8001d98 <_ZL28read_encoded_value_with_basehjPKhPj+0x1dc>
 8001bdc:	180690ba 	slli	r3,r3,2
 8001be0:	02020034 	movhi	r8,2048
 8001be4:	4206fd04 	addi	r8,r8,7156
 8001be8:	1a07883a 	add	r3,r3,r8
 8001bec:	18800017 	ldw	r2,0(r3)
 8001bf0:	1000683a 	jmp	r2
 8001bf4:	08001c28 	cmpgeui	zero,at,112
 8001bf8:	08001d44 	addi	zero,at,117
 8001bfc:	08001d80 	call	8001d8 <__alt_mem_sdram-0x77ffe28>
 8001c00:	08001c28 	cmpgeui	zero,at,112
 8001c04:	08001c8c 	andi	zero,at,114
 8001c08:	08001ce0 	cmpeqi	zero,at,115
 8001c0c:	08001d98 	cmpnei	zero,at,118
 8001c10:	08001d98 	cmpnei	zero,at,118
 8001c14:	08001d98 	cmpnei	zero,at,118
 8001c18:	08001cec 	andhi	zero,at,115
 8001c1c:	08001cbc 	xorhi	zero,at,114
 8001c20:	08001c28 	cmpgeui	zero,at,112
 8001c24:	08001c8c 	andi	zero,at,114
 8001c28:	30800043 	ldbu	r2,1(r6)
 8001c2c:	30c00083 	ldbu	r3,2(r6)
 8001c30:	324000c3 	ldbu	r9,3(r6)
 8001c34:	32000003 	ldbu	r8,0(r6)
 8001c38:	1004923a 	slli	r2,r2,8
 8001c3c:	1806943a 	slli	r3,r3,16
 8001c40:	4812963a 	slli	r9,r9,24
 8001c44:	1204b03a 	or	r2,r2,r8
 8001c48:	1884b03a 	or	r2,r3,r2
 8001c4c:	4886b03a 	or	r3,r9,r2
 8001c50:	30800104 	addi	r2,r6,4
 8001c54:	18000926 	beq	r3,zero,8001c7c <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
 8001c58:	22001c0c 	andi	r8,r4,112
 8001c5c:	02400404 	movi	r9,16
 8001c60:	42405726 	beq	r8,r9,8001dc0 <_ZL28read_encoded_value_with_basehjPKhPj+0x204>
 8001c64:	21003fcc 	andi	r4,r4,255
 8001c68:	2100201c 	xori	r4,r4,128
 8001c6c:	213fe004 	addi	r4,r4,-128
 8001c70:	1947883a 	add	r3,r3,r5
 8001c74:	2000010e 	bge	r4,zero,8001c7c <_ZL28read_encoded_value_with_basehjPKhPj+0xc0>
 8001c78:	18c00017 	ldw	r3,0(r3)
 8001c7c:	38c00015 	stw	r3,0(r7)
 8001c80:	dfc00017 	ldw	ra,0(sp)
 8001c84:	dec00104 	addi	sp,sp,4
 8001c88:	f800283a 	ret
 8001c8c:	30800043 	ldbu	r2,1(r6)
 8001c90:	30c00083 	ldbu	r3,2(r6)
 8001c94:	324000c3 	ldbu	r9,3(r6)
 8001c98:	32000003 	ldbu	r8,0(r6)
 8001c9c:	1004923a 	slli	r2,r2,8
 8001ca0:	1806943a 	slli	r3,r3,16
 8001ca4:	4812963a 	slli	r9,r9,24
 8001ca8:	1204b03a 	or	r2,r2,r8
 8001cac:	1884b03a 	or	r2,r3,r2
 8001cb0:	4886b03a 	or	r3,r9,r2
 8001cb4:	30800204 	addi	r2,r6,8
 8001cb8:	003fe606 	br	8001c54 <__alt_data_end+0xf8001c54>
 8001cbc:	30c00043 	ldbu	r3,1(r6)
 8001cc0:	32000003 	ldbu	r8,0(r6)
 8001cc4:	30800084 	addi	r2,r6,2
 8001cc8:	1806923a 	slli	r3,r3,8
 8001ccc:	1a06b03a 	or	r3,r3,r8
 8001cd0:	18ffffcc 	andi	r3,r3,65535
 8001cd4:	18e0001c 	xori	r3,r3,32768
 8001cd8:	18e00004 	addi	r3,r3,-32768
 8001cdc:	003fdd06 	br	8001c54 <__alt_data_end+0xf8001c54>
 8001ce0:	30c00003 	ldbu	r3,0(r6)
 8001ce4:	30800044 	addi	r2,r6,1
 8001ce8:	003fda06 	br	8001c54 <__alt_data_end+0xf8001c54>
 8001cec:	3017883a 	mov	r11,r6
 8001cf0:	0007883a 	mov	r3,zero
 8001cf4:	0013883a 	mov	r9,zero
 8001cf8:	5a800003 	ldbu	r10,0(r11)
 8001cfc:	58800044 	addi	r2,r11,1
 8001d00:	1017883a 	mov	r11,r2
 8001d04:	52001fcc 	andi	r8,r10,127
 8001d08:	4250983a 	sll	r8,r8,r9
 8001d0c:	53003fcc 	andi	r12,r10,255
 8001d10:	6300201c 	xori	r12,r12,128
 8001d14:	633fe004 	addi	r12,r12,-128
 8001d18:	1a06b03a 	or	r3,r3,r8
 8001d1c:	4a4001c4 	addi	r9,r9,7
 8001d20:	603ff516 	blt	r12,zero,8001cf8 <__alt_data_end+0xf8001cf8>
 8001d24:	020007c4 	movi	r8,31
 8001d28:	427fca36 	bltu	r8,r9,8001c54 <__alt_data_end+0xf8001c54>
 8001d2c:	5280100c 	andi	r10,r10,64
 8001d30:	503fc826 	beq	r10,zero,8001c54 <__alt_data_end+0xf8001c54>
 8001d34:	023fffc4 	movi	r8,-1
 8001d38:	4252983a 	sll	r9,r8,r9
 8001d3c:	1a46b03a 	or	r3,r3,r9
 8001d40:	003fc506 	br	8001c58 <__alt_data_end+0xf8001c58>
 8001d44:	3017883a 	mov	r11,r6
 8001d48:	0007883a 	mov	r3,zero
 8001d4c:	0015883a 	mov	r10,zero
 8001d50:	5a000003 	ldbu	r8,0(r11)
 8001d54:	58800044 	addi	r2,r11,1
 8001d58:	1017883a 	mov	r11,r2
 8001d5c:	42401fcc 	andi	r9,r8,127
 8001d60:	4a92983a 	sll	r9,r9,r10
 8001d64:	42003fcc 	andi	r8,r8,255
 8001d68:	4200201c 	xori	r8,r8,128
 8001d6c:	423fe004 	addi	r8,r8,-128
 8001d70:	1a46b03a 	or	r3,r3,r9
 8001d74:	528001c4 	addi	r10,r10,7
 8001d78:	403ff516 	blt	r8,zero,8001d50 <__alt_data_end+0xf8001d50>
 8001d7c:	003fb506 	br	8001c54 <__alt_data_end+0xf8001c54>
 8001d80:	30c00043 	ldbu	r3,1(r6)
 8001d84:	32000003 	ldbu	r8,0(r6)
 8001d88:	30800084 	addi	r2,r6,2
 8001d8c:	1806923a 	slli	r3,r3,8
 8001d90:	1a06b03a 	or	r3,r3,r8
 8001d94:	003faf06 	br	8001c54 <__alt_data_end+0xf8001c54>
 8001d98:	8003f940 	call	8003f94 <abort>
 8001d9c:	308000c4 	addi	r2,r6,3
 8001da0:	00ffff04 	movi	r3,-4
 8001da4:	10c4703a 	and	r2,r2,r3
 8001da8:	10c00017 	ldw	r3,0(r2)
 8001dac:	10800104 	addi	r2,r2,4
 8001db0:	38c00015 	stw	r3,0(r7)
 8001db4:	dfc00017 	ldw	ra,0(sp)
 8001db8:	dec00104 	addi	sp,sp,4
 8001dbc:	f800283a 	ret
 8001dc0:	300b883a 	mov	r5,r6
 8001dc4:	003fa706 	br	8001c64 <__alt_data_end+0xf8001c64>

08001dc8 <_ZL15get_ttype_entryP16lsda_header_infom>:
 8001dc8:	defffc04 	addi	sp,sp,-16
 8001dcc:	dfc00315 	stw	ra,12(sp)
 8001dd0:	dc400215 	stw	r17,8(sp)
 8001dd4:	dc000115 	stw	r16,4(sp)
 8001dd8:	2021883a 	mov	r16,r4
 8001ddc:	21000503 	ldbu	r4,20(r4)
 8001de0:	2823883a 	mov	r17,r5
 8001de4:	8001b180 	call	8001b18 <_ZL21size_of_encoded_valueh>
 8001de8:	1445383a 	mul	r2,r2,r17
 8001dec:	81800317 	ldw	r6,12(r16)
 8001df0:	81400217 	ldw	r5,8(r16)
 8001df4:	81000503 	ldbu	r4,20(r16)
 8001df8:	d80f883a 	mov	r7,sp
 8001dfc:	308dc83a 	sub	r6,r6,r2
 8001e00:	8001bbc0 	call	8001bbc <_ZL28read_encoded_value_with_basehjPKhPj>
 8001e04:	d8800017 	ldw	r2,0(sp)
 8001e08:	dfc00317 	ldw	ra,12(sp)
 8001e0c:	dc400217 	ldw	r17,8(sp)
 8001e10:	dc000117 	ldw	r16,4(sp)
 8001e14:	dec00404 	addi	sp,sp,16
 8001e18:	f800283a 	ret

08001e1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>:
 8001e1c:	deffff04 	addi	sp,sp,-4
 8001e20:	dfc00015 	stw	ra,0(sp)
 8001e24:	20c03fcc 	andi	r3,r4,255
 8001e28:	00803fc4 	movi	r2,255
 8001e2c:	18800e26 	beq	r3,r2,8001e68 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
 8001e30:	20801c0c 	andi	r2,r4,112
 8001e34:	00c00804 	movi	r3,32
 8001e38:	10c01726 	beq	r2,r3,8001e98 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x7c>
 8001e3c:	18800e2e 	bgeu	r3,r2,8001e78 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x5c>
 8001e40:	00c01004 	movi	r3,64
 8001e44:	10c01026 	beq	r2,r3,8001e88 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x6c>
 8001e48:	00c01404 	movi	r3,80
 8001e4c:	10c00626 	beq	r2,r3,8001e68 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x4c>
 8001e50:	00c00c04 	movi	r3,48
 8001e54:	10c00b1e 	bne	r2,r3,8001e84 <_ZL21base_of_encoded_valuehP15_Unwind_Context+0x68>
 8001e58:	2809883a 	mov	r4,r5
 8001e5c:	dfc00017 	ldw	ra,0(sp)
 8001e60:	dec00104 	addi	sp,sp,4
 8001e64:	8003d541 	jmpi	8003d54 <_Unwind_GetDataRelBase>
 8001e68:	0005883a 	mov	r2,zero
 8001e6c:	dfc00017 	ldw	ra,0(sp)
 8001e70:	dec00104 	addi	sp,sp,4
 8001e74:	f800283a 	ret
 8001e78:	103ffb26 	beq	r2,zero,8001e68 <__alt_data_end+0xf8001e68>
 8001e7c:	00c00404 	movi	r3,16
 8001e80:	10fff926 	beq	r2,r3,8001e68 <__alt_data_end+0xf8001e68>
 8001e84:	8003f940 	call	8003f94 <abort>
 8001e88:	2809883a 	mov	r4,r5
 8001e8c:	dfc00017 	ldw	ra,0(sp)
 8001e90:	dec00104 	addi	sp,sp,4
 8001e94:	8003d441 	jmpi	8003d44 <_Unwind_GetRegionStart>
 8001e98:	2809883a 	mov	r4,r5
 8001e9c:	dfc00017 	ldw	ra,0(sp)
 8001ea0:	dec00104 	addi	sp,sp,4
 8001ea4:	8003d5c1 	jmpi	8003d5c <_Unwind_GetTextRelBase>

08001ea8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>:
 8001ea8:	defffb04 	addi	sp,sp,-20
 8001eac:	dcc00315 	stw	r19,12(sp)
 8001eb0:	dc400115 	stw	r17,4(sp)
 8001eb4:	dc000015 	stw	r16,0(sp)
 8001eb8:	dfc00415 	stw	ra,16(sp)
 8001ebc:	dc800215 	stw	r18,8(sp)
 8001ec0:	2027883a 	mov	r19,r4
 8001ec4:	2821883a 	mov	r16,r5
 8001ec8:	3023883a 	mov	r17,r6
 8001ecc:	20003f26 	beq	r4,zero,8001fcc <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x124>
 8001ed0:	8003d440 	call	8003d44 <_Unwind_GetRegionStart>
 8001ed4:	88800015 	stw	r2,0(r17)
 8001ed8:	84800003 	ldbu	r18,0(r16)
 8001edc:	00c03fc4 	movi	r3,255
 8001ee0:	84000044 	addi	r16,r16,1
 8001ee4:	90c03726 	beq	r18,r3,8001fc4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x11c>
 8001ee8:	980b883a 	mov	r5,r19
 8001eec:	9009883a 	mov	r4,r18
 8001ef0:	8001e1c0 	call	8001e1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8001ef4:	800d883a 	mov	r6,r16
 8001ef8:	89c00104 	addi	r7,r17,4
 8001efc:	100b883a 	mov	r5,r2
 8001f00:	9009883a 	mov	r4,r18
 8001f04:	8001bbc0 	call	8001bbc <_ZL28read_encoded_value_with_basehjPKhPj>
 8001f08:	1021883a 	mov	r16,r2
 8001f0c:	80c00003 	ldbu	r3,0(r16)
 8001f10:	01003fc4 	movi	r4,255
 8001f14:	80800044 	addi	r2,r16,1
 8001f18:	88c00505 	stb	r3,20(r17)
 8001f1c:	18c03fcc 	andi	r3,r3,255
 8001f20:	19002c26 	beq	r3,r4,8001fd4 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info+0x12c>
 8001f24:	100f883a 	mov	r7,r2
 8001f28:	000d883a 	mov	r6,zero
 8001f2c:	000b883a 	mov	r5,zero
 8001f30:	38c00003 	ldbu	r3,0(r7)
 8001f34:	10800044 	addi	r2,r2,1
 8001f38:	100f883a 	mov	r7,r2
 8001f3c:	19001fcc 	andi	r4,r3,127
 8001f40:	2148983a 	sll	r4,r4,r5
 8001f44:	18c03fcc 	andi	r3,r3,255
 8001f48:	18c0201c 	xori	r3,r3,128
 8001f4c:	18ffe004 	addi	r3,r3,-128
 8001f50:	310cb03a 	or	r6,r6,r4
 8001f54:	294001c4 	addi	r5,r5,7
 8001f58:	183ff516 	blt	r3,zero,8001f30 <__alt_data_end+0xf8001f30>
 8001f5c:	118d883a 	add	r6,r2,r6
 8001f60:	89800315 	stw	r6,12(r17)
 8001f64:	10c00003 	ldbu	r3,0(r2)
 8001f68:	000d883a 	mov	r6,zero
 8001f6c:	10800044 	addi	r2,r2,1
 8001f70:	88c00545 	stb	r3,21(r17)
 8001f74:	000b883a 	mov	r5,zero
 8001f78:	10c00003 	ldbu	r3,0(r2)
 8001f7c:	10800044 	addi	r2,r2,1
 8001f80:	19001fcc 	andi	r4,r3,127
 8001f84:	2148983a 	sll	r4,r4,r5
 8001f88:	18c03fcc 	andi	r3,r3,255
 8001f8c:	18c0201c 	xori	r3,r3,128
 8001f90:	18ffe004 	addi	r3,r3,-128
 8001f94:	310cb03a 	or	r6,r6,r4
 8001f98:	294001c4 	addi	r5,r5,7
 8001f9c:	183ff616 	blt	r3,zero,8001f78 <__alt_data_end+0xf8001f78>
 8001fa0:	118d883a 	add	r6,r2,r6
 8001fa4:	89800415 	stw	r6,16(r17)
 8001fa8:	dfc00417 	ldw	ra,16(sp)
 8001fac:	dcc00317 	ldw	r19,12(sp)
 8001fb0:	dc800217 	ldw	r18,8(sp)
 8001fb4:	dc400117 	ldw	r17,4(sp)
 8001fb8:	dc000017 	ldw	r16,0(sp)
 8001fbc:	dec00504 	addi	sp,sp,20
 8001fc0:	f800283a 	ret
 8001fc4:	88800115 	stw	r2,4(r17)
 8001fc8:	003fd006 	br	8001f0c <__alt_data_end+0xf8001f0c>
 8001fcc:	0005883a 	mov	r2,zero
 8001fd0:	003fc006 	br	8001ed4 <__alt_data_end+0xf8001ed4>
 8001fd4:	88000315 	stw	zero,12(r17)
 8001fd8:	003fe206 	br	8001f64 <__alt_data_end+0xf8001f64>

08001fdc <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>:
 8001fdc:	28800017 	ldw	r2,0(r5)
 8001fe0:	30c00017 	ldw	r3,0(r6)
 8001fe4:	defffb04 	addi	sp,sp,-20
 8001fe8:	10800217 	ldw	r2,8(r2)
 8001fec:	dc400315 	stw	r17,12(sp)
 8001ff0:	dc000215 	stw	r16,8(sp)
 8001ff4:	d9400115 	stw	r5,4(sp)
 8001ff8:	dfc00415 	stw	ra,16(sp)
 8001ffc:	2021883a 	mov	r16,r4
 8002000:	d8c00015 	stw	r3,0(sp)
 8002004:	2809883a 	mov	r4,r5
 8002008:	3023883a 	mov	r17,r6
 800200c:	103ee83a 	callr	r2
 8002010:	10803fcc 	andi	r2,r2,255
 8002014:	d9400117 	ldw	r5,4(sp)
 8002018:	10000326 	beq	r2,zero,8002028 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x4c>
 800201c:	d8800017 	ldw	r2,0(sp)
 8002020:	10800017 	ldw	r2,0(r2)
 8002024:	d8800015 	stw	r2,0(sp)
 8002028:	80800017 	ldw	r2,0(r16)
 800202c:	01c00044 	movi	r7,1
 8002030:	d80d883a 	mov	r6,sp
 8002034:	10800417 	ldw	r2,16(r2)
 8002038:	8009883a 	mov	r4,r16
 800203c:	103ee83a 	callr	r2
 8002040:	10c03fcc 	andi	r3,r2,255
 8002044:	18000226 	beq	r3,zero,8002050 <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3+0x74>
 8002048:	d8c00017 	ldw	r3,0(sp)
 800204c:	88c00015 	stw	r3,0(r17)
 8002050:	dfc00417 	ldw	ra,16(sp)
 8002054:	dc400317 	ldw	r17,12(sp)
 8002058:	dc000217 	ldw	r16,8(sp)
 800205c:	dec00504 	addi	sp,sp,20
 8002060:	f800283a 	ret

08002064 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>:
 8002064:	defff604 	addi	sp,sp,-40
 8002068:	dc000415 	stw	r16,16(sp)
 800206c:	3821d23a 	srai	r16,r7,8
 8002070:	dc800615 	stw	r18,24(sp)
 8002074:	dc400515 	stw	r17,20(sp)
 8002078:	dfc00915 	stw	ra,36(sp)
 800207c:	dd000815 	stw	r20,32(sp)
 8002080:	dcc00715 	stw	r19,28(sp)
 8002084:	d9400215 	stw	r5,8(sp)
 8002088:	3825883a 	mov	r18,r7
 800208c:	2023883a 	mov	r17,r4
 8002090:	8000010e 	bge	r16,zero,8002098 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x34>
 8002094:	0421c83a 	sub	r16,zero,r16
 8002098:	000b883a 	mov	r5,zero
 800209c:	01000144 	movi	r4,5
 80020a0:	d9800315 	stw	r6,12(sp)
 80020a4:	8001e1c0 	call	8001e1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80020a8:	d9800317 	ldw	r6,12(sp)
 80020ac:	d9c00104 	addi	r7,sp,4
 80020b0:	100b883a 	mov	r5,r2
 80020b4:	01000144 	movi	r4,5
 80020b8:	8001bbc0 	call	8001bbc <_ZL28read_encoded_value_with_basehjPKhPj>
 80020bc:	11fffe64 	muli	r7,r2,-7
 80020c0:	0007883a 	mov	r3,zero
 80020c4:	11400003 	ldbu	r5,0(r2)
 80020c8:	110001e4 	muli	r4,r2,7
 80020cc:	10800044 	addi	r2,r2,1
 80020d0:	29801fcc 	andi	r6,r5,127
 80020d4:	21c9883a 	add	r4,r4,r7
 80020d8:	3108983a 	sll	r4,r6,r4
 80020dc:	29403fcc 	andi	r5,r5,255
 80020e0:	2940201c 	xori	r5,r5,128
 80020e4:	297fe004 	addi	r5,r5,-128
 80020e8:	1906b03a 	or	r3,r3,r4
 80020ec:	283ff516 	blt	r5,zero,80020c4 <__alt_data_end+0xf80020c4>
 80020f0:	10c5883a 	add	r2,r2,r3
 80020f4:	11fffe64 	muli	r7,r2,-7
 80020f8:	0009883a 	mov	r4,zero
 80020fc:	11400003 	ldbu	r5,0(r2)
 8002100:	10c001e4 	muli	r3,r2,7
 8002104:	10800044 	addi	r2,r2,1
 8002108:	29801fcc 	andi	r6,r5,127
 800210c:	19c7883a 	add	r3,r3,r7
 8002110:	30c6983a 	sll	r3,r6,r3
 8002114:	29403fcc 	andi	r5,r5,255
 8002118:	2940201c 	xori	r5,r5,128
 800211c:	297fe004 	addi	r5,r5,-128
 8002120:	20c8b03a 	or	r4,r4,r3
 8002124:	283ff516 	blt	r5,zero,80020fc <__alt_data_end+0xf80020fc>
 8002128:	80c03fcc 	andi	r3,r16,255
 800212c:	18ffffc4 	addi	r3,r3,-1
 8002130:	10c7883a 	add	r3,r2,r3
 8002134:	210000c4 	addi	r4,r4,3
 8002138:	197ffe64 	muli	r5,r3,-7
 800213c:	2085883a 	add	r2,r4,r2
 8002140:	04ffff04 	movi	r19,-4
 8002144:	14e6703a 	and	r19,r2,r19
 8002148:	0021883a 	mov	r16,zero
 800214c:	18800003 	ldbu	r2,0(r3)
 8002150:	190001e4 	muli	r4,r3,7
 8002154:	1d000044 	addi	r20,r3,1
 8002158:	10c01fcc 	andi	r3,r2,127
 800215c:	2149883a 	add	r4,r4,r5
 8002160:	1908983a 	sll	r4,r3,r4
 8002164:	10803fcc 	andi	r2,r2,255
 8002168:	1080201c 	xori	r2,r2,128
 800216c:	10bfe004 	addi	r2,r2,-128
 8002170:	a007883a 	mov	r3,r20
 8002174:	8120b03a 	or	r16,r16,r4
 8002178:	103ff416 	blt	r2,zero,800214c <__alt_data_end+0xf800214c>
 800217c:	94803fcc 	andi	r18,r18,255
 8002180:	80001f26 	beq	r16,zero,8002200 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x19c>
 8002184:	9009883a 	mov	r4,r18
 8002188:	8001b180 	call	8001b18 <_ZL21size_of_encoded_valueh>
 800218c:	81bfffc4 	addi	r6,r16,-1
 8002190:	308d383a 	mul	r6,r6,r2
 8002194:	d9400a17 	ldw	r5,40(sp)
 8002198:	d80f883a 	mov	r7,sp
 800219c:	9009883a 	mov	r4,r18
 80021a0:	34cd883a 	add	r6,r6,r19
 80021a4:	8001bbc0 	call	8001bbc <_ZL28read_encoded_value_with_basehjPKhPj>
 80021a8:	d9000017 	ldw	r4,0(sp)
 80021ac:	d9800204 	addi	r6,sp,8
 80021b0:	880b883a 	mov	r5,r17
 80021b4:	8001fdc0 	call	8001fdc <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 80021b8:	10c03fcc 	andi	r3,r2,255
 80021bc:	1800111e 	bne	r3,zero,8002204 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij+0x1a0>
 80021c0:	a17ffe64 	muli	r5,r20,-7
 80021c4:	a007883a 	mov	r3,r20
 80021c8:	0021883a 	mov	r16,zero
 80021cc:	19000003 	ldbu	r4,0(r3)
 80021d0:	18c001e4 	muli	r3,r3,7
 80021d4:	a5000044 	addi	r20,r20,1
 80021d8:	20801fcc 	andi	r2,r4,127
 80021dc:	1947883a 	add	r3,r3,r5
 80021e0:	10c4983a 	sll	r2,r2,r3
 80021e4:	21003fcc 	andi	r4,r4,255
 80021e8:	2100201c 	xori	r4,r4,128
 80021ec:	213fe004 	addi	r4,r4,-128
 80021f0:	a007883a 	mov	r3,r20
 80021f4:	80a0b03a 	or	r16,r16,r2
 80021f8:	203ff416 	blt	r4,zero,80021cc <__alt_data_end+0xf80021cc>
 80021fc:	003fe006 	br	8002180 <__alt_data_end+0xf8002180>
 8002200:	0005883a 	mov	r2,zero
 8002204:	dfc00917 	ldw	ra,36(sp)
 8002208:	dd000817 	ldw	r20,32(sp)
 800220c:	dcc00717 	ldw	r19,28(sp)
 8002210:	dc800617 	ldw	r18,24(sp)
 8002214:	dc400517 	ldw	r17,20(sp)
 8002218:	dc000417 	ldw	r16,16(sp)
 800221c:	dec00a04 	addi	sp,sp,40
 8002220:	f800283a 	ret

08002224 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>:
 8002224:	defffb04 	addi	sp,sp,-20
 8002228:	dc000115 	stw	r16,4(sp)
 800222c:	24000317 	ldw	r16,12(r4)
 8002230:	01ce303a 	nor	r7,zero,r7
 8002234:	dc800315 	stw	r18,12(sp)
 8002238:	dc400215 	stw	r17,8(sp)
 800223c:	dfc00415 	stw	ra,16(sp)
 8002240:	2023883a 	mov	r17,r4
 8002244:	2825883a 	mov	r18,r5
 8002248:	d9800015 	stw	r6,0(sp)
 800224c:	81e1883a 	add	r16,r16,r7
 8002250:	800d883a 	mov	r6,r16
 8002254:	000b883a 	mov	r5,zero
 8002258:	0009883a 	mov	r4,zero
 800225c:	30800003 	ldbu	r2,0(r6)
 8002260:	84000044 	addi	r16,r16,1
 8002264:	800d883a 	mov	r6,r16
 8002268:	10c01fcc 	andi	r3,r2,127
 800226c:	1906983a 	sll	r3,r3,r4
 8002270:	10803fcc 	andi	r2,r2,255
 8002274:	1080201c 	xori	r2,r2,128
 8002278:	10bfe004 	addi	r2,r2,-128
 800227c:	28cab03a 	or	r5,r5,r3
 8002280:	210001c4 	addi	r4,r4,7
 8002284:	103ff516 	blt	r2,zero,800225c <__alt_data_end+0xf800225c>
 8002288:	28000e26 	beq	r5,zero,80022c4 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl+0xa0>
 800228c:	8809883a 	mov	r4,r17
 8002290:	8001dc80 	call	8001dc8 <_ZL15get_ttype_entryP16lsda_header_infom>
 8002294:	d80d883a 	mov	r6,sp
 8002298:	900b883a 	mov	r5,r18
 800229c:	1009883a 	mov	r4,r2
 80022a0:	8001fdc0 	call	8001fdc <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 80022a4:	10c03fcc 	andi	r3,r2,255
 80022a8:	183fe926 	beq	r3,zero,8002250 <__alt_data_end+0xf8002250>
 80022ac:	dfc00417 	ldw	ra,16(sp)
 80022b0:	dc800317 	ldw	r18,12(sp)
 80022b4:	dc400217 	ldw	r17,8(sp)
 80022b8:	dc000117 	ldw	r16,4(sp)
 80022bc:	dec00504 	addi	sp,sp,20
 80022c0:	f800283a 	ret
 80022c4:	0005883a 	mov	r2,zero
 80022c8:	003ff806 	br	80022ac <__alt_data_end+0xf80022ac>

080022cc <__gxx_personality_sj0>:
 80022cc:	00820034 	movhi	r2,2048
 80022d0:	deffdd04 	addi	sp,sp,-140
 80022d4:	1088b304 	addi	r2,r2,8908
 80022d8:	d8800e15 	stw	r2,56(sp)
 80022dc:	008200b4 	movhi	r2,2050
 80022e0:	10be3604 	addi	r2,r2,-1832
 80022e4:	d8800f15 	stw	r2,60(sp)
 80022e8:	00820034 	movhi	r2,2048
 80022ec:	108a2904 	addi	r2,r2,10404
 80022f0:	d9001515 	stw	r4,84(sp)
 80022f4:	d9000804 	addi	r4,sp,32
 80022f8:	d8801115 	stw	r2,68(sp)
 80022fc:	dfc02215 	stw	ra,136(sp)
 8002300:	df002115 	stw	fp,132(sp)
 8002304:	dec01015 	stw	sp,64(sp)
 8002308:	dec01215 	stw	sp,72(sp)
 800230c:	d9401915 	stw	r5,100(sp)
 8002310:	d9801615 	stw	r6,88(sp)
 8002314:	d9c01715 	stw	r7,92(sp)
 8002318:	8003c7c0 	call	8003c7c <_Unwind_SjLj_Register>
 800231c:	d8c01517 	ldw	r3,84(sp)
 8002320:	d8000715 	stw	zero,28(sp)
 8002324:	d8000615 	stw	zero,24(sp)
 8002328:	00800044 	movi	r2,1
 800232c:	18800926 	beq	r3,r2,8002354 <__gxx_personality_sj0+0x88>
 8002330:	01c000c4 	movi	r7,3
 8002334:	d9c01515 	stw	r7,84(sp)
 8002338:	d9000804 	addi	r4,sp,32
 800233c:	8003c940 	call	8003c94 <_Unwind_SjLj_Unregister>
 8002340:	d8801517 	ldw	r2,84(sp)
 8002344:	dfc02217 	ldw	ra,136(sp)
 8002348:	df002117 	ldw	fp,132(sp)
 800234c:	dec02304 	addi	sp,sp,140
 8002350:	f800283a 	ret
 8002354:	d9001617 	ldw	r4,88(sp)
 8002358:	00af3574 	movhi	r2,48341
 800235c:	d9c01717 	ldw	r7,92(sp)
 8002360:	10b54004 	addi	r2,r2,-11008
 8002364:	00ee2cb4 	movhi	r3,47282
 8002368:	2085883a 	add	r2,r4,r2
 800236c:	18eaaf04 	addi	r3,r3,-21828
 8002370:	d8801b15 	stw	r2,108(sp)
 8002374:	38c7883a 	add	r3,r7,r3
 8002378:	1105803a 	cmpltu	r2,r2,r4
 800237c:	10c7883a 	add	r3,r2,r3
 8002380:	d8c01c15 	stw	r3,112(sp)
 8002384:	d8c01917 	ldw	r3,100(sp)
 8002388:	00800184 	movi	r2,6
 800238c:	18805426 	beq	r3,r2,80024e0 <__gxx_personality_sj0+0x214>
 8002390:	d9002417 	ldw	r4,144(sp)
 8002394:	00bfffc4 	movi	r2,-1
 8002398:	d8800915 	stw	r2,36(sp)
 800239c:	8003d380 	call	8003d38 <_Unwind_GetLanguageSpecificData>
 80023a0:	d8801a15 	stw	r2,104(sp)
 80023a4:	1000c926 	beq	r2,zero,80026cc <__gxx_personality_sj0+0x400>
 80023a8:	d9002417 	ldw	r4,144(sp)
 80023ac:	d80d883a 	mov	r6,sp
 80023b0:	100b883a 	mov	r5,r2
 80023b4:	8001ea80 	call	8001ea8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 80023b8:	d9402417 	ldw	r5,144(sp)
 80023bc:	d9000503 	ldbu	r4,20(sp)
 80023c0:	d8801515 	stw	r2,84(sp)
 80023c4:	8001e1c0 	call	8001e1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 80023c8:	d9002417 	ldw	r4,144(sp)
 80023cc:	d9400604 	addi	r5,sp,24
 80023d0:	d8800215 	stw	r2,8(sp)
 80023d4:	8003d080 	call	8003d08 <_Unwind_GetIPInfo>
 80023d8:	d8c00617 	ldw	r3,24(sp)
 80023dc:	18006126 	beq	r3,zero,8002564 <__gxx_personality_sj0+0x298>
 80023e0:	1000ba16 	blt	r2,zero,80026cc <__gxx_personality_sj0+0x400>
 80023e4:	10002f1e 	bne	r2,zero,80024a4 <__gxx_personality_sj0+0x1d8>
 80023e8:	d8001515 	stw	zero,84(sp)
 80023ec:	d8001f15 	stw	zero,124(sp)
 80023f0:	d8001815 	stw	zero,96(sp)
 80023f4:	00c00044 	movi	r3,1
 80023f8:	d9001917 	ldw	r4,100(sp)
 80023fc:	2080004c 	andi	r2,r4,1
 8002400:	1000b51e 	bne	r2,zero,80026d8 <__gxx_personality_sj0+0x40c>
 8002404:	d9001917 	ldw	r4,100(sp)
 8002408:	2080020c 	andi	r2,r4,8
 800240c:	1000b71e 	bne	r2,zero,80026ec <__gxx_personality_sj0+0x420>
 8002410:	d9c01c17 	ldw	r7,112(sp)
 8002414:	3800b826 	beq	r7,zero,80026f8 <__gxx_personality_sj0+0x42c>
 8002418:	00800044 	movi	r2,1
 800241c:	1880b526 	beq	r3,r2,80026f4 <__gxx_personality_sj0+0x428>
 8002420:	d9c01517 	ldw	r7,84(sp)
 8002424:	3800f516 	blt	r7,zero,80027fc <__gxx_personality_sj0+0x530>
 8002428:	d9002417 	ldw	r4,144(sp)
 800242c:	d9802317 	ldw	r6,140(sp)
 8002430:	00bfffc4 	movi	r2,-1
 8002434:	000b883a 	mov	r5,zero
 8002438:	d8800915 	stw	r2,36(sp)
 800243c:	8003cdc0 	call	8003cdc <_Unwind_SetGR>
 8002440:	d9801517 	ldw	r6,84(sp)
 8002444:	d9002417 	ldw	r4,144(sp)
 8002448:	01400044 	movi	r5,1
 800244c:	8003cdc0 	call	8003cdc <_Unwind_SetGR>
 8002450:	d9002417 	ldw	r4,144(sp)
 8002454:	d9401f17 	ldw	r5,124(sp)
 8002458:	8003d280 	call	8003d28 <_Unwind_SetIP>
 800245c:	010001c4 	movi	r4,7
 8002460:	d9001515 	stw	r4,84(sp)
 8002464:	003fb406 	br	8002338 <__alt_data_end+0xf8002338>
 8002468:	000f883a 	mov	r7,zero
 800246c:	000d883a 	mov	r6,zero
 8002470:	19000003 	ldbu	r4,0(r3)
 8002474:	18c00044 	addi	r3,r3,1
 8002478:	d8c01515 	stw	r3,84(sp)
 800247c:	21401fcc 	andi	r5,r4,127
 8002480:	298a983a 	sll	r5,r5,r6
 8002484:	21003fcc 	andi	r4,r4,255
 8002488:	2100201c 	xori	r4,r4,128
 800248c:	213fe004 	addi	r4,r4,-128
 8002490:	394eb03a 	or	r7,r7,r5
 8002494:	318001c4 	addi	r6,r6,7
 8002498:	203ff516 	blt	r4,zero,8002470 <__alt_data_end+0xf8002470>
 800249c:	10bfffc4 	addi	r2,r2,-1
 80024a0:	10003226 	beq	r2,zero,800256c <__gxx_personality_sj0+0x2a0>
 80024a4:	d9c01517 	ldw	r7,84(sp)
 80024a8:	0011883a 	mov	r8,zero
 80024ac:	000d883a 	mov	r6,zero
 80024b0:	39000003 	ldbu	r4,0(r7)
 80024b4:	38c00044 	addi	r3,r7,1
 80024b8:	180f883a 	mov	r7,r3
 80024bc:	21401fcc 	andi	r5,r4,127
 80024c0:	298a983a 	sll	r5,r5,r6
 80024c4:	21003fcc 	andi	r4,r4,255
 80024c8:	2100201c 	xori	r4,r4,128
 80024cc:	213fe004 	addi	r4,r4,-128
 80024d0:	4150b03a 	or	r8,r8,r5
 80024d4:	318001c4 	addi	r6,r6,7
 80024d8:	203ff516 	blt	r4,zero,80024b0 <__alt_data_end+0xf80024b0>
 80024dc:	003fe206 	br	8002468 <__alt_data_end+0xf8002468>
 80024e0:	d9001c17 	ldw	r4,112(sp)
 80024e4:	203faa1e 	bne	r4,zero,8002390 <__alt_data_end+0xf8002390>
 80024e8:	d9c01517 	ldw	r7,84(sp)
 80024ec:	d8801b17 	ldw	r2,108(sp)
 80024f0:	38bfa736 	bltu	r7,r2,8002390 <__alt_data_end+0xf8002390>
 80024f4:	d8c02317 	ldw	r3,140(sp)
 80024f8:	18fffe17 	ldw	r3,-8(r3)
 80024fc:	d8c01f15 	stw	r3,124(sp)
 8002500:	18008226 	beq	r3,zero,800270c <__gxx_personality_sj0+0x440>
 8002504:	d9002317 	ldw	r4,140(sp)
 8002508:	d9c02317 	ldw	r7,140(sp)
 800250c:	213ffb17 	ldw	r4,-20(r4)
 8002510:	39fffd17 	ldw	r7,-12(r7)
 8002514:	d9001515 	stw	r4,84(sp)
 8002518:	d9c01a15 	stw	r7,104(sp)
 800251c:	d8801517 	ldw	r2,84(sp)
 8002520:	103fc10e 	bge	r2,zero,8002428 <__alt_data_end+0xf8002428>
 8002524:	d9002417 	ldw	r4,144(sp)
 8002528:	d9401a17 	ldw	r5,104(sp)
 800252c:	d80d883a 	mov	r6,sp
 8002530:	00bfffc4 	movi	r2,-1
 8002534:	d8800915 	stw	r2,36(sp)
 8002538:	8001ea80 	call	8001ea8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 800253c:	d9402417 	ldw	r5,144(sp)
 8002540:	d9000503 	ldbu	r4,20(sp)
 8002544:	8001e1c0 	call	8001e1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8002548:	d9000503 	ldbu	r4,20(sp)
 800254c:	d9402417 	ldw	r5,144(sp)
 8002550:	d8800215 	stw	r2,8(sp)
 8002554:	8001e1c0 	call	8001e1c <_ZL21base_of_encoded_valuehP15_Unwind_Context>
 8002558:	d8c02317 	ldw	r3,140(sp)
 800255c:	18bffe15 	stw	r2,-8(r3)
 8002560:	003fb106 	br	8002428 <__alt_data_end+0xf8002428>
 8002564:	10bfffc4 	addi	r2,r2,-1
 8002568:	003f9d06 	br	80023e0 <__alt_data_end+0xf80023e0>
 800256c:	42000044 	addi	r8,r8,1
 8002570:	da001f15 	stw	r8,124(sp)
 8002574:	38005326 	beq	r7,zero,80026c4 <__gxx_personality_sj0+0x3f8>
 8002578:	d8800417 	ldw	r2,16(sp)
 800257c:	39ffffc4 	addi	r7,r7,-1
 8002580:	11c5883a 	add	r2,r2,r7
 8002584:	d8801815 	stw	r2,96(sp)
 8002588:	40005026 	beq	r8,zero,80026cc <__gxx_personality_sj0+0x400>
 800258c:	10007426 	beq	r2,zero,8002760 <__gxx_personality_sj0+0x494>
 8002590:	d8801917 	ldw	r2,100(sp)
 8002594:	1080020c 	andi	r2,r2,8
 8002598:	d8802015 	stw	r2,128(sp)
 800259c:	1000a21e 	bne	r2,zero,8002828 <__gxx_personality_sj0+0x55c>
 80025a0:	d8c01c17 	ldw	r3,112(sp)
 80025a4:	1800b026 	beq	r3,zero,8002868 <__gxx_personality_sj0+0x59c>
 80025a8:	01c200b4 	movhi	r7,2050
 80025ac:	39c80a04 	addi	r7,r7,8232
 80025b0:	d9c01e15 	stw	r7,120(sp)
 80025b4:	d8001d05 	stb	zero,116(sp)
 80025b8:	d8c01817 	ldw	r3,96(sp)
 80025bc:	d8001515 	stw	zero,84(sp)
 80025c0:	0009883a 	mov	r4,zero
 80025c4:	19400003 	ldbu	r5,0(r3)
 80025c8:	18800044 	addi	r2,r3,1
 80025cc:	d9c01517 	ldw	r7,84(sp)
 80025d0:	28c01fcc 	andi	r3,r5,127
 80025d4:	1906983a 	sll	r3,r3,r4
 80025d8:	29803fcc 	andi	r6,r5,255
 80025dc:	3180201c 	xori	r6,r6,128
 80025e0:	38ceb03a 	or	r7,r7,r3
 80025e4:	d8801715 	stw	r2,92(sp)
 80025e8:	31bfe004 	addi	r6,r6,-128
 80025ec:	d9c01515 	stw	r7,84(sp)
 80025f0:	210001c4 	addi	r4,r4,7
 80025f4:	1007883a 	mov	r3,r2
 80025f8:	303ff216 	blt	r6,zero,80025c4 <__alt_data_end+0xf80025c4>
 80025fc:	00c007c4 	movi	r3,31
 8002600:	19000836 	bltu	r3,r4,8002624 <__gxx_personality_sj0+0x358>
 8002604:	2940100c 	andi	r5,r5,64
 8002608:	28000626 	beq	r5,zero,8002624 <__gxx_personality_sj0+0x358>
 800260c:	01c00044 	movi	r7,1
 8002610:	3908983a 	sll	r4,r7,r4
 8002614:	d8c01517 	ldw	r3,84(sp)
 8002618:	0109c83a 	sub	r4,zero,r4
 800261c:	1906b03a 	or	r3,r3,r4
 8002620:	d8c01515 	stw	r3,84(sp)
 8002624:	d8001615 	stw	zero,88(sp)
 8002628:	0009883a 	mov	r4,zero
 800262c:	11400003 	ldbu	r5,0(r2)
 8002630:	d9c01617 	ldw	r7,88(sp)
 8002634:	10800044 	addi	r2,r2,1
 8002638:	28c01fcc 	andi	r3,r5,127
 800263c:	1906983a 	sll	r3,r3,r4
 8002640:	29803fcc 	andi	r6,r5,255
 8002644:	3180201c 	xori	r6,r6,128
 8002648:	38ceb03a 	or	r7,r7,r3
 800264c:	31bfe004 	addi	r6,r6,-128
 8002650:	d9c01615 	stw	r7,88(sp)
 8002654:	210001c4 	addi	r4,r4,7
 8002658:	303ff416 	blt	r6,zero,800262c <__alt_data_end+0xf800262c>
 800265c:	008007c4 	movi	r2,31
 8002660:	11000736 	bltu	r2,r4,8002680 <__gxx_personality_sj0+0x3b4>
 8002664:	2940100c 	andi	r5,r5,64
 8002668:	28000526 	beq	r5,zero,8002680 <__gxx_personality_sj0+0x3b4>
 800266c:	00c00044 	movi	r3,1
 8002670:	1908983a 	sll	r4,r3,r4
 8002674:	0109c83a 	sub	r4,zero,r4
 8002678:	390eb03a 	or	r7,r7,r4
 800267c:	d9c01615 	stw	r7,88(sp)
 8002680:	d9001517 	ldw	r4,84(sp)
 8002684:	20003c26 	beq	r4,zero,8002778 <__gxx_personality_sj0+0x4ac>
 8002688:	01003e0e 	bge	zero,r4,8002784 <__gxx_personality_sj0+0x4b8>
 800268c:	01ffffc4 	movi	r7,-1
 8002690:	200b883a 	mov	r5,r4
 8002694:	d809883a 	mov	r4,sp
 8002698:	d9c00915 	stw	r7,36(sp)
 800269c:	8001dc80 	call	8001dc8 <_ZL15get_ttype_entryP16lsda_header_infom>
 80026a0:	10005f26 	beq	r2,zero,8002820 <__gxx_personality_sj0+0x554>
 80026a4:	d8c01e17 	ldw	r3,120(sp)
 80026a8:	1800571e 	bne	r3,zero,8002808 <__gxx_personality_sj0+0x53c>
 80026ac:	d9001617 	ldw	r4,88(sp)
 80026b0:	20002926 	beq	r4,zero,8002758 <__gxx_personality_sj0+0x48c>
 80026b4:	d9c01717 	ldw	r7,92(sp)
 80026b8:	390f883a 	add	r7,r7,r4
 80026bc:	d9c01815 	stw	r7,96(sp)
 80026c0:	003fbd06 	br	80025b8 <__alt_data_end+0xf80025b8>
 80026c4:	d8c01f17 	ldw	r3,124(sp)
 80026c8:	1800251e 	bne	r3,zero,8002760 <__gxx_personality_sj0+0x494>
 80026cc:	01000204 	movi	r4,8
 80026d0:	d9001515 	stw	r4,84(sp)
 80026d4:	003f1806 	br	8002338 <__alt_data_end+0xf8002338>
 80026d8:	d8801c17 	ldw	r2,112(sp)
 80026dc:	10000d26 	beq	r2,zero,8002714 <__gxx_personality_sj0+0x448>
 80026e0:	00800184 	movi	r2,6
 80026e4:	d8801515 	stw	r2,84(sp)
 80026e8:	003f1306 	br	8002338 <__alt_data_end+0xf8002338>
 80026ec:	00800044 	movi	r2,1
 80026f0:	18bf4d1e 	bne	r3,r2,8002428 <__alt_data_end+0xf8002428>
 80026f4:	8002d4c0 	call	8002d4c <_ZSt9terminatev>
 80026f8:	d9001b17 	ldw	r4,108(sp)
 80026fc:	00800044 	movi	r2,1
 8002700:	113f4536 	bltu	r2,r4,8002418 <__alt_data_end+0xf8002418>
 8002704:	00800044 	movi	r2,1
 8002708:	18bf841e 	bne	r3,r2,800251c <__alt_data_end+0xf800251c>
 800270c:	d9002317 	ldw	r4,140(sp)
 8002710:	80035080 	call	8003508 <__cxa_call_terminate>
 8002714:	d8c01b17 	ldw	r3,108(sp)
 8002718:	00800044 	movi	r2,1
 800271c:	10fff036 	bltu	r2,r3,80026e0 <__alt_data_end+0xf80026e0>
 8002720:	d9002317 	ldw	r4,140(sp)
 8002724:	d8801817 	ldw	r2,96(sp)
 8002728:	d9c01517 	ldw	r7,84(sp)
 800272c:	d8c01a17 	ldw	r3,104(sp)
 8002730:	20bffc15 	stw	r2,-16(r4)
 8002734:	d8800717 	ldw	r2,28(sp)
 8002738:	21fffb15 	stw	r7,-20(r4)
 800273c:	d9c01f17 	ldw	r7,124(sp)
 8002740:	20bfff15 	stw	r2,-4(r4)
 8002744:	00800184 	movi	r2,6
 8002748:	20fffd15 	stw	r3,-12(r4)
 800274c:	21fffe15 	stw	r7,-8(r4)
 8002750:	d8801515 	stw	r2,84(sp)
 8002754:	003ef806 	br	8002338 <__alt_data_end+0xf8002338>
 8002758:	d8801d03 	ldbu	r2,116(sp)
 800275c:	103fdb26 	beq	r2,zero,80026cc <__alt_data_end+0xf80026cc>
 8002760:	d8c01917 	ldw	r3,100(sp)
 8002764:	1880004c 	andi	r2,r3,1
 8002768:	103fd81e 	bne	r2,zero,80026cc <__alt_data_end+0xf80026cc>
 800276c:	d8001515 	stw	zero,84(sp)
 8002770:	00c00084 	movi	r3,2
 8002774:	003f2306 	br	8002404 <__alt_data_end+0xf8002404>
 8002778:	00c00044 	movi	r3,1
 800277c:	d8c01d05 	stb	r3,116(sp)
 8002780:	003fca06 	br	80026ac <__alt_data_end+0xf80026ac>
 8002784:	d9001e17 	ldw	r4,120(sp)
 8002788:	20000426 	beq	r4,zero,800279c <__gxx_personality_sj0+0x4d0>
 800278c:	d9c02017 	ldw	r7,128(sp)
 8002790:	3800021e 	bne	r7,zero,800279c <__gxx_personality_sj0+0x4d0>
 8002794:	d8801c17 	ldw	r2,112(sp)
 8002798:	10002726 	beq	r2,zero,8002838 <__gxx_personality_sj0+0x56c>
 800279c:	d8801517 	ldw	r2,84(sp)
 80027a0:	000d883a 	mov	r6,zero
 80027a4:	000b883a 	mov	r5,zero
 80027a8:	0088303a 	nor	r4,zero,r2
 80027ac:	d8800317 	ldw	r2,12(sp)
 80027b0:	1109883a 	add	r4,r2,r4
 80027b4:	20800003 	ldbu	r2,0(r4)
 80027b8:	21000044 	addi	r4,r4,1
 80027bc:	10c01fcc 	andi	r3,r2,127
 80027c0:	1946983a 	sll	r3,r3,r5
 80027c4:	10803fcc 	andi	r2,r2,255
 80027c8:	1080201c 	xori	r2,r2,128
 80027cc:	10bfe004 	addi	r2,r2,-128
 80027d0:	30ccb03a 	or	r6,r6,r3
 80027d4:	294001c4 	addi	r5,r5,7
 80027d8:	103ff616 	blt	r2,zero,80027b4 <__alt_data_end+0xf80027b4>
 80027dc:	3005003a 	cmpeq	r2,r6,zero
 80027e0:	10803fcc 	andi	r2,r2,255
 80027e4:	103fb126 	beq	r2,zero,80026ac <__alt_data_end+0xf80026ac>
 80027e8:	d9c01917 	ldw	r7,100(sp)
 80027ec:	3880004c 	andi	r2,r7,1
 80027f0:	103fb91e 	bne	r2,zero,80026d8 <__alt_data_end+0xf80026d8>
 80027f4:	d8802017 	ldw	r2,128(sp)
 80027f8:	10002d26 	beq	r2,zero,80028b0 <__gxx_personality_sj0+0x5e4>
 80027fc:	00800044 	movi	r2,1
 8002800:	d8800915 	stw	r2,36(sp)
 8002804:	8002d740 	call	8002d74 <_ZSt10unexpectedv>
 8002808:	d9800704 	addi	r6,sp,28
 800280c:	180b883a 	mov	r5,r3
 8002810:	1009883a 	mov	r4,r2
 8002814:	8001fdc0 	call	8001fdc <_ZL16get_adjusted_ptrPKSt9type_infoS1_PPv.constprop.3>
 8002818:	10803fcc 	andi	r2,r2,255
 800281c:	103fa326 	beq	r2,zero,80026ac <__alt_data_end+0xf80026ac>
 8002820:	00c000c4 	movi	r3,3
 8002824:	003ef406 	br	80023f8 <__alt_data_end+0xf80023f8>
 8002828:	010200b4 	movhi	r4,2050
 800282c:	21080804 	addi	r4,r4,8224
 8002830:	d9001e15 	stw	r4,120(sp)
 8002834:	003f5f06 	br	80025b4 <__alt_data_end+0xf80025b4>
 8002838:	d9001b17 	ldw	r4,108(sp)
 800283c:	00c00044 	movi	r3,1
 8002840:	193fd636 	bltu	r3,r4,800279c <__alt_data_end+0xf800279c>
 8002844:	01ffffc4 	movi	r7,-1
 8002848:	d9c00915 	stw	r7,36(sp)
 800284c:	d9800717 	ldw	r6,28(sp)
 8002850:	d9c01517 	ldw	r7,84(sp)
 8002854:	d9401e17 	ldw	r5,120(sp)
 8002858:	d809883a 	mov	r4,sp
 800285c:	80022240 	call	8002224 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8002860:	1080005c 	xori	r2,r2,1
 8002864:	003fde06 	br	80027e0 <__alt_data_end+0xf80027e0>
 8002868:	d9001b17 	ldw	r4,108(sp)
 800286c:	00800044 	movi	r2,1
 8002870:	113f4d36 	bltu	r2,r4,80025a8 <__alt_data_end+0xf80025a8>
 8002874:	d9c02317 	ldw	r7,140(sp)
 8002878:	38800017 	ldw	r2,0(r7)
 800287c:	1080004c 	andi	r2,r2,1
 8002880:	1000061e 	bne	r2,zero,800289c <__gxx_personality_sj0+0x5d0>
 8002884:	d8c02317 	ldw	r3,140(sp)
 8002888:	18800504 	addi	r2,r3,20
 800288c:	d8800715 	stw	r2,28(sp)
 8002890:	10bff017 	ldw	r2,-64(r2)
 8002894:	d8801e15 	stw	r2,120(sp)
 8002898:	003f4606 	br	80025b4 <__alt_data_end+0xf80025b4>
 800289c:	38bff517 	ldw	r2,-44(r7)
 80028a0:	003ffa06 	br	800288c <__alt_data_end+0xf800288c>
 80028a4:	d9000a17 	ldw	r4,40(sp)
 80028a8:	8002b040 	call	8002b04 <__cxa_begin_catch>
 80028ac:	003f9106 	br	80026f4 <__alt_data_end+0xf80026f4>
 80028b0:	d9c01c17 	ldw	r7,112(sp)
 80028b4:	383eda1e 	bne	r7,zero,8002420 <__alt_data_end+0xf8002420>
 80028b8:	d8c01b17 	ldw	r3,108(sp)
 80028bc:	00800044 	movi	r2,1
 80028c0:	10fed736 	bltu	r2,r3,8002420 <__alt_data_end+0xf8002420>
 80028c4:	00c000c4 	movi	r3,3
 80028c8:	003f8e06 	br	8002704 <__alt_data_end+0xf8002704>

080028cc <__cxa_call_unexpected>:
 80028cc:	00820034 	movhi	r2,2048
 80028d0:	deffe604 	addi	sp,sp,-104
 80028d4:	1088b304 	addi	r2,r2,8908
 80028d8:	d8800d15 	stw	r2,52(sp)
 80028dc:	008200b4 	movhi	r2,2050
 80028e0:	10be3a04 	addi	r2,r2,-1816
 80028e4:	d8800e15 	stw	r2,56(sp)
 80028e8:	d8800104 	addi	r2,sp,4
 80028ec:	d8800f15 	stw	r2,60(sp)
 80028f0:	00820034 	movhi	r2,2048
 80028f4:	108a5604 	addi	r2,r2,10584
 80028f8:	d9001415 	stw	r4,80(sp)
 80028fc:	d9000704 	addi	r4,sp,28
 8002900:	dfc01915 	stw	ra,100(sp)
 8002904:	d8801015 	stw	r2,64(sp)
 8002908:	df001815 	stw	fp,96(sp)
 800290c:	dec01115 	stw	sp,68(sp)
 8002910:	8003c7c0 	call	8003c7c <_Unwind_SjLj_Register>
 8002914:	d9001417 	ldw	r4,80(sp)
 8002918:	8002b040 	call	8002b04 <__cxa_begin_catch>
 800291c:	d8c01417 	ldw	r3,80(sp)
 8002920:	18bffe17 	ldw	r2,-8(r3)
 8002924:	193ff717 	ldw	r4,-36(r3)
 8002928:	18fffd17 	ldw	r3,-12(r3)
 800292c:	d8800315 	stw	r2,12(sp)
 8002930:	d8c01615 	stw	r3,88(sp)
 8002934:	d8c01417 	ldw	r3,80(sp)
 8002938:	18fffb17 	ldw	r3,-20(r3)
 800293c:	d8c01515 	stw	r3,84(sp)
 8002940:	d8c01417 	ldw	r3,80(sp)
 8002944:	18fff817 	ldw	r3,-32(r3)
 8002948:	d8c01415 	stw	r3,80(sp)
 800294c:	00c00044 	movi	r3,1
 8002950:	d8c00815 	stw	r3,32(sp)
 8002954:	8002d640 	call	8002d64 <_ZN10__cxxabiv112__unexpectedEPFvvE>
 8002958:	d8c00917 	ldw	r3,36(sp)
 800295c:	d8800817 	ldw	r2,32(sp)
 8002960:	d8c01715 	stw	r3,92(sp)
 8002964:	10000a26 	beq	r2,zero,8002990 <__cxa_call_unexpected+0xc4>
 8002968:	10bfffc4 	addi	r2,r2,-1
 800296c:	10000126 	beq	r2,zero,8002974 <__cxa_call_unexpected+0xa8>
 8002970:	003b68fa 	trap	3
 8002974:	d8000815 	stw	zero,32(sp)
 8002978:	8002bb80 	call	8002bb8 <__cxa_end_catch>
 800297c:	8002bb80 	call	8002bb8 <__cxa_end_catch>
 8002980:	d9001717 	ldw	r4,92(sp)
 8002984:	00bfffc4 	movi	r2,-1
 8002988:	d8800815 	stw	r2,32(sp)
 800298c:	8003e780 	call	8003e78 <_Unwind_SjLj_Resume>
 8002990:	d9001717 	ldw	r4,92(sp)
 8002994:	8002b040 	call	8002b04 <__cxa_begin_catch>
 8002998:	8002dd40 	call	8002dd4 <__cxa_get_globals_fast>
 800299c:	10800017 	ldw	r2,0(r2)
 80029a0:	10c00b17 	ldw	r3,44(r2)
 80029a4:	18c0004c 	andi	r3,r3,1
 80029a8:	18001e26 	beq	r3,zero,8002a24 <__cxa_call_unexpected+0x158>
 80029ac:	10800017 	ldw	r2,0(r2)
 80029b0:	d8801715 	stw	r2,92(sp)
 80029b4:	d8801517 	ldw	r2,84(sp)
 80029b8:	00802b0e 	bge	zero,r2,8002a68 <__cxa_call_unexpected+0x19c>
 80029bc:	d8c01717 	ldw	r3,92(sp)
 80029c0:	d8800317 	ldw	r2,12(sp)
 80029c4:	d9c01517 	ldw	r7,84(sp)
 80029c8:	193ff017 	ldw	r4,-64(r3)
 80029cc:	d9801617 	ldw	r6,88(sp)
 80029d0:	d8800015 	stw	r2,0(sp)
 80029d4:	180b883a 	mov	r5,r3
 80029d8:	00800084 	movi	r2,2
 80029dc:	d8800815 	stw	r2,32(sp)
 80029e0:	80020640 	call	8002064 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 80029e4:	10803fcc 	andi	r2,r2,255
 80029e8:	10001e1e 	bne	r2,zero,8002a64 <__cxa_call_unexpected+0x198>
 80029ec:	d8800317 	ldw	r2,12(sp)
 80029f0:	d9c01517 	ldw	r7,84(sp)
 80029f4:	d9801617 	ldw	r6,88(sp)
 80029f8:	010200b4 	movhi	r4,2050
 80029fc:	d8800015 	stw	r2,0(sp)
 8002a00:	213ede04 	addi	r4,r4,-1160
 8002a04:	00800084 	movi	r2,2
 8002a08:	000b883a 	mov	r5,zero
 8002a0c:	d8800815 	stw	r2,32(sp)
 8002a10:	80020640 	call	8002064 <_ZL28check_compact_exception_specPKSt9type_infoPvPKhij>
 8002a14:	10803fcc 	andi	r2,r2,255
 8002a18:	1000051e 	bne	r2,zero,8002a30 <__cxa_call_unexpected+0x164>
 8002a1c:	d9001417 	ldw	r4,80(sp)
 8002a20:	8002c8c0 	call	8002c8c <_ZN10__cxxabiv111__terminateEPFvvE>
 8002a24:	10801004 	addi	r2,r2,64
 8002a28:	d8801715 	stw	r2,92(sp)
 8002a2c:	003fe106 	br	80029b4 <__alt_data_end+0xf80029b4>
 8002a30:	01000104 	movi	r4,4
 8002a34:	8002f4c0 	call	8002f4c <__cxa_allocate_exception>
 8002a38:	00c200b4 	movhi	r3,2050
 8002a3c:	18fef904 	addi	r3,r3,-1052
 8002a40:	01820034 	movhi	r6,2048
 8002a44:	014200b4 	movhi	r5,2050
 8002a48:	10c00015 	stw	r3,0(r2)
 8002a4c:	318cdf04 	addi	r6,r6,13180
 8002a50:	00c00084 	movi	r3,2
 8002a54:	297ede04 	addi	r5,r5,-1160
 8002a58:	1009883a 	mov	r4,r2
 8002a5c:	d8c00815 	stw	r3,32(sp)
 8002a60:	80033f40 	call	80033f4 <__cxa_throw>
 8002a64:	80034840 	call	8003484 <__cxa_rethrow>
 8002a68:	d9401617 	ldw	r5,88(sp)
 8002a6c:	00800084 	movi	r2,2
 8002a70:	d9800104 	addi	r6,sp,4
 8002a74:	0009883a 	mov	r4,zero
 8002a78:	d8800815 	stw	r2,32(sp)
 8002a7c:	8001ea80 	call	8001ea8 <_ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info>
 8002a80:	d9801717 	ldw	r6,92(sp)
 8002a84:	d9c01517 	ldw	r7,84(sp)
 8002a88:	d9000104 	addi	r4,sp,4
 8002a8c:	317ff017 	ldw	r5,-64(r6)
 8002a90:	80022240 	call	8002224 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8002a94:	10803fcc 	andi	r2,r2,255
 8002a98:	1000171e 	bne	r2,zero,8002af8 <__cxa_call_unexpected+0x22c>
 8002a9c:	d9c01517 	ldw	r7,84(sp)
 8002aa0:	014200b4 	movhi	r5,2050
 8002aa4:	00800084 	movi	r2,2
 8002aa8:	297ede04 	addi	r5,r5,-1160
 8002aac:	000d883a 	mov	r6,zero
 8002ab0:	d9000104 	addi	r4,sp,4
 8002ab4:	d8800815 	stw	r2,32(sp)
 8002ab8:	80022240 	call	8002224 <_ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl>
 8002abc:	10803fcc 	andi	r2,r2,255
 8002ac0:	103fd626 	beq	r2,zero,8002a1c <__alt_data_end+0xf8002a1c>
 8002ac4:	01000104 	movi	r4,4
 8002ac8:	8002f4c0 	call	8002f4c <__cxa_allocate_exception>
 8002acc:	00c200b4 	movhi	r3,2050
 8002ad0:	18fef904 	addi	r3,r3,-1052
 8002ad4:	01820034 	movhi	r6,2048
 8002ad8:	014200b4 	movhi	r5,2050
 8002adc:	10c00015 	stw	r3,0(r2)
 8002ae0:	318cdf04 	addi	r6,r6,13180
 8002ae4:	00c00084 	movi	r3,2
 8002ae8:	297ede04 	addi	r5,r5,-1160
 8002aec:	1009883a 	mov	r4,r2
 8002af0:	d8c00815 	stw	r3,32(sp)
 8002af4:	80033f40 	call	80033f4 <__cxa_throw>
 8002af8:	80034840 	call	8003484 <__cxa_rethrow>

08002afc <__cxa_get_exception_ptr>:
 8002afc:	20bfff17 	ldw	r2,-4(r4)
 8002b00:	f800283a 	ret

08002b04 <__cxa_begin_catch>:
 8002b04:	defffe04 	addi	sp,sp,-8
 8002b08:	dc000015 	stw	r16,0(sp)
 8002b0c:	dfc00115 	stw	ra,4(sp)
 8002b10:	2021883a 	mov	r16,r4
 8002b14:	8002de00 	call	8002de0 <__cxa_get_globals>
 8002b18:	81000017 	ldw	r4,0(r16)
 8002b1c:	80c00117 	ldw	r3,4(r16)
 8002b20:	01af3574 	movhi	r6,48341
 8002b24:	31b54004 	addi	r6,r6,-11008
 8002b28:	016e2cb4 	movhi	r5,47282
 8002b2c:	296aaf04 	addi	r5,r5,-21828
 8002b30:	218d883a 	add	r6,r4,r6
 8002b34:	3109803a 	cmpltu	r4,r6,r4
 8002b38:	1947883a 	add	r3,r3,r5
 8002b3c:	20c7883a 	add	r3,r4,r3
 8002b40:	817ff504 	addi	r5,r16,-44
 8002b44:	11000017 	ldw	r4,0(r2)
 8002b48:	18000726 	beq	r3,zero,8002b68 <__cxa_begin_catch+0x64>
 8002b4c:	2000191e 	bne	r4,zero,8002bb4 <__cxa_begin_catch+0xb0>
 8002b50:	11400015 	stw	r5,0(r2)
 8002b54:	0005883a 	mov	r2,zero
 8002b58:	dfc00117 	ldw	ra,4(sp)
 8002b5c:	dc000017 	ldw	r16,0(sp)
 8002b60:	dec00204 	addi	sp,sp,8
 8002b64:	f800283a 	ret
 8002b68:	01c00044 	movi	r7,1
 8002b6c:	39bff736 	bltu	r7,r6,8002b4c <__alt_data_end+0xf8002b4c>
 8002b70:	80fffa17 	ldw	r3,-24(r16)
 8002b74:	18000d16 	blt	r3,zero,8002bac <__cxa_begin_catch+0xa8>
 8002b78:	18c00044 	addi	r3,r3,1
 8002b7c:	11800117 	ldw	r6,4(r2)
 8002b80:	80fffa15 	stw	r3,-24(r16)
 8002b84:	30ffffc4 	addi	r3,r6,-1
 8002b88:	10c00115 	stw	r3,4(r2)
 8002b8c:	21400226 	beq	r4,r5,8002b98 <__cxa_begin_catch+0x94>
 8002b90:	813ff915 	stw	r4,-28(r16)
 8002b94:	11400015 	stw	r5,0(r2)
 8002b98:	80bfff17 	ldw	r2,-4(r16)
 8002b9c:	dfc00117 	ldw	ra,4(sp)
 8002ba0:	dc000017 	ldw	r16,0(sp)
 8002ba4:	dec00204 	addi	sp,sp,8
 8002ba8:	f800283a 	ret
 8002bac:	38c7c83a 	sub	r3,r7,r3
 8002bb0:	003ff206 	br	8002b7c <__alt_data_end+0xf8002b7c>
 8002bb4:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

08002bb8 <__cxa_end_catch>:
 8002bb8:	deffff04 	addi	sp,sp,-4
 8002bbc:	dfc00015 	stw	ra,0(sp)
 8002bc0:	8002dd40 	call	8002dd4 <__cxa_get_globals_fast>
 8002bc4:	11000017 	ldw	r4,0(r2)
 8002bc8:	20001426 	beq	r4,zero,8002c1c <__cxa_end_catch+0x64>
 8002bcc:	21400b17 	ldw	r5,44(r4)
 8002bd0:	01ef3574 	movhi	r7,48341
 8002bd4:	39f54004 	addi	r7,r7,-11008
 8002bd8:	29cf883a 	add	r7,r5,r7
 8002bdc:	20c00c17 	ldw	r3,48(r4)
 8002be0:	394d803a 	cmpltu	r6,r7,r5
 8002be4:	016e2cb4 	movhi	r5,47282
 8002be8:	296aaf04 	addi	r5,r5,-21828
 8002bec:	1947883a 	add	r3,r3,r5
 8002bf0:	30c7883a 	add	r3,r6,r3
 8002bf4:	18000c1e 	bne	r3,zero,8002c28 <__cxa_end_catch+0x70>
 8002bf8:	00c00044 	movi	r3,1
 8002bfc:	19c00a36 	bltu	r3,r7,8002c28 <__cxa_end_catch+0x70>
 8002c00:	20c00517 	ldw	r3,20(r4)
 8002c04:	18000d16 	blt	r3,zero,8002c3c <__cxa_end_catch+0x84>
 8002c08:	18ffffc4 	addi	r3,r3,-1
 8002c0c:	18001026 	beq	r3,zero,8002c50 <__cxa_end_catch+0x98>
 8002c10:	00bfffc4 	movi	r2,-1
 8002c14:	18801426 	beq	r3,r2,8002c68 <__cxa_end_catch+0xb0>
 8002c18:	20c00515 	stw	r3,20(r4)
 8002c1c:	dfc00017 	ldw	ra,0(sp)
 8002c20:	dec00104 	addi	sp,sp,4
 8002c24:	f800283a 	ret
 8002c28:	21000b04 	addi	r4,r4,44
 8002c2c:	10000015 	stw	zero,0(r2)
 8002c30:	dfc00017 	ldw	ra,0(sp)
 8002c34:	dec00104 	addi	sp,sp,4
 8002c38:	8003f081 	jmpi	8003f08 <_Unwind_DeleteException>
 8002c3c:	18c00044 	addi	r3,r3,1
 8002c40:	183ff51e 	bne	r3,zero,8002c18 <__alt_data_end+0xf8002c18>
 8002c44:	21400417 	ldw	r5,16(r4)
 8002c48:	11400015 	stw	r5,0(r2)
 8002c4c:	003ff206 	br	8002c18 <__alt_data_end+0xf8002c18>
 8002c50:	20c00417 	ldw	r3,16(r4)
 8002c54:	21000b04 	addi	r4,r4,44
 8002c58:	10c00015 	stw	r3,0(r2)
 8002c5c:	dfc00017 	ldw	ra,0(sp)
 8002c60:	dec00104 	addi	sp,sp,4
 8002c64:	8003f081 	jmpi	8003f08 <_Unwind_DeleteException>
 8002c68:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

08002c6c <_ZSt18uncaught_exceptionv>:
 8002c6c:	deffff04 	addi	sp,sp,-4
 8002c70:	dfc00015 	stw	ra,0(sp)
 8002c74:	8002de00 	call	8002de0 <__cxa_get_globals>
 8002c78:	10800117 	ldw	r2,4(r2)
 8002c7c:	1004c03a 	cmpne	r2,r2,zero
 8002c80:	dfc00017 	ldw	ra,0(sp)
 8002c84:	dec00104 	addi	sp,sp,4
 8002c88:	f800283a 	ret

08002c8c <_ZN10__cxxabiv111__terminateEPFvvE>:
 8002c8c:	00820034 	movhi	r2,2048
 8002c90:	deffef04 	addi	sp,sp,-68
 8002c94:	1088b304 	addi	r2,r2,8908
 8002c98:	d8800615 	stw	r2,24(sp)
 8002c9c:	008200b4 	movhi	r2,2050
 8002ca0:	10be3e04 	addi	r2,r2,-1800
 8002ca4:	d8800715 	stw	r2,28(sp)
 8002ca8:	00820034 	movhi	r2,2048
 8002cac:	108b3904 	addi	r2,r2,11492
 8002cb0:	d9000d15 	stw	r4,52(sp)
 8002cb4:	d809883a 	mov	r4,sp
 8002cb8:	d8800915 	stw	r2,36(sp)
 8002cbc:	dfc01015 	stw	ra,64(sp)
 8002cc0:	df000f15 	stw	fp,60(sp)
 8002cc4:	dec00815 	stw	sp,32(sp)
 8002cc8:	dec00a15 	stw	sp,40(sp)
 8002ccc:	8003c7c0 	call	8003c7c <_Unwind_SjLj_Register>
 8002cd0:	00800044 	movi	r2,1
 8002cd4:	d8800115 	stw	r2,4(sp)
 8002cd8:	d8800d17 	ldw	r2,52(sp)
 8002cdc:	103ee83a 	callr	r2
 8002ce0:	8003f940 	call	8003f94 <abort>
 8002ce4:	d8c00217 	ldw	r3,8(sp)
 8002ce8:	d8800117 	ldw	r2,4(sp)
 8002cec:	d8c00d15 	stw	r3,52(sp)
 8002cf0:	d8c00317 	ldw	r3,12(sp)
 8002cf4:	d8c00e15 	stw	r3,56(sp)
 8002cf8:	10000b26 	beq	r2,zero,8002d28 <_ZN10__cxxabiv111__terminateEPFvvE+0x9c>
 8002cfc:	10bfffc4 	addi	r2,r2,-1
 8002d00:	10000126 	beq	r2,zero,8002d08 <_ZN10__cxxabiv111__terminateEPFvvE+0x7c>
 8002d04:	003b68fa 	trap	3
 8002d08:	d8000115 	stw	zero,4(sp)
 8002d0c:	8002bb80 	call	8002bb8 <__cxa_end_catch>
 8002d10:	d8c00e17 	ldw	r3,56(sp)
 8002d14:	00bfffc4 	movi	r2,-1
 8002d18:	18800826 	beq	r3,r2,8002d3c <_ZN10__cxxabiv111__terminateEPFvvE+0xb0>
 8002d1c:	d9000d17 	ldw	r4,52(sp)
 8002d20:	d8800115 	stw	r2,4(sp)
 8002d24:	8003e780 	call	8003e78 <_Unwind_SjLj_Resume>
 8002d28:	d9000d17 	ldw	r4,52(sp)
 8002d2c:	8002b040 	call	8002b04 <__cxa_begin_catch>
 8002d30:	00800084 	movi	r2,2
 8002d34:	d8800115 	stw	r2,4(sp)
 8002d38:	8003f940 	call	8003f94 <abort>
 8002d3c:	d8800e17 	ldw	r2,56(sp)
 8002d40:	d9000d17 	ldw	r4,52(sp)
 8002d44:	d8800115 	stw	r2,4(sp)
 8002d48:	80028cc0 	call	80028cc <__cxa_call_unexpected>

08002d4c <_ZSt9terminatev>:
 8002d4c:	008200b4 	movhi	r2,2050
 8002d50:	10880e04 	addi	r2,r2,8248
 8002d54:	11000017 	ldw	r4,0(r2)
 8002d58:	deffff04 	addi	sp,sp,-4
 8002d5c:	dfc00015 	stw	ra,0(sp)
 8002d60:	8002c8c0 	call	8002c8c <_ZN10__cxxabiv111__terminateEPFvvE>

08002d64 <_ZN10__cxxabiv112__unexpectedEPFvvE>:
 8002d64:	deffff04 	addi	sp,sp,-4
 8002d68:	dfc00015 	stw	ra,0(sp)
 8002d6c:	203ee83a 	callr	r4
 8002d70:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

08002d74 <_ZSt10unexpectedv>:
 8002d74:	008200b4 	movhi	r2,2050
 8002d78:	10880f04 	addi	r2,r2,8252
 8002d7c:	11000017 	ldw	r4,0(r2)
 8002d80:	deffff04 	addi	sp,sp,-4
 8002d84:	dfc00015 	stw	ra,0(sp)
 8002d88:	8002d640 	call	8002d64 <_ZN10__cxxabiv112__unexpectedEPFvvE>

08002d8c <_ZSt13set_terminatePFvvE>:
 8002d8c:	00c200b4 	movhi	r3,2050
 8002d90:	18c80e04 	addi	r3,r3,8248
 8002d94:	18800017 	ldw	r2,0(r3)
 8002d98:	19000015 	stw	r4,0(r3)
 8002d9c:	f800283a 	ret

08002da0 <_ZSt13get_terminatev>:
 8002da0:	008200b4 	movhi	r2,2050
 8002da4:	10880e04 	addi	r2,r2,8248
 8002da8:	10800017 	ldw	r2,0(r2)
 8002dac:	f800283a 	ret

08002db0 <_ZSt14set_unexpectedPFvvE>:
 8002db0:	00c200b4 	movhi	r3,2050
 8002db4:	18c80f04 	addi	r3,r3,8252
 8002db8:	18800017 	ldw	r2,0(r3)
 8002dbc:	19000015 	stw	r4,0(r3)
 8002dc0:	f800283a 	ret

08002dc4 <_ZSt14get_unexpectedv>:
 8002dc4:	008200b4 	movhi	r2,2050
 8002dc8:	10880f04 	addi	r2,r2,8252
 8002dcc:	10800017 	ldw	r2,0(r2)
 8002dd0:	f800283a 	ret

08002dd4 <__cxa_get_globals_fast>:
 8002dd4:	008200b4 	movhi	r2,2050
 8002dd8:	108f2304 	addi	r2,r2,15500
 8002ddc:	f800283a 	ret

08002de0 <__cxa_get_globals>:
 8002de0:	008200b4 	movhi	r2,2050
 8002de4:	108f2304 	addi	r2,r2,15500
 8002de8:	f800283a 	ret

08002dec <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>:
 8002dec:	018200b4 	movhi	r6,2050
 8002df0:	318f3404 	addi	r6,r6,15568
 8002df4:	31400117 	ldw	r5,4(r6)
 8002df8:	223fff04 	addi	r8,r4,-4
 8002dfc:	227fff17 	ldw	r9,-4(r4)
 8002e00:	28001326 	beq	r5,zero,8002e50 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x64>
 8002e04:	424f883a 	add	r7,r8,r9
 8002e08:	29c01426 	beq	r5,r7,8002e5c <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x70>
 8002e0c:	28c00117 	ldw	r3,4(r5)
 8002e10:	18001c26 	beq	r3,zero,8002e84 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x98>
 8002e14:	38c00336 	bltu	r7,r3,8002e24 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x38>
 8002e18:	00001e06 	br	8002e94 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0xa8>
 8002e1c:	3880052e 	bgeu	r7,r2,8002e34 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x48>
 8002e20:	1007883a 	mov	r3,r2
 8002e24:	18800117 	ldw	r2,4(r3)
 8002e28:	29800104 	addi	r6,r5,4
 8002e2c:	180b883a 	mov	r5,r3
 8002e30:	103ffa1e 	bne	r2,zero,8002e1c <__alt_data_end+0xf8002e1c>
 8002e34:	19400017 	ldw	r5,0(r3)
 8002e38:	194f883a 	add	r7,r3,r5
 8002e3c:	41c00e26 	beq	r8,r7,8002e78 <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4+0x8c>
 8002e40:	20800015 	stw	r2,0(r4)
 8002e44:	30800017 	ldw	r2,0(r6)
 8002e48:	12000115 	stw	r8,4(r2)
 8002e4c:	f800283a 	ret
 8002e50:	20000015 	stw	zero,0(r4)
 8002e54:	32000115 	stw	r8,4(r6)
 8002e58:	f800283a 	ret
 8002e5c:	28c00017 	ldw	r3,0(r5)
 8002e60:	28800117 	ldw	r2,4(r5)
 8002e64:	1a53883a 	add	r9,r3,r9
 8002e68:	227fff15 	stw	r9,-4(r4)
 8002e6c:	20800015 	stw	r2,0(r4)
 8002e70:	32000115 	stw	r8,4(r6)
 8002e74:	f800283a 	ret
 8002e78:	494b883a 	add	r5,r9,r5
 8002e7c:	19400015 	stw	r5,0(r3)
 8002e80:	f800283a 	ret
 8002e84:	0005883a 	mov	r2,zero
 8002e88:	2807883a 	mov	r3,r5
 8002e8c:	31800104 	addi	r6,r6,4
 8002e90:	003fe806 	br	8002e34 <__alt_data_end+0xf8002e34>
 8002e94:	1805883a 	mov	r2,r3
 8002e98:	31800104 	addi	r6,r6,4
 8002e9c:	2807883a 	mov	r3,r5
 8002ea0:	003fe406 	br	8002e34 <__alt_data_end+0xf8002e34>

08002ea4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>:
 8002ea4:	20800104 	addi	r2,r4,4
 8002ea8:	00c001c4 	movi	r3,7
 8002eac:	1880112e 	bgeu	r3,r2,8002ef4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x50>
 8002eb0:	20c9883a 	add	r4,r4,r3
 8002eb4:	00bfff04 	movi	r2,-4
 8002eb8:	208a703a 	and	r5,r4,r2
 8002ebc:	018200b4 	movhi	r6,2050
 8002ec0:	318f3404 	addi	r6,r6,15568
 8002ec4:	30c00117 	ldw	r3,4(r6)
 8002ec8:	18000826 	beq	r3,zero,8002eec <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x48>
 8002ecc:	19000017 	ldw	r4,0(r3)
 8002ed0:	21400436 	bltu	r4,r5,8002ee4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x40>
 8002ed4:	00001a06 	br	8002f40 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x9c>
 8002ed8:	11000017 	ldw	r4,0(r2)
 8002edc:	2140072e 	bgeu	r4,r5,8002efc <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x58>
 8002ee0:	1007883a 	mov	r3,r2
 8002ee4:	18800117 	ldw	r2,4(r3)
 8002ee8:	103ffb1e 	bne	r2,zero,8002ed8 <__alt_data_end+0xf8002ed8>
 8002eec:	0005883a 	mov	r2,zero
 8002ef0:	f800283a 	ret
 8002ef4:	01400204 	movi	r5,8
 8002ef8:	003ff006 	br	8002ebc <__alt_data_end+0xf8002ebc>
 8002efc:	18c00104 	addi	r3,r3,4
 8002f00:	2149c83a 	sub	r4,r4,r5
 8002f04:	018001c4 	movi	r6,7
 8002f08:	3100092e 	bgeu	r6,r4,8002f30 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5+0x8c>
 8002f0c:	11c00117 	ldw	r7,4(r2)
 8002f10:	114d883a 	add	r6,r2,r5
 8002f14:	31000015 	stw	r4,0(r6)
 8002f18:	31c00115 	stw	r7,4(r6)
 8002f1c:	18800017 	ldw	r2,0(r3)
 8002f20:	11400015 	stw	r5,0(r2)
 8002f24:	19800015 	stw	r6,0(r3)
 8002f28:	10800104 	addi	r2,r2,4
 8002f2c:	f800283a 	ret
 8002f30:	11000117 	ldw	r4,4(r2)
 8002f34:	10800104 	addi	r2,r2,4
 8002f38:	19000015 	stw	r4,0(r3)
 8002f3c:	f800283a 	ret
 8002f40:	1805883a 	mov	r2,r3
 8002f44:	30c00104 	addi	r3,r6,4
 8002f48:	003fed06 	br	8002f00 <__alt_data_end+0xf8002f00>

08002f4c <__cxa_allocate_exception>:
 8002f4c:	defffd04 	addi	sp,sp,-12
 8002f50:	dc400115 	stw	r17,4(sp)
 8002f54:	24401104 	addi	r17,r4,68
 8002f58:	8809883a 	mov	r4,r17
 8002f5c:	dc000015 	stw	r16,0(sp)
 8002f60:	dfc00215 	stw	ra,8(sp)
 8002f64:	8003fac0 	call	8003fac <malloc>
 8002f68:	1021883a 	mov	r16,r2
 8002f6c:	10000a26 	beq	r2,zero,8002f98 <__cxa_allocate_exception+0x4c>
 8002f70:	01801104 	movi	r6,68
 8002f74:	000b883a 	mov	r5,zero
 8002f78:	8009883a 	mov	r4,r16
 8002f7c:	80047e00 	call	80047e0 <memset>
 8002f80:	80801104 	addi	r2,r16,68
 8002f84:	dfc00217 	ldw	ra,8(sp)
 8002f88:	dc400117 	ldw	r17,4(sp)
 8002f8c:	dc000017 	ldw	r16,0(sp)
 8002f90:	dec00304 	addi	sp,sp,12
 8002f94:	f800283a 	ret
 8002f98:	8809883a 	mov	r4,r17
 8002f9c:	8002ea40 	call	8002ea4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 8002fa0:	1021883a 	mov	r16,r2
 8002fa4:	103ff21e 	bne	r2,zero,8002f70 <__alt_data_end+0xf8002f70>
 8002fa8:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

08002fac <__cxa_free_exception>:
 8002fac:	00c200b4 	movhi	r3,2050
 8002fb0:	18cf3404 	addi	r3,r3,15568
 8002fb4:	18800217 	ldw	r2,8(r3)
 8002fb8:	213fef04 	addi	r4,r4,-68
 8002fbc:	1100042e 	bgeu	r2,r4,8002fd0 <__cxa_free_exception+0x24>
 8002fc0:	18c00317 	ldw	r3,12(r3)
 8002fc4:	10c5883a 	add	r2,r2,r3
 8002fc8:	2080012e 	bgeu	r4,r2,8002fd0 <__cxa_free_exception+0x24>
 8002fcc:	8002dec1 	jmpi	8002dec <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 8002fd0:	8003fc01 	jmpi	8003fc0 <free>

08002fd4 <__cxa_allocate_dependent_exception>:
 8002fd4:	defffe04 	addi	sp,sp,-8
 8002fd8:	01001004 	movi	r4,64
 8002fdc:	dc000015 	stw	r16,0(sp)
 8002fe0:	dfc00115 	stw	ra,4(sp)
 8002fe4:	8003fac0 	call	8003fac <malloc>
 8002fe8:	1021883a 	mov	r16,r2
 8002fec:	10000926 	beq	r2,zero,8003014 <__cxa_allocate_dependent_exception+0x40>
 8002ff0:	01801004 	movi	r6,64
 8002ff4:	000b883a 	mov	r5,zero
 8002ff8:	8009883a 	mov	r4,r16
 8002ffc:	80047e00 	call	80047e0 <memset>
 8003000:	8005883a 	mov	r2,r16
 8003004:	dfc00117 	ldw	ra,4(sp)
 8003008:	dc000017 	ldw	r16,0(sp)
 800300c:	dec00204 	addi	sp,sp,8
 8003010:	f800283a 	ret
 8003014:	01001004 	movi	r4,64
 8003018:	8002ea40 	call	8002ea4 <_ZN12_GLOBAL__N_14pool8allocateEj.constprop.5>
 800301c:	1021883a 	mov	r16,r2
 8003020:	103ff31e 	bne	r2,zero,8002ff0 <__alt_data_end+0xf8002ff0>
 8003024:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

08003028 <__cxa_free_dependent_exception>:
 8003028:	014200b4 	movhi	r5,2050
 800302c:	294f3404 	addi	r5,r5,15568
 8003030:	28c00217 	ldw	r3,8(r5)
 8003034:	2005883a 	mov	r2,r4
 8003038:	1900042e 	bgeu	r3,r4,800304c <__cxa_free_dependent_exception+0x24>
 800303c:	29400317 	ldw	r5,12(r5)
 8003040:	1947883a 	add	r3,r3,r5
 8003044:	20c0012e 	bgeu	r4,r3,800304c <__cxa_free_dependent_exception+0x24>
 8003048:	8002dec1 	jmpi	8002dec <_ZN12_GLOBAL__N_14pool4freeEPv.constprop.4>
 800304c:	1009883a 	mov	r4,r2
 8003050:	8003fc01 	jmpi	8003fc0 <free>

08003054 <_GLOBAL__sub_I___cxa_allocate_exception>:
 8003054:	defffd04 	addi	sp,sp,-12
 8003058:	dc400115 	stw	r17,4(sp)
 800305c:	dc000015 	stw	r16,0(sp)
 8003060:	04424004 	movi	r17,2304
 8003064:	040200b4 	movhi	r16,2050
 8003068:	840f3404 	addi	r16,r16,15568
 800306c:	8809883a 	mov	r4,r17
 8003070:	dfc00215 	stw	ra,8(sp)
 8003074:	84400315 	stw	r17,12(r16)
 8003078:	8003fac0 	call	8003fac <malloc>
 800307c:	80800215 	stw	r2,8(r16)
 8003080:	10000826 	beq	r2,zero,80030a4 <_GLOBAL__sub_I___cxa_allocate_exception+0x50>
 8003084:	80800115 	stw	r2,4(r16)
 8003088:	14400015 	stw	r17,0(r2)
 800308c:	10000115 	stw	zero,4(r2)
 8003090:	dfc00217 	ldw	ra,8(sp)
 8003094:	dc400117 	ldw	r17,4(sp)
 8003098:	dc000017 	ldw	r16,0(sp)
 800309c:	dec00304 	addi	sp,sp,12
 80030a0:	f800283a 	ret
 80030a4:	80000315 	stw	zero,12(r16)
 80030a8:	80000115 	stw	zero,4(r16)
 80030ac:	003ff806 	br	8003090 <__alt_data_end+0xf8003090>

080030b0 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv>:
 80030b0:	20800017 	ldw	r2,0(r4)
 80030b4:	defffa04 	addi	sp,sp,-24
 80030b8:	dc000415 	stw	r16,16(sp)
 80030bc:	10800617 	ldw	r2,24(r2)
 80030c0:	3021883a 	mov	r16,r6
 80030c4:	31800017 	ldw	r6,0(r6)
 80030c8:	00c00404 	movi	r3,16
 80030cc:	d8c00215 	stw	r3,8(sp)
 80030d0:	dfc00515 	stw	ra,20(sp)
 80030d4:	d8000015 	stw	zero,0(sp)
 80030d8:	d8000115 	stw	zero,4(sp)
 80030dc:	d8000315 	stw	zero,12(sp)
 80030e0:	d80f883a 	mov	r7,sp
 80030e4:	103ee83a 	callr	r2
 80030e8:	d8800117 	ldw	r2,4(sp)
 80030ec:	00c00184 	movi	r3,6
 80030f0:	1080018c 	andi	r2,r2,6
 80030f4:	10c00526 	beq	r2,r3,800310c <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv+0x5c>
 80030f8:	0005883a 	mov	r2,zero
 80030fc:	dfc00517 	ldw	ra,20(sp)
 8003100:	dc000417 	ldw	r16,16(sp)
 8003104:	dec00604 	addi	sp,sp,24
 8003108:	f800283a 	ret
 800310c:	d8c00017 	ldw	r3,0(sp)
 8003110:	00800044 	movi	r2,1
 8003114:	80c00015 	stw	r3,0(r16)
 8003118:	dfc00517 	ldw	ra,20(sp)
 800311c:	dc000417 	ldw	r16,16(sp)
 8003120:	dec00604 	addi	sp,sp,24
 8003124:	f800283a 	ret

08003128 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_>:
 8003128:	d8800017 	ldw	r2,0(sp)
 800312c:	11800226 	beq	r2,r6,8003138 <_ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_+0x10>
 8003130:	00800044 	movi	r2,1
 8003134:	f800283a 	ret
 8003138:	00800184 	movi	r2,6
 800313c:	f800283a 	ret

08003140 <_ZN10__cxxabiv117__class_type_infoD1Ev>:
 8003140:	008200b4 	movhi	r2,2050
 8003144:	10bec304 	addi	r2,r2,-1268
 8003148:	20800015 	stw	r2,0(r4)
 800314c:	80038241 	jmpi	8003824 <_ZNSt9type_infoD1Ev>

08003150 <_ZN10__cxxabiv117__class_type_infoD0Ev>:
 8003150:	defffe04 	addi	sp,sp,-8
 8003154:	008200b4 	movhi	r2,2050
 8003158:	dc000015 	stw	r16,0(sp)
 800315c:	dfc00115 	stw	ra,4(sp)
 8003160:	10bec304 	addi	r2,r2,-1268
 8003164:	20800015 	stw	r2,0(r4)
 8003168:	2021883a 	mov	r16,r4
 800316c:	80038240 	call	8003824 <_ZNSt9type_infoD1Ev>
 8003170:	8009883a 	mov	r4,r16
 8003174:	dfc00117 	ldw	ra,4(sp)
 8003178:	dc000017 	ldw	r16,0(sp)
 800317c:	dec00204 	addi	sp,sp,8
 8003180:	8001b141 	jmpi	8001b14 <_ZdlPv>

08003184 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>:
 8003184:	21000117 	ldw	r4,4(r4)
 8003188:	29400117 	ldw	r5,4(r5)
 800318c:	defffd04 	addi	sp,sp,-12
 8003190:	dc400115 	stw	r17,4(sp)
 8003194:	dc000015 	stw	r16,0(sp)
 8003198:	dfc00215 	stw	ra,8(sp)
 800319c:	3023883a 	mov	r17,r6
 80031a0:	3821883a 	mov	r16,r7
 80031a4:	21400526 	beq	r4,r5,80031bc <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x38>
 80031a8:	20c00007 	ldb	r3,0(r4)
 80031ac:	00800a84 	movi	r2,42
 80031b0:	18800d26 	beq	r3,r2,80031e8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
 80031b4:	80051000 	call	8005100 <strcmp>
 80031b8:	10000b1e 	bne	r2,zero,80031e8 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE+0x64>
 80031bc:	00800204 	movi	r2,8
 80031c0:	80800315 	stw	r2,12(r16)
 80031c4:	00800184 	movi	r2,6
 80031c8:	80800115 	stw	r2,4(r16)
 80031cc:	84400015 	stw	r17,0(r16)
 80031d0:	00800044 	movi	r2,1
 80031d4:	dfc00217 	ldw	ra,8(sp)
 80031d8:	dc400117 	ldw	r17,4(sp)
 80031dc:	dc000017 	ldw	r16,0(sp)
 80031e0:	dec00304 	addi	sp,sp,12
 80031e4:	f800283a 	ret
 80031e8:	0005883a 	mov	r2,zero
 80031ec:	003ff906 	br	80031d4 <__alt_data_end+0xf80031d4>

080031f0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE>:
 80031f0:	defffa04 	addi	sp,sp,-24
 80031f4:	dc800415 	stw	r18,16(sp)
 80031f8:	d8800817 	ldw	r2,32(sp)
 80031fc:	dc800617 	ldw	r18,24(sp)
 8003200:	dc400315 	stw	r17,12(sp)
 8003204:	dc000215 	stw	r16,8(sp)
 8003208:	dfc00515 	stw	ra,20(sp)
 800320c:	dc400917 	ldw	r17,36(sp)
 8003210:	24000117 	ldw	r16,4(r4)
 8003214:	90801526 	beq	r18,r2,800326c <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x7c>
 8003218:	39400117 	ldw	r5,4(r7)
 800321c:	2c000826 	beq	r5,r16,8003240 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x50>
 8003220:	80c00007 	ldb	r3,0(r16)
 8003224:	00800a84 	movi	r2,42
 8003228:	18800926 	beq	r3,r2,8003250 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 800322c:	8009883a 	mov	r4,r16
 8003230:	d9800115 	stw	r6,4(sp)
 8003234:	80051000 	call	8005100 <strcmp>
 8003238:	d9800117 	ldw	r6,4(sp)
 800323c:	1000041e 	bne	r2,zero,8003250 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0x60>
 8003240:	00800044 	movi	r2,1
 8003244:	8c800015 	stw	r18,0(r17)
 8003248:	89800115 	stw	r6,4(r17)
 800324c:	88800315 	stw	r2,12(r17)
 8003250:	0005883a 	mov	r2,zero
 8003254:	dfc00517 	ldw	ra,20(sp)
 8003258:	dc800417 	ldw	r18,16(sp)
 800325c:	dc400317 	ldw	r17,12(sp)
 8003260:	dc000217 	ldw	r16,8(sp)
 8003264:	dec00604 	addi	sp,sp,24
 8003268:	f800283a 	ret
 800326c:	d8800717 	ldw	r2,28(sp)
 8003270:	11400117 	ldw	r5,4(r2)
 8003274:	81400a26 	beq	r16,r5,80032a0 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb0>
 8003278:	80c00007 	ldb	r3,0(r16)
 800327c:	00800a84 	movi	r2,42
 8003280:	18800c26 	beq	r3,r2,80032b4 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xc4>
 8003284:	8009883a 	mov	r4,r16
 8003288:	d9800115 	stw	r6,4(sp)
 800328c:	d9c00015 	stw	r7,0(sp)
 8003290:	80051000 	call	8005100 <strcmp>
 8003294:	d9800117 	ldw	r6,4(sp)
 8003298:	d9c00017 	ldw	r7,0(sp)
 800329c:	1000021e 	bne	r2,zero,80032a8 <_ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE+0xb8>
 80032a0:	89800215 	stw	r6,8(r17)
 80032a4:	003fea06 	br	8003250 <__alt_data_end+0xf8003250>
 80032a8:	39400117 	ldw	r5,4(r7)
 80032ac:	817fdf1e 	bne	r16,r5,800322c <__alt_data_end+0xf800322c>
 80032b0:	003fe306 	br	8003240 <__alt_data_end+0xf8003240>
 80032b4:	38800117 	ldw	r2,4(r7)
 80032b8:	80bfe51e 	bne	r16,r2,8003250 <__alt_data_end+0xf8003250>
 80032bc:	003fe006 	br	8003240 <__alt_data_end+0xf8003240>

080032c0 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj>:
 80032c0:	20800117 	ldw	r2,4(r4)
 80032c4:	28c00117 	ldw	r3,4(r5)
 80032c8:	10c02926 	beq	r2,r3,8003370 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0xb0>
 80032cc:	defffb04 	addi	sp,sp,-20
 80032d0:	dcc00315 	stw	r19,12(sp)
 80032d4:	dc800215 	stw	r18,8(sp)
 80032d8:	dc400115 	stw	r17,4(sp)
 80032dc:	dc000015 	stw	r16,0(sp)
 80032e0:	dfc00415 	stw	ra,16(sp)
 80032e4:	2821883a 	mov	r16,r5
 80032e8:	11400007 	ldb	r5,0(r2)
 80032ec:	2025883a 	mov	r18,r4
 80032f0:	01000a84 	movi	r4,42
 80032f4:	3823883a 	mov	r17,r7
 80032f8:	3027883a 	mov	r19,r6
 80032fc:	29000626 	beq	r5,r4,8003318 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
 8003300:	180b883a 	mov	r5,r3
 8003304:	1009883a 	mov	r4,r2
 8003308:	80051000 	call	8005100 <strcmp>
 800330c:	1000021e 	bne	r2,zero,8003318 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x58>
 8003310:	00800044 	movi	r2,1
 8003314:	00000306 	br	8003324 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x64>
 8003318:	008000c4 	movi	r2,3
 800331c:	1440082e 	bgeu	r2,r17,8003340 <_ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj+0x80>
 8003320:	0005883a 	mov	r2,zero
 8003324:	dfc00417 	ldw	ra,16(sp)
 8003328:	dcc00317 	ldw	r19,12(sp)
 800332c:	dc800217 	ldw	r18,8(sp)
 8003330:	dc400117 	ldw	r17,4(sp)
 8003334:	dc000017 	ldw	r16,0(sp)
 8003338:	dec00504 	addi	sp,sp,20
 800333c:	f800283a 	ret
 8003340:	80800017 	ldw	r2,0(r16)
 8003344:	980d883a 	mov	r6,r19
 8003348:	900b883a 	mov	r5,r18
 800334c:	10800517 	ldw	r2,20(r2)
 8003350:	8009883a 	mov	r4,r16
 8003354:	dfc00417 	ldw	ra,16(sp)
 8003358:	dcc00317 	ldw	r19,12(sp)
 800335c:	dc800217 	ldw	r18,8(sp)
 8003360:	dc400117 	ldw	r17,4(sp)
 8003364:	dc000017 	ldw	r16,0(sp)
 8003368:	dec00504 	addi	sp,sp,20
 800336c:	1000683a 	jmp	r2
 8003370:	00800044 	movi	r2,1
 8003374:	f800283a 	ret

08003378 <_ZNSt9exceptionD1Ev>:
 8003378:	f800283a 	ret

0800337c <_ZNSt13bad_exceptionD1Ev>:
 800337c:	f800283a 	ret

08003380 <_ZNKSt9exception4whatEv>:
 8003380:	008200b4 	movhi	r2,2050
 8003384:	10becc04 	addi	r2,r2,-1232
 8003388:	f800283a 	ret

0800338c <_ZNKSt13bad_exception4whatEv>:
 800338c:	008200b4 	movhi	r2,2050
 8003390:	10bed004 	addi	r2,r2,-1216
 8003394:	f800283a 	ret

08003398 <_ZNSt9exceptionD0Ev>:
 8003398:	8001b141 	jmpi	8001b14 <_ZdlPv>

0800339c <_ZNSt13bad_exceptionD0Ev>:
 800339c:	8001b141 	jmpi	8001b14 <_ZdlPv>

080033a0 <_ZN10__cxxabiv115__forced_unwindD1Ev>:
 80033a0:	f800283a 	ret

080033a4 <_ZN10__cxxabiv115__forced_unwindD0Ev>:
 80033a4:	8001b141 	jmpi	8001b14 <_ZdlPv>

080033a8 <_ZN10__cxxabiv119__foreign_exceptionD1Ev>:
 80033a8:	f800283a 	ret

080033ac <_ZN10__cxxabiv119__foreign_exceptionD0Ev>:
 80033ac:	8001b141 	jmpi	8001b14 <_ZdlPv>

080033b0 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception>:
 80033b0:	defffe04 	addi	sp,sp,-8
 80033b4:	dfc00115 	stw	ra,4(sp)
 80033b8:	dc000015 	stw	r16,0(sp)
 80033bc:	00800044 	movi	r2,1
 80033c0:	11000a36 	bltu	r2,r4,80033ec <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x3c>
 80033c4:	28bff617 	ldw	r2,-40(r5)
 80033c8:	2c000504 	addi	r16,r5,20
 80033cc:	10000226 	beq	r2,zero,80033d8 <_ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception+0x28>
 80033d0:	8009883a 	mov	r4,r16
 80033d4:	103ee83a 	callr	r2
 80033d8:	8009883a 	mov	r4,r16
 80033dc:	dfc00117 	ldw	ra,4(sp)
 80033e0:	dc000017 	ldw	r16,0(sp)
 80033e4:	dec00204 	addi	sp,sp,8
 80033e8:	8002fac1 	jmpi	8002fac <__cxa_free_exception>
 80033ec:	293ff817 	ldw	r4,-32(r5)
 80033f0:	8002c8c0 	call	8002c8c <_ZN10__cxxabiv111__terminateEPFvvE>

080033f4 <__cxa_throw>:
 80033f4:	defffb04 	addi	sp,sp,-20
 80033f8:	dfc00415 	stw	ra,16(sp)
 80033fc:	dcc00315 	stw	r19,12(sp)
 8003400:	dc800215 	stw	r18,8(sp)
 8003404:	2827883a 	mov	r19,r5
 8003408:	3025883a 	mov	r18,r6
 800340c:	dc400115 	stw	r17,4(sp)
 8003410:	dc000015 	stw	r16,0(sp)
 8003414:	2021883a 	mov	r16,r4
 8003418:	8002de00 	call	8002de0 <__cxa_get_globals>
 800341c:	10c00117 	ldw	r3,4(r2)
 8003420:	847ffb04 	addi	r17,r16,-20
 8003424:	18c00044 	addi	r3,r3,1
 8003428:	10c00115 	stw	r3,4(r2)
 800342c:	00800044 	movi	r2,1
 8003430:	80bfef15 	stw	r2,-68(r16)
 8003434:	84fff015 	stw	r19,-64(r16)
 8003438:	84bff115 	stw	r18,-60(r16)
 800343c:	8002dc40 	call	8002dc4 <_ZSt14get_unexpectedv>
 8003440:	80bff215 	stw	r2,-56(r16)
 8003444:	8002da00 	call	8002da0 <_ZSt13get_terminatev>
 8003448:	80bff315 	stw	r2,-52(r16)
 800344c:	0090caf4 	movhi	r2,17195
 8003450:	108ac004 	addi	r2,r2,11008
 8003454:	80bffb15 	stw	r2,-20(r16)
 8003458:	0091d3b4 	movhi	r2,18254
 800345c:	109550c4 	addi	r2,r2,21827
 8003460:	80bffc15 	stw	r2,-16(r16)
 8003464:	00820034 	movhi	r2,2048
 8003468:	108cec04 	addi	r2,r2,13232
 800346c:	8809883a 	mov	r4,r17
 8003470:	80bffd15 	stw	r2,-12(r16)
 8003474:	8003d640 	call	8003d64 <_Unwind_SjLj_RaiseException>
 8003478:	8809883a 	mov	r4,r17
 800347c:	8002b040 	call	8002b04 <__cxa_begin_catch>
 8003480:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

08003484 <__cxa_rethrow>:
 8003484:	defffe04 	addi	sp,sp,-8
 8003488:	dfc00115 	stw	ra,4(sp)
 800348c:	dc000015 	stw	r16,0(sp)
 8003490:	8002de00 	call	8002de0 <__cxa_get_globals>
 8003494:	10c00117 	ldw	r3,4(r2)
 8003498:	11000017 	ldw	r4,0(r2)
 800349c:	18c00044 	addi	r3,r3,1
 80034a0:	10c00115 	stw	r3,4(r2)
 80034a4:	20001126 	beq	r4,zero,80034ec <__cxa_rethrow+0x68>
 80034a8:	21400b17 	ldw	r5,44(r4)
 80034ac:	01ef3574 	movhi	r7,48341
 80034b0:	39f54004 	addi	r7,r7,-11008
 80034b4:	29cf883a 	add	r7,r5,r7
 80034b8:	20c00c17 	ldw	r3,48(r4)
 80034bc:	394d803a 	cmpltu	r6,r7,r5
 80034c0:	016e2cb4 	movhi	r5,47282
 80034c4:	296aaf04 	addi	r5,r5,-21828
 80034c8:	1947883a 	add	r3,r3,r5
 80034cc:	30c7883a 	add	r3,r6,r3
 80034d0:	18000726 	beq	r3,zero,80034f0 <__cxa_rethrow+0x6c>
 80034d4:	10000015 	stw	zero,0(r2)
 80034d8:	24000b04 	addi	r16,r4,44
 80034dc:	8009883a 	mov	r4,r16
 80034e0:	8003ebc0 	call	8003ebc <_Unwind_SjLj_Resume_or_Rethrow>
 80034e4:	8009883a 	mov	r4,r16
 80034e8:	8002b040 	call	8002b04 <__cxa_begin_catch>
 80034ec:	8002d4c0 	call	8002d4c <_ZSt9terminatev>
 80034f0:	00c00044 	movi	r3,1
 80034f4:	19fff736 	bltu	r3,r7,80034d4 <__alt_data_end+0xf80034d4>
 80034f8:	20800517 	ldw	r2,20(r4)
 80034fc:	0085c83a 	sub	r2,zero,r2
 8003500:	20800515 	stw	r2,20(r4)
 8003504:	003ff406 	br	80034d8 <__alt_data_end+0xf80034d8>

08003508 <__cxa_call_terminate>:
 8003508:	defffe04 	addi	sp,sp,-8
 800350c:	dfc00115 	stw	ra,4(sp)
 8003510:	dc000015 	stw	r16,0(sp)
 8003514:	20000d26 	beq	r4,zero,800354c <__cxa_call_terminate+0x44>
 8003518:	2021883a 	mov	r16,r4
 800351c:	8002b040 	call	8002b04 <__cxa_begin_catch>
 8003520:	80c00017 	ldw	r3,0(r16)
 8003524:	016f3574 	movhi	r5,48341
 8003528:	29754004 	addi	r5,r5,-11008
 800352c:	194b883a 	add	r5,r3,r5
 8003530:	80800117 	ldw	r2,4(r16)
 8003534:	28c9803a 	cmpltu	r4,r5,r3
 8003538:	00ee2cb4 	movhi	r3,47282
 800353c:	18eaaf04 	addi	r3,r3,-21828
 8003540:	10c5883a 	add	r2,r2,r3
 8003544:	2085883a 	add	r2,r4,r2
 8003548:	10000126 	beq	r2,zero,8003550 <__cxa_call_terminate+0x48>
 800354c:	8002d4c0 	call	8002d4c <_ZSt9terminatev>
 8003550:	00800044 	movi	r2,1
 8003554:	117ffd36 	bltu	r2,r5,800354c <__alt_data_end+0xf800354c>
 8003558:	813ff817 	ldw	r4,-32(r16)
 800355c:	8002c8c0 	call	8002c8c <_ZN10__cxxabiv111__terminateEPFvvE>

08003560 <_ZN10__cxxabiv120__si_class_type_infoD1Ev>:
 8003560:	008200b4 	movhi	r2,2050
 8003564:	10bf1504 	addi	r2,r2,-940
 8003568:	20800015 	stw	r2,0(r4)
 800356c:	80031401 	jmpi	8003140 <_ZN10__cxxabiv117__class_type_infoD1Ev>

08003570 <_ZN10__cxxabiv120__si_class_type_infoD0Ev>:
 8003570:	defffe04 	addi	sp,sp,-8
 8003574:	008200b4 	movhi	r2,2050
 8003578:	dc000015 	stw	r16,0(sp)
 800357c:	dfc00115 	stw	ra,4(sp)
 8003580:	10bf1504 	addi	r2,r2,-940
 8003584:	20800015 	stw	r2,0(r4)
 8003588:	2021883a 	mov	r16,r4
 800358c:	80031400 	call	8003140 <_ZN10__cxxabiv117__class_type_infoD1Ev>
 8003590:	8009883a 	mov	r4,r16
 8003594:	dfc00117 	ldw	ra,4(sp)
 8003598:	dc000017 	ldw	r16,0(sp)
 800359c:	dec00204 	addi	sp,sp,8
 80035a0:	8001b141 	jmpi	8001b14 <_ZdlPv>

080035a4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE>:
 80035a4:	defff504 	addi	sp,sp,-44
 80035a8:	dc000115 	stw	r16,4(sp)
 80035ac:	38800117 	ldw	r2,4(r7)
 80035b0:	24000117 	ldw	r16,4(r4)
 80035b4:	df000915 	stw	fp,36(sp)
 80035b8:	ddc00815 	stw	r23,32(sp)
 80035bc:	dd800715 	stw	r22,28(sp)
 80035c0:	dcc00415 	stw	r19,16(sp)
 80035c4:	dc800315 	stw	r18,12(sp)
 80035c8:	dc400215 	stw	r17,8(sp)
 80035cc:	dfc00a15 	stw	ra,40(sp)
 80035d0:	dd400615 	stw	r21,24(sp)
 80035d4:	dd000515 	stw	r20,20(sp)
 80035d8:	2823883a 	mov	r17,r5
 80035dc:	3039883a 	mov	fp,r6
 80035e0:	dcc00b17 	ldw	r19,44(sp)
 80035e4:	ddc00c17 	ldw	r23,48(sp)
 80035e8:	dd800d17 	ldw	r22,52(sp)
 80035ec:	dc800e17 	ldw	r18,56(sp)
 80035f0:	80800b26 	beq	r16,r2,8003620 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x7c>
 80035f4:	80c00007 	ldb	r3,0(r16)
 80035f8:	2029883a 	mov	r20,r4
 80035fc:	01000a84 	movi	r4,42
 8003600:	382b883a 	mov	r21,r7
 8003604:	19001a26 	beq	r3,r4,8003670 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
 8003608:	100b883a 	mov	r5,r2
 800360c:	8009883a 	mov	r4,r16
 8003610:	d8c00015 	stw	r3,0(sp)
 8003614:	80051000 	call	8005100 <strcmp>
 8003618:	d8c00017 	ldw	r3,0(sp)
 800361c:	1000141e 	bne	r2,zero,8003670 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0xcc>
 8003620:	94c00015 	stw	r19,0(r18)
 8003624:	97000115 	stw	fp,4(r18)
 8003628:	88002816 	blt	r17,zero,80036cc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x128>
 800362c:	9c63883a 	add	r17,r19,r17
 8003630:	b4403226 	beq	r22,r17,80036fc <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x158>
 8003634:	00800044 	movi	r2,1
 8003638:	90800315 	stw	r2,12(r18)
 800363c:	0005883a 	mov	r2,zero
 8003640:	dfc00a17 	ldw	ra,40(sp)
 8003644:	df000917 	ldw	fp,36(sp)
 8003648:	ddc00817 	ldw	r23,32(sp)
 800364c:	dd800717 	ldw	r22,28(sp)
 8003650:	dd400617 	ldw	r21,24(sp)
 8003654:	dd000517 	ldw	r20,20(sp)
 8003658:	dcc00417 	ldw	r19,16(sp)
 800365c:	dc800317 	ldw	r18,12(sp)
 8003660:	dc400217 	ldw	r17,8(sp)
 8003664:	dc000117 	ldw	r16,4(sp)
 8003668:	dec00b04 	addi	sp,sp,44
 800366c:	f800283a 	ret
 8003670:	9d801926 	beq	r19,r22,80036d8 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x134>
 8003674:	a1000217 	ldw	r4,8(r20)
 8003678:	a80f883a 	mov	r7,r21
 800367c:	e00d883a 	mov	r6,fp
 8003680:	20800017 	ldw	r2,0(r4)
 8003684:	dc800e15 	stw	r18,56(sp)
 8003688:	dd800d15 	stw	r22,52(sp)
 800368c:	ddc00c15 	stw	r23,48(sp)
 8003690:	dcc00b15 	stw	r19,44(sp)
 8003694:	10800717 	ldw	r2,28(r2)
 8003698:	880b883a 	mov	r5,r17
 800369c:	dfc00a17 	ldw	ra,40(sp)
 80036a0:	df000917 	ldw	fp,36(sp)
 80036a4:	ddc00817 	ldw	r23,32(sp)
 80036a8:	dd800717 	ldw	r22,28(sp)
 80036ac:	dd400617 	ldw	r21,24(sp)
 80036b0:	dd000517 	ldw	r20,20(sp)
 80036b4:	dcc00417 	ldw	r19,16(sp)
 80036b8:	dc800317 	ldw	r18,12(sp)
 80036bc:	dc400217 	ldw	r17,8(sp)
 80036c0:	dc000117 	ldw	r16,4(sp)
 80036c4:	dec00b04 	addi	sp,sp,44
 80036c8:	1000683a 	jmp	r2
 80036cc:	00bfff84 	movi	r2,-2
 80036d0:	88bfda1e 	bne	r17,r2,800363c <__alt_data_end+0xf800363c>
 80036d4:	003fd706 	br	8003634 <__alt_data_end+0xf8003634>
 80036d8:	b9400117 	ldw	r5,4(r23)
 80036dc:	81400526 	beq	r16,r5,80036f4 <_ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE+0x150>
 80036e0:	00800a84 	movi	r2,42
 80036e4:	18bfe326 	beq	r3,r2,8003674 <__alt_data_end+0xf8003674>
 80036e8:	8009883a 	mov	r4,r16
 80036ec:	80051000 	call	8005100 <strcmp>
 80036f0:	103fe01e 	bne	r2,zero,8003674 <__alt_data_end+0xf8003674>
 80036f4:	97000215 	stw	fp,8(r18)
 80036f8:	003fd006 	br	800363c <__alt_data_end+0xf800363c>
 80036fc:	00800184 	movi	r2,6
 8003700:	003fcd06 	br	8003638 <__alt_data_end+0xf8003638>

08003704 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_>:
 8003704:	defffa04 	addi	sp,sp,-24
 8003708:	dc000215 	stw	r16,8(sp)
 800370c:	dc000617 	ldw	r16,24(sp)
 8003710:	dc800415 	stw	r18,16(sp)
 8003714:	dc400315 	stw	r17,12(sp)
 8003718:	dfc00515 	stw	ra,20(sp)
 800371c:	2023883a 	mov	r17,r4
 8003720:	2825883a 	mov	r18,r5
 8003724:	81800b26 	beq	r16,r6,8003754 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x50>
 8003728:	89000217 	ldw	r4,8(r17)
 800372c:	900b883a 	mov	r5,r18
 8003730:	20800017 	ldw	r2,0(r4)
 8003734:	dc000615 	stw	r16,24(sp)
 8003738:	10800817 	ldw	r2,32(r2)
 800373c:	dfc00517 	ldw	ra,20(sp)
 8003740:	dc800417 	ldw	r18,16(sp)
 8003744:	dc400317 	ldw	r17,12(sp)
 8003748:	dc000217 	ldw	r16,8(sp)
 800374c:	dec00604 	addi	sp,sp,24
 8003750:	1000683a 	jmp	r2
 8003754:	21000117 	ldw	r4,4(r4)
 8003758:	39400117 	ldw	r5,4(r7)
 800375c:	21400926 	beq	r4,r5,8003784 <_ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_+0x80>
 8003760:	20c00007 	ldb	r3,0(r4)
 8003764:	00800a84 	movi	r2,42
 8003768:	18bfef26 	beq	r3,r2,8003728 <__alt_data_end+0xf8003728>
 800376c:	d9800015 	stw	r6,0(sp)
 8003770:	d9c00115 	stw	r7,4(sp)
 8003774:	80051000 	call	8005100 <strcmp>
 8003778:	d9800017 	ldw	r6,0(sp)
 800377c:	d9c00117 	ldw	r7,4(sp)
 8003780:	103fe91e 	bne	r2,zero,8003728 <__alt_data_end+0xf8003728>
 8003784:	00800184 	movi	r2,6
 8003788:	dfc00517 	ldw	ra,20(sp)
 800378c:	dc800417 	ldw	r18,16(sp)
 8003790:	dc400317 	ldw	r17,12(sp)
 8003794:	dc000217 	ldw	r16,8(sp)
 8003798:	dec00604 	addi	sp,sp,24
 800379c:	f800283a 	ret

080037a0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE>:
 80037a0:	defffb04 	addi	sp,sp,-20
 80037a4:	dcc00315 	stw	r19,12(sp)
 80037a8:	dc800215 	stw	r18,8(sp)
 80037ac:	dc400115 	stw	r17,4(sp)
 80037b0:	dc000015 	stw	r16,0(sp)
 80037b4:	dfc00415 	stw	ra,16(sp)
 80037b8:	2027883a 	mov	r19,r4
 80037bc:	2821883a 	mov	r16,r5
 80037c0:	3023883a 	mov	r17,r6
 80037c4:	3825883a 	mov	r18,r7
 80037c8:	80031840 	call	8003184 <_ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE>
 80037cc:	10c03fcc 	andi	r3,r2,255
 80037d0:	18000726 	beq	r3,zero,80037f0 <_ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE+0x50>
 80037d4:	dfc00417 	ldw	ra,16(sp)
 80037d8:	dcc00317 	ldw	r19,12(sp)
 80037dc:	dc800217 	ldw	r18,8(sp)
 80037e0:	dc400117 	ldw	r17,4(sp)
 80037e4:	dc000017 	ldw	r16,0(sp)
 80037e8:	dec00504 	addi	sp,sp,20
 80037ec:	f800283a 	ret
 80037f0:	99000217 	ldw	r4,8(r19)
 80037f4:	900f883a 	mov	r7,r18
 80037f8:	880d883a 	mov	r6,r17
 80037fc:	20800017 	ldw	r2,0(r4)
 8003800:	800b883a 	mov	r5,r16
 8003804:	10800617 	ldw	r2,24(r2)
 8003808:	dfc00417 	ldw	ra,16(sp)
 800380c:	dcc00317 	ldw	r19,12(sp)
 8003810:	dc800217 	ldw	r18,8(sp)
 8003814:	dc400117 	ldw	r17,4(sp)
 8003818:	dc000017 	ldw	r16,0(sp)
 800381c:	dec00504 	addi	sp,sp,20
 8003820:	1000683a 	jmp	r2

08003824 <_ZNSt9type_infoD1Ev>:
 8003824:	f800283a 	ret

08003828 <_ZNKSt9type_info14__is_pointer_pEv>:
 8003828:	0005883a 	mov	r2,zero
 800382c:	f800283a 	ret

08003830 <_ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv>:
 8003830:	0005883a 	mov	r2,zero
 8003834:	f800283a 	ret

08003838 <_ZNSt9type_infoD0Ev>:
 8003838:	8001b141 	jmpi	8001b14 <_ZdlPv>

0800383c <_ZNKSt9type_info10__do_catchEPKS_PPvj>:
 800383c:	21000117 	ldw	r4,4(r4)
 8003840:	29400117 	ldw	r5,4(r5)
 8003844:	21400c26 	beq	r4,r5,8003878 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x3c>
 8003848:	20c00007 	ldb	r3,0(r4)
 800384c:	00800a84 	movi	r2,42
 8003850:	18800726 	beq	r3,r2,8003870 <_ZNKSt9type_info10__do_catchEPKS_PPvj+0x34>
 8003854:	deffff04 	addi	sp,sp,-4
 8003858:	dfc00015 	stw	ra,0(sp)
 800385c:	80051000 	call	8005100 <strcmp>
 8003860:	1005003a 	cmpeq	r2,r2,zero
 8003864:	dfc00017 	ldw	ra,0(sp)
 8003868:	dec00104 	addi	sp,sp,4
 800386c:	f800283a 	ret
 8003870:	0005883a 	mov	r2,zero
 8003874:	f800283a 	ret
 8003878:	00800044 	movi	r2,1
 800387c:	f800283a 	ret

08003880 <__cxa_pure_virtual>:
 8003880:	014200b4 	movhi	r5,2050
 8003884:	deffff04 	addi	sp,sp,-4
 8003888:	297f2a04 	addi	r5,r5,-856
 800388c:	018006c4 	movi	r6,27
 8003890:	01000084 	movi	r4,2
 8003894:	dfc00015 	stw	ra,0(sp)
 8003898:	801d3380 	call	801d338 <write>
 800389c:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

080038a0 <__cxa_deleted_virtual>:
 80038a0:	014200b4 	movhi	r5,2050
 80038a4:	deffff04 	addi	sp,sp,-4
 80038a8:	297f3104 	addi	r5,r5,-828
 80038ac:	01800784 	movi	r6,30
 80038b0:	01000084 	movi	r4,2
 80038b4:	dfc00015 	stw	ra,0(sp)
 80038b8:	801d3380 	call	801d338 <write>
 80038bc:	8002d4c0 	call	8002d4c <_ZSt9terminatev>

080038c0 <__divsi3>:
 80038c0:	20001b16 	blt	r4,zero,8003930 <__divsi3+0x70>
 80038c4:	000f883a 	mov	r7,zero
 80038c8:	28001616 	blt	r5,zero,8003924 <__divsi3+0x64>
 80038cc:	200d883a 	mov	r6,r4
 80038d0:	29001a2e 	bgeu	r5,r4,800393c <__divsi3+0x7c>
 80038d4:	00800804 	movi	r2,32
 80038d8:	00c00044 	movi	r3,1
 80038dc:	00000106 	br	80038e4 <__divsi3+0x24>
 80038e0:	10000d26 	beq	r2,zero,8003918 <__divsi3+0x58>
 80038e4:	294b883a 	add	r5,r5,r5
 80038e8:	10bfffc4 	addi	r2,r2,-1
 80038ec:	18c7883a 	add	r3,r3,r3
 80038f0:	293ffb36 	bltu	r5,r4,80038e0 <__alt_data_end+0xf80038e0>
 80038f4:	0005883a 	mov	r2,zero
 80038f8:	18000726 	beq	r3,zero,8003918 <__divsi3+0x58>
 80038fc:	0005883a 	mov	r2,zero
 8003900:	31400236 	bltu	r6,r5,800390c <__divsi3+0x4c>
 8003904:	314dc83a 	sub	r6,r6,r5
 8003908:	10c4b03a 	or	r2,r2,r3
 800390c:	1806d07a 	srli	r3,r3,1
 8003910:	280ad07a 	srli	r5,r5,1
 8003914:	183ffa1e 	bne	r3,zero,8003900 <__alt_data_end+0xf8003900>
 8003918:	38000126 	beq	r7,zero,8003920 <__divsi3+0x60>
 800391c:	0085c83a 	sub	r2,zero,r2
 8003920:	f800283a 	ret
 8003924:	014bc83a 	sub	r5,zero,r5
 8003928:	39c0005c 	xori	r7,r7,1
 800392c:	003fe706 	br	80038cc <__alt_data_end+0xf80038cc>
 8003930:	0109c83a 	sub	r4,zero,r4
 8003934:	01c00044 	movi	r7,1
 8003938:	003fe306 	br	80038c8 <__alt_data_end+0xf80038c8>
 800393c:	00c00044 	movi	r3,1
 8003940:	003fee06 	br	80038fc <__alt_data_end+0xf80038fc>

08003944 <__modsi3>:
 8003944:	20001716 	blt	r4,zero,80039a4 <__modsi3+0x60>
 8003948:	000f883a 	mov	r7,zero
 800394c:	2005883a 	mov	r2,r4
 8003950:	28001216 	blt	r5,zero,800399c <__modsi3+0x58>
 8003954:	2900162e 	bgeu	r5,r4,80039b0 <__modsi3+0x6c>
 8003958:	01800804 	movi	r6,32
 800395c:	00c00044 	movi	r3,1
 8003960:	00000106 	br	8003968 <__modsi3+0x24>
 8003964:	30000a26 	beq	r6,zero,8003990 <__modsi3+0x4c>
 8003968:	294b883a 	add	r5,r5,r5
 800396c:	31bfffc4 	addi	r6,r6,-1
 8003970:	18c7883a 	add	r3,r3,r3
 8003974:	293ffb36 	bltu	r5,r4,8003964 <__alt_data_end+0xf8003964>
 8003978:	18000526 	beq	r3,zero,8003990 <__modsi3+0x4c>
 800397c:	1806d07a 	srli	r3,r3,1
 8003980:	11400136 	bltu	r2,r5,8003988 <__modsi3+0x44>
 8003984:	1145c83a 	sub	r2,r2,r5
 8003988:	280ad07a 	srli	r5,r5,1
 800398c:	183ffb1e 	bne	r3,zero,800397c <__alt_data_end+0xf800397c>
 8003990:	38000126 	beq	r7,zero,8003998 <__modsi3+0x54>
 8003994:	0085c83a 	sub	r2,zero,r2
 8003998:	f800283a 	ret
 800399c:	014bc83a 	sub	r5,zero,r5
 80039a0:	003fec06 	br	8003954 <__alt_data_end+0xf8003954>
 80039a4:	0109c83a 	sub	r4,zero,r4
 80039a8:	01c00044 	movi	r7,1
 80039ac:	003fe706 	br	800394c <__alt_data_end+0xf800394c>
 80039b0:	00c00044 	movi	r3,1
 80039b4:	003ff106 	br	800397c <__alt_data_end+0xf800397c>

080039b8 <__udivsi3>:
 80039b8:	200d883a 	mov	r6,r4
 80039bc:	2900152e 	bgeu	r5,r4,8003a14 <__udivsi3+0x5c>
 80039c0:	28001416 	blt	r5,zero,8003a14 <__udivsi3+0x5c>
 80039c4:	00800804 	movi	r2,32
 80039c8:	00c00044 	movi	r3,1
 80039cc:	00000206 	br	80039d8 <__udivsi3+0x20>
 80039d0:	10000e26 	beq	r2,zero,8003a0c <__udivsi3+0x54>
 80039d4:	28000516 	blt	r5,zero,80039ec <__udivsi3+0x34>
 80039d8:	294b883a 	add	r5,r5,r5
 80039dc:	10bfffc4 	addi	r2,r2,-1
 80039e0:	18c7883a 	add	r3,r3,r3
 80039e4:	293ffa36 	bltu	r5,r4,80039d0 <__alt_data_end+0xf80039d0>
 80039e8:	18000826 	beq	r3,zero,8003a0c <__udivsi3+0x54>
 80039ec:	0005883a 	mov	r2,zero
 80039f0:	31400236 	bltu	r6,r5,80039fc <__udivsi3+0x44>
 80039f4:	314dc83a 	sub	r6,r6,r5
 80039f8:	10c4b03a 	or	r2,r2,r3
 80039fc:	1806d07a 	srli	r3,r3,1
 8003a00:	280ad07a 	srli	r5,r5,1
 8003a04:	183ffa1e 	bne	r3,zero,80039f0 <__alt_data_end+0xf80039f0>
 8003a08:	f800283a 	ret
 8003a0c:	0005883a 	mov	r2,zero
 8003a10:	f800283a 	ret
 8003a14:	00c00044 	movi	r3,1
 8003a18:	003ff406 	br	80039ec <__alt_data_end+0xf80039ec>

08003a1c <__umodsi3>:
 8003a1c:	2005883a 	mov	r2,r4
 8003a20:	2900122e 	bgeu	r5,r4,8003a6c <__umodsi3+0x50>
 8003a24:	28001116 	blt	r5,zero,8003a6c <__umodsi3+0x50>
 8003a28:	01800804 	movi	r6,32
 8003a2c:	00c00044 	movi	r3,1
 8003a30:	00000206 	br	8003a3c <__umodsi3+0x20>
 8003a34:	30000c26 	beq	r6,zero,8003a68 <__umodsi3+0x4c>
 8003a38:	28000516 	blt	r5,zero,8003a50 <__umodsi3+0x34>
 8003a3c:	294b883a 	add	r5,r5,r5
 8003a40:	31bfffc4 	addi	r6,r6,-1
 8003a44:	18c7883a 	add	r3,r3,r3
 8003a48:	293ffa36 	bltu	r5,r4,8003a34 <__alt_data_end+0xf8003a34>
 8003a4c:	18000626 	beq	r3,zero,8003a68 <__umodsi3+0x4c>
 8003a50:	1806d07a 	srli	r3,r3,1
 8003a54:	11400136 	bltu	r2,r5,8003a5c <__umodsi3+0x40>
 8003a58:	1145c83a 	sub	r2,r2,r5
 8003a5c:	280ad07a 	srli	r5,r5,1
 8003a60:	183ffb1e 	bne	r3,zero,8003a50 <__alt_data_end+0xf8003a50>
 8003a64:	f800283a 	ret
 8003a68:	f800283a 	ret
 8003a6c:	00c00044 	movi	r3,1
 8003a70:	003ff706 	br	8003a50 <__alt_data_end+0xf8003a50>

08003a74 <_Unwind_ForcedUnwind_Phase2>:
 8003a74:	defff404 	addi	sp,sp,-48
 8003a78:	dd800915 	stw	r22,36(sp)
 8003a7c:	058200b4 	movhi	r22,2050
 8003a80:	ddc00a15 	stw	r23,40(sp)
 8003a84:	dd400815 	stw	r21,32(sp)
 8003a88:	dd000715 	stw	r20,28(sp)
 8003a8c:	dcc00615 	stw	r19,24(sp)
 8003a90:	dc400415 	stw	r17,16(sp)
 8003a94:	dc000315 	stw	r16,12(sp)
 8003a98:	dfc00b15 	stw	ra,44(sp)
 8003a9c:	dc800515 	stw	r18,20(sp)
 8003aa0:	2021883a 	mov	r16,r4
 8003aa4:	2823883a 	mov	r17,r5
 8003aa8:	24c00317 	ldw	r19,12(r4)
 8003aac:	25000417 	ldw	r20,16(r4)
 8003ab0:	28c00017 	ldw	r3,0(r5)
 8003ab4:	b58f2504 	addi	r22,r22,15508
 8003ab8:	054001c4 	movi	r21,7
 8003abc:	05c00204 	movi	r23,8
 8003ac0:	00001606 	br	8003b1c <_Unwind_ForcedUnwind_Phase2+0xa8>
 8003ac4:	81800017 	ldw	r6,0(r16)
 8003ac8:	81c00117 	ldw	r7,4(r16)
 8003acc:	1c800617 	ldw	r18,24(r3)
 8003ad0:	dd000215 	stw	r20,8(sp)
 8003ad4:	dc400115 	stw	r17,4(sp)
 8003ad8:	dc000015 	stw	r16,0(sp)
 8003adc:	983ee83a 	callr	r19
 8003ae0:	01400284 	movi	r5,10
 8003ae4:	01000044 	movi	r4,1
 8003ae8:	1000241e 	bne	r2,zero,8003b7c <_Unwind_ForcedUnwind_Phase2+0x108>
 8003aec:	90000726 	beq	r18,zero,8003b0c <_Unwind_ForcedUnwind_Phase2+0x98>
 8003af0:	81800017 	ldw	r6,0(r16)
 8003af4:	81c00117 	ldw	r7,4(r16)
 8003af8:	dc400115 	stw	r17,4(sp)
 8003afc:	dc000015 	stw	r16,0(sp)
 8003b00:	903ee83a 	callr	r18
 8003b04:	15401f26 	beq	r2,r21,8003b84 <_Unwind_ForcedUnwind_Phase2+0x110>
 8003b08:	15c01c1e 	bne	r2,r23,8003b7c <_Unwind_ForcedUnwind_Phase2+0x108>
 8003b0c:	88800017 	ldw	r2,0(r17)
 8003b10:	10c00017 	ldw	r3,0(r2)
 8003b14:	b0c00015 	stw	r3,0(r22)
 8003b18:	88c00015 	stw	r3,0(r17)
 8003b1c:	01400284 	movi	r5,10
 8003b20:	01000044 	movi	r4,1
 8003b24:	183fe71e 	bne	r3,zero,8003ac4 <__alt_data_end+0xf8003ac4>
 8003b28:	81800017 	ldw	r6,0(r16)
 8003b2c:	81c00117 	ldw	r7,4(r16)
 8003b30:	01400684 	movi	r5,26
 8003b34:	dd000215 	stw	r20,8(sp)
 8003b38:	dc400115 	stw	r17,4(sp)
 8003b3c:	dc000015 	stw	r16,0(sp)
 8003b40:	01000044 	movi	r4,1
 8003b44:	983ee83a 	callr	r19
 8003b48:	10000c1e 	bne	r2,zero,8003b7c <_Unwind_ForcedUnwind_Phase2+0x108>
 8003b4c:	00800144 	movi	r2,5
 8003b50:	dfc00b17 	ldw	ra,44(sp)
 8003b54:	ddc00a17 	ldw	r23,40(sp)
 8003b58:	dd800917 	ldw	r22,36(sp)
 8003b5c:	dd400817 	ldw	r21,32(sp)
 8003b60:	dd000717 	ldw	r20,28(sp)
 8003b64:	dcc00617 	ldw	r19,24(sp)
 8003b68:	dc800517 	ldw	r18,20(sp)
 8003b6c:	dc400417 	ldw	r17,16(sp)
 8003b70:	dc000317 	ldw	r16,12(sp)
 8003b74:	dec00c04 	addi	sp,sp,48
 8003b78:	f800283a 	ret
 8003b7c:	00800084 	movi	r2,2
 8003b80:	003ff306 	br	8003b50 <__alt_data_end+0xf8003b50>
 8003b84:	a805883a 	mov	r2,r21
 8003b88:	003ff106 	br	8003b50 <__alt_data_end+0xf8003b50>

08003b8c <_Unwind_RaiseException_Phase2>:
 8003b8c:	28c00017 	ldw	r3,0(r5)
 8003b90:	defff804 	addi	sp,sp,-32
 8003b94:	dcc00515 	stw	r19,20(sp)
 8003b98:	dc800415 	stw	r18,16(sp)
 8003b9c:	dc400315 	stw	r17,12(sp)
 8003ba0:	dc000215 	stw	r16,8(sp)
 8003ba4:	dfc00715 	stw	ra,28(sp)
 8003ba8:	dd000615 	stw	r20,24(sp)
 8003bac:	2823883a 	mov	r17,r5
 8003bb0:	2021883a 	mov	r16,r4
 8003bb4:	048001c4 	movi	r18,7
 8003bb8:	04c00204 	movi	r19,8
 8003bbc:	18001326 	beq	r3,zero,8003c0c <_Unwind_RaiseException_Phase2+0x80>
 8003bc0:	81000417 	ldw	r4,16(r16)
 8003bc4:	1a000617 	ldw	r8,24(r3)
 8003bc8:	19001926 	beq	r3,r4,8003c30 <_Unwind_RaiseException_Phase2+0xa4>
 8003bcc:	40000c26 	beq	r8,zero,8003c00 <_Unwind_RaiseException_Phase2+0x74>
 8003bd0:	01400084 	movi	r5,2
 8003bd4:	0029883a 	mov	r20,zero
 8003bd8:	81800017 	ldw	r6,0(r16)
 8003bdc:	81c00117 	ldw	r7,4(r16)
 8003be0:	01000044 	movi	r4,1
 8003be4:	dc400115 	stw	r17,4(sp)
 8003be8:	dc000015 	stw	r16,0(sp)
 8003bec:	403ee83a 	callr	r8
 8003bf0:	14801326 	beq	r2,r18,8003c40 <_Unwind_RaiseException_Phase2+0xb4>
 8003bf4:	14c0051e 	bne	r2,r19,8003c0c <_Unwind_RaiseException_Phase2+0x80>
 8003bf8:	a000131e 	bne	r20,zero,8003c48 <_Unwind_RaiseException_Phase2+0xbc>
 8003bfc:	88c00017 	ldw	r3,0(r17)
 8003c00:	18c00017 	ldw	r3,0(r3)
 8003c04:	88c00015 	stw	r3,0(r17)
 8003c08:	183fed1e 	bne	r3,zero,8003bc0 <__alt_data_end+0xf8003bc0>
 8003c0c:	00800084 	movi	r2,2
 8003c10:	dfc00717 	ldw	ra,28(sp)
 8003c14:	dd000617 	ldw	r20,24(sp)
 8003c18:	dcc00517 	ldw	r19,20(sp)
 8003c1c:	dc800417 	ldw	r18,16(sp)
 8003c20:	dc400317 	ldw	r17,12(sp)
 8003c24:	dc000217 	ldw	r16,8(sp)
 8003c28:	dec00804 	addi	sp,sp,32
 8003c2c:	f800283a 	ret
 8003c30:	40000526 	beq	r8,zero,8003c48 <_Unwind_RaiseException_Phase2+0xbc>
 8003c34:	01400184 	movi	r5,6
 8003c38:	05000104 	movi	r20,4
 8003c3c:	003fe606 	br	8003bd8 <__alt_data_end+0xf8003bd8>
 8003c40:	9005883a 	mov	r2,r18
 8003c44:	003ff206 	br	8003c10 <__alt_data_end+0xf8003c10>
 8003c48:	8003f940 	call	8003f94 <abort>

08003c4c <uw_install_context.isra.1>:
 8003c4c:	20c00017 	ldw	r3,0(r4)
 8003c50:	deffff04 	addi	sp,sp,-4
 8003c54:	014200b4 	movhi	r5,2050
 8003c58:	19000917 	ldw	r4,36(r3)
 8003c5c:	df000015 	stw	fp,0(sp)
 8003c60:	18800804 	addi	r2,r3,32
 8003c64:	d839883a 	mov	fp,sp
 8003c68:	294f2504 	addi	r5,r5,15508
 8003c6c:	28c00015 	stw	r3,0(r5)
 8003c70:	17000017 	ldw	fp,0(r2)
 8003c74:	1ec00a17 	ldw	sp,40(r3)
 8003c78:	2000683a 	jmp	r4

08003c7c <_Unwind_SjLj_Register>:
 8003c7c:	008200b4 	movhi	r2,2050
 8003c80:	108f2504 	addi	r2,r2,15508
 8003c84:	10c00017 	ldw	r3,0(r2)
 8003c88:	11000015 	stw	r4,0(r2)
 8003c8c:	20c00015 	stw	r3,0(r4)
 8003c90:	f800283a 	ret

08003c94 <_Unwind_SjLj_Unregister>:
 8003c94:	20c00017 	ldw	r3,0(r4)
 8003c98:	008200b4 	movhi	r2,2050
 8003c9c:	108f2504 	addi	r2,r2,15508
 8003ca0:	10c00015 	stw	r3,0(r2)
 8003ca4:	f800283a 	ret

08003ca8 <_Unwind_GetGR>:
 8003ca8:	20800017 	ldw	r2,0(r4)
 8003cac:	29400084 	addi	r5,r5,2
 8003cb0:	294b883a 	add	r5,r5,r5
 8003cb4:	294b883a 	add	r5,r5,r5
 8003cb8:	114b883a 	add	r5,r2,r5
 8003cbc:	28800017 	ldw	r2,0(r5)
 8003cc0:	f800283a 	ret

08003cc4 <_Unwind_GetCFA>:
 8003cc4:	20800017 	ldw	r2,0(r4)
 8003cc8:	10000226 	beq	r2,zero,8003cd4 <_Unwind_GetCFA+0x10>
 8003ccc:	10800a17 	ldw	r2,40(r2)
 8003cd0:	f800283a 	ret
 8003cd4:	0005883a 	mov	r2,zero
 8003cd8:	f800283a 	ret

08003cdc <_Unwind_SetGR>:
 8003cdc:	20800017 	ldw	r2,0(r4)
 8003ce0:	29400084 	addi	r5,r5,2
 8003ce4:	294b883a 	add	r5,r5,r5
 8003ce8:	294b883a 	add	r5,r5,r5
 8003cec:	114b883a 	add	r5,r2,r5
 8003cf0:	29800015 	stw	r6,0(r5)
 8003cf4:	f800283a 	ret

08003cf8 <_Unwind_GetIP>:
 8003cf8:	20800017 	ldw	r2,0(r4)
 8003cfc:	10800117 	ldw	r2,4(r2)
 8003d00:	10800044 	addi	r2,r2,1
 8003d04:	f800283a 	ret

08003d08 <_Unwind_GetIPInfo>:
 8003d08:	20800017 	ldw	r2,0(r4)
 8003d0c:	28000015 	stw	zero,0(r5)
 8003d10:	10000326 	beq	r2,zero,8003d20 <_Unwind_GetIPInfo+0x18>
 8003d14:	10800117 	ldw	r2,4(r2)
 8003d18:	10800044 	addi	r2,r2,1
 8003d1c:	f800283a 	ret
 8003d20:	0005883a 	mov	r2,zero
 8003d24:	f800283a 	ret

08003d28 <_Unwind_SetIP>:
 8003d28:	20800017 	ldw	r2,0(r4)
 8003d2c:	297fffc4 	addi	r5,r5,-1
 8003d30:	11400115 	stw	r5,4(r2)
 8003d34:	f800283a 	ret

08003d38 <_Unwind_GetLanguageSpecificData>:
 8003d38:	20800017 	ldw	r2,0(r4)
 8003d3c:	10800717 	ldw	r2,28(r2)
 8003d40:	f800283a 	ret

08003d44 <_Unwind_GetRegionStart>:
 8003d44:	0005883a 	mov	r2,zero
 8003d48:	f800283a 	ret

08003d4c <_Unwind_FindEnclosingFunction>:
 8003d4c:	0005883a 	mov	r2,zero
 8003d50:	f800283a 	ret

08003d54 <_Unwind_GetDataRelBase>:
 8003d54:	0005883a 	mov	r2,zero
 8003d58:	f800283a 	ret

08003d5c <_Unwind_GetTextRelBase>:
 8003d5c:	0005883a 	mov	r2,zero
 8003d60:	f800283a 	ret

08003d64 <_Unwind_SjLj_RaiseException>:
 8003d64:	008200b4 	movhi	r2,2050
 8003d68:	defff804 	addi	sp,sp,-32
 8003d6c:	108f2504 	addi	r2,r2,15508
 8003d70:	dc800515 	stw	r18,20(sp)
 8003d74:	14800017 	ldw	r18,0(r2)
 8003d78:	dfc00715 	stw	ra,28(sp)
 8003d7c:	dcc00615 	stw	r19,24(sp)
 8003d80:	dc400415 	stw	r17,16(sp)
 8003d84:	dc000315 	stw	r16,12(sp)
 8003d88:	dc800215 	stw	r18,8(sp)
 8003d8c:	90001426 	beq	r18,zero,8003de0 <_Unwind_SjLj_RaiseException+0x7c>
 8003d90:	2021883a 	mov	r16,r4
 8003d94:	9005883a 	mov	r2,r18
 8003d98:	04400184 	movi	r17,6
 8003d9c:	04c00204 	movi	r19,8
 8003da0:	10800617 	ldw	r2,24(r2)
 8003da4:	10000a26 	beq	r2,zero,8003dd0 <_Unwind_SjLj_RaiseException+0x6c>
 8003da8:	81800017 	ldw	r6,0(r16)
 8003dac:	81c00117 	ldw	r7,4(r16)
 8003db0:	01400044 	movi	r5,1
 8003db4:	d8c00204 	addi	r3,sp,8
 8003db8:	d8c00115 	stw	r3,4(sp)
 8003dbc:	dc000015 	stw	r16,0(sp)
 8003dc0:	2809883a 	mov	r4,r5
 8003dc4:	103ee83a 	callr	r2
 8003dc8:	14400d26 	beq	r2,r17,8003e00 <_Unwind_SjLj_RaiseException+0x9c>
 8003dcc:	14c0171e 	bne	r2,r19,8003e2c <_Unwind_SjLj_RaiseException+0xc8>
 8003dd0:	d8800217 	ldw	r2,8(sp)
 8003dd4:	10800017 	ldw	r2,0(r2)
 8003dd8:	d8800215 	stw	r2,8(sp)
 8003ddc:	103ff01e 	bne	r2,zero,8003da0 <__alt_data_end+0xf8003da0>
 8003de0:	00800144 	movi	r2,5
 8003de4:	dfc00717 	ldw	ra,28(sp)
 8003de8:	dcc00617 	ldw	r19,24(sp)
 8003dec:	dc800517 	ldw	r18,20(sp)
 8003df0:	dc400417 	ldw	r17,16(sp)
 8003df4:	dc000317 	ldw	r16,12(sp)
 8003df8:	dec00804 	addi	sp,sp,32
 8003dfc:	f800283a 	ret
 8003e00:	d8800217 	ldw	r2,8(sp)
 8003e04:	80000315 	stw	zero,12(r16)
 8003e08:	d9400204 	addi	r5,sp,8
 8003e0c:	80800415 	stw	r2,16(r16)
 8003e10:	8009883a 	mov	r4,r16
 8003e14:	dc800215 	stw	r18,8(sp)
 8003e18:	8003b8c0 	call	8003b8c <_Unwind_RaiseException_Phase2>
 8003e1c:	00c001c4 	movi	r3,7
 8003e20:	10fff01e 	bne	r2,r3,8003de4 <__alt_data_end+0xf8003de4>
 8003e24:	d9000204 	addi	r4,sp,8
 8003e28:	8003c4c0 	call	8003c4c <uw_install_context.isra.1>
 8003e2c:	008000c4 	movi	r2,3
 8003e30:	003fec06 	br	8003de4 <__alt_data_end+0xf8003de4>

08003e34 <_Unwind_SjLj_ForcedUnwind>:
 8003e34:	00c200b4 	movhi	r3,2050
 8003e38:	18cf2504 	addi	r3,r3,15508
 8003e3c:	defffe04 	addi	sp,sp,-8
 8003e40:	18c00017 	ldw	r3,0(r3)
 8003e44:	dfc00115 	stw	ra,4(sp)
 8003e48:	21400315 	stw	r5,12(r4)
 8003e4c:	21800415 	stw	r6,16(r4)
 8003e50:	d80b883a 	mov	r5,sp
 8003e54:	d8c00015 	stw	r3,0(sp)
 8003e58:	8003a740 	call	8003a74 <_Unwind_ForcedUnwind_Phase2>
 8003e5c:	00c001c4 	movi	r3,7
 8003e60:	10c00326 	beq	r2,r3,8003e70 <_Unwind_SjLj_ForcedUnwind+0x3c>
 8003e64:	dfc00117 	ldw	ra,4(sp)
 8003e68:	dec00204 	addi	sp,sp,8
 8003e6c:	f800283a 	ret
 8003e70:	d809883a 	mov	r4,sp
 8003e74:	8003c4c0 	call	8003c4c <uw_install_context.isra.1>

08003e78 <_Unwind_SjLj_Resume>:
 8003e78:	00c200b4 	movhi	r3,2050
 8003e7c:	18cf2504 	addi	r3,r3,15508
 8003e80:	18c00017 	ldw	r3,0(r3)
 8003e84:	20800317 	ldw	r2,12(r4)
 8003e88:	defffe04 	addi	sp,sp,-8
 8003e8c:	dfc00115 	stw	ra,4(sp)
 8003e90:	d8c00015 	stw	r3,0(sp)
 8003e94:	d80b883a 	mov	r5,sp
 8003e98:	1000041e 	bne	r2,zero,8003eac <_Unwind_SjLj_Resume+0x34>
 8003e9c:	8003b8c0 	call	8003b8c <_Unwind_RaiseException_Phase2>
 8003ea0:	00c001c4 	movi	r3,7
 8003ea4:	10c00326 	beq	r2,r3,8003eb4 <_Unwind_SjLj_Resume+0x3c>
 8003ea8:	8003f940 	call	8003f94 <abort>
 8003eac:	8003a740 	call	8003a74 <_Unwind_ForcedUnwind_Phase2>
 8003eb0:	003ffb06 	br	8003ea0 <__alt_data_end+0xf8003ea0>
 8003eb4:	d809883a 	mov	r4,sp
 8003eb8:	8003c4c0 	call	8003c4c <uw_install_context.isra.1>

08003ebc <_Unwind_SjLj_Resume_or_Rethrow>:
 8003ebc:	20800317 	ldw	r2,12(r4)
 8003ec0:	defffe04 	addi	sp,sp,-8
 8003ec4:	dfc00115 	stw	ra,4(sp)
 8003ec8:	1000041e 	bne	r2,zero,8003edc <_Unwind_SjLj_Resume_or_Rethrow+0x20>
 8003ecc:	8003d640 	call	8003d64 <_Unwind_SjLj_RaiseException>
 8003ed0:	dfc00117 	ldw	ra,4(sp)
 8003ed4:	dec00204 	addi	sp,sp,8
 8003ed8:	f800283a 	ret
 8003edc:	008200b4 	movhi	r2,2050
 8003ee0:	108f2504 	addi	r2,r2,15508
 8003ee4:	10800017 	ldw	r2,0(r2)
 8003ee8:	d80b883a 	mov	r5,sp
 8003eec:	d8800015 	stw	r2,0(sp)
 8003ef0:	8003a740 	call	8003a74 <_Unwind_ForcedUnwind_Phase2>
 8003ef4:	00c001c4 	movi	r3,7
 8003ef8:	10c00126 	beq	r2,r3,8003f00 <_Unwind_SjLj_Resume_or_Rethrow+0x44>
 8003efc:	8003f940 	call	8003f94 <abort>
 8003f00:	d809883a 	mov	r4,sp
 8003f04:	8003c4c0 	call	8003c4c <uw_install_context.isra.1>

08003f08 <_Unwind_DeleteException>:
 8003f08:	20800217 	ldw	r2,8(r4)
 8003f0c:	10000326 	beq	r2,zero,8003f1c <_Unwind_DeleteException+0x14>
 8003f10:	200b883a 	mov	r5,r4
 8003f14:	01000044 	movi	r4,1
 8003f18:	1000683a 	jmp	r2
 8003f1c:	f800283a 	ret

08003f20 <_Unwind_Backtrace>:
 8003f20:	008200b4 	movhi	r2,2050
 8003f24:	108f2504 	addi	r2,r2,15508
 8003f28:	10800017 	ldw	r2,0(r2)
 8003f2c:	defffc04 	addi	sp,sp,-16
 8003f30:	dc400215 	stw	r17,8(sp)
 8003f34:	dc000115 	stw	r16,4(sp)
 8003f38:	dfc00315 	stw	ra,12(sp)
 8003f3c:	2023883a 	mov	r17,r4
 8003f40:	2821883a 	mov	r16,r5
 8003f44:	d8800015 	stw	r2,0(sp)
 8003f48:	00000506 	br	8003f60 <_Unwind_Backtrace+0x40>
 8003f4c:	883ee83a 	callr	r17
 8003f50:	10000e1e 	bne	r2,zero,8003f8c <_Unwind_Backtrace+0x6c>
 8003f54:	d8800017 	ldw	r2,0(sp)
 8003f58:	10800017 	ldw	r2,0(r2)
 8003f5c:	d8800015 	stw	r2,0(sp)
 8003f60:	800b883a 	mov	r5,r16
 8003f64:	d809883a 	mov	r4,sp
 8003f68:	103ff81e 	bne	r2,zero,8003f4c <__alt_data_end+0xf8003f4c>
 8003f6c:	883ee83a 	callr	r17
 8003f70:	1000061e 	bne	r2,zero,8003f8c <_Unwind_Backtrace+0x6c>
 8003f74:	00800144 	movi	r2,5
 8003f78:	dfc00317 	ldw	ra,12(sp)
 8003f7c:	dc400217 	ldw	r17,8(sp)
 8003f80:	dc000117 	ldw	r16,4(sp)
 8003f84:	dec00404 	addi	sp,sp,16
 8003f88:	f800283a 	ret
 8003f8c:	008000c4 	movi	r2,3
 8003f90:	003ff906 	br	8003f78 <__alt_data_end+0xf8003f78>

08003f94 <abort>:
 8003f94:	deffff04 	addi	sp,sp,-4
 8003f98:	01000184 	movi	r4,6
 8003f9c:	dfc00015 	stw	ra,0(sp)
 8003fa0:	8004d5c0 	call	8004d5c <raise>
 8003fa4:	01000044 	movi	r4,1
 8003fa8:	801c4e00 	call	801c4e0 <_exit>

08003fac <malloc>:
 8003fac:	008200b4 	movhi	r2,2050
 8003fb0:	10881404 	addi	r2,r2,8272
 8003fb4:	200b883a 	mov	r5,r4
 8003fb8:	11000017 	ldw	r4,0(r2)
 8003fbc:	8003fd41 	jmpi	8003fd4 <_malloc_r>

08003fc0 <free>:
 8003fc0:	008200b4 	movhi	r2,2050
 8003fc4:	10881404 	addi	r2,r2,8272
 8003fc8:	200b883a 	mov	r5,r4
 8003fcc:	11000017 	ldw	r4,0(r2)
 8003fd0:	800ec501 	jmpi	800ec50 <_free_r>

08003fd4 <_malloc_r>:
 8003fd4:	defff504 	addi	sp,sp,-44
 8003fd8:	dc800315 	stw	r18,12(sp)
 8003fdc:	dfc00a15 	stw	ra,40(sp)
 8003fe0:	df000915 	stw	fp,36(sp)
 8003fe4:	ddc00815 	stw	r23,32(sp)
 8003fe8:	dd800715 	stw	r22,28(sp)
 8003fec:	dd400615 	stw	r21,24(sp)
 8003ff0:	dd000515 	stw	r20,20(sp)
 8003ff4:	dcc00415 	stw	r19,16(sp)
 8003ff8:	dc400215 	stw	r17,8(sp)
 8003ffc:	dc000115 	stw	r16,4(sp)
 8004000:	288002c4 	addi	r2,r5,11
 8004004:	00c00584 	movi	r3,22
 8004008:	2025883a 	mov	r18,r4
 800400c:	18807f2e 	bgeu	r3,r2,800420c <_malloc_r+0x238>
 8004010:	047ffe04 	movi	r17,-8
 8004014:	1462703a 	and	r17,r2,r17
 8004018:	8800a316 	blt	r17,zero,80042a8 <_malloc_r+0x2d4>
 800401c:	8940a236 	bltu	r17,r5,80042a8 <_malloc_r+0x2d4>
 8004020:	801cc400 	call	801cc40 <__malloc_lock>
 8004024:	00807dc4 	movi	r2,503
 8004028:	1441e92e 	bgeu	r2,r17,80047d0 <_malloc_r+0x7fc>
 800402c:	8804d27a 	srli	r2,r17,9
 8004030:	1000a126 	beq	r2,zero,80042b8 <_malloc_r+0x2e4>
 8004034:	00c00104 	movi	r3,4
 8004038:	18811e36 	bltu	r3,r2,80044b4 <_malloc_r+0x4e0>
 800403c:	8804d1ba 	srli	r2,r17,6
 8004040:	12000e44 	addi	r8,r2,57
 8004044:	11c00e04 	addi	r7,r2,56
 8004048:	4209883a 	add	r4,r8,r8
 800404c:	04c200b4 	movhi	r19,2050
 8004050:	2109883a 	add	r4,r4,r4
 8004054:	9cc12104 	addi	r19,r19,1156
 8004058:	2109883a 	add	r4,r4,r4
 800405c:	9909883a 	add	r4,r19,r4
 8004060:	24000117 	ldw	r16,4(r4)
 8004064:	213ffe04 	addi	r4,r4,-8
 8004068:	24009726 	beq	r4,r16,80042c8 <_malloc_r+0x2f4>
 800406c:	80800117 	ldw	r2,4(r16)
 8004070:	01bfff04 	movi	r6,-4
 8004074:	014003c4 	movi	r5,15
 8004078:	1184703a 	and	r2,r2,r6
 800407c:	1447c83a 	sub	r3,r2,r17
 8004080:	28c00716 	blt	r5,r3,80040a0 <_malloc_r+0xcc>
 8004084:	1800920e 	bge	r3,zero,80042d0 <_malloc_r+0x2fc>
 8004088:	84000317 	ldw	r16,12(r16)
 800408c:	24008e26 	beq	r4,r16,80042c8 <_malloc_r+0x2f4>
 8004090:	80800117 	ldw	r2,4(r16)
 8004094:	1184703a 	and	r2,r2,r6
 8004098:	1447c83a 	sub	r3,r2,r17
 800409c:	28fff90e 	bge	r5,r3,8004084 <__alt_data_end+0xf8004084>
 80040a0:	3809883a 	mov	r4,r7
 80040a4:	018200b4 	movhi	r6,2050
 80040a8:	9c000417 	ldw	r16,16(r19)
 80040ac:	31812104 	addi	r6,r6,1156
 80040b0:	32000204 	addi	r8,r6,8
 80040b4:	82013426 	beq	r16,r8,8004588 <_malloc_r+0x5b4>
 80040b8:	80c00117 	ldw	r3,4(r16)
 80040bc:	00bfff04 	movi	r2,-4
 80040c0:	188e703a 	and	r7,r3,r2
 80040c4:	3c45c83a 	sub	r2,r7,r17
 80040c8:	00c003c4 	movi	r3,15
 80040cc:	18811f16 	blt	r3,r2,800454c <_malloc_r+0x578>
 80040d0:	32000515 	stw	r8,20(r6)
 80040d4:	32000415 	stw	r8,16(r6)
 80040d8:	10007f0e 	bge	r2,zero,80042d8 <_malloc_r+0x304>
 80040dc:	00807fc4 	movi	r2,511
 80040e0:	11c0fd36 	bltu	r2,r7,80044d8 <_malloc_r+0x504>
 80040e4:	3806d0fa 	srli	r3,r7,3
 80040e8:	01c00044 	movi	r7,1
 80040ec:	30800117 	ldw	r2,4(r6)
 80040f0:	19400044 	addi	r5,r3,1
 80040f4:	294b883a 	add	r5,r5,r5
 80040f8:	1807d0ba 	srai	r3,r3,2
 80040fc:	294b883a 	add	r5,r5,r5
 8004100:	294b883a 	add	r5,r5,r5
 8004104:	298b883a 	add	r5,r5,r6
 8004108:	38c6983a 	sll	r3,r7,r3
 800410c:	29c00017 	ldw	r7,0(r5)
 8004110:	2a7ffe04 	addi	r9,r5,-8
 8004114:	1886b03a 	or	r3,r3,r2
 8004118:	82400315 	stw	r9,12(r16)
 800411c:	81c00215 	stw	r7,8(r16)
 8004120:	30c00115 	stw	r3,4(r6)
 8004124:	2c000015 	stw	r16,0(r5)
 8004128:	3c000315 	stw	r16,12(r7)
 800412c:	2005d0ba 	srai	r2,r4,2
 8004130:	01400044 	movi	r5,1
 8004134:	288a983a 	sll	r5,r5,r2
 8004138:	19406f36 	bltu	r3,r5,80042f8 <_malloc_r+0x324>
 800413c:	28c4703a 	and	r2,r5,r3
 8004140:	10000a1e 	bne	r2,zero,800416c <_malloc_r+0x198>
 8004144:	00bfff04 	movi	r2,-4
 8004148:	294b883a 	add	r5,r5,r5
 800414c:	2088703a 	and	r4,r4,r2
 8004150:	28c4703a 	and	r2,r5,r3
 8004154:	21000104 	addi	r4,r4,4
 8004158:	1000041e 	bne	r2,zero,800416c <_malloc_r+0x198>
 800415c:	294b883a 	add	r5,r5,r5
 8004160:	28c4703a 	and	r2,r5,r3
 8004164:	21000104 	addi	r4,r4,4
 8004168:	103ffc26 	beq	r2,zero,800415c <__alt_data_end+0xf800415c>
 800416c:	02bfff04 	movi	r10,-4
 8004170:	024003c4 	movi	r9,15
 8004174:	21800044 	addi	r6,r4,1
 8004178:	318d883a 	add	r6,r6,r6
 800417c:	318d883a 	add	r6,r6,r6
 8004180:	318d883a 	add	r6,r6,r6
 8004184:	998d883a 	add	r6,r19,r6
 8004188:	333ffe04 	addi	r12,r6,-8
 800418c:	2017883a 	mov	r11,r4
 8004190:	31800104 	addi	r6,r6,4
 8004194:	34000017 	ldw	r16,0(r6)
 8004198:	31fffd04 	addi	r7,r6,-12
 800419c:	81c0041e 	bne	r16,r7,80041b0 <_malloc_r+0x1dc>
 80041a0:	0000fb06 	br	8004590 <_malloc_r+0x5bc>
 80041a4:	1801030e 	bge	r3,zero,80045b4 <_malloc_r+0x5e0>
 80041a8:	84000317 	ldw	r16,12(r16)
 80041ac:	81c0f826 	beq	r16,r7,8004590 <_malloc_r+0x5bc>
 80041b0:	80800117 	ldw	r2,4(r16)
 80041b4:	1284703a 	and	r2,r2,r10
 80041b8:	1447c83a 	sub	r3,r2,r17
 80041bc:	48fff90e 	bge	r9,r3,80041a4 <__alt_data_end+0xf80041a4>
 80041c0:	80800317 	ldw	r2,12(r16)
 80041c4:	81000217 	ldw	r4,8(r16)
 80041c8:	89400054 	ori	r5,r17,1
 80041cc:	81400115 	stw	r5,4(r16)
 80041d0:	20800315 	stw	r2,12(r4)
 80041d4:	11000215 	stw	r4,8(r2)
 80041d8:	8463883a 	add	r17,r16,r17
 80041dc:	9c400515 	stw	r17,20(r19)
 80041e0:	9c400415 	stw	r17,16(r19)
 80041e4:	18800054 	ori	r2,r3,1
 80041e8:	88800115 	stw	r2,4(r17)
 80041ec:	8a000315 	stw	r8,12(r17)
 80041f0:	8a000215 	stw	r8,8(r17)
 80041f4:	88e3883a 	add	r17,r17,r3
 80041f8:	88c00015 	stw	r3,0(r17)
 80041fc:	9009883a 	mov	r4,r18
 8004200:	801cc640 	call	801cc64 <__malloc_unlock>
 8004204:	80800204 	addi	r2,r16,8
 8004208:	00001b06 	br	8004278 <_malloc_r+0x2a4>
 800420c:	04400404 	movi	r17,16
 8004210:	89402536 	bltu	r17,r5,80042a8 <_malloc_r+0x2d4>
 8004214:	801cc400 	call	801cc40 <__malloc_lock>
 8004218:	00800184 	movi	r2,6
 800421c:	01000084 	movi	r4,2
 8004220:	04c200b4 	movhi	r19,2050
 8004224:	1085883a 	add	r2,r2,r2
 8004228:	9cc12104 	addi	r19,r19,1156
 800422c:	1085883a 	add	r2,r2,r2
 8004230:	9885883a 	add	r2,r19,r2
 8004234:	14000117 	ldw	r16,4(r2)
 8004238:	10fffe04 	addi	r3,r2,-8
 800423c:	80c0d926 	beq	r16,r3,80045a4 <_malloc_r+0x5d0>
 8004240:	80c00117 	ldw	r3,4(r16)
 8004244:	81000317 	ldw	r4,12(r16)
 8004248:	00bfff04 	movi	r2,-4
 800424c:	1884703a 	and	r2,r3,r2
 8004250:	81400217 	ldw	r5,8(r16)
 8004254:	8085883a 	add	r2,r16,r2
 8004258:	10c00117 	ldw	r3,4(r2)
 800425c:	29000315 	stw	r4,12(r5)
 8004260:	21400215 	stw	r5,8(r4)
 8004264:	18c00054 	ori	r3,r3,1
 8004268:	10c00115 	stw	r3,4(r2)
 800426c:	9009883a 	mov	r4,r18
 8004270:	801cc640 	call	801cc64 <__malloc_unlock>
 8004274:	80800204 	addi	r2,r16,8
 8004278:	dfc00a17 	ldw	ra,40(sp)
 800427c:	df000917 	ldw	fp,36(sp)
 8004280:	ddc00817 	ldw	r23,32(sp)
 8004284:	dd800717 	ldw	r22,28(sp)
 8004288:	dd400617 	ldw	r21,24(sp)
 800428c:	dd000517 	ldw	r20,20(sp)
 8004290:	dcc00417 	ldw	r19,16(sp)
 8004294:	dc800317 	ldw	r18,12(sp)
 8004298:	dc400217 	ldw	r17,8(sp)
 800429c:	dc000117 	ldw	r16,4(sp)
 80042a0:	dec00b04 	addi	sp,sp,44
 80042a4:	f800283a 	ret
 80042a8:	00800304 	movi	r2,12
 80042ac:	90800015 	stw	r2,0(r18)
 80042b0:	0005883a 	mov	r2,zero
 80042b4:	003ff006 	br	8004278 <__alt_data_end+0xf8004278>
 80042b8:	01002004 	movi	r4,128
 80042bc:	02001004 	movi	r8,64
 80042c0:	01c00fc4 	movi	r7,63
 80042c4:	003f6106 	br	800404c <__alt_data_end+0xf800404c>
 80042c8:	4009883a 	mov	r4,r8
 80042cc:	003f7506 	br	80040a4 <__alt_data_end+0xf80040a4>
 80042d0:	81000317 	ldw	r4,12(r16)
 80042d4:	003fde06 	br	8004250 <__alt_data_end+0xf8004250>
 80042d8:	81c5883a 	add	r2,r16,r7
 80042dc:	11400117 	ldw	r5,4(r2)
 80042e0:	9009883a 	mov	r4,r18
 80042e4:	29400054 	ori	r5,r5,1
 80042e8:	11400115 	stw	r5,4(r2)
 80042ec:	801cc640 	call	801cc64 <__malloc_unlock>
 80042f0:	80800204 	addi	r2,r16,8
 80042f4:	003fe006 	br	8004278 <__alt_data_end+0xf8004278>
 80042f8:	9c000217 	ldw	r16,8(r19)
 80042fc:	00bfff04 	movi	r2,-4
 8004300:	85800117 	ldw	r22,4(r16)
 8004304:	b0ac703a 	and	r22,r22,r2
 8004308:	b4400336 	bltu	r22,r17,8004318 <_malloc_r+0x344>
 800430c:	b445c83a 	sub	r2,r22,r17
 8004310:	00c003c4 	movi	r3,15
 8004314:	18805d16 	blt	r3,r2,800448c <_malloc_r+0x4b8>
 8004318:	05c200b4 	movhi	r23,2050
 800431c:	008200b4 	movhi	r2,2050
 8004320:	108f2804 	addi	r2,r2,15520
 8004324:	bdc81004 	addi	r23,r23,8256
 8004328:	15400017 	ldw	r21,0(r2)
 800432c:	b8c00017 	ldw	r3,0(r23)
 8004330:	00bfffc4 	movi	r2,-1
 8004334:	858d883a 	add	r6,r16,r22
 8004338:	8d6b883a 	add	r21,r17,r21
 800433c:	1880ea26 	beq	r3,r2,80046e8 <_malloc_r+0x714>
 8004340:	ad4403c4 	addi	r21,r21,4111
 8004344:	00bc0004 	movi	r2,-4096
 8004348:	a8aa703a 	and	r21,r21,r2
 800434c:	a80b883a 	mov	r5,r21
 8004350:	9009883a 	mov	r4,r18
 8004354:	d9800015 	stw	r6,0(sp)
 8004358:	8004a480 	call	8004a48 <_sbrk_r>
 800435c:	1029883a 	mov	r20,r2
 8004360:	00bfffc4 	movi	r2,-1
 8004364:	d9800017 	ldw	r6,0(sp)
 8004368:	a080e826 	beq	r20,r2,800470c <_malloc_r+0x738>
 800436c:	a180a636 	bltu	r20,r6,8004608 <_malloc_r+0x634>
 8004370:	070200b4 	movhi	fp,2050
 8004374:	e70f3804 	addi	fp,fp,15584
 8004378:	e0800017 	ldw	r2,0(fp)
 800437c:	a887883a 	add	r3,r21,r2
 8004380:	e0c00015 	stw	r3,0(fp)
 8004384:	3500e626 	beq	r6,r20,8004720 <_malloc_r+0x74c>
 8004388:	b9000017 	ldw	r4,0(r23)
 800438c:	00bfffc4 	movi	r2,-1
 8004390:	2080ee26 	beq	r4,r2,800474c <_malloc_r+0x778>
 8004394:	a185c83a 	sub	r2,r20,r6
 8004398:	10c5883a 	add	r2,r2,r3
 800439c:	e0800015 	stw	r2,0(fp)
 80043a0:	a0c001cc 	andi	r3,r20,7
 80043a4:	1800bc26 	beq	r3,zero,8004698 <_malloc_r+0x6c4>
 80043a8:	a0e9c83a 	sub	r20,r20,r3
 80043ac:	00840204 	movi	r2,4104
 80043b0:	a5000204 	addi	r20,r20,8
 80043b4:	10c7c83a 	sub	r3,r2,r3
 80043b8:	a545883a 	add	r2,r20,r21
 80043bc:	1083ffcc 	andi	r2,r2,4095
 80043c0:	18abc83a 	sub	r21,r3,r2
 80043c4:	a80b883a 	mov	r5,r21
 80043c8:	9009883a 	mov	r4,r18
 80043cc:	8004a480 	call	8004a48 <_sbrk_r>
 80043d0:	00ffffc4 	movi	r3,-1
 80043d4:	10c0e126 	beq	r2,r3,800475c <_malloc_r+0x788>
 80043d8:	1505c83a 	sub	r2,r2,r20
 80043dc:	1545883a 	add	r2,r2,r21
 80043e0:	10800054 	ori	r2,r2,1
 80043e4:	e0c00017 	ldw	r3,0(fp)
 80043e8:	9d000215 	stw	r20,8(r19)
 80043ec:	a0800115 	stw	r2,4(r20)
 80043f0:	a8c7883a 	add	r3,r21,r3
 80043f4:	e0c00015 	stw	r3,0(fp)
 80043f8:	84c00e26 	beq	r16,r19,8004434 <_malloc_r+0x460>
 80043fc:	018003c4 	movi	r6,15
 8004400:	3580a72e 	bgeu	r6,r22,80046a0 <_malloc_r+0x6cc>
 8004404:	81400117 	ldw	r5,4(r16)
 8004408:	013ffe04 	movi	r4,-8
 800440c:	b0bffd04 	addi	r2,r22,-12
 8004410:	1104703a 	and	r2,r2,r4
 8004414:	2900004c 	andi	r4,r5,1
 8004418:	2088b03a 	or	r4,r4,r2
 800441c:	81000115 	stw	r4,4(r16)
 8004420:	01400144 	movi	r5,5
 8004424:	8089883a 	add	r4,r16,r2
 8004428:	21400115 	stw	r5,4(r4)
 800442c:	21400215 	stw	r5,8(r4)
 8004430:	3080cd36 	bltu	r6,r2,8004768 <_malloc_r+0x794>
 8004434:	008200b4 	movhi	r2,2050
 8004438:	108f2704 	addi	r2,r2,15516
 800443c:	11000017 	ldw	r4,0(r2)
 8004440:	20c0012e 	bgeu	r4,r3,8004448 <_malloc_r+0x474>
 8004444:	10c00015 	stw	r3,0(r2)
 8004448:	008200b4 	movhi	r2,2050
 800444c:	108f2604 	addi	r2,r2,15512
 8004450:	11000017 	ldw	r4,0(r2)
 8004454:	9c000217 	ldw	r16,8(r19)
 8004458:	20c0012e 	bgeu	r4,r3,8004460 <_malloc_r+0x48c>
 800445c:	10c00015 	stw	r3,0(r2)
 8004460:	80c00117 	ldw	r3,4(r16)
 8004464:	00bfff04 	movi	r2,-4
 8004468:	1886703a 	and	r3,r3,r2
 800446c:	1c45c83a 	sub	r2,r3,r17
 8004470:	1c400236 	bltu	r3,r17,800447c <_malloc_r+0x4a8>
 8004474:	00c003c4 	movi	r3,15
 8004478:	18800416 	blt	r3,r2,800448c <_malloc_r+0x4b8>
 800447c:	9009883a 	mov	r4,r18
 8004480:	801cc640 	call	801cc64 <__malloc_unlock>
 8004484:	0005883a 	mov	r2,zero
 8004488:	003f7b06 	br	8004278 <__alt_data_end+0xf8004278>
 800448c:	88c00054 	ori	r3,r17,1
 8004490:	80c00115 	stw	r3,4(r16)
 8004494:	8463883a 	add	r17,r16,r17
 8004498:	10800054 	ori	r2,r2,1
 800449c:	9c400215 	stw	r17,8(r19)
 80044a0:	88800115 	stw	r2,4(r17)
 80044a4:	9009883a 	mov	r4,r18
 80044a8:	801cc640 	call	801cc64 <__malloc_unlock>
 80044ac:	80800204 	addi	r2,r16,8
 80044b0:	003f7106 	br	8004278 <__alt_data_end+0xf8004278>
 80044b4:	00c00504 	movi	r3,20
 80044b8:	18804a2e 	bgeu	r3,r2,80045e4 <_malloc_r+0x610>
 80044bc:	00c01504 	movi	r3,84
 80044c0:	18806e36 	bltu	r3,r2,800467c <_malloc_r+0x6a8>
 80044c4:	8804d33a 	srli	r2,r17,12
 80044c8:	12001bc4 	addi	r8,r2,111
 80044cc:	11c01b84 	addi	r7,r2,110
 80044d0:	4209883a 	add	r4,r8,r8
 80044d4:	003edd06 	br	800404c <__alt_data_end+0xf800404c>
 80044d8:	3804d27a 	srli	r2,r7,9
 80044dc:	00c00104 	movi	r3,4
 80044e0:	1880442e 	bgeu	r3,r2,80045f4 <_malloc_r+0x620>
 80044e4:	00c00504 	movi	r3,20
 80044e8:	18808136 	bltu	r3,r2,80046f0 <_malloc_r+0x71c>
 80044ec:	11401704 	addi	r5,r2,92
 80044f0:	10c016c4 	addi	r3,r2,91
 80044f4:	294b883a 	add	r5,r5,r5
 80044f8:	294b883a 	add	r5,r5,r5
 80044fc:	294b883a 	add	r5,r5,r5
 8004500:	994b883a 	add	r5,r19,r5
 8004504:	28800017 	ldw	r2,0(r5)
 8004508:	018200b4 	movhi	r6,2050
 800450c:	297ffe04 	addi	r5,r5,-8
 8004510:	31812104 	addi	r6,r6,1156
 8004514:	28806526 	beq	r5,r2,80046ac <_malloc_r+0x6d8>
 8004518:	01bfff04 	movi	r6,-4
 800451c:	10c00117 	ldw	r3,4(r2)
 8004520:	1986703a 	and	r3,r3,r6
 8004524:	38c0022e 	bgeu	r7,r3,8004530 <_malloc_r+0x55c>
 8004528:	10800217 	ldw	r2,8(r2)
 800452c:	28bffb1e 	bne	r5,r2,800451c <__alt_data_end+0xf800451c>
 8004530:	11400317 	ldw	r5,12(r2)
 8004534:	98c00117 	ldw	r3,4(r19)
 8004538:	81400315 	stw	r5,12(r16)
 800453c:	80800215 	stw	r2,8(r16)
 8004540:	2c000215 	stw	r16,8(r5)
 8004544:	14000315 	stw	r16,12(r2)
 8004548:	003ef806 	br	800412c <__alt_data_end+0xf800412c>
 800454c:	88c00054 	ori	r3,r17,1
 8004550:	80c00115 	stw	r3,4(r16)
 8004554:	8463883a 	add	r17,r16,r17
 8004558:	34400515 	stw	r17,20(r6)
 800455c:	34400415 	stw	r17,16(r6)
 8004560:	10c00054 	ori	r3,r2,1
 8004564:	8a000315 	stw	r8,12(r17)
 8004568:	8a000215 	stw	r8,8(r17)
 800456c:	88c00115 	stw	r3,4(r17)
 8004570:	88a3883a 	add	r17,r17,r2
 8004574:	88800015 	stw	r2,0(r17)
 8004578:	9009883a 	mov	r4,r18
 800457c:	801cc640 	call	801cc64 <__malloc_unlock>
 8004580:	80800204 	addi	r2,r16,8
 8004584:	003f3c06 	br	8004278 <__alt_data_end+0xf8004278>
 8004588:	30c00117 	ldw	r3,4(r6)
 800458c:	003ee706 	br	800412c <__alt_data_end+0xf800412c>
 8004590:	5ac00044 	addi	r11,r11,1
 8004594:	588000cc 	andi	r2,r11,3
 8004598:	31800204 	addi	r6,r6,8
 800459c:	103efd1e 	bne	r2,zero,8004194 <__alt_data_end+0xf8004194>
 80045a0:	00002406 	br	8004634 <_malloc_r+0x660>
 80045a4:	14000317 	ldw	r16,12(r2)
 80045a8:	143f251e 	bne	r2,r16,8004240 <__alt_data_end+0xf8004240>
 80045ac:	21000084 	addi	r4,r4,2
 80045b0:	003ebc06 	br	80040a4 <__alt_data_end+0xf80040a4>
 80045b4:	8085883a 	add	r2,r16,r2
 80045b8:	10c00117 	ldw	r3,4(r2)
 80045bc:	81000317 	ldw	r4,12(r16)
 80045c0:	81400217 	ldw	r5,8(r16)
 80045c4:	18c00054 	ori	r3,r3,1
 80045c8:	10c00115 	stw	r3,4(r2)
 80045cc:	29000315 	stw	r4,12(r5)
 80045d0:	21400215 	stw	r5,8(r4)
 80045d4:	9009883a 	mov	r4,r18
 80045d8:	801cc640 	call	801cc64 <__malloc_unlock>
 80045dc:	80800204 	addi	r2,r16,8
 80045e0:	003f2506 	br	8004278 <__alt_data_end+0xf8004278>
 80045e4:	12001704 	addi	r8,r2,92
 80045e8:	11c016c4 	addi	r7,r2,91
 80045ec:	4209883a 	add	r4,r8,r8
 80045f0:	003e9606 	br	800404c <__alt_data_end+0xf800404c>
 80045f4:	3804d1ba 	srli	r2,r7,6
 80045f8:	11400e44 	addi	r5,r2,57
 80045fc:	10c00e04 	addi	r3,r2,56
 8004600:	294b883a 	add	r5,r5,r5
 8004604:	003fbc06 	br	80044f8 <__alt_data_end+0xf80044f8>
 8004608:	84ff5926 	beq	r16,r19,8004370 <__alt_data_end+0xf8004370>
 800460c:	008200b4 	movhi	r2,2050
 8004610:	10812104 	addi	r2,r2,1156
 8004614:	14000217 	ldw	r16,8(r2)
 8004618:	00bfff04 	movi	r2,-4
 800461c:	80c00117 	ldw	r3,4(r16)
 8004620:	1886703a 	and	r3,r3,r2
 8004624:	003f9106 	br	800446c <__alt_data_end+0xf800446c>
 8004628:	60800217 	ldw	r2,8(r12)
 800462c:	213fffc4 	addi	r4,r4,-1
 8004630:	1300651e 	bne	r2,r12,80047c8 <_malloc_r+0x7f4>
 8004634:	208000cc 	andi	r2,r4,3
 8004638:	633ffe04 	addi	r12,r12,-8
 800463c:	103ffa1e 	bne	r2,zero,8004628 <__alt_data_end+0xf8004628>
 8004640:	98800117 	ldw	r2,4(r19)
 8004644:	0146303a 	nor	r3,zero,r5
 8004648:	1884703a 	and	r2,r3,r2
 800464c:	98800115 	stw	r2,4(r19)
 8004650:	294b883a 	add	r5,r5,r5
 8004654:	117f2836 	bltu	r2,r5,80042f8 <__alt_data_end+0xf80042f8>
 8004658:	283f2726 	beq	r5,zero,80042f8 <__alt_data_end+0xf80042f8>
 800465c:	2886703a 	and	r3,r5,r2
 8004660:	5809883a 	mov	r4,r11
 8004664:	183ec31e 	bne	r3,zero,8004174 <__alt_data_end+0xf8004174>
 8004668:	294b883a 	add	r5,r5,r5
 800466c:	2886703a 	and	r3,r5,r2
 8004670:	21000104 	addi	r4,r4,4
 8004674:	183ffc26 	beq	r3,zero,8004668 <__alt_data_end+0xf8004668>
 8004678:	003ebe06 	br	8004174 <__alt_data_end+0xf8004174>
 800467c:	00c05504 	movi	r3,340
 8004680:	18801236 	bltu	r3,r2,80046cc <_malloc_r+0x6f8>
 8004684:	8804d3fa 	srli	r2,r17,15
 8004688:	12001e04 	addi	r8,r2,120
 800468c:	11c01dc4 	addi	r7,r2,119
 8004690:	4209883a 	add	r4,r8,r8
 8004694:	003e6d06 	br	800404c <__alt_data_end+0xf800404c>
 8004698:	00c40004 	movi	r3,4096
 800469c:	003f4606 	br	80043b8 <__alt_data_end+0xf80043b8>
 80046a0:	00800044 	movi	r2,1
 80046a4:	a0800115 	stw	r2,4(r20)
 80046a8:	003f7406 	br	800447c <__alt_data_end+0xf800447c>
 80046ac:	1805d0ba 	srai	r2,r3,2
 80046b0:	01c00044 	movi	r7,1
 80046b4:	30c00117 	ldw	r3,4(r6)
 80046b8:	388e983a 	sll	r7,r7,r2
 80046bc:	2805883a 	mov	r2,r5
 80046c0:	38c6b03a 	or	r3,r7,r3
 80046c4:	30c00115 	stw	r3,4(r6)
 80046c8:	003f9b06 	br	8004538 <__alt_data_end+0xf8004538>
 80046cc:	00c15504 	movi	r3,1364
 80046d0:	18801a36 	bltu	r3,r2,800473c <_malloc_r+0x768>
 80046d4:	8804d4ba 	srli	r2,r17,18
 80046d8:	12001f44 	addi	r8,r2,125
 80046dc:	11c01f04 	addi	r7,r2,124
 80046e0:	4209883a 	add	r4,r8,r8
 80046e4:	003e5906 	br	800404c <__alt_data_end+0xf800404c>
 80046e8:	ad400404 	addi	r21,r21,16
 80046ec:	003f1706 	br	800434c <__alt_data_end+0xf800434c>
 80046f0:	00c01504 	movi	r3,84
 80046f4:	18802336 	bltu	r3,r2,8004784 <_malloc_r+0x7b0>
 80046f8:	3804d33a 	srli	r2,r7,12
 80046fc:	11401bc4 	addi	r5,r2,111
 8004700:	10c01b84 	addi	r3,r2,110
 8004704:	294b883a 	add	r5,r5,r5
 8004708:	003f7b06 	br	80044f8 <__alt_data_end+0xf80044f8>
 800470c:	9c000217 	ldw	r16,8(r19)
 8004710:	00bfff04 	movi	r2,-4
 8004714:	80c00117 	ldw	r3,4(r16)
 8004718:	1886703a 	and	r3,r3,r2
 800471c:	003f5306 	br	800446c <__alt_data_end+0xf800446c>
 8004720:	3083ffcc 	andi	r2,r6,4095
 8004724:	103f181e 	bne	r2,zero,8004388 <__alt_data_end+0xf8004388>
 8004728:	99000217 	ldw	r4,8(r19)
 800472c:	b545883a 	add	r2,r22,r21
 8004730:	10800054 	ori	r2,r2,1
 8004734:	20800115 	stw	r2,4(r4)
 8004738:	003f3e06 	br	8004434 <__alt_data_end+0xf8004434>
 800473c:	01003f84 	movi	r4,254
 8004740:	02001fc4 	movi	r8,127
 8004744:	01c01f84 	movi	r7,126
 8004748:	003e4006 	br	800404c <__alt_data_end+0xf800404c>
 800474c:	008200b4 	movhi	r2,2050
 8004750:	10881004 	addi	r2,r2,8256
 8004754:	15000015 	stw	r20,0(r2)
 8004758:	003f1106 	br	80043a0 <__alt_data_end+0xf80043a0>
 800475c:	00800044 	movi	r2,1
 8004760:	002b883a 	mov	r21,zero
 8004764:	003f1f06 	br	80043e4 <__alt_data_end+0xf80043e4>
 8004768:	81400204 	addi	r5,r16,8
 800476c:	9009883a 	mov	r4,r18
 8004770:	800ec500 	call	800ec50 <_free_r>
 8004774:	008200b4 	movhi	r2,2050
 8004778:	108f3804 	addi	r2,r2,15584
 800477c:	10c00017 	ldw	r3,0(r2)
 8004780:	003f2c06 	br	8004434 <__alt_data_end+0xf8004434>
 8004784:	00c05504 	movi	r3,340
 8004788:	18800536 	bltu	r3,r2,80047a0 <_malloc_r+0x7cc>
 800478c:	3804d3fa 	srli	r2,r7,15
 8004790:	11401e04 	addi	r5,r2,120
 8004794:	10c01dc4 	addi	r3,r2,119
 8004798:	294b883a 	add	r5,r5,r5
 800479c:	003f5606 	br	80044f8 <__alt_data_end+0xf80044f8>
 80047a0:	00c15504 	movi	r3,1364
 80047a4:	18800536 	bltu	r3,r2,80047bc <_malloc_r+0x7e8>
 80047a8:	3804d4ba 	srli	r2,r7,18
 80047ac:	11401f44 	addi	r5,r2,125
 80047b0:	10c01f04 	addi	r3,r2,124
 80047b4:	294b883a 	add	r5,r5,r5
 80047b8:	003f4f06 	br	80044f8 <__alt_data_end+0xf80044f8>
 80047bc:	01403f84 	movi	r5,254
 80047c0:	00c01f84 	movi	r3,126
 80047c4:	003f4c06 	br	80044f8 <__alt_data_end+0xf80044f8>
 80047c8:	98800117 	ldw	r2,4(r19)
 80047cc:	003fa006 	br	8004650 <__alt_data_end+0xf8004650>
 80047d0:	8808d0fa 	srli	r4,r17,3
 80047d4:	20800044 	addi	r2,r4,1
 80047d8:	1085883a 	add	r2,r2,r2
 80047dc:	003e9006 	br	8004220 <__alt_data_end+0xf8004220>

080047e0 <memset>:
 80047e0:	20c000cc 	andi	r3,r4,3
 80047e4:	2005883a 	mov	r2,r4
 80047e8:	18004426 	beq	r3,zero,80048fc <memset+0x11c>
 80047ec:	31ffffc4 	addi	r7,r6,-1
 80047f0:	30004026 	beq	r6,zero,80048f4 <memset+0x114>
 80047f4:	2813883a 	mov	r9,r5
 80047f8:	200d883a 	mov	r6,r4
 80047fc:	2007883a 	mov	r3,r4
 8004800:	00000406 	br	8004814 <memset+0x34>
 8004804:	3a3fffc4 	addi	r8,r7,-1
 8004808:	31800044 	addi	r6,r6,1
 800480c:	38003926 	beq	r7,zero,80048f4 <memset+0x114>
 8004810:	400f883a 	mov	r7,r8
 8004814:	18c00044 	addi	r3,r3,1
 8004818:	32400005 	stb	r9,0(r6)
 800481c:	1a0000cc 	andi	r8,r3,3
 8004820:	403ff81e 	bne	r8,zero,8004804 <__alt_data_end+0xf8004804>
 8004824:	010000c4 	movi	r4,3
 8004828:	21c02d2e 	bgeu	r4,r7,80048e0 <memset+0x100>
 800482c:	29003fcc 	andi	r4,r5,255
 8004830:	200c923a 	slli	r6,r4,8
 8004834:	3108b03a 	or	r4,r6,r4
 8004838:	200c943a 	slli	r6,r4,16
 800483c:	218cb03a 	or	r6,r4,r6
 8004840:	010003c4 	movi	r4,15
 8004844:	21c0182e 	bgeu	r4,r7,80048a8 <memset+0xc8>
 8004848:	3b3ffc04 	addi	r12,r7,-16
 800484c:	6018d13a 	srli	r12,r12,4
 8004850:	1a000104 	addi	r8,r3,4
 8004854:	1ac00204 	addi	r11,r3,8
 8004858:	6008913a 	slli	r4,r12,4
 800485c:	1a800304 	addi	r10,r3,12
 8004860:	1813883a 	mov	r9,r3
 8004864:	21000504 	addi	r4,r4,20
 8004868:	1909883a 	add	r4,r3,r4
 800486c:	49800015 	stw	r6,0(r9)
 8004870:	41800015 	stw	r6,0(r8)
 8004874:	59800015 	stw	r6,0(r11)
 8004878:	51800015 	stw	r6,0(r10)
 800487c:	42000404 	addi	r8,r8,16
 8004880:	4a400404 	addi	r9,r9,16
 8004884:	5ac00404 	addi	r11,r11,16
 8004888:	52800404 	addi	r10,r10,16
 800488c:	413ff71e 	bne	r8,r4,800486c <__alt_data_end+0xf800486c>
 8004890:	63000044 	addi	r12,r12,1
 8004894:	6018913a 	slli	r12,r12,4
 8004898:	39c003cc 	andi	r7,r7,15
 800489c:	010000c4 	movi	r4,3
 80048a0:	1b07883a 	add	r3,r3,r12
 80048a4:	21c00e2e 	bgeu	r4,r7,80048e0 <memset+0x100>
 80048a8:	1813883a 	mov	r9,r3
 80048ac:	3811883a 	mov	r8,r7
 80048b0:	010000c4 	movi	r4,3
 80048b4:	49800015 	stw	r6,0(r9)
 80048b8:	423fff04 	addi	r8,r8,-4
 80048bc:	4a400104 	addi	r9,r9,4
 80048c0:	223ffc36 	bltu	r4,r8,80048b4 <__alt_data_end+0xf80048b4>
 80048c4:	393fff04 	addi	r4,r7,-4
 80048c8:	2008d0ba 	srli	r4,r4,2
 80048cc:	39c000cc 	andi	r7,r7,3
 80048d0:	21000044 	addi	r4,r4,1
 80048d4:	2109883a 	add	r4,r4,r4
 80048d8:	2109883a 	add	r4,r4,r4
 80048dc:	1907883a 	add	r3,r3,r4
 80048e0:	38000526 	beq	r7,zero,80048f8 <memset+0x118>
 80048e4:	19cf883a 	add	r7,r3,r7
 80048e8:	19400005 	stb	r5,0(r3)
 80048ec:	18c00044 	addi	r3,r3,1
 80048f0:	38fffd1e 	bne	r7,r3,80048e8 <__alt_data_end+0xf80048e8>
 80048f4:	f800283a 	ret
 80048f8:	f800283a 	ret
 80048fc:	2007883a 	mov	r3,r4
 8004900:	300f883a 	mov	r7,r6
 8004904:	003fc706 	br	8004824 <__alt_data_end+0xf8004824>

08004908 <_printf_r>:
 8004908:	defffd04 	addi	sp,sp,-12
 800490c:	2805883a 	mov	r2,r5
 8004910:	dfc00015 	stw	ra,0(sp)
 8004914:	d9800115 	stw	r6,4(sp)
 8004918:	d9c00215 	stw	r7,8(sp)
 800491c:	21400217 	ldw	r5,8(r4)
 8004920:	d9c00104 	addi	r7,sp,4
 8004924:	100d883a 	mov	r6,r2
 8004928:	8008c980 	call	8008c98 <___vfprintf_internal_r>
 800492c:	dfc00017 	ldw	ra,0(sp)
 8004930:	dec00304 	addi	sp,sp,12
 8004934:	f800283a 	ret

08004938 <printf>:
 8004938:	defffc04 	addi	sp,sp,-16
 800493c:	dfc00015 	stw	ra,0(sp)
 8004940:	d9400115 	stw	r5,4(sp)
 8004944:	d9800215 	stw	r6,8(sp)
 8004948:	d9c00315 	stw	r7,12(sp)
 800494c:	008200b4 	movhi	r2,2050
 8004950:	10881404 	addi	r2,r2,8272
 8004954:	10800017 	ldw	r2,0(r2)
 8004958:	200b883a 	mov	r5,r4
 800495c:	d9800104 	addi	r6,sp,4
 8004960:	11000217 	ldw	r4,8(r2)
 8004964:	800ae900 	call	800ae90 <__vfprintf_internal>
 8004968:	dfc00017 	ldw	ra,0(sp)
 800496c:	dec00404 	addi	sp,sp,16
 8004970:	f800283a 	ret

08004974 <_puts_r>:
 8004974:	defff604 	addi	sp,sp,-40
 8004978:	dc000715 	stw	r16,28(sp)
 800497c:	2021883a 	mov	r16,r4
 8004980:	2809883a 	mov	r4,r5
 8004984:	dc400815 	stw	r17,32(sp)
 8004988:	dfc00915 	stw	ra,36(sp)
 800498c:	2823883a 	mov	r17,r5
 8004990:	800526c0 	call	800526c <strlen>
 8004994:	10c00044 	addi	r3,r2,1
 8004998:	d8800115 	stw	r2,4(sp)
 800499c:	008200b4 	movhi	r2,2050
 80049a0:	10bf3904 	addi	r2,r2,-796
 80049a4:	d8800215 	stw	r2,8(sp)
 80049a8:	00800044 	movi	r2,1
 80049ac:	d8800315 	stw	r2,12(sp)
 80049b0:	00800084 	movi	r2,2
 80049b4:	dc400015 	stw	r17,0(sp)
 80049b8:	d8c00615 	stw	r3,24(sp)
 80049bc:	dec00415 	stw	sp,16(sp)
 80049c0:	d8800515 	stw	r2,20(sp)
 80049c4:	80000226 	beq	r16,zero,80049d0 <_puts_r+0x5c>
 80049c8:	80800e17 	ldw	r2,56(r16)
 80049cc:	10001426 	beq	r2,zero,8004a20 <_puts_r+0xac>
 80049d0:	81400217 	ldw	r5,8(r16)
 80049d4:	2880030b 	ldhu	r2,12(r5)
 80049d8:	10c8000c 	andi	r3,r2,8192
 80049dc:	1800061e 	bne	r3,zero,80049f8 <_puts_r+0x84>
 80049e0:	29001917 	ldw	r4,100(r5)
 80049e4:	00f7ffc4 	movi	r3,-8193
 80049e8:	10880014 	ori	r2,r2,8192
 80049ec:	20c6703a 	and	r3,r4,r3
 80049f0:	2880030d 	sth	r2,12(r5)
 80049f4:	28c01915 	stw	r3,100(r5)
 80049f8:	d9800404 	addi	r6,sp,16
 80049fc:	8009883a 	mov	r4,r16
 8004a00:	800ef600 	call	800ef60 <__sfvwrite_r>
 8004a04:	1000091e 	bne	r2,zero,8004a2c <_puts_r+0xb8>
 8004a08:	00800284 	movi	r2,10
 8004a0c:	dfc00917 	ldw	ra,36(sp)
 8004a10:	dc400817 	ldw	r17,32(sp)
 8004a14:	dc000717 	ldw	r16,28(sp)
 8004a18:	dec00a04 	addi	sp,sp,40
 8004a1c:	f800283a 	ret
 8004a20:	8009883a 	mov	r4,r16
 8004a24:	800e87c0 	call	800e87c <__sinit>
 8004a28:	003fe906 	br	80049d0 <__alt_data_end+0xf80049d0>
 8004a2c:	00bfffc4 	movi	r2,-1
 8004a30:	003ff606 	br	8004a0c <__alt_data_end+0xf8004a0c>

08004a34 <puts>:
 8004a34:	008200b4 	movhi	r2,2050
 8004a38:	10881404 	addi	r2,r2,8272
 8004a3c:	200b883a 	mov	r5,r4
 8004a40:	11000017 	ldw	r4,0(r2)
 8004a44:	80049741 	jmpi	8004974 <_puts_r>

08004a48 <_sbrk_r>:
 8004a48:	defffd04 	addi	sp,sp,-12
 8004a4c:	dc000015 	stw	r16,0(sp)
 8004a50:	040200b4 	movhi	r16,2050
 8004a54:	dc400115 	stw	r17,4(sp)
 8004a58:	840f2904 	addi	r16,r16,15524
 8004a5c:	2023883a 	mov	r17,r4
 8004a60:	2809883a 	mov	r4,r5
 8004a64:	dfc00215 	stw	ra,8(sp)
 8004a68:	80000015 	stw	zero,0(r16)
 8004a6c:	801d0780 	call	801d078 <sbrk>
 8004a70:	00ffffc4 	movi	r3,-1
 8004a74:	10c00526 	beq	r2,r3,8004a8c <_sbrk_r+0x44>
 8004a78:	dfc00217 	ldw	ra,8(sp)
 8004a7c:	dc400117 	ldw	r17,4(sp)
 8004a80:	dc000017 	ldw	r16,0(sp)
 8004a84:	dec00304 	addi	sp,sp,12
 8004a88:	f800283a 	ret
 8004a8c:	80c00017 	ldw	r3,0(r16)
 8004a90:	183ff926 	beq	r3,zero,8004a78 <__alt_data_end+0xf8004a78>
 8004a94:	88c00015 	stw	r3,0(r17)
 8004a98:	003ff706 	br	8004a78 <__alt_data_end+0xf8004a78>

08004a9c <scanf>:
 8004a9c:	defffc04 	addi	sp,sp,-16
 8004aa0:	dfc00015 	stw	ra,0(sp)
 8004aa4:	d9400115 	stw	r5,4(sp)
 8004aa8:	d9800215 	stw	r6,8(sp)
 8004aac:	d9c00315 	stw	r7,12(sp)
 8004ab0:	008200b4 	movhi	r2,2050
 8004ab4:	10881404 	addi	r2,r2,8272
 8004ab8:	200d883a 	mov	r6,r4
 8004abc:	11000017 	ldw	r4,0(r2)
 8004ac0:	d9c00104 	addi	r7,sp,4
 8004ac4:	21400117 	ldw	r5,4(r4)
 8004ac8:	800c7a80 	call	800c7a8 <_vfscanf_r>
 8004acc:	dfc00017 	ldw	ra,0(sp)
 8004ad0:	dec00404 	addi	sp,sp,16
 8004ad4:	f800283a 	ret

08004ad8 <_scanf_r>:
 8004ad8:	defffd04 	addi	sp,sp,-12
 8004adc:	2805883a 	mov	r2,r5
 8004ae0:	dfc00015 	stw	ra,0(sp)
 8004ae4:	d9800115 	stw	r6,4(sp)
 8004ae8:	d9c00215 	stw	r7,8(sp)
 8004aec:	21400117 	ldw	r5,4(r4)
 8004af0:	d9c00104 	addi	r7,sp,4
 8004af4:	100d883a 	mov	r6,r2
 8004af8:	800c7a80 	call	800c7a8 <_vfscanf_r>
 8004afc:	dfc00017 	ldw	ra,0(sp)
 8004b00:	dec00304 	addi	sp,sp,12
 8004b04:	f800283a 	ret

08004b08 <_init_signal_r>:
 8004b08:	2080b717 	ldw	r2,732(r4)
 8004b0c:	10000226 	beq	r2,zero,8004b18 <_init_signal_r+0x10>
 8004b10:	0005883a 	mov	r2,zero
 8004b14:	f800283a 	ret
 8004b18:	defffe04 	addi	sp,sp,-8
 8004b1c:	01402004 	movi	r5,128
 8004b20:	dc000015 	stw	r16,0(sp)
 8004b24:	dfc00115 	stw	ra,4(sp)
 8004b28:	2021883a 	mov	r16,r4
 8004b2c:	8003fd40 	call	8003fd4 <_malloc_r>
 8004b30:	8080b715 	stw	r2,732(r16)
 8004b34:	10000d26 	beq	r2,zero,8004b6c <_init_signal_r+0x64>
 8004b38:	0007883a 	mov	r3,zero
 8004b3c:	01002004 	movi	r4,128
 8004b40:	00000106 	br	8004b48 <_init_signal_r+0x40>
 8004b44:	8080b717 	ldw	r2,732(r16)
 8004b48:	10c5883a 	add	r2,r2,r3
 8004b4c:	10000015 	stw	zero,0(r2)
 8004b50:	18c00104 	addi	r3,r3,4
 8004b54:	193ffb1e 	bne	r3,r4,8004b44 <__alt_data_end+0xf8004b44>
 8004b58:	0005883a 	mov	r2,zero
 8004b5c:	dfc00117 	ldw	ra,4(sp)
 8004b60:	dc000017 	ldw	r16,0(sp)
 8004b64:	dec00204 	addi	sp,sp,8
 8004b68:	f800283a 	ret
 8004b6c:	00bfffc4 	movi	r2,-1
 8004b70:	003ffa06 	br	8004b5c <__alt_data_end+0xf8004b5c>

08004b74 <_signal_r>:
 8004b74:	00c007c4 	movi	r3,31
 8004b78:	19401536 	bltu	r3,r5,8004bd0 <_signal_r+0x5c>
 8004b7c:	2080b717 	ldw	r2,732(r4)
 8004b80:	defffc04 	addi	sp,sp,-16
 8004b84:	dc800215 	stw	r18,8(sp)
 8004b88:	dc400115 	stw	r17,4(sp)
 8004b8c:	dc000015 	stw	r16,0(sp)
 8004b90:	dfc00315 	stw	ra,12(sp)
 8004b94:	3023883a 	mov	r17,r6
 8004b98:	2021883a 	mov	r16,r4
 8004b9c:	2825883a 	mov	r18,r5
 8004ba0:	10000f26 	beq	r2,zero,8004be0 <_signal_r+0x6c>
 8004ba4:	948b883a 	add	r5,r18,r18
 8004ba8:	294b883a 	add	r5,r5,r5
 8004bac:	114b883a 	add	r5,r2,r5
 8004bb0:	28800017 	ldw	r2,0(r5)
 8004bb4:	2c400015 	stw	r17,0(r5)
 8004bb8:	dfc00317 	ldw	ra,12(sp)
 8004bbc:	dc800217 	ldw	r18,8(sp)
 8004bc0:	dc400117 	ldw	r17,4(sp)
 8004bc4:	dc000017 	ldw	r16,0(sp)
 8004bc8:	dec00404 	addi	sp,sp,16
 8004bcc:	f800283a 	ret
 8004bd0:	00c00584 	movi	r3,22
 8004bd4:	20c00015 	stw	r3,0(r4)
 8004bd8:	00bfffc4 	movi	r2,-1
 8004bdc:	f800283a 	ret
 8004be0:	8004b080 	call	8004b08 <_init_signal_r>
 8004be4:	1000021e 	bne	r2,zero,8004bf0 <_signal_r+0x7c>
 8004be8:	8080b717 	ldw	r2,732(r16)
 8004bec:	003fed06 	br	8004ba4 <__alt_data_end+0xf8004ba4>
 8004bf0:	00bfffc4 	movi	r2,-1
 8004bf4:	003ff006 	br	8004bb8 <__alt_data_end+0xf8004bb8>

08004bf8 <_raise_r>:
 8004bf8:	008007c4 	movi	r2,31
 8004bfc:	11402936 	bltu	r2,r5,8004ca4 <_raise_r+0xac>
 8004c00:	20c0b717 	ldw	r3,732(r4)
 8004c04:	defffd04 	addi	sp,sp,-12
 8004c08:	dc400115 	stw	r17,4(sp)
 8004c0c:	dc000015 	stw	r16,0(sp)
 8004c10:	dfc00215 	stw	ra,8(sp)
 8004c14:	2021883a 	mov	r16,r4
 8004c18:	2823883a 	mov	r17,r5
 8004c1c:	18001726 	beq	r3,zero,8004c7c <_raise_r+0x84>
 8004c20:	2945883a 	add	r2,r5,r5
 8004c24:	1085883a 	add	r2,r2,r2
 8004c28:	1887883a 	add	r3,r3,r2
 8004c2c:	19800017 	ldw	r6,0(r3)
 8004c30:	30001226 	beq	r6,zero,8004c7c <_raise_r+0x84>
 8004c34:	00800044 	movi	r2,1
 8004c38:	30800e26 	beq	r6,r2,8004c74 <_raise_r+0x7c>
 8004c3c:	013fffc4 	movi	r4,-1
 8004c40:	31000926 	beq	r6,r4,8004c68 <_raise_r+0x70>
 8004c44:	18000015 	stw	zero,0(r3)
 8004c48:	2809883a 	mov	r4,r5
 8004c4c:	303ee83a 	callr	r6
 8004c50:	0005883a 	mov	r2,zero
 8004c54:	dfc00217 	ldw	ra,8(sp)
 8004c58:	dc400117 	ldw	r17,4(sp)
 8004c5c:	dc000017 	ldw	r16,0(sp)
 8004c60:	dec00304 	addi	sp,sp,12
 8004c64:	f800283a 	ret
 8004c68:	00c00584 	movi	r3,22
 8004c6c:	80c00015 	stw	r3,0(r16)
 8004c70:	003ff806 	br	8004c54 <__alt_data_end+0xf8004c54>
 8004c74:	0005883a 	mov	r2,zero
 8004c78:	003ff606 	br	8004c54 <__alt_data_end+0xf8004c54>
 8004c7c:	8009883a 	mov	r4,r16
 8004c80:	8004e080 	call	8004e08 <_getpid_r>
 8004c84:	880d883a 	mov	r6,r17
 8004c88:	100b883a 	mov	r5,r2
 8004c8c:	8009883a 	mov	r4,r16
 8004c90:	dfc00217 	ldw	ra,8(sp)
 8004c94:	dc400117 	ldw	r17,4(sp)
 8004c98:	dc000017 	ldw	r16,0(sp)
 8004c9c:	dec00304 	addi	sp,sp,12
 8004ca0:	8004dac1 	jmpi	8004dac <_kill_r>
 8004ca4:	00800584 	movi	r2,22
 8004ca8:	20800015 	stw	r2,0(r4)
 8004cac:	00bfffc4 	movi	r2,-1
 8004cb0:	f800283a 	ret

08004cb4 <__sigtramp_r>:
 8004cb4:	008007c4 	movi	r2,31
 8004cb8:	11402436 	bltu	r2,r5,8004d4c <__sigtramp_r+0x98>
 8004cbc:	20c0b717 	ldw	r3,732(r4)
 8004cc0:	defffd04 	addi	sp,sp,-12
 8004cc4:	dc400115 	stw	r17,4(sp)
 8004cc8:	dc000015 	stw	r16,0(sp)
 8004ccc:	dfc00215 	stw	ra,8(sp)
 8004cd0:	2021883a 	mov	r16,r4
 8004cd4:	2823883a 	mov	r17,r5
 8004cd8:	18001826 	beq	r3,zero,8004d3c <__sigtramp_r+0x88>
 8004cdc:	8c45883a 	add	r2,r17,r17
 8004ce0:	1085883a 	add	r2,r2,r2
 8004ce4:	1885883a 	add	r2,r3,r2
 8004ce8:	10c00017 	ldw	r3,0(r2)
 8004cec:	18001126 	beq	r3,zero,8004d34 <__sigtramp_r+0x80>
 8004cf0:	013fffc4 	movi	r4,-1
 8004cf4:	19000d26 	beq	r3,r4,8004d2c <__sigtramp_r+0x78>
 8004cf8:	01000044 	movi	r4,1
 8004cfc:	19000926 	beq	r3,r4,8004d24 <__sigtramp_r+0x70>
 8004d00:	10000015 	stw	zero,0(r2)
 8004d04:	8809883a 	mov	r4,r17
 8004d08:	183ee83a 	callr	r3
 8004d0c:	0005883a 	mov	r2,zero
 8004d10:	dfc00217 	ldw	ra,8(sp)
 8004d14:	dc400117 	ldw	r17,4(sp)
 8004d18:	dc000017 	ldw	r16,0(sp)
 8004d1c:	dec00304 	addi	sp,sp,12
 8004d20:	f800283a 	ret
 8004d24:	008000c4 	movi	r2,3
 8004d28:	003ff906 	br	8004d10 <__alt_data_end+0xf8004d10>
 8004d2c:	00800084 	movi	r2,2
 8004d30:	003ff706 	br	8004d10 <__alt_data_end+0xf8004d10>
 8004d34:	00800044 	movi	r2,1
 8004d38:	003ff506 	br	8004d10 <__alt_data_end+0xf8004d10>
 8004d3c:	8004b080 	call	8004b08 <_init_signal_r>
 8004d40:	1000041e 	bne	r2,zero,8004d54 <__sigtramp_r+0xa0>
 8004d44:	80c0b717 	ldw	r3,732(r16)
 8004d48:	003fe406 	br	8004cdc <__alt_data_end+0xf8004cdc>
 8004d4c:	00bfffc4 	movi	r2,-1
 8004d50:	f800283a 	ret
 8004d54:	00bfffc4 	movi	r2,-1
 8004d58:	003fed06 	br	8004d10 <__alt_data_end+0xf8004d10>

08004d5c <raise>:
 8004d5c:	008200b4 	movhi	r2,2050
 8004d60:	10881404 	addi	r2,r2,8272
 8004d64:	200b883a 	mov	r5,r4
 8004d68:	11000017 	ldw	r4,0(r2)
 8004d6c:	8004bf81 	jmpi	8004bf8 <_raise_r>

08004d70 <signal>:
 8004d70:	008200b4 	movhi	r2,2050
 8004d74:	10881404 	addi	r2,r2,8272
 8004d78:	280d883a 	mov	r6,r5
 8004d7c:	200b883a 	mov	r5,r4
 8004d80:	11000017 	ldw	r4,0(r2)
 8004d84:	8004b741 	jmpi	8004b74 <_signal_r>

08004d88 <_init_signal>:
 8004d88:	008200b4 	movhi	r2,2050
 8004d8c:	10881404 	addi	r2,r2,8272
 8004d90:	11000017 	ldw	r4,0(r2)
 8004d94:	8004b081 	jmpi	8004b08 <_init_signal_r>

08004d98 <__sigtramp>:
 8004d98:	008200b4 	movhi	r2,2050
 8004d9c:	10881404 	addi	r2,r2,8272
 8004da0:	200b883a 	mov	r5,r4
 8004da4:	11000017 	ldw	r4,0(r2)
 8004da8:	8004cb41 	jmpi	8004cb4 <__sigtramp_r>

08004dac <_kill_r>:
 8004dac:	defffd04 	addi	sp,sp,-12
 8004db0:	2805883a 	mov	r2,r5
 8004db4:	dc000015 	stw	r16,0(sp)
 8004db8:	040200b4 	movhi	r16,2050
 8004dbc:	dc400115 	stw	r17,4(sp)
 8004dc0:	840f2904 	addi	r16,r16,15524
 8004dc4:	2023883a 	mov	r17,r4
 8004dc8:	300b883a 	mov	r5,r6
 8004dcc:	1009883a 	mov	r4,r2
 8004dd0:	dfc00215 	stw	ra,8(sp)
 8004dd4:	80000015 	stw	zero,0(r16)
 8004dd8:	801c8980 	call	801c898 <kill>
 8004ddc:	00ffffc4 	movi	r3,-1
 8004de0:	10c00526 	beq	r2,r3,8004df8 <_kill_r+0x4c>
 8004de4:	dfc00217 	ldw	ra,8(sp)
 8004de8:	dc400117 	ldw	r17,4(sp)
 8004dec:	dc000017 	ldw	r16,0(sp)
 8004df0:	dec00304 	addi	sp,sp,12
 8004df4:	f800283a 	ret
 8004df8:	80c00017 	ldw	r3,0(r16)
 8004dfc:	183ff926 	beq	r3,zero,8004de4 <__alt_data_end+0xf8004de4>
 8004e00:	88c00015 	stw	r3,0(r17)
 8004e04:	003ff706 	br	8004de4 <__alt_data_end+0xf8004de4>

08004e08 <_getpid_r>:
 8004e08:	801c75c1 	jmpi	801c75c <getpid>

08004e0c <_sprintf_r>:
 8004e0c:	deffe404 	addi	sp,sp,-112
 8004e10:	2807883a 	mov	r3,r5
 8004e14:	dfc01a15 	stw	ra,104(sp)
 8004e18:	d9c01b15 	stw	r7,108(sp)
 8004e1c:	00a00034 	movhi	r2,32768
 8004e20:	10bfffc4 	addi	r2,r2,-1
 8004e24:	02008204 	movi	r8,520
 8004e28:	d8800215 	stw	r2,8(sp)
 8004e2c:	d8800515 	stw	r2,20(sp)
 8004e30:	d9c01b04 	addi	r7,sp,108
 8004e34:	d80b883a 	mov	r5,sp
 8004e38:	00bfffc4 	movi	r2,-1
 8004e3c:	d8c00015 	stw	r3,0(sp)
 8004e40:	d8c00415 	stw	r3,16(sp)
 8004e44:	da00030d 	sth	r8,12(sp)
 8004e48:	d880038d 	sth	r2,14(sp)
 8004e4c:	80053040 	call	8005304 <___svfprintf_internal_r>
 8004e50:	d8c00017 	ldw	r3,0(sp)
 8004e54:	18000005 	stb	zero,0(r3)
 8004e58:	dfc01a17 	ldw	ra,104(sp)
 8004e5c:	dec01c04 	addi	sp,sp,112
 8004e60:	f800283a 	ret

08004e64 <sprintf>:
 8004e64:	deffe304 	addi	sp,sp,-116
 8004e68:	2007883a 	mov	r3,r4
 8004e6c:	dfc01a15 	stw	ra,104(sp)
 8004e70:	d9801b15 	stw	r6,108(sp)
 8004e74:	d9c01c15 	stw	r7,112(sp)
 8004e78:	010200b4 	movhi	r4,2050
 8004e7c:	21081404 	addi	r4,r4,8272
 8004e80:	21000017 	ldw	r4,0(r4)
 8004e84:	00a00034 	movhi	r2,32768
 8004e88:	10bfffc4 	addi	r2,r2,-1
 8004e8c:	280d883a 	mov	r6,r5
 8004e90:	02008204 	movi	r8,520
 8004e94:	d8800215 	stw	r2,8(sp)
 8004e98:	d8800515 	stw	r2,20(sp)
 8004e9c:	d9c01b04 	addi	r7,sp,108
 8004ea0:	d80b883a 	mov	r5,sp
 8004ea4:	00bfffc4 	movi	r2,-1
 8004ea8:	d8c00015 	stw	r3,0(sp)
 8004eac:	d8c00415 	stw	r3,16(sp)
 8004eb0:	da00030d 	sth	r8,12(sp)
 8004eb4:	d880038d 	sth	r2,14(sp)
 8004eb8:	80053040 	call	8005304 <___svfprintf_internal_r>
 8004ebc:	d8c00017 	ldw	r3,0(sp)
 8004ec0:	18000005 	stb	zero,0(r3)
 8004ec4:	dfc01a17 	ldw	ra,104(sp)
 8004ec8:	dec01d04 	addi	sp,sp,116
 8004ecc:	f800283a 	ret

08004ed0 <sscanf>:
 8004ed0:	deffe204 	addi	sp,sp,-120
 8004ed4:	dc001a15 	stw	r16,104(sp)
 8004ed8:	2821883a 	mov	r16,r5
 8004edc:	dfc01b15 	stw	ra,108(sp)
 8004ee0:	d9801c15 	stw	r6,112(sp)
 8004ee4:	d9c01d15 	stw	r7,116(sp)
 8004ee8:	00c08104 	movi	r3,516
 8004eec:	d8c0030d 	sth	r3,12(sp)
 8004ef0:	d9000015 	stw	r4,0(sp)
 8004ef4:	d9000415 	stw	r4,16(sp)
 8004ef8:	800526c0 	call	800526c <strlen>
 8004efc:	00c200b4 	movhi	r3,2050
 8004f00:	18c81404 	addi	r3,r3,8272
 8004f04:	d8800115 	stw	r2,4(sp)
 8004f08:	d8800515 	stw	r2,20(sp)
 8004f0c:	19000017 	ldw	r4,0(r3)
 8004f10:	00820034 	movhi	r2,2048
 8004f14:	10940604 	addi	r2,r2,20504
 8004f18:	d8800815 	stw	r2,32(sp)
 8004f1c:	d9c01c04 	addi	r7,sp,112
 8004f20:	800d883a 	mov	r6,r16
 8004f24:	d80b883a 	mov	r5,sp
 8004f28:	00bfffc4 	movi	r2,-1
 8004f2c:	d8000c15 	stw	zero,48(sp)
 8004f30:	d8001115 	stw	zero,68(sp)
 8004f34:	d880038d 	sth	r2,14(sp)
 8004f38:	80074dc0 	call	80074dc <__ssvfscanf_r>
 8004f3c:	dfc01b17 	ldw	ra,108(sp)
 8004f40:	dc001a17 	ldw	r16,104(sp)
 8004f44:	dec01e04 	addi	sp,sp,120
 8004f48:	f800283a 	ret

08004f4c <_sscanf_r>:
 8004f4c:	deffe204 	addi	sp,sp,-120
 8004f50:	dc001b15 	stw	r16,108(sp)
 8004f54:	2021883a 	mov	r16,r4
 8004f58:	dfc01c15 	stw	ra,112(sp)
 8004f5c:	d9c01d15 	stw	r7,116(sp)
 8004f60:	00808104 	movi	r2,516
 8004f64:	2809883a 	mov	r4,r5
 8004f68:	d9400015 	stw	r5,0(sp)
 8004f6c:	d9400415 	stw	r5,16(sp)
 8004f70:	d9801a15 	stw	r6,104(sp)
 8004f74:	d880030d 	sth	r2,12(sp)
 8004f78:	800526c0 	call	800526c <strlen>
 8004f7c:	d8800115 	stw	r2,4(sp)
 8004f80:	d8800515 	stw	r2,20(sp)
 8004f84:	d9801a17 	ldw	r6,104(sp)
 8004f88:	00820034 	movhi	r2,2048
 8004f8c:	10940604 	addi	r2,r2,20504
 8004f90:	d8800815 	stw	r2,32(sp)
 8004f94:	d9c01d04 	addi	r7,sp,116
 8004f98:	d80b883a 	mov	r5,sp
 8004f9c:	8009883a 	mov	r4,r16
 8004fa0:	00bfffc4 	movi	r2,-1
 8004fa4:	d8000c15 	stw	zero,48(sp)
 8004fa8:	d8001115 	stw	zero,68(sp)
 8004fac:	d880038d 	sth	r2,14(sp)
 8004fb0:	80074dc0 	call	80074dc <__ssvfscanf_r>
 8004fb4:	dfc01c17 	ldw	ra,112(sp)
 8004fb8:	dc001b17 	ldw	r16,108(sp)
 8004fbc:	dec01e04 	addi	sp,sp,120
 8004fc0:	f800283a 	ret

08004fc4 <__sread>:
 8004fc4:	defffe04 	addi	sp,sp,-8
 8004fc8:	dc000015 	stw	r16,0(sp)
 8004fcc:	2821883a 	mov	r16,r5
 8004fd0:	2940038f 	ldh	r5,14(r5)
 8004fd4:	dfc00115 	stw	ra,4(sp)
 8004fd8:	8010e740 	call	8010e74 <_read_r>
 8004fdc:	10000716 	blt	r2,zero,8004ffc <__sread+0x38>
 8004fe0:	80c01417 	ldw	r3,80(r16)
 8004fe4:	1887883a 	add	r3,r3,r2
 8004fe8:	80c01415 	stw	r3,80(r16)
 8004fec:	dfc00117 	ldw	ra,4(sp)
 8004ff0:	dc000017 	ldw	r16,0(sp)
 8004ff4:	dec00204 	addi	sp,sp,8
 8004ff8:	f800283a 	ret
 8004ffc:	80c0030b 	ldhu	r3,12(r16)
 8005000:	18fbffcc 	andi	r3,r3,61439
 8005004:	80c0030d 	sth	r3,12(r16)
 8005008:	dfc00117 	ldw	ra,4(sp)
 800500c:	dc000017 	ldw	r16,0(sp)
 8005010:	dec00204 	addi	sp,sp,8
 8005014:	f800283a 	ret

08005018 <__seofread>:
 8005018:	0005883a 	mov	r2,zero
 800501c:	f800283a 	ret

08005020 <__swrite>:
 8005020:	2880030b 	ldhu	r2,12(r5)
 8005024:	defffb04 	addi	sp,sp,-20
 8005028:	dcc00315 	stw	r19,12(sp)
 800502c:	dc800215 	stw	r18,8(sp)
 8005030:	dc400115 	stw	r17,4(sp)
 8005034:	dc000015 	stw	r16,0(sp)
 8005038:	dfc00415 	stw	ra,16(sp)
 800503c:	10c0400c 	andi	r3,r2,256
 8005040:	2821883a 	mov	r16,r5
 8005044:	2023883a 	mov	r17,r4
 8005048:	3025883a 	mov	r18,r6
 800504c:	3827883a 	mov	r19,r7
 8005050:	18000526 	beq	r3,zero,8005068 <__swrite+0x48>
 8005054:	2940038f 	ldh	r5,14(r5)
 8005058:	01c00084 	movi	r7,2
 800505c:	000d883a 	mov	r6,zero
 8005060:	800f6b00 	call	800f6b0 <_lseek_r>
 8005064:	8080030b 	ldhu	r2,12(r16)
 8005068:	8140038f 	ldh	r5,14(r16)
 800506c:	10bbffcc 	andi	r2,r2,61439
 8005070:	980f883a 	mov	r7,r19
 8005074:	900d883a 	mov	r6,r18
 8005078:	8809883a 	mov	r4,r17
 800507c:	8080030d 	sth	r2,12(r16)
 8005080:	dfc00417 	ldw	ra,16(sp)
 8005084:	dcc00317 	ldw	r19,12(sp)
 8005088:	dc800217 	ldw	r18,8(sp)
 800508c:	dc400117 	ldw	r17,4(sp)
 8005090:	dc000017 	ldw	r16,0(sp)
 8005094:	dec00504 	addi	sp,sp,20
 8005098:	800c7f41 	jmpi	800c7f4 <_write_r>

0800509c <__sseek>:
 800509c:	defffe04 	addi	sp,sp,-8
 80050a0:	dc000015 	stw	r16,0(sp)
 80050a4:	2821883a 	mov	r16,r5
 80050a8:	2940038f 	ldh	r5,14(r5)
 80050ac:	dfc00115 	stw	ra,4(sp)
 80050b0:	800f6b00 	call	800f6b0 <_lseek_r>
 80050b4:	00ffffc4 	movi	r3,-1
 80050b8:	10c00826 	beq	r2,r3,80050dc <__sseek+0x40>
 80050bc:	80c0030b 	ldhu	r3,12(r16)
 80050c0:	80801415 	stw	r2,80(r16)
 80050c4:	18c40014 	ori	r3,r3,4096
 80050c8:	80c0030d 	sth	r3,12(r16)
 80050cc:	dfc00117 	ldw	ra,4(sp)
 80050d0:	dc000017 	ldw	r16,0(sp)
 80050d4:	dec00204 	addi	sp,sp,8
 80050d8:	f800283a 	ret
 80050dc:	80c0030b 	ldhu	r3,12(r16)
 80050e0:	18fbffcc 	andi	r3,r3,61439
 80050e4:	80c0030d 	sth	r3,12(r16)
 80050e8:	dfc00117 	ldw	ra,4(sp)
 80050ec:	dc000017 	ldw	r16,0(sp)
 80050f0:	dec00204 	addi	sp,sp,8
 80050f4:	f800283a 	ret

080050f8 <__sclose>:
 80050f8:	2940038f 	ldh	r5,14(r5)
 80050fc:	800c9a81 	jmpi	800c9a8 <_close_r>

08005100 <strcmp>:
 8005100:	2144b03a 	or	r2,r4,r5
 8005104:	108000cc 	andi	r2,r2,3
 8005108:	1000171e 	bne	r2,zero,8005168 <strcmp+0x68>
 800510c:	20800017 	ldw	r2,0(r4)
 8005110:	28c00017 	ldw	r3,0(r5)
 8005114:	10c0141e 	bne	r2,r3,8005168 <strcmp+0x68>
 8005118:	027fbff4 	movhi	r9,65279
 800511c:	4a7fbfc4 	addi	r9,r9,-257
 8005120:	0086303a 	nor	r3,zero,r2
 8005124:	02202074 	movhi	r8,32897
 8005128:	1245883a 	add	r2,r2,r9
 800512c:	42202004 	addi	r8,r8,-32640
 8005130:	10c4703a 	and	r2,r2,r3
 8005134:	1204703a 	and	r2,r2,r8
 8005138:	10000226 	beq	r2,zero,8005144 <strcmp+0x44>
 800513c:	00002306 	br	80051cc <strcmp+0xcc>
 8005140:	1000221e 	bne	r2,zero,80051cc <strcmp+0xcc>
 8005144:	21000104 	addi	r4,r4,4
 8005148:	20c00017 	ldw	r3,0(r4)
 800514c:	29400104 	addi	r5,r5,4
 8005150:	29800017 	ldw	r6,0(r5)
 8005154:	1a4f883a 	add	r7,r3,r9
 8005158:	00c4303a 	nor	r2,zero,r3
 800515c:	3884703a 	and	r2,r7,r2
 8005160:	1204703a 	and	r2,r2,r8
 8005164:	19bff626 	beq	r3,r6,8005140 <__alt_data_end+0xf8005140>
 8005168:	20800003 	ldbu	r2,0(r4)
 800516c:	10c03fcc 	andi	r3,r2,255
 8005170:	18c0201c 	xori	r3,r3,128
 8005174:	18ffe004 	addi	r3,r3,-128
 8005178:	18000c26 	beq	r3,zero,80051ac <strcmp+0xac>
 800517c:	29800007 	ldb	r6,0(r5)
 8005180:	19800326 	beq	r3,r6,8005190 <strcmp+0x90>
 8005184:	00001306 	br	80051d4 <strcmp+0xd4>
 8005188:	29800007 	ldb	r6,0(r5)
 800518c:	11800b1e 	bne	r2,r6,80051bc <strcmp+0xbc>
 8005190:	21000044 	addi	r4,r4,1
 8005194:	20c00003 	ldbu	r3,0(r4)
 8005198:	29400044 	addi	r5,r5,1
 800519c:	18803fcc 	andi	r2,r3,255
 80051a0:	1080201c 	xori	r2,r2,128
 80051a4:	10bfe004 	addi	r2,r2,-128
 80051a8:	103ff71e 	bne	r2,zero,8005188 <__alt_data_end+0xf8005188>
 80051ac:	0007883a 	mov	r3,zero
 80051b0:	28800003 	ldbu	r2,0(r5)
 80051b4:	1885c83a 	sub	r2,r3,r2
 80051b8:	f800283a 	ret
 80051bc:	28800003 	ldbu	r2,0(r5)
 80051c0:	18c03fcc 	andi	r3,r3,255
 80051c4:	1885c83a 	sub	r2,r3,r2
 80051c8:	f800283a 	ret
 80051cc:	0005883a 	mov	r2,zero
 80051d0:	f800283a 	ret
 80051d4:	10c03fcc 	andi	r3,r2,255
 80051d8:	003ff506 	br	80051b0 <__alt_data_end+0xf80051b0>

080051dc <strcpy>:
 80051dc:	2906b03a 	or	r3,r5,r4
 80051e0:	18c000cc 	andi	r3,r3,3
 80051e4:	2005883a 	mov	r2,r4
 80051e8:	1800161e 	bne	r3,zero,8005244 <strcpy+0x68>
 80051ec:	29c00017 	ldw	r7,0(r5)
 80051f0:	02ffbff4 	movhi	r11,65279
 80051f4:	5affbfc4 	addi	r11,r11,-257
 80051f8:	02a02074 	movhi	r10,32897
 80051fc:	01c6303a 	nor	r3,zero,r7
 8005200:	3ac9883a 	add	r4,r7,r11
 8005204:	52a02004 	addi	r10,r10,-32640
 8005208:	20c6703a 	and	r3,r4,r3
 800520c:	1a86703a 	and	r3,r3,r10
 8005210:	18000c1e 	bne	r3,zero,8005244 <strcpy+0x68>
 8005214:	1011883a 	mov	r8,r2
 8005218:	41c00015 	stw	r7,0(r8)
 800521c:	29400104 	addi	r5,r5,4
 8005220:	29c00017 	ldw	r7,0(r5)
 8005224:	41800104 	addi	r6,r8,4
 8005228:	3011883a 	mov	r8,r6
 800522c:	3ad3883a 	add	r9,r7,r11
 8005230:	01c6303a 	nor	r3,zero,r7
 8005234:	48c6703a 	and	r3,r9,r3
 8005238:	1a86703a 	and	r3,r3,r10
 800523c:	183ff626 	beq	r3,zero,8005218 <__alt_data_end+0xf8005218>
 8005240:	00000106 	br	8005248 <strcpy+0x6c>
 8005244:	100d883a 	mov	r6,r2
 8005248:	28c00003 	ldbu	r3,0(r5)
 800524c:	31800044 	addi	r6,r6,1
 8005250:	29400044 	addi	r5,r5,1
 8005254:	30ffffc5 	stb	r3,-1(r6)
 8005258:	18c03fcc 	andi	r3,r3,255
 800525c:	18c0201c 	xori	r3,r3,128
 8005260:	18ffe004 	addi	r3,r3,-128
 8005264:	183ff81e 	bne	r3,zero,8005248 <__alt_data_end+0xf8005248>
 8005268:	f800283a 	ret

0800526c <strlen>:
 800526c:	208000cc 	andi	r2,r4,3
 8005270:	10002026 	beq	r2,zero,80052f4 <strlen+0x88>
 8005274:	20800007 	ldb	r2,0(r4)
 8005278:	10002026 	beq	r2,zero,80052fc <strlen+0x90>
 800527c:	2005883a 	mov	r2,r4
 8005280:	00000206 	br	800528c <strlen+0x20>
 8005284:	10c00007 	ldb	r3,0(r2)
 8005288:	18001826 	beq	r3,zero,80052ec <strlen+0x80>
 800528c:	10800044 	addi	r2,r2,1
 8005290:	10c000cc 	andi	r3,r2,3
 8005294:	183ffb1e 	bne	r3,zero,8005284 <__alt_data_end+0xf8005284>
 8005298:	10c00017 	ldw	r3,0(r2)
 800529c:	01ffbff4 	movhi	r7,65279
 80052a0:	39ffbfc4 	addi	r7,r7,-257
 80052a4:	00ca303a 	nor	r5,zero,r3
 80052a8:	01a02074 	movhi	r6,32897
 80052ac:	19c7883a 	add	r3,r3,r7
 80052b0:	31a02004 	addi	r6,r6,-32640
 80052b4:	1946703a 	and	r3,r3,r5
 80052b8:	1986703a 	and	r3,r3,r6
 80052bc:	1800091e 	bne	r3,zero,80052e4 <strlen+0x78>
 80052c0:	10800104 	addi	r2,r2,4
 80052c4:	10c00017 	ldw	r3,0(r2)
 80052c8:	19cb883a 	add	r5,r3,r7
 80052cc:	00c6303a 	nor	r3,zero,r3
 80052d0:	28c6703a 	and	r3,r5,r3
 80052d4:	1986703a 	and	r3,r3,r6
 80052d8:	183ff926 	beq	r3,zero,80052c0 <__alt_data_end+0xf80052c0>
 80052dc:	00000106 	br	80052e4 <strlen+0x78>
 80052e0:	10800044 	addi	r2,r2,1
 80052e4:	10c00007 	ldb	r3,0(r2)
 80052e8:	183ffd1e 	bne	r3,zero,80052e0 <__alt_data_end+0xf80052e0>
 80052ec:	1105c83a 	sub	r2,r2,r4
 80052f0:	f800283a 	ret
 80052f4:	2005883a 	mov	r2,r4
 80052f8:	003fe706 	br	8005298 <__alt_data_end+0xf8005298>
 80052fc:	0005883a 	mov	r2,zero
 8005300:	f800283a 	ret

08005304 <___svfprintf_internal_r>:
 8005304:	deffb704 	addi	sp,sp,-292
 8005308:	dfc04815 	stw	ra,288(sp)
 800530c:	ddc04615 	stw	r23,280(sp)
 8005310:	d9402c15 	stw	r5,176(sp)
 8005314:	d9003915 	stw	r4,228(sp)
 8005318:	302f883a 	mov	r23,r6
 800531c:	d9c02d15 	stw	r7,180(sp)
 8005320:	df004715 	stw	fp,284(sp)
 8005324:	dd804515 	stw	r22,276(sp)
 8005328:	dd404415 	stw	r21,272(sp)
 800532c:	dd004315 	stw	r20,268(sp)
 8005330:	dcc04215 	stw	r19,264(sp)
 8005334:	dc804115 	stw	r18,260(sp)
 8005338:	dc404015 	stw	r17,256(sp)
 800533c:	dc003f15 	stw	r16,252(sp)
 8005340:	800f6800 	call	800f680 <_localeconv_r>
 8005344:	10800017 	ldw	r2,0(r2)
 8005348:	1009883a 	mov	r4,r2
 800534c:	d8803415 	stw	r2,208(sp)
 8005350:	800526c0 	call	800526c <strlen>
 8005354:	d8c02c17 	ldw	r3,176(sp)
 8005358:	d8803815 	stw	r2,224(sp)
 800535c:	1880030b 	ldhu	r2,12(r3)
 8005360:	1080200c 	andi	r2,r2,128
 8005364:	10000226 	beq	r2,zero,8005370 <___svfprintf_internal_r+0x6c>
 8005368:	18800417 	ldw	r2,16(r3)
 800536c:	10067f26 	beq	r2,zero,8006d6c <___svfprintf_internal_r+0x1a68>
 8005370:	dcc03917 	ldw	r19,228(sp)
 8005374:	d8c00404 	addi	r3,sp,16
 8005378:	054200b4 	movhi	r21,2050
 800537c:	d9001e04 	addi	r4,sp,120
 8005380:	ad7f4a84 	addi	r21,r21,-726
 8005384:	d8c01e15 	stw	r3,120(sp)
 8005388:	d8002015 	stw	zero,128(sp)
 800538c:	d8001f15 	stw	zero,124(sp)
 8005390:	d8003315 	stw	zero,204(sp)
 8005394:	d8003615 	stw	zero,216(sp)
 8005398:	d8003715 	stw	zero,220(sp)
 800539c:	1811883a 	mov	r8,r3
 80053a0:	d8003a15 	stw	zero,232(sp)
 80053a4:	d8003b15 	stw	zero,236(sp)
 80053a8:	d8002f15 	stw	zero,188(sp)
 80053ac:	d9002815 	stw	r4,160(sp)
 80053b0:	b8800007 	ldb	r2,0(r23)
 80053b4:	10026726 	beq	r2,zero,8005d54 <___svfprintf_internal_r+0xa50>
 80053b8:	00c00944 	movi	r3,37
 80053bc:	b821883a 	mov	r16,r23
 80053c0:	10c0021e 	bne	r2,r3,80053cc <___svfprintf_internal_r+0xc8>
 80053c4:	00001406 	br	8005418 <___svfprintf_internal_r+0x114>
 80053c8:	10c00326 	beq	r2,r3,80053d8 <___svfprintf_internal_r+0xd4>
 80053cc:	84000044 	addi	r16,r16,1
 80053d0:	80800007 	ldb	r2,0(r16)
 80053d4:	103ffc1e 	bne	r2,zero,80053c8 <__alt_data_end+0xf80053c8>
 80053d8:	85e3c83a 	sub	r17,r16,r23
 80053dc:	88000e26 	beq	r17,zero,8005418 <___svfprintf_internal_r+0x114>
 80053e0:	d8c02017 	ldw	r3,128(sp)
 80053e4:	d8801f17 	ldw	r2,124(sp)
 80053e8:	45c00015 	stw	r23,0(r8)
 80053ec:	1c47883a 	add	r3,r3,r17
 80053f0:	10800044 	addi	r2,r2,1
 80053f4:	d8c02015 	stw	r3,128(sp)
 80053f8:	44400115 	stw	r17,4(r8)
 80053fc:	d8801f15 	stw	r2,124(sp)
 8005400:	00c001c4 	movi	r3,7
 8005404:	18809716 	blt	r3,r2,8005664 <___svfprintf_internal_r+0x360>
 8005408:	42000204 	addi	r8,r8,8
 800540c:	d9402f17 	ldw	r5,188(sp)
 8005410:	2c4b883a 	add	r5,r5,r17
 8005414:	d9402f15 	stw	r5,188(sp)
 8005418:	80800007 	ldb	r2,0(r16)
 800541c:	10009826 	beq	r2,zero,8005680 <___svfprintf_internal_r+0x37c>
 8005420:	84400047 	ldb	r17,1(r16)
 8005424:	00bfffc4 	movi	r2,-1
 8005428:	85c00044 	addi	r23,r16,1
 800542c:	d8002785 	stb	zero,158(sp)
 8005430:	0007883a 	mov	r3,zero
 8005434:	000f883a 	mov	r7,zero
 8005438:	d8802915 	stw	r2,164(sp)
 800543c:	d8003115 	stw	zero,196(sp)
 8005440:	0025883a 	mov	r18,zero
 8005444:	01401604 	movi	r5,88
 8005448:	01800244 	movi	r6,9
 800544c:	02800a84 	movi	r10,42
 8005450:	02401b04 	movi	r9,108
 8005454:	bdc00044 	addi	r23,r23,1
 8005458:	88bff804 	addi	r2,r17,-32
 800545c:	2882f036 	bltu	r5,r2,8006020 <___svfprintf_internal_r+0xd1c>
 8005460:	100490ba 	slli	r2,r2,2
 8005464:	01020034 	movhi	r4,2048
 8005468:	21151e04 	addi	r4,r4,21624
 800546c:	1105883a 	add	r2,r2,r4
 8005470:	10800017 	ldw	r2,0(r2)
 8005474:	1000683a 	jmp	r2
 8005478:	08005f88 	cmpgei	zero,at,382
 800547c:	08006020 	cmpeqi	zero,at,384
 8005480:	08006020 	cmpeqi	zero,at,384
 8005484:	08005f7c 	xorhi	zero,at,381
 8005488:	08006020 	cmpeqi	zero,at,384
 800548c:	08006020 	cmpeqi	zero,at,384
 8005490:	08006020 	cmpeqi	zero,at,384
 8005494:	08006020 	cmpeqi	zero,at,384
 8005498:	08006020 	cmpeqi	zero,at,384
 800549c:	08006020 	cmpeqi	zero,at,384
 80054a0:	080056dc 	xori	zero,at,347
 80054a4:	08005eb8 	rdprs	zero,at,378
 80054a8:	08006020 	cmpeqi	zero,at,384
 80054ac:	080055ec 	andhi	zero,at,343
 80054b0:	08005704 	addi	zero,at,348
 80054b4:	08006020 	cmpeqi	zero,at,384
 80054b8:	08005778 	rdprs	zero,at,349
 80054bc:	08005744 	addi	zero,at,349
 80054c0:	08005744 	addi	zero,at,349
 80054c4:	08005744 	addi	zero,at,349
 80054c8:	08005744 	addi	zero,at,349
 80054cc:	08005744 	addi	zero,at,349
 80054d0:	08005744 	addi	zero,at,349
 80054d4:	08005744 	addi	zero,at,349
 80054d8:	08005744 	addi	zero,at,349
 80054dc:	08005744 	addi	zero,at,349
 80054e0:	08006020 	cmpeqi	zero,at,384
 80054e4:	08006020 	cmpeqi	zero,at,384
 80054e8:	08006020 	cmpeqi	zero,at,384
 80054ec:	08006020 	cmpeqi	zero,at,384
 80054f0:	08006020 	cmpeqi	zero,at,384
 80054f4:	08006020 	cmpeqi	zero,at,384
 80054f8:	08006020 	cmpeqi	zero,at,384
 80054fc:	08006020 	cmpeqi	zero,at,384
 8005500:	08006020 	cmpeqi	zero,at,384
 8005504:	08006020 	cmpeqi	zero,at,384
 8005508:	08005830 	cmpltui	zero,at,352
 800550c:	08005784 	addi	zero,at,350
 8005510:	08006020 	cmpeqi	zero,at,384
 8005514:	08005784 	addi	zero,at,350
 8005518:	08006020 	cmpeqi	zero,at,384
 800551c:	08006020 	cmpeqi	zero,at,384
 8005520:	08006020 	cmpeqi	zero,at,384
 8005524:	08006020 	cmpeqi	zero,at,384
 8005528:	08005824 	muli	zero,at,352
 800552c:	08006020 	cmpeqi	zero,at,384
 8005530:	08006020 	cmpeqi	zero,at,384
 8005534:	080058ec 	andhi	zero,at,355
 8005538:	08006020 	cmpeqi	zero,at,384
 800553c:	08006020 	cmpeqi	zero,at,384
 8005540:	08006020 	cmpeqi	zero,at,384
 8005544:	08006020 	cmpeqi	zero,at,384
 8005548:	08006020 	cmpeqi	zero,at,384
 800554c:	08005d5c 	xori	zero,at,373
 8005550:	08006020 	cmpeqi	zero,at,384
 8005554:	08006020 	cmpeqi	zero,at,384
 8005558:	08005dbc 	xorhi	zero,at,374
 800555c:	08006020 	cmpeqi	zero,at,384
 8005560:	08006020 	cmpeqi	zero,at,384
 8005564:	08006020 	cmpeqi	zero,at,384
 8005568:	08006020 	cmpeqi	zero,at,384
 800556c:	08006020 	cmpeqi	zero,at,384
 8005570:	08006020 	cmpeqi	zero,at,384
 8005574:	08006020 	cmpeqi	zero,at,384
 8005578:	08006020 	cmpeqi	zero,at,384
 800557c:	08006020 	cmpeqi	zero,at,384
 8005580:	08006020 	cmpeqi	zero,at,384
 8005584:	08005e6c 	andhi	zero,at,377
 8005588:	08005fa8 	cmpgeui	zero,at,382
 800558c:	08005784 	addi	zero,at,350
 8005590:	08005784 	addi	zero,at,350
 8005594:	08005784 	addi	zero,at,350
 8005598:	08005ffc 	xorhi	zero,at,383
 800559c:	08005fa8 	cmpgeui	zero,at,382
 80055a0:	08006020 	cmpeqi	zero,at,384
 80055a4:	08006020 	cmpeqi	zero,at,384
 80055a8:	08005fb8 	rdprs	zero,at,382
 80055ac:	08006020 	cmpeqi	zero,at,384
 80055b0:	08005fc8 	cmpgei	zero,at,383
 80055b4:	08005ea8 	cmpgeui	zero,at,378
 80055b8:	080055f8 	rdprs	zero,at,343
 80055bc:	08005ec8 	cmpgei	zero,at,379
 80055c0:	08006020 	cmpeqi	zero,at,384
 80055c4:	08005ed4 	ori	zero,at,379
 80055c8:	08006020 	cmpeqi	zero,at,384
 80055cc:	08005f30 	cmpltui	zero,at,380
 80055d0:	08006020 	cmpeqi	zero,at,384
 80055d4:	08006020 	cmpeqi	zero,at,384
 80055d8:	08005f40 	call	8005f4 <__alt_mem_sdram-0x77ffa0c>
 80055dc:	d9003117 	ldw	r4,196(sp)
 80055e0:	d8802d15 	stw	r2,180(sp)
 80055e4:	0109c83a 	sub	r4,zero,r4
 80055e8:	d9003115 	stw	r4,196(sp)
 80055ec:	94800114 	ori	r18,r18,4
 80055f0:	bc400007 	ldb	r17,0(r23)
 80055f4:	003f9706 	br	8005454 <__alt_data_end+0xf8005454>
 80055f8:	00800c04 	movi	r2,48
 80055fc:	d9002d17 	ldw	r4,180(sp)
 8005600:	d9402917 	ldw	r5,164(sp)
 8005604:	d8802705 	stb	r2,156(sp)
 8005608:	00801e04 	movi	r2,120
 800560c:	d8802745 	stb	r2,157(sp)
 8005610:	d8002785 	stb	zero,158(sp)
 8005614:	20c00104 	addi	r3,r4,4
 8005618:	25000017 	ldw	r20,0(r4)
 800561c:	002d883a 	mov	r22,zero
 8005620:	90800094 	ori	r2,r18,2
 8005624:	28028616 	blt	r5,zero,8006040 <___svfprintf_internal_r+0xd3c>
 8005628:	00bfdfc4 	movi	r2,-129
 800562c:	90a4703a 	and	r18,r18,r2
 8005630:	d8c02d15 	stw	r3,180(sp)
 8005634:	94800094 	ori	r18,r18,2
 8005638:	a002731e 	bne	r20,zero,8006008 <___svfprintf_internal_r+0xd04>
 800563c:	008200b4 	movhi	r2,2050
 8005640:	10bf4304 	addi	r2,r2,-756
 8005644:	d8803a15 	stw	r2,232(sp)
 8005648:	04401e04 	movi	r17,120
 800564c:	d8c02917 	ldw	r3,164(sp)
 8005650:	0039883a 	mov	fp,zero
 8005654:	1801d526 	beq	r3,zero,8005dac <___svfprintf_internal_r+0xaa8>
 8005658:	0029883a 	mov	r20,zero
 800565c:	002d883a 	mov	r22,zero
 8005660:	0001f106 	br	8005e28 <___svfprintf_internal_r+0xb24>
 8005664:	d9402c17 	ldw	r5,176(sp)
 8005668:	d9801e04 	addi	r6,sp,120
 800566c:	9809883a 	mov	r4,r19
 8005670:	80139c80 	call	80139c8 <__ssprint_r>
 8005674:	1000081e 	bne	r2,zero,8005698 <___svfprintf_internal_r+0x394>
 8005678:	da000404 	addi	r8,sp,16
 800567c:	003f6306 	br	800540c <__alt_data_end+0xf800540c>
 8005680:	d8802017 	ldw	r2,128(sp)
 8005684:	10000426 	beq	r2,zero,8005698 <___svfprintf_internal_r+0x394>
 8005688:	d9402c17 	ldw	r5,176(sp)
 800568c:	d9003917 	ldw	r4,228(sp)
 8005690:	d9801e04 	addi	r6,sp,120
 8005694:	80139c80 	call	80139c8 <__ssprint_r>
 8005698:	d8802c17 	ldw	r2,176(sp)
 800569c:	10c0030b 	ldhu	r3,12(r2)
 80056a0:	d8802f17 	ldw	r2,188(sp)
 80056a4:	18c0100c 	andi	r3,r3,64
 80056a8:	1805f51e 	bne	r3,zero,8006e80 <___svfprintf_internal_r+0x1b7c>
 80056ac:	dfc04817 	ldw	ra,288(sp)
 80056b0:	df004717 	ldw	fp,284(sp)
 80056b4:	ddc04617 	ldw	r23,280(sp)
 80056b8:	dd804517 	ldw	r22,276(sp)
 80056bc:	dd404417 	ldw	r21,272(sp)
 80056c0:	dd004317 	ldw	r20,268(sp)
 80056c4:	dcc04217 	ldw	r19,264(sp)
 80056c8:	dc804117 	ldw	r18,260(sp)
 80056cc:	dc404017 	ldw	r17,256(sp)
 80056d0:	dc003f17 	ldw	r16,252(sp)
 80056d4:	dec04904 	addi	sp,sp,292
 80056d8:	f800283a 	ret
 80056dc:	d8802d17 	ldw	r2,180(sp)
 80056e0:	d9002d17 	ldw	r4,180(sp)
 80056e4:	10800017 	ldw	r2,0(r2)
 80056e8:	d8803115 	stw	r2,196(sp)
 80056ec:	20800104 	addi	r2,r4,4
 80056f0:	d9003117 	ldw	r4,196(sp)
 80056f4:	203fb916 	blt	r4,zero,80055dc <__alt_data_end+0xf80055dc>
 80056f8:	d8802d15 	stw	r2,180(sp)
 80056fc:	bc400007 	ldb	r17,0(r23)
 8005700:	003f5406 	br	8005454 <__alt_data_end+0xf8005454>
 8005704:	bc400007 	ldb	r17,0(r23)
 8005708:	bac00044 	addi	r11,r23,1
 800570c:	8a873926 	beq	r17,r10,80073f4 <___svfprintf_internal_r+0x20f0>
 8005710:	88bff404 	addi	r2,r17,-48
 8005714:	0009883a 	mov	r4,zero
 8005718:	30868836 	bltu	r6,r2,800713c <___svfprintf_internal_r+0x1e38>
 800571c:	5c400007 	ldb	r17,0(r11)
 8005720:	210002a4 	muli	r4,r4,10
 8005724:	5dc00044 	addi	r23,r11,1
 8005728:	b817883a 	mov	r11,r23
 800572c:	2089883a 	add	r4,r4,r2
 8005730:	88bff404 	addi	r2,r17,-48
 8005734:	30bff92e 	bgeu	r6,r2,800571c <__alt_data_end+0xf800571c>
 8005738:	2005d716 	blt	r4,zero,8006e98 <___svfprintf_internal_r+0x1b94>
 800573c:	d9002915 	stw	r4,164(sp)
 8005740:	003f4506 	br	8005458 <__alt_data_end+0xf8005458>
 8005744:	b809883a 	mov	r4,r23
 8005748:	d8003115 	stw	zero,196(sp)
 800574c:	88bff404 	addi	r2,r17,-48
 8005750:	0017883a 	mov	r11,zero
 8005754:	24400007 	ldb	r17,0(r4)
 8005758:	5ac002a4 	muli	r11,r11,10
 800575c:	bdc00044 	addi	r23,r23,1
 8005760:	b809883a 	mov	r4,r23
 8005764:	12d7883a 	add	r11,r2,r11
 8005768:	88bff404 	addi	r2,r17,-48
 800576c:	30bff92e 	bgeu	r6,r2,8005754 <__alt_data_end+0xf8005754>
 8005770:	dac03115 	stw	r11,196(sp)
 8005774:	003f3806 	br	8005458 <__alt_data_end+0xf8005458>
 8005778:	94802014 	ori	r18,r18,128
 800577c:	bc400007 	ldb	r17,0(r23)
 8005780:	003f3406 	br	8005454 <__alt_data_end+0xf8005454>
 8005784:	18c03fcc 	andi	r3,r3,255
 8005788:	1807471e 	bne	r3,zero,80074a8 <___svfprintf_internal_r+0x21a4>
 800578c:	9080020c 	andi	r2,r18,8
 8005790:	10047d26 	beq	r2,zero,8006988 <___svfprintf_internal_r+0x1684>
 8005794:	d8c02d17 	ldw	r3,180(sp)
 8005798:	d9002d17 	ldw	r4,180(sp)
 800579c:	d9402d17 	ldw	r5,180(sp)
 80057a0:	18c00017 	ldw	r3,0(r3)
 80057a4:	21000117 	ldw	r4,4(r4)
 80057a8:	29400204 	addi	r5,r5,8
 80057ac:	d8c03615 	stw	r3,216(sp)
 80057b0:	d9003715 	stw	r4,220(sp)
 80057b4:	d9402d15 	stw	r5,180(sp)
 80057b8:	d9003617 	ldw	r4,216(sp)
 80057bc:	d9403717 	ldw	r5,220(sp)
 80057c0:	da003e15 	stw	r8,248(sp)
 80057c4:	04000044 	movi	r16,1
 80057c8:	80116280 	call	8011628 <__fpclassifyd>
 80057cc:	da003e17 	ldw	r8,248(sp)
 80057d0:	14044b1e 	bne	r2,r16,8006900 <___svfprintf_internal_r+0x15fc>
 80057d4:	d9003617 	ldw	r4,216(sp)
 80057d8:	d9403717 	ldw	r5,220(sp)
 80057dc:	000d883a 	mov	r6,zero
 80057e0:	000f883a 	mov	r7,zero
 80057e4:	801ae900 	call	801ae90 <__ledf2>
 80057e8:	da003e17 	ldw	r8,248(sp)
 80057ec:	1005f316 	blt	r2,zero,8006fbc <___svfprintf_internal_r+0x1cb8>
 80057f0:	df002783 	ldbu	fp,158(sp)
 80057f4:	008011c4 	movi	r2,71
 80057f8:	1445590e 	bge	r2,r17,8006d60 <___svfprintf_internal_r+0x1a5c>
 80057fc:	040200b4 	movhi	r16,2050
 8005800:	843f3b04 	addi	r16,r16,-788
 8005804:	00c000c4 	movi	r3,3
 8005808:	00bfdfc4 	movi	r2,-129
 800580c:	d8c02a15 	stw	r3,168(sp)
 8005810:	90a4703a 	and	r18,r18,r2
 8005814:	d8c02e15 	stw	r3,184(sp)
 8005818:	d8002915 	stw	zero,164(sp)
 800581c:	d8003215 	stw	zero,200(sp)
 8005820:	00006606 	br	80059bc <___svfprintf_internal_r+0x6b8>
 8005824:	94800214 	ori	r18,r18,8
 8005828:	bc400007 	ldb	r17,0(r23)
 800582c:	003f0906 	br	8005454 <__alt_data_end+0xf8005454>
 8005830:	18c03fcc 	andi	r3,r3,255
 8005834:	1807181e 	bne	r3,zero,8007498 <___svfprintf_internal_r+0x2194>
 8005838:	94800414 	ori	r18,r18,16
 800583c:	9080080c 	andi	r2,r18,32
 8005840:	10039626 	beq	r2,zero,800669c <___svfprintf_internal_r+0x1398>
 8005844:	d9402d17 	ldw	r5,180(sp)
 8005848:	28800117 	ldw	r2,4(r5)
 800584c:	2d000017 	ldw	r20,0(r5)
 8005850:	29400204 	addi	r5,r5,8
 8005854:	d9402d15 	stw	r5,180(sp)
 8005858:	102d883a 	mov	r22,r2
 800585c:	10039816 	blt	r2,zero,80066c0 <___svfprintf_internal_r+0x13bc>
 8005860:	d9402917 	ldw	r5,164(sp)
 8005864:	df002783 	ldbu	fp,158(sp)
 8005868:	2803ab16 	blt	r5,zero,8006718 <___svfprintf_internal_r+0x1414>
 800586c:	00ffdfc4 	movi	r3,-129
 8005870:	a584b03a 	or	r2,r20,r22
 8005874:	90e4703a 	and	r18,r18,r3
 8005878:	10014a26 	beq	r2,zero,8005da4 <___svfprintf_internal_r+0xaa0>
 800587c:	b0034b26 	beq	r22,zero,80065ac <___svfprintf_internal_r+0x12a8>
 8005880:	dc402a15 	stw	r17,168(sp)
 8005884:	dc001e04 	addi	r16,sp,120
 8005888:	b023883a 	mov	r17,r22
 800588c:	402d883a 	mov	r22,r8
 8005890:	a009883a 	mov	r4,r20
 8005894:	880b883a 	mov	r5,r17
 8005898:	01800284 	movi	r6,10
 800589c:	000f883a 	mov	r7,zero
 80058a0:	80194640 	call	8019464 <__umoddi3>
 80058a4:	10800c04 	addi	r2,r2,48
 80058a8:	843fffc4 	addi	r16,r16,-1
 80058ac:	a009883a 	mov	r4,r20
 80058b0:	880b883a 	mov	r5,r17
 80058b4:	80800005 	stb	r2,0(r16)
 80058b8:	01800284 	movi	r6,10
 80058bc:	000f883a 	mov	r7,zero
 80058c0:	8018eec0 	call	8018eec <__udivdi3>
 80058c4:	1029883a 	mov	r20,r2
 80058c8:	10c4b03a 	or	r2,r2,r3
 80058cc:	1823883a 	mov	r17,r3
 80058d0:	103fef1e 	bne	r2,zero,8005890 <__alt_data_end+0xf8005890>
 80058d4:	d8c02817 	ldw	r3,160(sp)
 80058d8:	dc402a17 	ldw	r17,168(sp)
 80058dc:	b011883a 	mov	r8,r22
 80058e0:	1c07c83a 	sub	r3,r3,r16
 80058e4:	d8c02e15 	stw	r3,184(sp)
 80058e8:	00002e06 	br	80059a4 <___svfprintf_internal_r+0x6a0>
 80058ec:	18c03fcc 	andi	r3,r3,255
 80058f0:	1806e71e 	bne	r3,zero,8007490 <___svfprintf_internal_r+0x218c>
 80058f4:	94800414 	ori	r18,r18,16
 80058f8:	9080080c 	andi	r2,r18,32
 80058fc:	1002d426 	beq	r2,zero,8006450 <___svfprintf_internal_r+0x114c>
 8005900:	d9402d17 	ldw	r5,180(sp)
 8005904:	d8c02917 	ldw	r3,164(sp)
 8005908:	d8002785 	stb	zero,158(sp)
 800590c:	28800204 	addi	r2,r5,8
 8005910:	2d000017 	ldw	r20,0(r5)
 8005914:	2d800117 	ldw	r22,4(r5)
 8005918:	18041516 	blt	r3,zero,8006970 <___svfprintf_internal_r+0x166c>
 800591c:	013fdfc4 	movi	r4,-129
 8005920:	a586b03a 	or	r3,r20,r22
 8005924:	d8802d15 	stw	r2,180(sp)
 8005928:	9124703a 	and	r18,r18,r4
 800592c:	1802d51e 	bne	r3,zero,8006484 <___svfprintf_internal_r+0x1180>
 8005930:	d9402917 	ldw	r5,164(sp)
 8005934:	0039883a 	mov	fp,zero
 8005938:	2806be26 	beq	r5,zero,8007434 <___svfprintf_internal_r+0x2130>
 800593c:	0029883a 	mov	r20,zero
 8005940:	002d883a 	mov	r22,zero
 8005944:	dc001e04 	addi	r16,sp,120
 8005948:	a006d0fa 	srli	r3,r20,3
 800594c:	b008977a 	slli	r4,r22,29
 8005950:	b02cd0fa 	srli	r22,r22,3
 8005954:	a50001cc 	andi	r20,r20,7
 8005958:	a0800c04 	addi	r2,r20,48
 800595c:	843fffc4 	addi	r16,r16,-1
 8005960:	20e8b03a 	or	r20,r4,r3
 8005964:	80800005 	stb	r2,0(r16)
 8005968:	a586b03a 	or	r3,r20,r22
 800596c:	183ff61e 	bne	r3,zero,8005948 <__alt_data_end+0xf8005948>
 8005970:	90c0004c 	andi	r3,r18,1
 8005974:	18013926 	beq	r3,zero,8005e5c <___svfprintf_internal_r+0xb58>
 8005978:	10803fcc 	andi	r2,r2,255
 800597c:	1080201c 	xori	r2,r2,128
 8005980:	10bfe004 	addi	r2,r2,-128
 8005984:	00c00c04 	movi	r3,48
 8005988:	10c13426 	beq	r2,r3,8005e5c <___svfprintf_internal_r+0xb58>
 800598c:	80ffffc5 	stb	r3,-1(r16)
 8005990:	d8c02817 	ldw	r3,160(sp)
 8005994:	80bfffc4 	addi	r2,r16,-1
 8005998:	1021883a 	mov	r16,r2
 800599c:	1887c83a 	sub	r3,r3,r2
 80059a0:	d8c02e15 	stw	r3,184(sp)
 80059a4:	d8802e17 	ldw	r2,184(sp)
 80059a8:	d9002917 	ldw	r4,164(sp)
 80059ac:	1100010e 	bge	r2,r4,80059b4 <___svfprintf_internal_r+0x6b0>
 80059b0:	2005883a 	mov	r2,r4
 80059b4:	d8802a15 	stw	r2,168(sp)
 80059b8:	d8003215 	stw	zero,200(sp)
 80059bc:	e7003fcc 	andi	fp,fp,255
 80059c0:	e700201c 	xori	fp,fp,128
 80059c4:	e73fe004 	addi	fp,fp,-128
 80059c8:	e0000326 	beq	fp,zero,80059d8 <___svfprintf_internal_r+0x6d4>
 80059cc:	d8c02a17 	ldw	r3,168(sp)
 80059d0:	18c00044 	addi	r3,r3,1
 80059d4:	d8c02a15 	stw	r3,168(sp)
 80059d8:	90c0008c 	andi	r3,r18,2
 80059dc:	d8c02b15 	stw	r3,172(sp)
 80059e0:	18000326 	beq	r3,zero,80059f0 <___svfprintf_internal_r+0x6ec>
 80059e4:	d8c02a17 	ldw	r3,168(sp)
 80059e8:	18c00084 	addi	r3,r3,2
 80059ec:	d8c02a15 	stw	r3,168(sp)
 80059f0:	90c0210c 	andi	r3,r18,132
 80059f4:	d8c03015 	stw	r3,192(sp)
 80059f8:	1801a11e 	bne	r3,zero,8006080 <___svfprintf_internal_r+0xd7c>
 80059fc:	d9003117 	ldw	r4,196(sp)
 8005a00:	d8c02a17 	ldw	r3,168(sp)
 8005a04:	20e9c83a 	sub	r20,r4,r3
 8005a08:	05019d0e 	bge	zero,r20,8006080 <___svfprintf_internal_r+0xd7c>
 8005a0c:	02400404 	movi	r9,16
 8005a10:	d8c02017 	ldw	r3,128(sp)
 8005a14:	d8801f17 	ldw	r2,124(sp)
 8005a18:	4d051b0e 	bge	r9,r20,8006e88 <___svfprintf_internal_r+0x1b84>
 8005a1c:	014200b4 	movhi	r5,2050
 8005a20:	297f4e84 	addi	r5,r5,-710
 8005a24:	dc403c15 	stw	r17,240(sp)
 8005a28:	d9403515 	stw	r5,212(sp)
 8005a2c:	a023883a 	mov	r17,r20
 8005a30:	482d883a 	mov	r22,r9
 8005a34:	9029883a 	mov	r20,r18
 8005a38:	070001c4 	movi	fp,7
 8005a3c:	8025883a 	mov	r18,r16
 8005a40:	dc002c17 	ldw	r16,176(sp)
 8005a44:	00000306 	br	8005a54 <___svfprintf_internal_r+0x750>
 8005a48:	8c7ffc04 	addi	r17,r17,-16
 8005a4c:	42000204 	addi	r8,r8,8
 8005a50:	b440130e 	bge	r22,r17,8005aa0 <___svfprintf_internal_r+0x79c>
 8005a54:	010200b4 	movhi	r4,2050
 8005a58:	18c00404 	addi	r3,r3,16
 8005a5c:	10800044 	addi	r2,r2,1
 8005a60:	213f4e84 	addi	r4,r4,-710
 8005a64:	41000015 	stw	r4,0(r8)
 8005a68:	45800115 	stw	r22,4(r8)
 8005a6c:	d8c02015 	stw	r3,128(sp)
 8005a70:	d8801f15 	stw	r2,124(sp)
 8005a74:	e0bff40e 	bge	fp,r2,8005a48 <__alt_data_end+0xf8005a48>
 8005a78:	d9801e04 	addi	r6,sp,120
 8005a7c:	800b883a 	mov	r5,r16
 8005a80:	9809883a 	mov	r4,r19
 8005a84:	80139c80 	call	80139c8 <__ssprint_r>
 8005a88:	103f031e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8005a8c:	8c7ffc04 	addi	r17,r17,-16
 8005a90:	d8c02017 	ldw	r3,128(sp)
 8005a94:	d8801f17 	ldw	r2,124(sp)
 8005a98:	da000404 	addi	r8,sp,16
 8005a9c:	b47fed16 	blt	r22,r17,8005a54 <__alt_data_end+0xf8005a54>
 8005aa0:	9021883a 	mov	r16,r18
 8005aa4:	a025883a 	mov	r18,r20
 8005aa8:	8829883a 	mov	r20,r17
 8005aac:	dc403c17 	ldw	r17,240(sp)
 8005ab0:	d9403517 	ldw	r5,212(sp)
 8005ab4:	a0c7883a 	add	r3,r20,r3
 8005ab8:	10800044 	addi	r2,r2,1
 8005abc:	41400015 	stw	r5,0(r8)
 8005ac0:	45000115 	stw	r20,4(r8)
 8005ac4:	d8c02015 	stw	r3,128(sp)
 8005ac8:	d8801f15 	stw	r2,124(sp)
 8005acc:	010001c4 	movi	r4,7
 8005ad0:	20829f16 	blt	r4,r2,8006550 <___svfprintf_internal_r+0x124c>
 8005ad4:	df002787 	ldb	fp,158(sp)
 8005ad8:	42000204 	addi	r8,r8,8
 8005adc:	e0000c26 	beq	fp,zero,8005b10 <___svfprintf_internal_r+0x80c>
 8005ae0:	d8801f17 	ldw	r2,124(sp)
 8005ae4:	d9002784 	addi	r4,sp,158
 8005ae8:	18c00044 	addi	r3,r3,1
 8005aec:	10800044 	addi	r2,r2,1
 8005af0:	41000015 	stw	r4,0(r8)
 8005af4:	01000044 	movi	r4,1
 8005af8:	41000115 	stw	r4,4(r8)
 8005afc:	d8c02015 	stw	r3,128(sp)
 8005b00:	d8801f15 	stw	r2,124(sp)
 8005b04:	010001c4 	movi	r4,7
 8005b08:	20823816 	blt	r4,r2,80063ec <___svfprintf_internal_r+0x10e8>
 8005b0c:	42000204 	addi	r8,r8,8
 8005b10:	d8802b17 	ldw	r2,172(sp)
 8005b14:	10000c26 	beq	r2,zero,8005b48 <___svfprintf_internal_r+0x844>
 8005b18:	d8801f17 	ldw	r2,124(sp)
 8005b1c:	d9002704 	addi	r4,sp,156
 8005b20:	18c00084 	addi	r3,r3,2
 8005b24:	10800044 	addi	r2,r2,1
 8005b28:	41000015 	stw	r4,0(r8)
 8005b2c:	01000084 	movi	r4,2
 8005b30:	41000115 	stw	r4,4(r8)
 8005b34:	d8c02015 	stw	r3,128(sp)
 8005b38:	d8801f15 	stw	r2,124(sp)
 8005b3c:	010001c4 	movi	r4,7
 8005b40:	20823216 	blt	r4,r2,800640c <___svfprintf_internal_r+0x1108>
 8005b44:	42000204 	addi	r8,r8,8
 8005b48:	d9003017 	ldw	r4,192(sp)
 8005b4c:	00802004 	movi	r2,128
 8005b50:	20819726 	beq	r4,r2,80061b0 <___svfprintf_internal_r+0xeac>
 8005b54:	d9402917 	ldw	r5,164(sp)
 8005b58:	d8802e17 	ldw	r2,184(sp)
 8005b5c:	28adc83a 	sub	r22,r5,r2
 8005b60:	05802f0e 	bge	zero,r22,8005c20 <___svfprintf_internal_r+0x91c>
 8005b64:	07000404 	movi	fp,16
 8005b68:	d8801f17 	ldw	r2,124(sp)
 8005b6c:	e583c00e 	bge	fp,r22,8006a70 <___svfprintf_internal_r+0x176c>
 8005b70:	014200b4 	movhi	r5,2050
 8005b74:	297f4a84 	addi	r5,r5,-726
 8005b78:	dc402915 	stw	r17,164(sp)
 8005b7c:	d9402b15 	stw	r5,172(sp)
 8005b80:	b023883a 	mov	r17,r22
 8005b84:	050001c4 	movi	r20,7
 8005b88:	902d883a 	mov	r22,r18
 8005b8c:	8025883a 	mov	r18,r16
 8005b90:	dc002c17 	ldw	r16,176(sp)
 8005b94:	00000306 	br	8005ba4 <___svfprintf_internal_r+0x8a0>
 8005b98:	8c7ffc04 	addi	r17,r17,-16
 8005b9c:	42000204 	addi	r8,r8,8
 8005ba0:	e440110e 	bge	fp,r17,8005be8 <___svfprintf_internal_r+0x8e4>
 8005ba4:	18c00404 	addi	r3,r3,16
 8005ba8:	10800044 	addi	r2,r2,1
 8005bac:	45400015 	stw	r21,0(r8)
 8005bb0:	47000115 	stw	fp,4(r8)
 8005bb4:	d8c02015 	stw	r3,128(sp)
 8005bb8:	d8801f15 	stw	r2,124(sp)
 8005bbc:	a0bff60e 	bge	r20,r2,8005b98 <__alt_data_end+0xf8005b98>
 8005bc0:	d9801e04 	addi	r6,sp,120
 8005bc4:	800b883a 	mov	r5,r16
 8005bc8:	9809883a 	mov	r4,r19
 8005bcc:	80139c80 	call	80139c8 <__ssprint_r>
 8005bd0:	103eb11e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8005bd4:	8c7ffc04 	addi	r17,r17,-16
 8005bd8:	d8c02017 	ldw	r3,128(sp)
 8005bdc:	d8801f17 	ldw	r2,124(sp)
 8005be0:	da000404 	addi	r8,sp,16
 8005be4:	e47fef16 	blt	fp,r17,8005ba4 <__alt_data_end+0xf8005ba4>
 8005be8:	9021883a 	mov	r16,r18
 8005bec:	b025883a 	mov	r18,r22
 8005bf0:	882d883a 	mov	r22,r17
 8005bf4:	dc402917 	ldw	r17,164(sp)
 8005bf8:	d9002b17 	ldw	r4,172(sp)
 8005bfc:	1d87883a 	add	r3,r3,r22
 8005c00:	10800044 	addi	r2,r2,1
 8005c04:	41000015 	stw	r4,0(r8)
 8005c08:	45800115 	stw	r22,4(r8)
 8005c0c:	d8c02015 	stw	r3,128(sp)
 8005c10:	d8801f15 	stw	r2,124(sp)
 8005c14:	010001c4 	movi	r4,7
 8005c18:	2081ec16 	blt	r4,r2,80063cc <___svfprintf_internal_r+0x10c8>
 8005c1c:	42000204 	addi	r8,r8,8
 8005c20:	9080400c 	andi	r2,r18,256
 8005c24:	1001181e 	bne	r2,zero,8006088 <___svfprintf_internal_r+0xd84>
 8005c28:	d9402e17 	ldw	r5,184(sp)
 8005c2c:	d8801f17 	ldw	r2,124(sp)
 8005c30:	44000015 	stw	r16,0(r8)
 8005c34:	1947883a 	add	r3,r3,r5
 8005c38:	10800044 	addi	r2,r2,1
 8005c3c:	41400115 	stw	r5,4(r8)
 8005c40:	d8c02015 	stw	r3,128(sp)
 8005c44:	d8801f15 	stw	r2,124(sp)
 8005c48:	010001c4 	movi	r4,7
 8005c4c:	2081d116 	blt	r4,r2,8006394 <___svfprintf_internal_r+0x1090>
 8005c50:	42000204 	addi	r8,r8,8
 8005c54:	9480010c 	andi	r18,r18,4
 8005c58:	90003226 	beq	r18,zero,8005d24 <___svfprintf_internal_r+0xa20>
 8005c5c:	d9403117 	ldw	r5,196(sp)
 8005c60:	d8802a17 	ldw	r2,168(sp)
 8005c64:	28a1c83a 	sub	r16,r5,r2
 8005c68:	04002e0e 	bge	zero,r16,8005d24 <___svfprintf_internal_r+0xa20>
 8005c6c:	04400404 	movi	r17,16
 8005c70:	d8801f17 	ldw	r2,124(sp)
 8005c74:	8c04b90e 	bge	r17,r16,8006f5c <___svfprintf_internal_r+0x1c58>
 8005c78:	014200b4 	movhi	r5,2050
 8005c7c:	297f4e84 	addi	r5,r5,-710
 8005c80:	d9403515 	stw	r5,212(sp)
 8005c84:	048001c4 	movi	r18,7
 8005c88:	dd002c17 	ldw	r20,176(sp)
 8005c8c:	00000306 	br	8005c9c <___svfprintf_internal_r+0x998>
 8005c90:	843ffc04 	addi	r16,r16,-16
 8005c94:	42000204 	addi	r8,r8,8
 8005c98:	8c00130e 	bge	r17,r16,8005ce8 <___svfprintf_internal_r+0x9e4>
 8005c9c:	010200b4 	movhi	r4,2050
 8005ca0:	18c00404 	addi	r3,r3,16
 8005ca4:	10800044 	addi	r2,r2,1
 8005ca8:	213f4e84 	addi	r4,r4,-710
 8005cac:	41000015 	stw	r4,0(r8)
 8005cb0:	44400115 	stw	r17,4(r8)
 8005cb4:	d8c02015 	stw	r3,128(sp)
 8005cb8:	d8801f15 	stw	r2,124(sp)
 8005cbc:	90bff40e 	bge	r18,r2,8005c90 <__alt_data_end+0xf8005c90>
 8005cc0:	d9801e04 	addi	r6,sp,120
 8005cc4:	a00b883a 	mov	r5,r20
 8005cc8:	9809883a 	mov	r4,r19
 8005ccc:	80139c80 	call	80139c8 <__ssprint_r>
 8005cd0:	103e711e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8005cd4:	843ffc04 	addi	r16,r16,-16
 8005cd8:	d8c02017 	ldw	r3,128(sp)
 8005cdc:	d8801f17 	ldw	r2,124(sp)
 8005ce0:	da000404 	addi	r8,sp,16
 8005ce4:	8c3fed16 	blt	r17,r16,8005c9c <__alt_data_end+0xf8005c9c>
 8005ce8:	d9403517 	ldw	r5,212(sp)
 8005cec:	1c07883a 	add	r3,r3,r16
 8005cf0:	10800044 	addi	r2,r2,1
 8005cf4:	41400015 	stw	r5,0(r8)
 8005cf8:	44000115 	stw	r16,4(r8)
 8005cfc:	d8c02015 	stw	r3,128(sp)
 8005d00:	d8801f15 	stw	r2,124(sp)
 8005d04:	010001c4 	movi	r4,7
 8005d08:	2080060e 	bge	r4,r2,8005d24 <___svfprintf_internal_r+0xa20>
 8005d0c:	d9402c17 	ldw	r5,176(sp)
 8005d10:	d9801e04 	addi	r6,sp,120
 8005d14:	9809883a 	mov	r4,r19
 8005d18:	80139c80 	call	80139c8 <__ssprint_r>
 8005d1c:	103e5e1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8005d20:	d8c02017 	ldw	r3,128(sp)
 8005d24:	d8803117 	ldw	r2,196(sp)
 8005d28:	d9002a17 	ldw	r4,168(sp)
 8005d2c:	1100010e 	bge	r2,r4,8005d34 <___svfprintf_internal_r+0xa30>
 8005d30:	2005883a 	mov	r2,r4
 8005d34:	d9402f17 	ldw	r5,188(sp)
 8005d38:	288b883a 	add	r5,r5,r2
 8005d3c:	d9402f15 	stw	r5,188(sp)
 8005d40:	18019c1e 	bne	r3,zero,80063b4 <___svfprintf_internal_r+0x10b0>
 8005d44:	b8800007 	ldb	r2,0(r23)
 8005d48:	d8001f15 	stw	zero,124(sp)
 8005d4c:	da000404 	addi	r8,sp,16
 8005d50:	103d991e 	bne	r2,zero,80053b8 <__alt_data_end+0xf80053b8>
 8005d54:	b821883a 	mov	r16,r23
 8005d58:	003daf06 	br	8005418 <__alt_data_end+0xf8005418>
 8005d5c:	18c03fcc 	andi	r3,r3,255
 8005d60:	1805c71e 	bne	r3,zero,8007480 <___svfprintf_internal_r+0x217c>
 8005d64:	94800414 	ori	r18,r18,16
 8005d68:	9080080c 	andi	r2,r18,32
 8005d6c:	10020126 	beq	r2,zero,8006574 <___svfprintf_internal_r+0x1270>
 8005d70:	d8802d17 	ldw	r2,180(sp)
 8005d74:	d9002917 	ldw	r4,164(sp)
 8005d78:	d8002785 	stb	zero,158(sp)
 8005d7c:	10c00204 	addi	r3,r2,8
 8005d80:	15000017 	ldw	r20,0(r2)
 8005d84:	15800117 	ldw	r22,4(r2)
 8005d88:	20038e16 	blt	r4,zero,8006bc4 <___svfprintf_internal_r+0x18c0>
 8005d8c:	013fdfc4 	movi	r4,-129
 8005d90:	a584b03a 	or	r2,r20,r22
 8005d94:	d8c02d15 	stw	r3,180(sp)
 8005d98:	9124703a 	and	r18,r18,r4
 8005d9c:	0039883a 	mov	fp,zero
 8005da0:	103eb61e 	bne	r2,zero,800587c <__alt_data_end+0xf800587c>
 8005da4:	d8802917 	ldw	r2,164(sp)
 8005da8:	1002c81e 	bne	r2,zero,80068cc <___svfprintf_internal_r+0x15c8>
 8005dac:	d8002915 	stw	zero,164(sp)
 8005db0:	d8002e15 	stw	zero,184(sp)
 8005db4:	dc001e04 	addi	r16,sp,120
 8005db8:	003efa06 	br	80059a4 <__alt_data_end+0xf80059a4>
 8005dbc:	18c03fcc 	andi	r3,r3,255
 8005dc0:	1805ad1e 	bne	r3,zero,8007478 <___svfprintf_internal_r+0x2174>
 8005dc4:	014200b4 	movhi	r5,2050
 8005dc8:	297f3e04 	addi	r5,r5,-776
 8005dcc:	d9403a15 	stw	r5,232(sp)
 8005dd0:	9080080c 	andi	r2,r18,32
 8005dd4:	10006126 	beq	r2,zero,8005f5c <___svfprintf_internal_r+0xc58>
 8005dd8:	d8802d17 	ldw	r2,180(sp)
 8005ddc:	15000017 	ldw	r20,0(r2)
 8005de0:	15800117 	ldw	r22,4(r2)
 8005de4:	10800204 	addi	r2,r2,8
 8005de8:	d8802d15 	stw	r2,180(sp)
 8005dec:	9080004c 	andi	r2,r18,1
 8005df0:	10018e26 	beq	r2,zero,800642c <___svfprintf_internal_r+0x1128>
 8005df4:	a584b03a 	or	r2,r20,r22
 8005df8:	10030926 	beq	r2,zero,8006a20 <___svfprintf_internal_r+0x171c>
 8005dfc:	d8c02917 	ldw	r3,164(sp)
 8005e00:	00800c04 	movi	r2,48
 8005e04:	d8802705 	stb	r2,156(sp)
 8005e08:	dc402745 	stb	r17,157(sp)
 8005e0c:	d8002785 	stb	zero,158(sp)
 8005e10:	90800094 	ori	r2,r18,2
 8005e14:	18048716 	blt	r3,zero,8007034 <___svfprintf_internal_r+0x1d30>
 8005e18:	00bfdfc4 	movi	r2,-129
 8005e1c:	90a4703a 	and	r18,r18,r2
 8005e20:	94800094 	ori	r18,r18,2
 8005e24:	0039883a 	mov	fp,zero
 8005e28:	d9003a17 	ldw	r4,232(sp)
 8005e2c:	dc001e04 	addi	r16,sp,120
 8005e30:	a08003cc 	andi	r2,r20,15
 8005e34:	b006973a 	slli	r3,r22,28
 8005e38:	2085883a 	add	r2,r4,r2
 8005e3c:	a028d13a 	srli	r20,r20,4
 8005e40:	10800003 	ldbu	r2,0(r2)
 8005e44:	b02cd13a 	srli	r22,r22,4
 8005e48:	843fffc4 	addi	r16,r16,-1
 8005e4c:	1d28b03a 	or	r20,r3,r20
 8005e50:	80800005 	stb	r2,0(r16)
 8005e54:	a584b03a 	or	r2,r20,r22
 8005e58:	103ff51e 	bne	r2,zero,8005e30 <__alt_data_end+0xf8005e30>
 8005e5c:	d8c02817 	ldw	r3,160(sp)
 8005e60:	1c07c83a 	sub	r3,r3,r16
 8005e64:	d8c02e15 	stw	r3,184(sp)
 8005e68:	003ece06 	br	80059a4 <__alt_data_end+0xf80059a4>
 8005e6c:	d8c02d17 	ldw	r3,180(sp)
 8005e70:	d9002d17 	ldw	r4,180(sp)
 8005e74:	d8002785 	stb	zero,158(sp)
 8005e78:	18800017 	ldw	r2,0(r3)
 8005e7c:	21000104 	addi	r4,r4,4
 8005e80:	00c00044 	movi	r3,1
 8005e84:	d8c02a15 	stw	r3,168(sp)
 8005e88:	d8801405 	stb	r2,80(sp)
 8005e8c:	d9002d15 	stw	r4,180(sp)
 8005e90:	d8c02e15 	stw	r3,184(sp)
 8005e94:	d8002915 	stw	zero,164(sp)
 8005e98:	d8003215 	stw	zero,200(sp)
 8005e9c:	dc001404 	addi	r16,sp,80
 8005ea0:	0039883a 	mov	fp,zero
 8005ea4:	003ecc06 	br	80059d8 <__alt_data_end+0xf80059d8>
 8005ea8:	18c03fcc 	andi	r3,r3,255
 8005eac:	183e9226 	beq	r3,zero,80058f8 <__alt_data_end+0xf80058f8>
 8005eb0:	d9c02785 	stb	r7,158(sp)
 8005eb4:	003e9006 	br	80058f8 <__alt_data_end+0xf80058f8>
 8005eb8:	00c00044 	movi	r3,1
 8005ebc:	01c00ac4 	movi	r7,43
 8005ec0:	bc400007 	ldb	r17,0(r23)
 8005ec4:	003d6306 	br	8005454 <__alt_data_end+0xf8005454>
 8005ec8:	94800814 	ori	r18,r18,32
 8005ecc:	bc400007 	ldb	r17,0(r23)
 8005ed0:	003d6006 	br	8005454 <__alt_data_end+0xf8005454>
 8005ed4:	d8c02d17 	ldw	r3,180(sp)
 8005ed8:	d8002785 	stb	zero,158(sp)
 8005edc:	1c000017 	ldw	r16,0(r3)
 8005ee0:	1d000104 	addi	r20,r3,4
 8005ee4:	80040f26 	beq	r16,zero,8006f24 <___svfprintf_internal_r+0x1c20>
 8005ee8:	d9002917 	ldw	r4,164(sp)
 8005eec:	2003dc16 	blt	r4,zero,8006e60 <___svfprintf_internal_r+0x1b5c>
 8005ef0:	200d883a 	mov	r6,r4
 8005ef4:	000b883a 	mov	r5,zero
 8005ef8:	8009883a 	mov	r4,r16
 8005efc:	da003e15 	stw	r8,248(sp)
 8005f00:	800faf00 	call	800faf0 <memchr>
 8005f04:	da003e17 	ldw	r8,248(sp)
 8005f08:	10045826 	beq	r2,zero,800706c <___svfprintf_internal_r+0x1d68>
 8005f0c:	1405c83a 	sub	r2,r2,r16
 8005f10:	d8802e15 	stw	r2,184(sp)
 8005f14:	1003d816 	blt	r2,zero,8006e78 <___svfprintf_internal_r+0x1b74>
 8005f18:	df002783 	ldbu	fp,158(sp)
 8005f1c:	d8802a15 	stw	r2,168(sp)
 8005f20:	dd002d15 	stw	r20,180(sp)
 8005f24:	d8002915 	stw	zero,164(sp)
 8005f28:	d8003215 	stw	zero,200(sp)
 8005f2c:	003ea306 	br	80059bc <__alt_data_end+0xf80059bc>
 8005f30:	18c03fcc 	andi	r3,r3,255
 8005f34:	183f8c26 	beq	r3,zero,8005d68 <__alt_data_end+0xf8005d68>
 8005f38:	d9c02785 	stb	r7,158(sp)
 8005f3c:	003f8a06 	br	8005d68 <__alt_data_end+0xf8005d68>
 8005f40:	18c03fcc 	andi	r3,r3,255
 8005f44:	1805631e 	bne	r3,zero,80074d4 <___svfprintf_internal_r+0x21d0>
 8005f48:	014200b4 	movhi	r5,2050
 8005f4c:	297f4304 	addi	r5,r5,-756
 8005f50:	d9403a15 	stw	r5,232(sp)
 8005f54:	9080080c 	andi	r2,r18,32
 8005f58:	103f9f1e 	bne	r2,zero,8005dd8 <__alt_data_end+0xf8005dd8>
 8005f5c:	9080040c 	andi	r2,r18,16
 8005f60:	10029c26 	beq	r2,zero,80069d4 <___svfprintf_internal_r+0x16d0>
 8005f64:	d8c02d17 	ldw	r3,180(sp)
 8005f68:	002d883a 	mov	r22,zero
 8005f6c:	1d000017 	ldw	r20,0(r3)
 8005f70:	18c00104 	addi	r3,r3,4
 8005f74:	d8c02d15 	stw	r3,180(sp)
 8005f78:	003f9c06 	br	8005dec <__alt_data_end+0xf8005dec>
 8005f7c:	94800054 	ori	r18,r18,1
 8005f80:	bc400007 	ldb	r17,0(r23)
 8005f84:	003d3306 	br	8005454 <__alt_data_end+0xf8005454>
 8005f88:	38803fcc 	andi	r2,r7,255
 8005f8c:	1080201c 	xori	r2,r2,128
 8005f90:	10bfe004 	addi	r2,r2,-128
 8005f94:	1002971e 	bne	r2,zero,80069f4 <___svfprintf_internal_r+0x16f0>
 8005f98:	00c00044 	movi	r3,1
 8005f9c:	01c00804 	movi	r7,32
 8005fa0:	bc400007 	ldb	r17,0(r23)
 8005fa4:	003d2b06 	br	8005454 <__alt_data_end+0xf8005454>
 8005fa8:	18c03fcc 	andi	r3,r3,255
 8005fac:	183e2326 	beq	r3,zero,800583c <__alt_data_end+0xf800583c>
 8005fb0:	d9c02785 	stb	r7,158(sp)
 8005fb4:	003e2106 	br	800583c <__alt_data_end+0xf800583c>
 8005fb8:	bc400007 	ldb	r17,0(r23)
 8005fbc:	8a430426 	beq	r17,r9,8006bd0 <___svfprintf_internal_r+0x18cc>
 8005fc0:	94800414 	ori	r18,r18,16
 8005fc4:	003d2306 	br	8005454 <__alt_data_end+0xf8005454>
 8005fc8:	18c03fcc 	andi	r3,r3,255
 8005fcc:	18053f1e 	bne	r3,zero,80074cc <___svfprintf_internal_r+0x21c8>
 8005fd0:	9080080c 	andi	r2,r18,32
 8005fd4:	10028926 	beq	r2,zero,80069fc <___svfprintf_internal_r+0x16f8>
 8005fd8:	d9402d17 	ldw	r5,180(sp)
 8005fdc:	d9002f17 	ldw	r4,188(sp)
 8005fe0:	28800017 	ldw	r2,0(r5)
 8005fe4:	2007d7fa 	srai	r3,r4,31
 8005fe8:	29400104 	addi	r5,r5,4
 8005fec:	d9402d15 	stw	r5,180(sp)
 8005ff0:	11000015 	stw	r4,0(r2)
 8005ff4:	10c00115 	stw	r3,4(r2)
 8005ff8:	003ced06 	br	80053b0 <__alt_data_end+0xf80053b0>
 8005ffc:	94801014 	ori	r18,r18,64
 8006000:	bc400007 	ldb	r17,0(r23)
 8006004:	003d1306 	br	8005454 <__alt_data_end+0xf8005454>
 8006008:	010200b4 	movhi	r4,2050
 800600c:	213f4304 	addi	r4,r4,-756
 8006010:	0039883a 	mov	fp,zero
 8006014:	d9003a15 	stw	r4,232(sp)
 8006018:	04401e04 	movi	r17,120
 800601c:	003f8206 	br	8005e28 <__alt_data_end+0xf8005e28>
 8006020:	18c03fcc 	andi	r3,r3,255
 8006024:	1805221e 	bne	r3,zero,80074b0 <___svfprintf_internal_r+0x21ac>
 8006028:	883d9526 	beq	r17,zero,8005680 <__alt_data_end+0xf8005680>
 800602c:	00c00044 	movi	r3,1
 8006030:	d8c02a15 	stw	r3,168(sp)
 8006034:	dc401405 	stb	r17,80(sp)
 8006038:	d8002785 	stb	zero,158(sp)
 800603c:	003f9406 	br	8005e90 <__alt_data_end+0xf8005e90>
 8006040:	010200b4 	movhi	r4,2050
 8006044:	213f4304 	addi	r4,r4,-756
 8006048:	d9003a15 	stw	r4,232(sp)
 800604c:	d8c02d15 	stw	r3,180(sp)
 8006050:	1025883a 	mov	r18,r2
 8006054:	04401e04 	movi	r17,120
 8006058:	a584b03a 	or	r2,r20,r22
 800605c:	1000fa1e 	bne	r2,zero,8006448 <___svfprintf_internal_r+0x1144>
 8006060:	0039883a 	mov	fp,zero
 8006064:	00800084 	movi	r2,2
 8006068:	10803fcc 	andi	r2,r2,255
 800606c:	00c00044 	movi	r3,1
 8006070:	10c21626 	beq	r2,r3,80068cc <___svfprintf_internal_r+0x15c8>
 8006074:	00c00084 	movi	r3,2
 8006078:	10fe301e 	bne	r2,r3,800593c <__alt_data_end+0xf800593c>
 800607c:	003d7606 	br	8005658 <__alt_data_end+0xf8005658>
 8006080:	d8c02017 	ldw	r3,128(sp)
 8006084:	003e9506 	br	8005adc <__alt_data_end+0xf8005adc>
 8006088:	00801944 	movi	r2,101
 800608c:	14407c0e 	bge	r2,r17,8006280 <___svfprintf_internal_r+0xf7c>
 8006090:	d9003617 	ldw	r4,216(sp)
 8006094:	d9403717 	ldw	r5,220(sp)
 8006098:	000d883a 	mov	r6,zero
 800609c:	000f883a 	mov	r7,zero
 80060a0:	d8c03d15 	stw	r3,244(sp)
 80060a4:	da003e15 	stw	r8,248(sp)
 80060a8:	801ad2c0 	call	801ad2c <__eqdf2>
 80060ac:	d8c03d17 	ldw	r3,244(sp)
 80060b0:	da003e17 	ldw	r8,248(sp)
 80060b4:	1000f51e 	bne	r2,zero,800648c <___svfprintf_internal_r+0x1188>
 80060b8:	d8801f17 	ldw	r2,124(sp)
 80060bc:	010200b4 	movhi	r4,2050
 80060c0:	213f4a04 	addi	r4,r4,-728
 80060c4:	18c00044 	addi	r3,r3,1
 80060c8:	10800044 	addi	r2,r2,1
 80060cc:	41000015 	stw	r4,0(r8)
 80060d0:	01000044 	movi	r4,1
 80060d4:	41000115 	stw	r4,4(r8)
 80060d8:	d8c02015 	stw	r3,128(sp)
 80060dc:	d8801f15 	stw	r2,124(sp)
 80060e0:	010001c4 	movi	r4,7
 80060e4:	20826616 	blt	r4,r2,8006a80 <___svfprintf_internal_r+0x177c>
 80060e8:	42000204 	addi	r8,r8,8
 80060ec:	d8802617 	ldw	r2,152(sp)
 80060f0:	d9403317 	ldw	r5,204(sp)
 80060f4:	11400216 	blt	r2,r5,8006100 <___svfprintf_internal_r+0xdfc>
 80060f8:	9080004c 	andi	r2,r18,1
 80060fc:	103ed526 	beq	r2,zero,8005c54 <__alt_data_end+0xf8005c54>
 8006100:	d8803817 	ldw	r2,224(sp)
 8006104:	d9003417 	ldw	r4,208(sp)
 8006108:	d9403817 	ldw	r5,224(sp)
 800610c:	1887883a 	add	r3,r3,r2
 8006110:	d8801f17 	ldw	r2,124(sp)
 8006114:	41000015 	stw	r4,0(r8)
 8006118:	41400115 	stw	r5,4(r8)
 800611c:	10800044 	addi	r2,r2,1
 8006120:	d8c02015 	stw	r3,128(sp)
 8006124:	d8801f15 	stw	r2,124(sp)
 8006128:	010001c4 	movi	r4,7
 800612c:	2082af16 	blt	r4,r2,8006bec <___svfprintf_internal_r+0x18e8>
 8006130:	42000204 	addi	r8,r8,8
 8006134:	d8803317 	ldw	r2,204(sp)
 8006138:	143fffc4 	addi	r16,r2,-1
 800613c:	043ec50e 	bge	zero,r16,8005c54 <__alt_data_end+0xf8005c54>
 8006140:	04400404 	movi	r17,16
 8006144:	d8801f17 	ldw	r2,124(sp)
 8006148:	8c00860e 	bge	r17,r16,8006364 <___svfprintf_internal_r+0x1060>
 800614c:	014200b4 	movhi	r5,2050
 8006150:	297f4a84 	addi	r5,r5,-726
 8006154:	d9402b15 	stw	r5,172(sp)
 8006158:	058001c4 	movi	r22,7
 800615c:	dd002c17 	ldw	r20,176(sp)
 8006160:	00000306 	br	8006170 <___svfprintf_internal_r+0xe6c>
 8006164:	42000204 	addi	r8,r8,8
 8006168:	843ffc04 	addi	r16,r16,-16
 800616c:	8c00800e 	bge	r17,r16,8006370 <___svfprintf_internal_r+0x106c>
 8006170:	18c00404 	addi	r3,r3,16
 8006174:	10800044 	addi	r2,r2,1
 8006178:	45400015 	stw	r21,0(r8)
 800617c:	44400115 	stw	r17,4(r8)
 8006180:	d8c02015 	stw	r3,128(sp)
 8006184:	d8801f15 	stw	r2,124(sp)
 8006188:	b0bff60e 	bge	r22,r2,8006164 <__alt_data_end+0xf8006164>
 800618c:	d9801e04 	addi	r6,sp,120
 8006190:	a00b883a 	mov	r5,r20
 8006194:	9809883a 	mov	r4,r19
 8006198:	80139c80 	call	80139c8 <__ssprint_r>
 800619c:	103d3e1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 80061a0:	d8c02017 	ldw	r3,128(sp)
 80061a4:	d8801f17 	ldw	r2,124(sp)
 80061a8:	da000404 	addi	r8,sp,16
 80061ac:	003fee06 	br	8006168 <__alt_data_end+0xf8006168>
 80061b0:	d9403117 	ldw	r5,196(sp)
 80061b4:	d8802a17 	ldw	r2,168(sp)
 80061b8:	28adc83a 	sub	r22,r5,r2
 80061bc:	05be650e 	bge	zero,r22,8005b54 <__alt_data_end+0xf8005b54>
 80061c0:	07000404 	movi	fp,16
 80061c4:	d8801f17 	ldw	r2,124(sp)
 80061c8:	e583a20e 	bge	fp,r22,8007054 <___svfprintf_internal_r+0x1d50>
 80061cc:	014200b4 	movhi	r5,2050
 80061d0:	297f4a84 	addi	r5,r5,-726
 80061d4:	dc403015 	stw	r17,192(sp)
 80061d8:	d9402b15 	stw	r5,172(sp)
 80061dc:	b023883a 	mov	r17,r22
 80061e0:	050001c4 	movi	r20,7
 80061e4:	902d883a 	mov	r22,r18
 80061e8:	8025883a 	mov	r18,r16
 80061ec:	dc002c17 	ldw	r16,176(sp)
 80061f0:	00000306 	br	8006200 <___svfprintf_internal_r+0xefc>
 80061f4:	8c7ffc04 	addi	r17,r17,-16
 80061f8:	42000204 	addi	r8,r8,8
 80061fc:	e440110e 	bge	fp,r17,8006244 <___svfprintf_internal_r+0xf40>
 8006200:	18c00404 	addi	r3,r3,16
 8006204:	10800044 	addi	r2,r2,1
 8006208:	45400015 	stw	r21,0(r8)
 800620c:	47000115 	stw	fp,4(r8)
 8006210:	d8c02015 	stw	r3,128(sp)
 8006214:	d8801f15 	stw	r2,124(sp)
 8006218:	a0bff60e 	bge	r20,r2,80061f4 <__alt_data_end+0xf80061f4>
 800621c:	d9801e04 	addi	r6,sp,120
 8006220:	800b883a 	mov	r5,r16
 8006224:	9809883a 	mov	r4,r19
 8006228:	80139c80 	call	80139c8 <__ssprint_r>
 800622c:	103d1a1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006230:	8c7ffc04 	addi	r17,r17,-16
 8006234:	d8c02017 	ldw	r3,128(sp)
 8006238:	d8801f17 	ldw	r2,124(sp)
 800623c:	da000404 	addi	r8,sp,16
 8006240:	e47fef16 	blt	fp,r17,8006200 <__alt_data_end+0xf8006200>
 8006244:	9021883a 	mov	r16,r18
 8006248:	b025883a 	mov	r18,r22
 800624c:	882d883a 	mov	r22,r17
 8006250:	dc403017 	ldw	r17,192(sp)
 8006254:	d9002b17 	ldw	r4,172(sp)
 8006258:	1d87883a 	add	r3,r3,r22
 800625c:	10800044 	addi	r2,r2,1
 8006260:	41000015 	stw	r4,0(r8)
 8006264:	45800115 	stw	r22,4(r8)
 8006268:	d8c02015 	stw	r3,128(sp)
 800626c:	d8801f15 	stw	r2,124(sp)
 8006270:	010001c4 	movi	r4,7
 8006274:	20819a16 	blt	r4,r2,80068e0 <___svfprintf_internal_r+0x15dc>
 8006278:	42000204 	addi	r8,r8,8
 800627c:	003e3506 	br	8005b54 <__alt_data_end+0xf8005b54>
 8006280:	d9403317 	ldw	r5,204(sp)
 8006284:	00800044 	movi	r2,1
 8006288:	18c00044 	addi	r3,r3,1
 800628c:	1141710e 	bge	r2,r5,8006854 <___svfprintf_internal_r+0x1550>
 8006290:	dc401f17 	ldw	r17,124(sp)
 8006294:	00800044 	movi	r2,1
 8006298:	40800115 	stw	r2,4(r8)
 800629c:	8c400044 	addi	r17,r17,1
 80062a0:	44000015 	stw	r16,0(r8)
 80062a4:	d8c02015 	stw	r3,128(sp)
 80062a8:	dc401f15 	stw	r17,124(sp)
 80062ac:	008001c4 	movi	r2,7
 80062b0:	14417416 	blt	r2,r17,8006884 <___svfprintf_internal_r+0x1580>
 80062b4:	42000204 	addi	r8,r8,8
 80062b8:	d8803817 	ldw	r2,224(sp)
 80062bc:	d9003417 	ldw	r4,208(sp)
 80062c0:	8c400044 	addi	r17,r17,1
 80062c4:	10c7883a 	add	r3,r2,r3
 80062c8:	40800115 	stw	r2,4(r8)
 80062cc:	41000015 	stw	r4,0(r8)
 80062d0:	d8c02015 	stw	r3,128(sp)
 80062d4:	dc401f15 	stw	r17,124(sp)
 80062d8:	008001c4 	movi	r2,7
 80062dc:	14417216 	blt	r2,r17,80068a8 <___svfprintf_internal_r+0x15a4>
 80062e0:	45800204 	addi	r22,r8,8
 80062e4:	d9003617 	ldw	r4,216(sp)
 80062e8:	d9403717 	ldw	r5,220(sp)
 80062ec:	000d883a 	mov	r6,zero
 80062f0:	000f883a 	mov	r7,zero
 80062f4:	d8c03d15 	stw	r3,244(sp)
 80062f8:	801ad2c0 	call	801ad2c <__eqdf2>
 80062fc:	d8c03d17 	ldw	r3,244(sp)
 8006300:	1000b326 	beq	r2,zero,80065d0 <___svfprintf_internal_r+0x12cc>
 8006304:	d9403317 	ldw	r5,204(sp)
 8006308:	84000044 	addi	r16,r16,1
 800630c:	8c400044 	addi	r17,r17,1
 8006310:	28bfffc4 	addi	r2,r5,-1
 8006314:	1887883a 	add	r3,r3,r2
 8006318:	b0800115 	stw	r2,4(r22)
 800631c:	b4000015 	stw	r16,0(r22)
 8006320:	d8c02015 	stw	r3,128(sp)
 8006324:	dc401f15 	stw	r17,124(sp)
 8006328:	008001c4 	movi	r2,7
 800632c:	1440d216 	blt	r2,r17,8006678 <___svfprintf_internal_r+0x1374>
 8006330:	b5800204 	addi	r22,r22,8
 8006334:	d9003b17 	ldw	r4,236(sp)
 8006338:	df0022c4 	addi	fp,sp,139
 800633c:	8c400044 	addi	r17,r17,1
 8006340:	20c7883a 	add	r3,r4,r3
 8006344:	b7000015 	stw	fp,0(r22)
 8006348:	b1000115 	stw	r4,4(r22)
 800634c:	d8c02015 	stw	r3,128(sp)
 8006350:	dc401f15 	stw	r17,124(sp)
 8006354:	008001c4 	movi	r2,7
 8006358:	14400e16 	blt	r2,r17,8006394 <___svfprintf_internal_r+0x1090>
 800635c:	b2000204 	addi	r8,r22,8
 8006360:	003e3c06 	br	8005c54 <__alt_data_end+0xf8005c54>
 8006364:	010200b4 	movhi	r4,2050
 8006368:	213f4a84 	addi	r4,r4,-726
 800636c:	d9002b15 	stw	r4,172(sp)
 8006370:	d9002b17 	ldw	r4,172(sp)
 8006374:	1c07883a 	add	r3,r3,r16
 8006378:	44000115 	stw	r16,4(r8)
 800637c:	41000015 	stw	r4,0(r8)
 8006380:	10800044 	addi	r2,r2,1
 8006384:	d8c02015 	stw	r3,128(sp)
 8006388:	d8801f15 	stw	r2,124(sp)
 800638c:	010001c4 	movi	r4,7
 8006390:	20be2f0e 	bge	r4,r2,8005c50 <__alt_data_end+0xf8005c50>
 8006394:	d9402c17 	ldw	r5,176(sp)
 8006398:	d9801e04 	addi	r6,sp,120
 800639c:	9809883a 	mov	r4,r19
 80063a0:	80139c80 	call	80139c8 <__ssprint_r>
 80063a4:	103cbc1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 80063a8:	d8c02017 	ldw	r3,128(sp)
 80063ac:	da000404 	addi	r8,sp,16
 80063b0:	003e2806 	br	8005c54 <__alt_data_end+0xf8005c54>
 80063b4:	d9402c17 	ldw	r5,176(sp)
 80063b8:	d9801e04 	addi	r6,sp,120
 80063bc:	9809883a 	mov	r4,r19
 80063c0:	80139c80 	call	80139c8 <__ssprint_r>
 80063c4:	103e5f26 	beq	r2,zero,8005d44 <__alt_data_end+0xf8005d44>
 80063c8:	003cb306 	br	8005698 <__alt_data_end+0xf8005698>
 80063cc:	d9402c17 	ldw	r5,176(sp)
 80063d0:	d9801e04 	addi	r6,sp,120
 80063d4:	9809883a 	mov	r4,r19
 80063d8:	80139c80 	call	80139c8 <__ssprint_r>
 80063dc:	103cae1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 80063e0:	d8c02017 	ldw	r3,128(sp)
 80063e4:	da000404 	addi	r8,sp,16
 80063e8:	003e0d06 	br	8005c20 <__alt_data_end+0xf8005c20>
 80063ec:	d9402c17 	ldw	r5,176(sp)
 80063f0:	d9801e04 	addi	r6,sp,120
 80063f4:	9809883a 	mov	r4,r19
 80063f8:	80139c80 	call	80139c8 <__ssprint_r>
 80063fc:	103ca61e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006400:	d8c02017 	ldw	r3,128(sp)
 8006404:	da000404 	addi	r8,sp,16
 8006408:	003dc106 	br	8005b10 <__alt_data_end+0xf8005b10>
 800640c:	d9402c17 	ldw	r5,176(sp)
 8006410:	d9801e04 	addi	r6,sp,120
 8006414:	9809883a 	mov	r4,r19
 8006418:	80139c80 	call	80139c8 <__ssprint_r>
 800641c:	103c9e1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006420:	d8c02017 	ldw	r3,128(sp)
 8006424:	da000404 	addi	r8,sp,16
 8006428:	003dc706 	br	8005b48 <__alt_data_end+0xf8005b48>
 800642c:	d8802917 	ldw	r2,164(sp)
 8006430:	d8002785 	stb	zero,158(sp)
 8006434:	103f0816 	blt	r2,zero,8006058 <__alt_data_end+0xf8006058>
 8006438:	00ffdfc4 	movi	r3,-129
 800643c:	a584b03a 	or	r2,r20,r22
 8006440:	90e4703a 	and	r18,r18,r3
 8006444:	103c8126 	beq	r2,zero,800564c <__alt_data_end+0xf800564c>
 8006448:	0039883a 	mov	fp,zero
 800644c:	003e7606 	br	8005e28 <__alt_data_end+0xf8005e28>
 8006450:	9080040c 	andi	r2,r18,16
 8006454:	10013d26 	beq	r2,zero,800694c <___svfprintf_internal_r+0x1648>
 8006458:	d9002d17 	ldw	r4,180(sp)
 800645c:	d9402917 	ldw	r5,164(sp)
 8006460:	d8002785 	stb	zero,158(sp)
 8006464:	20800104 	addi	r2,r4,4
 8006468:	25000017 	ldw	r20,0(r4)
 800646c:	002d883a 	mov	r22,zero
 8006470:	28013f16 	blt	r5,zero,8006970 <___svfprintf_internal_r+0x166c>
 8006474:	00ffdfc4 	movi	r3,-129
 8006478:	d8802d15 	stw	r2,180(sp)
 800647c:	90e4703a 	and	r18,r18,r3
 8006480:	a03d2b26 	beq	r20,zero,8005930 <__alt_data_end+0xf8005930>
 8006484:	0039883a 	mov	fp,zero
 8006488:	003d2e06 	br	8005944 <__alt_data_end+0xf8005944>
 800648c:	dc402617 	ldw	r17,152(sp)
 8006490:	0441830e 	bge	zero,r17,8006aa0 <___svfprintf_internal_r+0x179c>
 8006494:	dc403217 	ldw	r17,200(sp)
 8006498:	d8803317 	ldw	r2,204(sp)
 800649c:	1440010e 	bge	r2,r17,80064a4 <___svfprintf_internal_r+0x11a0>
 80064a0:	1023883a 	mov	r17,r2
 80064a4:	04400a0e 	bge	zero,r17,80064d0 <___svfprintf_internal_r+0x11cc>
 80064a8:	d8801f17 	ldw	r2,124(sp)
 80064ac:	1c47883a 	add	r3,r3,r17
 80064b0:	44000015 	stw	r16,0(r8)
 80064b4:	10800044 	addi	r2,r2,1
 80064b8:	44400115 	stw	r17,4(r8)
 80064bc:	d8c02015 	stw	r3,128(sp)
 80064c0:	d8801f15 	stw	r2,124(sp)
 80064c4:	010001c4 	movi	r4,7
 80064c8:	20827516 	blt	r4,r2,8006ea0 <___svfprintf_internal_r+0x1b9c>
 80064cc:	42000204 	addi	r8,r8,8
 80064d0:	88027b16 	blt	r17,zero,8006ec0 <___svfprintf_internal_r+0x1bbc>
 80064d4:	d9003217 	ldw	r4,200(sp)
 80064d8:	2463c83a 	sub	r17,r4,r17
 80064dc:	0440990e 	bge	zero,r17,8006744 <___svfprintf_internal_r+0x1440>
 80064e0:	05800404 	movi	r22,16
 80064e4:	d8801f17 	ldw	r2,124(sp)
 80064e8:	b441530e 	bge	r22,r17,8006a38 <___svfprintf_internal_r+0x1734>
 80064ec:	010200b4 	movhi	r4,2050
 80064f0:	213f4a84 	addi	r4,r4,-726
 80064f4:	d9002b15 	stw	r4,172(sp)
 80064f8:	070001c4 	movi	fp,7
 80064fc:	dd002c17 	ldw	r20,176(sp)
 8006500:	00000306 	br	8006510 <___svfprintf_internal_r+0x120c>
 8006504:	42000204 	addi	r8,r8,8
 8006508:	8c7ffc04 	addi	r17,r17,-16
 800650c:	b4414d0e 	bge	r22,r17,8006a44 <___svfprintf_internal_r+0x1740>
 8006510:	18c00404 	addi	r3,r3,16
 8006514:	10800044 	addi	r2,r2,1
 8006518:	45400015 	stw	r21,0(r8)
 800651c:	45800115 	stw	r22,4(r8)
 8006520:	d8c02015 	stw	r3,128(sp)
 8006524:	d8801f15 	stw	r2,124(sp)
 8006528:	e0bff60e 	bge	fp,r2,8006504 <__alt_data_end+0xf8006504>
 800652c:	d9801e04 	addi	r6,sp,120
 8006530:	a00b883a 	mov	r5,r20
 8006534:	9809883a 	mov	r4,r19
 8006538:	80139c80 	call	80139c8 <__ssprint_r>
 800653c:	103c561e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006540:	d8c02017 	ldw	r3,128(sp)
 8006544:	d8801f17 	ldw	r2,124(sp)
 8006548:	da000404 	addi	r8,sp,16
 800654c:	003fee06 	br	8006508 <__alt_data_end+0xf8006508>
 8006550:	d9402c17 	ldw	r5,176(sp)
 8006554:	d9801e04 	addi	r6,sp,120
 8006558:	9809883a 	mov	r4,r19
 800655c:	80139c80 	call	80139c8 <__ssprint_r>
 8006560:	103c4d1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006564:	d8c02017 	ldw	r3,128(sp)
 8006568:	df002787 	ldb	fp,158(sp)
 800656c:	da000404 	addi	r8,sp,16
 8006570:	003d5a06 	br	8005adc <__alt_data_end+0xf8005adc>
 8006574:	9080040c 	andi	r2,r18,16
 8006578:	10005c26 	beq	r2,zero,80066ec <___svfprintf_internal_r+0x13e8>
 800657c:	d9402d17 	ldw	r5,180(sp)
 8006580:	d8c02917 	ldw	r3,164(sp)
 8006584:	d8002785 	stb	zero,158(sp)
 8006588:	28800104 	addi	r2,r5,4
 800658c:	2d000017 	ldw	r20,0(r5)
 8006590:	002d883a 	mov	r22,zero
 8006594:	18005e16 	blt	r3,zero,8006710 <___svfprintf_internal_r+0x140c>
 8006598:	00ffdfc4 	movi	r3,-129
 800659c:	d8802d15 	stw	r2,180(sp)
 80065a0:	90e4703a 	and	r18,r18,r3
 80065a4:	0039883a 	mov	fp,zero
 80065a8:	a03dfe26 	beq	r20,zero,8005da4 <__alt_data_end+0xf8005da4>
 80065ac:	00800244 	movi	r2,9
 80065b0:	153cb336 	bltu	r2,r20,8005880 <__alt_data_end+0xf8005880>
 80065b4:	a5000c04 	addi	r20,r20,48
 80065b8:	dc001dc4 	addi	r16,sp,119
 80065bc:	dd001dc5 	stb	r20,119(sp)
 80065c0:	d8c02817 	ldw	r3,160(sp)
 80065c4:	1c07c83a 	sub	r3,r3,r16
 80065c8:	d8c02e15 	stw	r3,184(sp)
 80065cc:	003cf506 	br	80059a4 <__alt_data_end+0xf80059a4>
 80065d0:	d8803317 	ldw	r2,204(sp)
 80065d4:	143fffc4 	addi	r16,r2,-1
 80065d8:	043f560e 	bge	zero,r16,8006334 <__alt_data_end+0xf8006334>
 80065dc:	07000404 	movi	fp,16
 80065e0:	e403530e 	bge	fp,r16,8007330 <___svfprintf_internal_r+0x202c>
 80065e4:	014200b4 	movhi	r5,2050
 80065e8:	297f4a84 	addi	r5,r5,-726
 80065ec:	d9402b15 	stw	r5,172(sp)
 80065f0:	01c001c4 	movi	r7,7
 80065f4:	dd002c17 	ldw	r20,176(sp)
 80065f8:	00000306 	br	8006608 <___svfprintf_internal_r+0x1304>
 80065fc:	843ffc04 	addi	r16,r16,-16
 8006600:	b5800204 	addi	r22,r22,8
 8006604:	e400130e 	bge	fp,r16,8006654 <___svfprintf_internal_r+0x1350>
 8006608:	18c00404 	addi	r3,r3,16
 800660c:	8c400044 	addi	r17,r17,1
 8006610:	b5400015 	stw	r21,0(r22)
 8006614:	b7000115 	stw	fp,4(r22)
 8006618:	d8c02015 	stw	r3,128(sp)
 800661c:	dc401f15 	stw	r17,124(sp)
 8006620:	3c7ff60e 	bge	r7,r17,80065fc <__alt_data_end+0xf80065fc>
 8006624:	d9801e04 	addi	r6,sp,120
 8006628:	a00b883a 	mov	r5,r20
 800662c:	9809883a 	mov	r4,r19
 8006630:	d9c03d15 	stw	r7,244(sp)
 8006634:	80139c80 	call	80139c8 <__ssprint_r>
 8006638:	d9c03d17 	ldw	r7,244(sp)
 800663c:	103c161e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006640:	843ffc04 	addi	r16,r16,-16
 8006644:	d8c02017 	ldw	r3,128(sp)
 8006648:	dc401f17 	ldw	r17,124(sp)
 800664c:	dd800404 	addi	r22,sp,16
 8006650:	e43fed16 	blt	fp,r16,8006608 <__alt_data_end+0xf8006608>
 8006654:	d8802b17 	ldw	r2,172(sp)
 8006658:	1c07883a 	add	r3,r3,r16
 800665c:	8c400044 	addi	r17,r17,1
 8006660:	b0800015 	stw	r2,0(r22)
 8006664:	b4000115 	stw	r16,4(r22)
 8006668:	d8c02015 	stw	r3,128(sp)
 800666c:	dc401f15 	stw	r17,124(sp)
 8006670:	008001c4 	movi	r2,7
 8006674:	147f2e0e 	bge	r2,r17,8006330 <__alt_data_end+0xf8006330>
 8006678:	d9402c17 	ldw	r5,176(sp)
 800667c:	d9801e04 	addi	r6,sp,120
 8006680:	9809883a 	mov	r4,r19
 8006684:	80139c80 	call	80139c8 <__ssprint_r>
 8006688:	103c031e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 800668c:	d8c02017 	ldw	r3,128(sp)
 8006690:	dc401f17 	ldw	r17,124(sp)
 8006694:	dd800404 	addi	r22,sp,16
 8006698:	003f2606 	br	8006334 <__alt_data_end+0xf8006334>
 800669c:	9080040c 	andi	r2,r18,16
 80066a0:	1000c326 	beq	r2,zero,80069b0 <___svfprintf_internal_r+0x16ac>
 80066a4:	d8802d17 	ldw	r2,180(sp)
 80066a8:	15000017 	ldw	r20,0(r2)
 80066ac:	10800104 	addi	r2,r2,4
 80066b0:	d8802d15 	stw	r2,180(sp)
 80066b4:	a02dd7fa 	srai	r22,r20,31
 80066b8:	b005883a 	mov	r2,r22
 80066bc:	103c680e 	bge	r2,zero,8005860 <__alt_data_end+0xf8005860>
 80066c0:	0529c83a 	sub	r20,zero,r20
 80066c4:	a004c03a 	cmpne	r2,r20,zero
 80066c8:	05adc83a 	sub	r22,zero,r22
 80066cc:	b0adc83a 	sub	r22,r22,r2
 80066d0:	d8802917 	ldw	r2,164(sp)
 80066d4:	07000b44 	movi	fp,45
 80066d8:	df002785 	stb	fp,158(sp)
 80066dc:	10022e16 	blt	r2,zero,8006f98 <___svfprintf_internal_r+0x1c94>
 80066e0:	00bfdfc4 	movi	r2,-129
 80066e4:	90a4703a 	and	r18,r18,r2
 80066e8:	003c6406 	br	800587c <__alt_data_end+0xf800587c>
 80066ec:	9080100c 	andi	r2,r18,64
 80066f0:	d8002785 	stb	zero,158(sp)
 80066f4:	10012526 	beq	r2,zero,8006b8c <___svfprintf_internal_r+0x1888>
 80066f8:	d9002d17 	ldw	r4,180(sp)
 80066fc:	d9402917 	ldw	r5,164(sp)
 8006700:	002d883a 	mov	r22,zero
 8006704:	20800104 	addi	r2,r4,4
 8006708:	2500000b 	ldhu	r20,0(r4)
 800670c:	283fa20e 	bge	r5,zero,8006598 <__alt_data_end+0xf8006598>
 8006710:	d8802d15 	stw	r2,180(sp)
 8006714:	0039883a 	mov	fp,zero
 8006718:	a584b03a 	or	r2,r20,r22
 800671c:	103c571e 	bne	r2,zero,800587c <__alt_data_end+0xf800587c>
 8006720:	00800044 	movi	r2,1
 8006724:	003e5006 	br	8006068 <__alt_data_end+0xf8006068>
 8006728:	d9402c17 	ldw	r5,176(sp)
 800672c:	d9801e04 	addi	r6,sp,120
 8006730:	9809883a 	mov	r4,r19
 8006734:	80139c80 	call	80139c8 <__ssprint_r>
 8006738:	103bd71e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 800673c:	d8c02017 	ldw	r3,128(sp)
 8006740:	da000404 	addi	r8,sp,16
 8006744:	d9003217 	ldw	r4,200(sp)
 8006748:	d8802617 	ldw	r2,152(sp)
 800674c:	d9403317 	ldw	r5,204(sp)
 8006750:	8123883a 	add	r17,r16,r4
 8006754:	11400216 	blt	r2,r5,8006760 <___svfprintf_internal_r+0x145c>
 8006758:	9100004c 	andi	r4,r18,1
 800675c:	20000d26 	beq	r4,zero,8006794 <___svfprintf_internal_r+0x1490>
 8006760:	d9003817 	ldw	r4,224(sp)
 8006764:	d9403417 	ldw	r5,208(sp)
 8006768:	1907883a 	add	r3,r3,r4
 800676c:	d9001f17 	ldw	r4,124(sp)
 8006770:	41400015 	stw	r5,0(r8)
 8006774:	d9403817 	ldw	r5,224(sp)
 8006778:	21000044 	addi	r4,r4,1
 800677c:	d8c02015 	stw	r3,128(sp)
 8006780:	41400115 	stw	r5,4(r8)
 8006784:	d9001f15 	stw	r4,124(sp)
 8006788:	014001c4 	movi	r5,7
 800678c:	2901dc16 	blt	r5,r4,8006f00 <___svfprintf_internal_r+0x1bfc>
 8006790:	42000204 	addi	r8,r8,8
 8006794:	d9003317 	ldw	r4,204(sp)
 8006798:	8121883a 	add	r16,r16,r4
 800679c:	2085c83a 	sub	r2,r4,r2
 80067a0:	8461c83a 	sub	r16,r16,r17
 80067a4:	1400010e 	bge	r2,r16,80067ac <___svfprintf_internal_r+0x14a8>
 80067a8:	1021883a 	mov	r16,r2
 80067ac:	04000a0e 	bge	zero,r16,80067d8 <___svfprintf_internal_r+0x14d4>
 80067b0:	d9001f17 	ldw	r4,124(sp)
 80067b4:	1c07883a 	add	r3,r3,r16
 80067b8:	44400015 	stw	r17,0(r8)
 80067bc:	21000044 	addi	r4,r4,1
 80067c0:	44000115 	stw	r16,4(r8)
 80067c4:	d8c02015 	stw	r3,128(sp)
 80067c8:	d9001f15 	stw	r4,124(sp)
 80067cc:	014001c4 	movi	r5,7
 80067d0:	2901e616 	blt	r5,r4,8006f6c <___svfprintf_internal_r+0x1c68>
 80067d4:	42000204 	addi	r8,r8,8
 80067d8:	8001f616 	blt	r16,zero,8006fb4 <___svfprintf_internal_r+0x1cb0>
 80067dc:	1421c83a 	sub	r16,r2,r16
 80067e0:	043d1c0e 	bge	zero,r16,8005c54 <__alt_data_end+0xf8005c54>
 80067e4:	04400404 	movi	r17,16
 80067e8:	d8801f17 	ldw	r2,124(sp)
 80067ec:	8c3edd0e 	bge	r17,r16,8006364 <__alt_data_end+0xf8006364>
 80067f0:	014200b4 	movhi	r5,2050
 80067f4:	297f4a84 	addi	r5,r5,-726
 80067f8:	d9402b15 	stw	r5,172(sp)
 80067fc:	058001c4 	movi	r22,7
 8006800:	dd002c17 	ldw	r20,176(sp)
 8006804:	00000306 	br	8006814 <___svfprintf_internal_r+0x1510>
 8006808:	42000204 	addi	r8,r8,8
 800680c:	843ffc04 	addi	r16,r16,-16
 8006810:	8c3ed70e 	bge	r17,r16,8006370 <__alt_data_end+0xf8006370>
 8006814:	18c00404 	addi	r3,r3,16
 8006818:	10800044 	addi	r2,r2,1
 800681c:	45400015 	stw	r21,0(r8)
 8006820:	44400115 	stw	r17,4(r8)
 8006824:	d8c02015 	stw	r3,128(sp)
 8006828:	d8801f15 	stw	r2,124(sp)
 800682c:	b0bff60e 	bge	r22,r2,8006808 <__alt_data_end+0xf8006808>
 8006830:	d9801e04 	addi	r6,sp,120
 8006834:	a00b883a 	mov	r5,r20
 8006838:	9809883a 	mov	r4,r19
 800683c:	80139c80 	call	80139c8 <__ssprint_r>
 8006840:	103b951e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006844:	d8c02017 	ldw	r3,128(sp)
 8006848:	d8801f17 	ldw	r2,124(sp)
 800684c:	da000404 	addi	r8,sp,16
 8006850:	003fee06 	br	800680c <__alt_data_end+0xf800680c>
 8006854:	9088703a 	and	r4,r18,r2
 8006858:	203e8d1e 	bne	r4,zero,8006290 <__alt_data_end+0xf8006290>
 800685c:	dc401f17 	ldw	r17,124(sp)
 8006860:	40800115 	stw	r2,4(r8)
 8006864:	44000015 	stw	r16,0(r8)
 8006868:	8c400044 	addi	r17,r17,1
 800686c:	d8c02015 	stw	r3,128(sp)
 8006870:	dc401f15 	stw	r17,124(sp)
 8006874:	008001c4 	movi	r2,7
 8006878:	147f7f16 	blt	r2,r17,8006678 <__alt_data_end+0xf8006678>
 800687c:	45800204 	addi	r22,r8,8
 8006880:	003eac06 	br	8006334 <__alt_data_end+0xf8006334>
 8006884:	d9402c17 	ldw	r5,176(sp)
 8006888:	d9801e04 	addi	r6,sp,120
 800688c:	9809883a 	mov	r4,r19
 8006890:	80139c80 	call	80139c8 <__ssprint_r>
 8006894:	103b801e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006898:	d8c02017 	ldw	r3,128(sp)
 800689c:	dc401f17 	ldw	r17,124(sp)
 80068a0:	da000404 	addi	r8,sp,16
 80068a4:	003e8406 	br	80062b8 <__alt_data_end+0xf80062b8>
 80068a8:	d9402c17 	ldw	r5,176(sp)
 80068ac:	d9801e04 	addi	r6,sp,120
 80068b0:	9809883a 	mov	r4,r19
 80068b4:	80139c80 	call	80139c8 <__ssprint_r>
 80068b8:	103b771e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 80068bc:	d8c02017 	ldw	r3,128(sp)
 80068c0:	dc401f17 	ldw	r17,124(sp)
 80068c4:	dd800404 	addi	r22,sp,16
 80068c8:	003e8606 	br	80062e4 <__alt_data_end+0xf80062e4>
 80068cc:	0029883a 	mov	r20,zero
 80068d0:	a5000c04 	addi	r20,r20,48
 80068d4:	dc001dc4 	addi	r16,sp,119
 80068d8:	dd001dc5 	stb	r20,119(sp)
 80068dc:	003f3806 	br	80065c0 <__alt_data_end+0xf80065c0>
 80068e0:	d9402c17 	ldw	r5,176(sp)
 80068e4:	d9801e04 	addi	r6,sp,120
 80068e8:	9809883a 	mov	r4,r19
 80068ec:	80139c80 	call	80139c8 <__ssprint_r>
 80068f0:	103b691e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 80068f4:	d8c02017 	ldw	r3,128(sp)
 80068f8:	da000404 	addi	r8,sp,16
 80068fc:	003c9506 	br	8005b54 <__alt_data_end+0xf8005b54>
 8006900:	d9003617 	ldw	r4,216(sp)
 8006904:	d9403717 	ldw	r5,220(sp)
 8006908:	da003e15 	stw	r8,248(sp)
 800690c:	80116280 	call	8011628 <__fpclassifyd>
 8006910:	da003e17 	ldw	r8,248(sp)
 8006914:	1000bd1e 	bne	r2,zero,8006c0c <___svfprintf_internal_r+0x1908>
 8006918:	008011c4 	movi	r2,71
 800691c:	14411e0e 	bge	r2,r17,8006d98 <___svfprintf_internal_r+0x1a94>
 8006920:	040200b4 	movhi	r16,2050
 8006924:	843f3d04 	addi	r16,r16,-780
 8006928:	00c000c4 	movi	r3,3
 800692c:	00bfdfc4 	movi	r2,-129
 8006930:	d8c02a15 	stw	r3,168(sp)
 8006934:	90a4703a 	and	r18,r18,r2
 8006938:	df002783 	ldbu	fp,158(sp)
 800693c:	d8c02e15 	stw	r3,184(sp)
 8006940:	d8002915 	stw	zero,164(sp)
 8006944:	d8003215 	stw	zero,200(sp)
 8006948:	003c1c06 	br	80059bc <__alt_data_end+0xf80059bc>
 800694c:	9080100c 	andi	r2,r18,64
 8006950:	d8002785 	stb	zero,158(sp)
 8006954:	10009426 	beq	r2,zero,8006ba8 <___svfprintf_internal_r+0x18a4>
 8006958:	d8c02d17 	ldw	r3,180(sp)
 800695c:	d9002917 	ldw	r4,164(sp)
 8006960:	002d883a 	mov	r22,zero
 8006964:	18800104 	addi	r2,r3,4
 8006968:	1d00000b 	ldhu	r20,0(r3)
 800696c:	203ec10e 	bge	r4,zero,8006474 <__alt_data_end+0xf8006474>
 8006970:	a586b03a 	or	r3,r20,r22
 8006974:	d8802d15 	stw	r2,180(sp)
 8006978:	183ec21e 	bne	r3,zero,8006484 <__alt_data_end+0xf8006484>
 800697c:	0039883a 	mov	fp,zero
 8006980:	0005883a 	mov	r2,zero
 8006984:	003db806 	br	8006068 <__alt_data_end+0xf8006068>
 8006988:	d8802d17 	ldw	r2,180(sp)
 800698c:	d8c02d17 	ldw	r3,180(sp)
 8006990:	d9002d17 	ldw	r4,180(sp)
 8006994:	10800017 	ldw	r2,0(r2)
 8006998:	18c00117 	ldw	r3,4(r3)
 800699c:	21000204 	addi	r4,r4,8
 80069a0:	d8803615 	stw	r2,216(sp)
 80069a4:	d8c03715 	stw	r3,220(sp)
 80069a8:	d9002d15 	stw	r4,180(sp)
 80069ac:	003b8206 	br	80057b8 <__alt_data_end+0xf80057b8>
 80069b0:	9080100c 	andi	r2,r18,64
 80069b4:	10010726 	beq	r2,zero,8006dd4 <___svfprintf_internal_r+0x1ad0>
 80069b8:	d8c02d17 	ldw	r3,180(sp)
 80069bc:	1d00000f 	ldh	r20,0(r3)
 80069c0:	18c00104 	addi	r3,r3,4
 80069c4:	d8c02d15 	stw	r3,180(sp)
 80069c8:	a02dd7fa 	srai	r22,r20,31
 80069cc:	b005883a 	mov	r2,r22
 80069d0:	003ba206 	br	800585c <__alt_data_end+0xf800585c>
 80069d4:	9080100c 	andi	r2,r18,64
 80069d8:	10010526 	beq	r2,zero,8006df0 <___svfprintf_internal_r+0x1aec>
 80069dc:	d9002d17 	ldw	r4,180(sp)
 80069e0:	002d883a 	mov	r22,zero
 80069e4:	2500000b 	ldhu	r20,0(r4)
 80069e8:	21000104 	addi	r4,r4,4
 80069ec:	d9002d15 	stw	r4,180(sp)
 80069f0:	003cfe06 	br	8005dec <__alt_data_end+0xf8005dec>
 80069f4:	bc400007 	ldb	r17,0(r23)
 80069f8:	003a9606 	br	8005454 <__alt_data_end+0xf8005454>
 80069fc:	9080040c 	andi	r2,r18,16
 8006a00:	10010126 	beq	r2,zero,8006e08 <___svfprintf_internal_r+0x1b04>
 8006a04:	d9402d17 	ldw	r5,180(sp)
 8006a08:	d8c02f17 	ldw	r3,188(sp)
 8006a0c:	28800017 	ldw	r2,0(r5)
 8006a10:	29400104 	addi	r5,r5,4
 8006a14:	d9402d15 	stw	r5,180(sp)
 8006a18:	10c00015 	stw	r3,0(r2)
 8006a1c:	003a6406 	br	80053b0 <__alt_data_end+0xf80053b0>
 8006a20:	d9002917 	ldw	r4,164(sp)
 8006a24:	d8002785 	stb	zero,158(sp)
 8006a28:	203d8d16 	blt	r4,zero,8006060 <__alt_data_end+0xf8006060>
 8006a2c:	00bfdfc4 	movi	r2,-129
 8006a30:	90a4703a 	and	r18,r18,r2
 8006a34:	003b0506 	br	800564c <__alt_data_end+0xf800564c>
 8006a38:	014200b4 	movhi	r5,2050
 8006a3c:	297f4a84 	addi	r5,r5,-726
 8006a40:	d9402b15 	stw	r5,172(sp)
 8006a44:	d9402b17 	ldw	r5,172(sp)
 8006a48:	1c47883a 	add	r3,r3,r17
 8006a4c:	10800044 	addi	r2,r2,1
 8006a50:	41400015 	stw	r5,0(r8)
 8006a54:	44400115 	stw	r17,4(r8)
 8006a58:	d8c02015 	stw	r3,128(sp)
 8006a5c:	d8801f15 	stw	r2,124(sp)
 8006a60:	010001c4 	movi	r4,7
 8006a64:	20bf3016 	blt	r4,r2,8006728 <__alt_data_end+0xf8006728>
 8006a68:	42000204 	addi	r8,r8,8
 8006a6c:	003f3506 	br	8006744 <__alt_data_end+0xf8006744>
 8006a70:	010200b4 	movhi	r4,2050
 8006a74:	213f4a84 	addi	r4,r4,-726
 8006a78:	d9002b15 	stw	r4,172(sp)
 8006a7c:	003c5e06 	br	8005bf8 <__alt_data_end+0xf8005bf8>
 8006a80:	d9402c17 	ldw	r5,176(sp)
 8006a84:	d9801e04 	addi	r6,sp,120
 8006a88:	9809883a 	mov	r4,r19
 8006a8c:	80139c80 	call	80139c8 <__ssprint_r>
 8006a90:	103b011e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006a94:	d8c02017 	ldw	r3,128(sp)
 8006a98:	da000404 	addi	r8,sp,16
 8006a9c:	003d9306 	br	80060ec <__alt_data_end+0xf80060ec>
 8006aa0:	d8801f17 	ldw	r2,124(sp)
 8006aa4:	014200b4 	movhi	r5,2050
 8006aa8:	01000044 	movi	r4,1
 8006aac:	18c00044 	addi	r3,r3,1
 8006ab0:	10800044 	addi	r2,r2,1
 8006ab4:	297f4a04 	addi	r5,r5,-728
 8006ab8:	41000115 	stw	r4,4(r8)
 8006abc:	41400015 	stw	r5,0(r8)
 8006ac0:	d8c02015 	stw	r3,128(sp)
 8006ac4:	d8801f15 	stw	r2,124(sp)
 8006ac8:	010001c4 	movi	r4,7
 8006acc:	2080b516 	blt	r4,r2,8006da4 <___svfprintf_internal_r+0x1aa0>
 8006ad0:	42000204 	addi	r8,r8,8
 8006ad4:	8800041e 	bne	r17,zero,8006ae8 <___svfprintf_internal_r+0x17e4>
 8006ad8:	d8803317 	ldw	r2,204(sp)
 8006adc:	1000021e 	bne	r2,zero,8006ae8 <___svfprintf_internal_r+0x17e4>
 8006ae0:	9080004c 	andi	r2,r18,1
 8006ae4:	103c5b26 	beq	r2,zero,8005c54 <__alt_data_end+0xf8005c54>
 8006ae8:	d9003817 	ldw	r4,224(sp)
 8006aec:	d8801f17 	ldw	r2,124(sp)
 8006af0:	d9403417 	ldw	r5,208(sp)
 8006af4:	20c7883a 	add	r3,r4,r3
 8006af8:	10800044 	addi	r2,r2,1
 8006afc:	41000115 	stw	r4,4(r8)
 8006b00:	41400015 	stw	r5,0(r8)
 8006b04:	d8c02015 	stw	r3,128(sp)
 8006b08:	d8801f15 	stw	r2,124(sp)
 8006b0c:	010001c4 	movi	r4,7
 8006b10:	20818016 	blt	r4,r2,8007114 <___svfprintf_internal_r+0x1e10>
 8006b14:	42000204 	addi	r8,r8,8
 8006b18:	0463c83a 	sub	r17,zero,r17
 8006b1c:	0440cb0e 	bge	zero,r17,8006e4c <___svfprintf_internal_r+0x1b48>
 8006b20:	05800404 	movi	r22,16
 8006b24:	b440e80e 	bge	r22,r17,8006ec8 <___svfprintf_internal_r+0x1bc4>
 8006b28:	014200b4 	movhi	r5,2050
 8006b2c:	297f4a84 	addi	r5,r5,-726
 8006b30:	d9402b15 	stw	r5,172(sp)
 8006b34:	070001c4 	movi	fp,7
 8006b38:	dd002c17 	ldw	r20,176(sp)
 8006b3c:	00000306 	br	8006b4c <___svfprintf_internal_r+0x1848>
 8006b40:	42000204 	addi	r8,r8,8
 8006b44:	8c7ffc04 	addi	r17,r17,-16
 8006b48:	b440e20e 	bge	r22,r17,8006ed4 <___svfprintf_internal_r+0x1bd0>
 8006b4c:	18c00404 	addi	r3,r3,16
 8006b50:	10800044 	addi	r2,r2,1
 8006b54:	45400015 	stw	r21,0(r8)
 8006b58:	45800115 	stw	r22,4(r8)
 8006b5c:	d8c02015 	stw	r3,128(sp)
 8006b60:	d8801f15 	stw	r2,124(sp)
 8006b64:	e0bff60e 	bge	fp,r2,8006b40 <__alt_data_end+0xf8006b40>
 8006b68:	d9801e04 	addi	r6,sp,120
 8006b6c:	a00b883a 	mov	r5,r20
 8006b70:	9809883a 	mov	r4,r19
 8006b74:	80139c80 	call	80139c8 <__ssprint_r>
 8006b78:	103ac71e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006b7c:	d8c02017 	ldw	r3,128(sp)
 8006b80:	d8801f17 	ldw	r2,124(sp)
 8006b84:	da000404 	addi	r8,sp,16
 8006b88:	003fee06 	br	8006b44 <__alt_data_end+0xf8006b44>
 8006b8c:	d8c02d17 	ldw	r3,180(sp)
 8006b90:	d9002917 	ldw	r4,164(sp)
 8006b94:	002d883a 	mov	r22,zero
 8006b98:	18800104 	addi	r2,r3,4
 8006b9c:	1d000017 	ldw	r20,0(r3)
 8006ba0:	203e7d0e 	bge	r4,zero,8006598 <__alt_data_end+0xf8006598>
 8006ba4:	003eda06 	br	8006710 <__alt_data_end+0xf8006710>
 8006ba8:	d9402d17 	ldw	r5,180(sp)
 8006bac:	d8c02917 	ldw	r3,164(sp)
 8006bb0:	002d883a 	mov	r22,zero
 8006bb4:	28800104 	addi	r2,r5,4
 8006bb8:	2d000017 	ldw	r20,0(r5)
 8006bbc:	183e2d0e 	bge	r3,zero,8006474 <__alt_data_end+0xf8006474>
 8006bc0:	003f6b06 	br	8006970 <__alt_data_end+0xf8006970>
 8006bc4:	d8c02d15 	stw	r3,180(sp)
 8006bc8:	0039883a 	mov	fp,zero
 8006bcc:	003ed206 	br	8006718 <__alt_data_end+0xf8006718>
 8006bd0:	bc400043 	ldbu	r17,1(r23)
 8006bd4:	94800814 	ori	r18,r18,32
 8006bd8:	bdc00044 	addi	r23,r23,1
 8006bdc:	8c403fcc 	andi	r17,r17,255
 8006be0:	8c40201c 	xori	r17,r17,128
 8006be4:	8c7fe004 	addi	r17,r17,-128
 8006be8:	003a1a06 	br	8005454 <__alt_data_end+0xf8005454>
 8006bec:	d9402c17 	ldw	r5,176(sp)
 8006bf0:	d9801e04 	addi	r6,sp,120
 8006bf4:	9809883a 	mov	r4,r19
 8006bf8:	80139c80 	call	80139c8 <__ssprint_r>
 8006bfc:	103aa61e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006c00:	d8c02017 	ldw	r3,128(sp)
 8006c04:	da000404 	addi	r8,sp,16
 8006c08:	003d4a06 	br	8006134 <__alt_data_end+0xf8006134>
 8006c0c:	d9002917 	ldw	r4,164(sp)
 8006c10:	05bff7c4 	movi	r22,-33
 8006c14:	00bfffc4 	movi	r2,-1
 8006c18:	8dac703a 	and	r22,r17,r22
 8006c1c:	20806a26 	beq	r4,r2,8006dc8 <___svfprintf_internal_r+0x1ac4>
 8006c20:	008011c4 	movi	r2,71
 8006c24:	b0813726 	beq	r22,r2,8007104 <___svfprintf_internal_r+0x1e00>
 8006c28:	d9003717 	ldw	r4,220(sp)
 8006c2c:	90c04014 	ori	r3,r18,256
 8006c30:	d8c02b15 	stw	r3,172(sp)
 8006c34:	20015d16 	blt	r4,zero,80071ac <___svfprintf_internal_r+0x1ea8>
 8006c38:	dd003717 	ldw	r20,220(sp)
 8006c3c:	d8002a05 	stb	zero,168(sp)
 8006c40:	00801984 	movi	r2,102
 8006c44:	88814026 	beq	r17,r2,8007148 <___svfprintf_internal_r+0x1e44>
 8006c48:	00801184 	movi	r2,70
 8006c4c:	88817126 	beq	r17,r2,8007214 <___svfprintf_internal_r+0x1f10>
 8006c50:	00801144 	movi	r2,69
 8006c54:	b0816226 	beq	r22,r2,80071e0 <___svfprintf_internal_r+0x1edc>
 8006c58:	d8c02917 	ldw	r3,164(sp)
 8006c5c:	d8802104 	addi	r2,sp,132
 8006c60:	d8800315 	stw	r2,12(sp)
 8006c64:	d9403617 	ldw	r5,216(sp)
 8006c68:	d8802504 	addi	r2,sp,148
 8006c6c:	d8800215 	stw	r2,8(sp)
 8006c70:	d8802604 	addi	r2,sp,152
 8006c74:	d8c00015 	stw	r3,0(sp)
 8006c78:	d8800115 	stw	r2,4(sp)
 8006c7c:	01c00084 	movi	r7,2
 8006c80:	a00d883a 	mov	r6,r20
 8006c84:	9809883a 	mov	r4,r19
 8006c88:	d8c03d15 	stw	r3,244(sp)
 8006c8c:	da003e15 	stw	r8,248(sp)
 8006c90:	800cbfc0 	call	800cbfc <_dtoa_r>
 8006c94:	1021883a 	mov	r16,r2
 8006c98:	008019c4 	movi	r2,103
 8006c9c:	d8c03d17 	ldw	r3,244(sp)
 8006ca0:	da003e17 	ldw	r8,248(sp)
 8006ca4:	8880e726 	beq	r17,r2,8007044 <___svfprintf_internal_r+0x1d40>
 8006ca8:	008011c4 	movi	r2,71
 8006cac:	8880d426 	beq	r17,r2,8007000 <___svfprintf_internal_r+0x1cfc>
 8006cb0:	80f9883a 	add	fp,r16,r3
 8006cb4:	d9003617 	ldw	r4,216(sp)
 8006cb8:	000d883a 	mov	r6,zero
 8006cbc:	000f883a 	mov	r7,zero
 8006cc0:	a00b883a 	mov	r5,r20
 8006cc4:	da003e15 	stw	r8,248(sp)
 8006cc8:	801ad2c0 	call	801ad2c <__eqdf2>
 8006ccc:	da003e17 	ldw	r8,248(sp)
 8006cd0:	1000e426 	beq	r2,zero,8007064 <___svfprintf_internal_r+0x1d60>
 8006cd4:	d8802117 	ldw	r2,132(sp)
 8006cd8:	1700062e 	bgeu	r2,fp,8006cf4 <___svfprintf_internal_r+0x19f0>
 8006cdc:	01000c04 	movi	r4,48
 8006ce0:	10c00044 	addi	r3,r2,1
 8006ce4:	d8c02115 	stw	r3,132(sp)
 8006ce8:	11000005 	stb	r4,0(r2)
 8006cec:	d8802117 	ldw	r2,132(sp)
 8006cf0:	173ffb36 	bltu	r2,fp,8006ce0 <__alt_data_end+0xf8006ce0>
 8006cf4:	1405c83a 	sub	r2,r2,r16
 8006cf8:	d8803315 	stw	r2,204(sp)
 8006cfc:	008011c4 	movi	r2,71
 8006d00:	b080c526 	beq	r22,r2,8007018 <___svfprintf_internal_r+0x1d14>
 8006d04:	00801944 	movi	r2,101
 8006d08:	1441d90e 	bge	r2,r17,8007470 <___svfprintf_internal_r+0x216c>
 8006d0c:	d8c02617 	ldw	r3,152(sp)
 8006d10:	00801984 	movi	r2,102
 8006d14:	d8c03215 	stw	r3,200(sp)
 8006d18:	88813426 	beq	r17,r2,80071ec <___svfprintf_internal_r+0x1ee8>
 8006d1c:	d8c03217 	ldw	r3,200(sp)
 8006d20:	d9003317 	ldw	r4,204(sp)
 8006d24:	19012516 	blt	r3,r4,80071bc <___svfprintf_internal_r+0x1eb8>
 8006d28:	9480004c 	andi	r18,r18,1
 8006d2c:	9001841e 	bne	r18,zero,8007340 <___svfprintf_internal_r+0x203c>
 8006d30:	1805883a 	mov	r2,r3
 8006d34:	1801cc16 	blt	r3,zero,8007468 <___svfprintf_internal_r+0x2164>
 8006d38:	d8c03217 	ldw	r3,200(sp)
 8006d3c:	044019c4 	movi	r17,103
 8006d40:	d8c02e15 	stw	r3,184(sp)
 8006d44:	df002a07 	ldb	fp,168(sp)
 8006d48:	e000a61e 	bne	fp,zero,8006fe4 <___svfprintf_internal_r+0x1ce0>
 8006d4c:	df002783 	ldbu	fp,158(sp)
 8006d50:	d8802a15 	stw	r2,168(sp)
 8006d54:	dc802b17 	ldw	r18,172(sp)
 8006d58:	d8002915 	stw	zero,164(sp)
 8006d5c:	003b1706 	br	80059bc <__alt_data_end+0xf80059bc>
 8006d60:	040200b4 	movhi	r16,2050
 8006d64:	843f3a04 	addi	r16,r16,-792
 8006d68:	003aa606 	br	8005804 <__alt_data_end+0xf8005804>
 8006d6c:	d9003917 	ldw	r4,228(sp)
 8006d70:	04001004 	movi	r16,64
 8006d74:	800b883a 	mov	r5,r16
 8006d78:	8003fd40 	call	8003fd4 <_malloc_r>
 8006d7c:	d9002c17 	ldw	r4,176(sp)
 8006d80:	20800015 	stw	r2,0(r4)
 8006d84:	20800415 	stw	r2,16(r4)
 8006d88:	1001cb26 	beq	r2,zero,80074b8 <___svfprintf_internal_r+0x21b4>
 8006d8c:	d8802c17 	ldw	r2,176(sp)
 8006d90:	14000515 	stw	r16,20(r2)
 8006d94:	00397606 	br	8005370 <__alt_data_end+0xf8005370>
 8006d98:	040200b4 	movhi	r16,2050
 8006d9c:	843f3c04 	addi	r16,r16,-784
 8006da0:	003ee106 	br	8006928 <__alt_data_end+0xf8006928>
 8006da4:	d9402c17 	ldw	r5,176(sp)
 8006da8:	d9801e04 	addi	r6,sp,120
 8006dac:	9809883a 	mov	r4,r19
 8006db0:	80139c80 	call	80139c8 <__ssprint_r>
 8006db4:	103a381e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006db8:	dc402617 	ldw	r17,152(sp)
 8006dbc:	d8c02017 	ldw	r3,128(sp)
 8006dc0:	da000404 	addi	r8,sp,16
 8006dc4:	003f4306 	br	8006ad4 <__alt_data_end+0xf8006ad4>
 8006dc8:	01400184 	movi	r5,6
 8006dcc:	d9402915 	stw	r5,164(sp)
 8006dd0:	003f9506 	br	8006c28 <__alt_data_end+0xf8006c28>
 8006dd4:	d9002d17 	ldw	r4,180(sp)
 8006dd8:	25000017 	ldw	r20,0(r4)
 8006ddc:	21000104 	addi	r4,r4,4
 8006de0:	d9002d15 	stw	r4,180(sp)
 8006de4:	a02dd7fa 	srai	r22,r20,31
 8006de8:	b005883a 	mov	r2,r22
 8006dec:	003a9b06 	br	800585c <__alt_data_end+0xf800585c>
 8006df0:	d9402d17 	ldw	r5,180(sp)
 8006df4:	002d883a 	mov	r22,zero
 8006df8:	2d000017 	ldw	r20,0(r5)
 8006dfc:	29400104 	addi	r5,r5,4
 8006e00:	d9402d15 	stw	r5,180(sp)
 8006e04:	003bf906 	br	8005dec <__alt_data_end+0xf8005dec>
 8006e08:	9480100c 	andi	r18,r18,64
 8006e0c:	90006e26 	beq	r18,zero,8006fc8 <___svfprintf_internal_r+0x1cc4>
 8006e10:	d9002d17 	ldw	r4,180(sp)
 8006e14:	d9402f17 	ldw	r5,188(sp)
 8006e18:	20800017 	ldw	r2,0(r4)
 8006e1c:	21000104 	addi	r4,r4,4
 8006e20:	d9002d15 	stw	r4,180(sp)
 8006e24:	1140000d 	sth	r5,0(r2)
 8006e28:	00396106 	br	80053b0 <__alt_data_end+0xf80053b0>
 8006e2c:	d9402c17 	ldw	r5,176(sp)
 8006e30:	d9801e04 	addi	r6,sp,120
 8006e34:	9809883a 	mov	r4,r19
 8006e38:	80139c80 	call	80139c8 <__ssprint_r>
 8006e3c:	103a161e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006e40:	d8c02017 	ldw	r3,128(sp)
 8006e44:	d8801f17 	ldw	r2,124(sp)
 8006e48:	da000404 	addi	r8,sp,16
 8006e4c:	d9403317 	ldw	r5,204(sp)
 8006e50:	10800044 	addi	r2,r2,1
 8006e54:	44000015 	stw	r16,0(r8)
 8006e58:	28c7883a 	add	r3,r5,r3
 8006e5c:	003b7706 	br	8005c3c <__alt_data_end+0xf8005c3c>
 8006e60:	8009883a 	mov	r4,r16
 8006e64:	da003e15 	stw	r8,248(sp)
 8006e68:	800526c0 	call	800526c <strlen>
 8006e6c:	d8802e15 	stw	r2,184(sp)
 8006e70:	da003e17 	ldw	r8,248(sp)
 8006e74:	103c280e 	bge	r2,zero,8005f18 <__alt_data_end+0xf8005f18>
 8006e78:	0005883a 	mov	r2,zero
 8006e7c:	003c2606 	br	8005f18 <__alt_data_end+0xf8005f18>
 8006e80:	00bfffc4 	movi	r2,-1
 8006e84:	003a0906 	br	80056ac <__alt_data_end+0xf80056ac>
 8006e88:	010200b4 	movhi	r4,2050
 8006e8c:	213f4e84 	addi	r4,r4,-710
 8006e90:	d9003515 	stw	r4,212(sp)
 8006e94:	003b0606 	br	8005ab0 <__alt_data_end+0xf8005ab0>
 8006e98:	013fffc4 	movi	r4,-1
 8006e9c:	003a2706 	br	800573c <__alt_data_end+0xf800573c>
 8006ea0:	d9402c17 	ldw	r5,176(sp)
 8006ea4:	d9801e04 	addi	r6,sp,120
 8006ea8:	9809883a 	mov	r4,r19
 8006eac:	80139c80 	call	80139c8 <__ssprint_r>
 8006eb0:	1039f91e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006eb4:	d8c02017 	ldw	r3,128(sp)
 8006eb8:	da000404 	addi	r8,sp,16
 8006ebc:	003d8406 	br	80064d0 <__alt_data_end+0xf80064d0>
 8006ec0:	0023883a 	mov	r17,zero
 8006ec4:	003d8306 	br	80064d4 <__alt_data_end+0xf80064d4>
 8006ec8:	010200b4 	movhi	r4,2050
 8006ecc:	213f4a84 	addi	r4,r4,-726
 8006ed0:	d9002b15 	stw	r4,172(sp)
 8006ed4:	d9002b17 	ldw	r4,172(sp)
 8006ed8:	1c47883a 	add	r3,r3,r17
 8006edc:	10800044 	addi	r2,r2,1
 8006ee0:	41000015 	stw	r4,0(r8)
 8006ee4:	44400115 	stw	r17,4(r8)
 8006ee8:	d8c02015 	stw	r3,128(sp)
 8006eec:	d8801f15 	stw	r2,124(sp)
 8006ef0:	010001c4 	movi	r4,7
 8006ef4:	20bfcd16 	blt	r4,r2,8006e2c <__alt_data_end+0xf8006e2c>
 8006ef8:	42000204 	addi	r8,r8,8
 8006efc:	003fd306 	br	8006e4c <__alt_data_end+0xf8006e4c>
 8006f00:	d9402c17 	ldw	r5,176(sp)
 8006f04:	d9801e04 	addi	r6,sp,120
 8006f08:	9809883a 	mov	r4,r19
 8006f0c:	80139c80 	call	80139c8 <__ssprint_r>
 8006f10:	1039e11e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006f14:	d8802617 	ldw	r2,152(sp)
 8006f18:	d8c02017 	ldw	r3,128(sp)
 8006f1c:	da000404 	addi	r8,sp,16
 8006f20:	003e1c06 	br	8006794 <__alt_data_end+0xf8006794>
 8006f24:	d8802917 	ldw	r2,164(sp)
 8006f28:	00c00184 	movi	r3,6
 8006f2c:	1880012e 	bgeu	r3,r2,8006f34 <___svfprintf_internal_r+0x1c30>
 8006f30:	1805883a 	mov	r2,r3
 8006f34:	d8802e15 	stw	r2,184(sp)
 8006f38:	1000f316 	blt	r2,zero,8007308 <___svfprintf_internal_r+0x2004>
 8006f3c:	040200b4 	movhi	r16,2050
 8006f40:	d8802a15 	stw	r2,168(sp)
 8006f44:	dd002d15 	stw	r20,180(sp)
 8006f48:	d8002915 	stw	zero,164(sp)
 8006f4c:	d8003215 	stw	zero,200(sp)
 8006f50:	843f4804 	addi	r16,r16,-736
 8006f54:	0039883a 	mov	fp,zero
 8006f58:	003a9f06 	br	80059d8 <__alt_data_end+0xf80059d8>
 8006f5c:	010200b4 	movhi	r4,2050
 8006f60:	213f4e84 	addi	r4,r4,-710
 8006f64:	d9003515 	stw	r4,212(sp)
 8006f68:	003b5f06 	br	8005ce8 <__alt_data_end+0xf8005ce8>
 8006f6c:	d9402c17 	ldw	r5,176(sp)
 8006f70:	d9801e04 	addi	r6,sp,120
 8006f74:	9809883a 	mov	r4,r19
 8006f78:	80139c80 	call	80139c8 <__ssprint_r>
 8006f7c:	1039c61e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8006f80:	d8802617 	ldw	r2,152(sp)
 8006f84:	d9403317 	ldw	r5,204(sp)
 8006f88:	d8c02017 	ldw	r3,128(sp)
 8006f8c:	da000404 	addi	r8,sp,16
 8006f90:	2885c83a 	sub	r2,r5,r2
 8006f94:	003e1006 	br	80067d8 <__alt_data_end+0xf80067d8>
 8006f98:	00800044 	movi	r2,1
 8006f9c:	10803fcc 	andi	r2,r2,255
 8006fa0:	00c00044 	movi	r3,1
 8006fa4:	10fa3526 	beq	r2,r3,800587c <__alt_data_end+0xf800587c>
 8006fa8:	00c00084 	movi	r3,2
 8006fac:	10fb9e26 	beq	r2,r3,8005e28 <__alt_data_end+0xf8005e28>
 8006fb0:	003a6406 	br	8005944 <__alt_data_end+0xf8005944>
 8006fb4:	0021883a 	mov	r16,zero
 8006fb8:	003e0806 	br	80067dc <__alt_data_end+0xf80067dc>
 8006fbc:	07000b44 	movi	fp,45
 8006fc0:	df002785 	stb	fp,158(sp)
 8006fc4:	003a0b06 	br	80057f4 <__alt_data_end+0xf80057f4>
 8006fc8:	d8c02d17 	ldw	r3,180(sp)
 8006fcc:	d9002f17 	ldw	r4,188(sp)
 8006fd0:	18800017 	ldw	r2,0(r3)
 8006fd4:	18c00104 	addi	r3,r3,4
 8006fd8:	d8c02d15 	stw	r3,180(sp)
 8006fdc:	11000015 	stw	r4,0(r2)
 8006fe0:	0038f306 	br	80053b0 <__alt_data_end+0xf80053b0>
 8006fe4:	00c00b44 	movi	r3,45
 8006fe8:	d8c02785 	stb	r3,158(sp)
 8006fec:	d8802a15 	stw	r2,168(sp)
 8006ff0:	dc802b17 	ldw	r18,172(sp)
 8006ff4:	d8002915 	stw	zero,164(sp)
 8006ff8:	07000b44 	movi	fp,45
 8006ffc:	003a7306 	br	80059cc <__alt_data_end+0xf80059cc>
 8007000:	9080004c 	andi	r2,r18,1
 8007004:	1000941e 	bne	r2,zero,8007258 <___svfprintf_internal_r+0x1f54>
 8007008:	d8802117 	ldw	r2,132(sp)
 800700c:	1405c83a 	sub	r2,r2,r16
 8007010:	d8803315 	stw	r2,204(sp)
 8007014:	b441161e 	bne	r22,r17,8007470 <___svfprintf_internal_r+0x216c>
 8007018:	dd802617 	ldw	r22,152(sp)
 800701c:	00bfff44 	movi	r2,-3
 8007020:	b0801a16 	blt	r22,r2,800708c <___svfprintf_internal_r+0x1d88>
 8007024:	d9402917 	ldw	r5,164(sp)
 8007028:	2d801816 	blt	r5,r22,800708c <___svfprintf_internal_r+0x1d88>
 800702c:	dd803215 	stw	r22,200(sp)
 8007030:	003f3a06 	br	8006d1c <__alt_data_end+0xf8006d1c>
 8007034:	1025883a 	mov	r18,r2
 8007038:	0039883a 	mov	fp,zero
 800703c:	00800084 	movi	r2,2
 8007040:	003fd606 	br	8006f9c <__alt_data_end+0xf8006f9c>
 8007044:	9080004c 	andi	r2,r18,1
 8007048:	103f191e 	bne	r2,zero,8006cb0 <__alt_data_end+0xf8006cb0>
 800704c:	d8802117 	ldw	r2,132(sp)
 8007050:	003f2806 	br	8006cf4 <__alt_data_end+0xf8006cf4>
 8007054:	010200b4 	movhi	r4,2050
 8007058:	213f4a84 	addi	r4,r4,-726
 800705c:	d9002b15 	stw	r4,172(sp)
 8007060:	003c7c06 	br	8006254 <__alt_data_end+0xf8006254>
 8007064:	e005883a 	mov	r2,fp
 8007068:	003f2206 	br	8006cf4 <__alt_data_end+0xf8006cf4>
 800706c:	d9402917 	ldw	r5,164(sp)
 8007070:	df002783 	ldbu	fp,158(sp)
 8007074:	dd002d15 	stw	r20,180(sp)
 8007078:	d9402a15 	stw	r5,168(sp)
 800707c:	d9402e15 	stw	r5,184(sp)
 8007080:	d8002915 	stw	zero,164(sp)
 8007084:	d8003215 	stw	zero,200(sp)
 8007088:	003a4c06 	br	80059bc <__alt_data_end+0xf80059bc>
 800708c:	8c7fff84 	addi	r17,r17,-2
 8007090:	b5bfffc4 	addi	r22,r22,-1
 8007094:	dd802615 	stw	r22,152(sp)
 8007098:	dc4022c5 	stb	r17,139(sp)
 800709c:	b000c316 	blt	r22,zero,80073ac <___svfprintf_internal_r+0x20a8>
 80070a0:	00800ac4 	movi	r2,43
 80070a4:	d8802305 	stb	r2,140(sp)
 80070a8:	00800244 	movi	r2,9
 80070ac:	15806e16 	blt	r2,r22,8007268 <___svfprintf_internal_r+0x1f64>
 80070b0:	00800c04 	movi	r2,48
 80070b4:	b5800c04 	addi	r22,r22,48
 80070b8:	d8802345 	stb	r2,141(sp)
 80070bc:	dd802385 	stb	r22,142(sp)
 80070c0:	d88023c4 	addi	r2,sp,143
 80070c4:	df0022c4 	addi	fp,sp,139
 80070c8:	d8c03317 	ldw	r3,204(sp)
 80070cc:	1739c83a 	sub	fp,r2,fp
 80070d0:	d9003317 	ldw	r4,204(sp)
 80070d4:	e0c7883a 	add	r3,fp,r3
 80070d8:	df003b15 	stw	fp,236(sp)
 80070dc:	d8c02e15 	stw	r3,184(sp)
 80070e0:	00800044 	movi	r2,1
 80070e4:	1100b70e 	bge	r2,r4,80073c4 <___svfprintf_internal_r+0x20c0>
 80070e8:	d8c02e17 	ldw	r3,184(sp)
 80070ec:	18c00044 	addi	r3,r3,1
 80070f0:	d8c02e15 	stw	r3,184(sp)
 80070f4:	1805883a 	mov	r2,r3
 80070f8:	1800b016 	blt	r3,zero,80073bc <___svfprintf_internal_r+0x20b8>
 80070fc:	d8003215 	stw	zero,200(sp)
 8007100:	003f1006 	br	8006d44 <__alt_data_end+0xf8006d44>
 8007104:	d8802917 	ldw	r2,164(sp)
 8007108:	103ec71e 	bne	r2,zero,8006c28 <__alt_data_end+0xf8006c28>
 800710c:	dc002915 	stw	r16,164(sp)
 8007110:	003ec506 	br	8006c28 <__alt_data_end+0xf8006c28>
 8007114:	d9402c17 	ldw	r5,176(sp)
 8007118:	d9801e04 	addi	r6,sp,120
 800711c:	9809883a 	mov	r4,r19
 8007120:	80139c80 	call	80139c8 <__ssprint_r>
 8007124:	10395c1e 	bne	r2,zero,8005698 <__alt_data_end+0xf8005698>
 8007128:	dc402617 	ldw	r17,152(sp)
 800712c:	d8c02017 	ldw	r3,128(sp)
 8007130:	d8801f17 	ldw	r2,124(sp)
 8007134:	da000404 	addi	r8,sp,16
 8007138:	003e7706 	br	8006b18 <__alt_data_end+0xf8006b18>
 800713c:	582f883a 	mov	r23,r11
 8007140:	d8002915 	stw	zero,164(sp)
 8007144:	0038c406 	br	8005458 <__alt_data_end+0xf8005458>
 8007148:	d8c02917 	ldw	r3,164(sp)
 800714c:	d8802104 	addi	r2,sp,132
 8007150:	d8800315 	stw	r2,12(sp)
 8007154:	d9403617 	ldw	r5,216(sp)
 8007158:	d8802504 	addi	r2,sp,148
 800715c:	d8800215 	stw	r2,8(sp)
 8007160:	d8802604 	addi	r2,sp,152
 8007164:	d8c00015 	stw	r3,0(sp)
 8007168:	9809883a 	mov	r4,r19
 800716c:	d8800115 	stw	r2,4(sp)
 8007170:	01c000c4 	movi	r7,3
 8007174:	a00d883a 	mov	r6,r20
 8007178:	da003e15 	stw	r8,248(sp)
 800717c:	800cbfc0 	call	800cbfc <_dtoa_r>
 8007180:	d9002917 	ldw	r4,164(sp)
 8007184:	da003e17 	ldw	r8,248(sp)
 8007188:	1021883a 	mov	r16,r2
 800718c:	1139883a 	add	fp,r2,r4
 8007190:	2007883a 	mov	r3,r4
 8007194:	81000007 	ldb	r4,0(r16)
 8007198:	00800c04 	movi	r2,48
 800719c:	20806f26 	beq	r4,r2,800735c <___svfprintf_internal_r+0x2058>
 80071a0:	d8c02617 	ldw	r3,152(sp)
 80071a4:	e0f9883a 	add	fp,fp,r3
 80071a8:	003ec206 	br	8006cb4 <__alt_data_end+0xf8006cb4>
 80071ac:	00c00b44 	movi	r3,45
 80071b0:	2520003c 	xorhi	r20,r4,32768
 80071b4:	d8c02a05 	stb	r3,168(sp)
 80071b8:	003ea106 	br	8006c40 <__alt_data_end+0xf8006c40>
 80071bc:	d8c03217 	ldw	r3,200(sp)
 80071c0:	00c0890e 	bge	zero,r3,80073e8 <___svfprintf_internal_r+0x20e4>
 80071c4:	00800044 	movi	r2,1
 80071c8:	d9003317 	ldw	r4,204(sp)
 80071cc:	1105883a 	add	r2,r2,r4
 80071d0:	d8802e15 	stw	r2,184(sp)
 80071d4:	10005f16 	blt	r2,zero,8007354 <___svfprintf_internal_r+0x2050>
 80071d8:	044019c4 	movi	r17,103
 80071dc:	003ed906 	br	8006d44 <__alt_data_end+0xf8006d44>
 80071e0:	d9002917 	ldw	r4,164(sp)
 80071e4:	20c00044 	addi	r3,r4,1
 80071e8:	003e9c06 	br	8006c5c <__alt_data_end+0xf8006c5c>
 80071ec:	d9002917 	ldw	r4,164(sp)
 80071f0:	00c0680e 	bge	zero,r3,8007394 <___svfprintf_internal_r+0x2090>
 80071f4:	2000461e 	bne	r4,zero,8007310 <___svfprintf_internal_r+0x200c>
 80071f8:	9480004c 	andi	r18,r18,1
 80071fc:	9000441e 	bne	r18,zero,8007310 <___svfprintf_internal_r+0x200c>
 8007200:	1805883a 	mov	r2,r3
 8007204:	1800a016 	blt	r3,zero,8007488 <___svfprintf_internal_r+0x2184>
 8007208:	d8c03217 	ldw	r3,200(sp)
 800720c:	d8c02e15 	stw	r3,184(sp)
 8007210:	003ecc06 	br	8006d44 <__alt_data_end+0xf8006d44>
 8007214:	d9402917 	ldw	r5,164(sp)
 8007218:	d8802104 	addi	r2,sp,132
 800721c:	d8800315 	stw	r2,12(sp)
 8007220:	d9400015 	stw	r5,0(sp)
 8007224:	d8802504 	addi	r2,sp,148
 8007228:	d9403617 	ldw	r5,216(sp)
 800722c:	d8800215 	stw	r2,8(sp)
 8007230:	d8802604 	addi	r2,sp,152
 8007234:	d8800115 	stw	r2,4(sp)
 8007238:	01c000c4 	movi	r7,3
 800723c:	a00d883a 	mov	r6,r20
 8007240:	9809883a 	mov	r4,r19
 8007244:	da003e15 	stw	r8,248(sp)
 8007248:	800cbfc0 	call	800cbfc <_dtoa_r>
 800724c:	d8c02917 	ldw	r3,164(sp)
 8007250:	da003e17 	ldw	r8,248(sp)
 8007254:	1021883a 	mov	r16,r2
 8007258:	00801184 	movi	r2,70
 800725c:	80f9883a 	add	fp,r16,r3
 8007260:	88bfcc26 	beq	r17,r2,8007194 <__alt_data_end+0xf8007194>
 8007264:	003e9306 	br	8006cb4 <__alt_data_end+0xf8006cb4>
 8007268:	df0022c4 	addi	fp,sp,139
 800726c:	dc002915 	stw	r16,164(sp)
 8007270:	9829883a 	mov	r20,r19
 8007274:	e021883a 	mov	r16,fp
 8007278:	4027883a 	mov	r19,r8
 800727c:	b009883a 	mov	r4,r22
 8007280:	01400284 	movi	r5,10
 8007284:	80039440 	call	8003944 <__modsi3>
 8007288:	10800c04 	addi	r2,r2,48
 800728c:	843fffc4 	addi	r16,r16,-1
 8007290:	b009883a 	mov	r4,r22
 8007294:	01400284 	movi	r5,10
 8007298:	80800005 	stb	r2,0(r16)
 800729c:	80038c00 	call	80038c0 <__divsi3>
 80072a0:	102d883a 	mov	r22,r2
 80072a4:	00800244 	movi	r2,9
 80072a8:	15bff416 	blt	r2,r22,800727c <__alt_data_end+0xf800727c>
 80072ac:	9811883a 	mov	r8,r19
 80072b0:	b0800c04 	addi	r2,r22,48
 80072b4:	a027883a 	mov	r19,r20
 80072b8:	8029883a 	mov	r20,r16
 80072bc:	a17fffc4 	addi	r5,r20,-1
 80072c0:	a0bfffc5 	stb	r2,-1(r20)
 80072c4:	dc002917 	ldw	r16,164(sp)
 80072c8:	2f00752e 	bgeu	r5,fp,80074a0 <___svfprintf_internal_r+0x219c>
 80072cc:	d9c02384 	addi	r7,sp,142
 80072d0:	3d0fc83a 	sub	r7,r7,r20
 80072d4:	d9002344 	addi	r4,sp,141
 80072d8:	e1cf883a 	add	r7,fp,r7
 80072dc:	00000106 	br	80072e4 <___svfprintf_internal_r+0x1fe0>
 80072e0:	28800003 	ldbu	r2,0(r5)
 80072e4:	20800005 	stb	r2,0(r4)
 80072e8:	21000044 	addi	r4,r4,1
 80072ec:	29400044 	addi	r5,r5,1
 80072f0:	21fffb1e 	bne	r4,r7,80072e0 <__alt_data_end+0xf80072e0>
 80072f4:	d8802304 	addi	r2,sp,140
 80072f8:	1505c83a 	sub	r2,r2,r20
 80072fc:	d8c02344 	addi	r3,sp,141
 8007300:	1885883a 	add	r2,r3,r2
 8007304:	003f7006 	br	80070c8 <__alt_data_end+0xf80070c8>
 8007308:	0005883a 	mov	r2,zero
 800730c:	003f0b06 	br	8006f3c <__alt_data_end+0xf8006f3c>
 8007310:	d9002917 	ldw	r4,164(sp)
 8007314:	d8c03217 	ldw	r3,200(sp)
 8007318:	20800044 	addi	r2,r4,1
 800731c:	1885883a 	add	r2,r3,r2
 8007320:	d8802e15 	stw	r2,184(sp)
 8007324:	103e870e 	bge	r2,zero,8006d44 <__alt_data_end+0xf8006d44>
 8007328:	0005883a 	mov	r2,zero
 800732c:	003e8506 	br	8006d44 <__alt_data_end+0xf8006d44>
 8007330:	010200b4 	movhi	r4,2050
 8007334:	213f4a84 	addi	r4,r4,-726
 8007338:	d9002b15 	stw	r4,172(sp)
 800733c:	003cc506 	br	8006654 <__alt_data_end+0xf8006654>
 8007340:	d8c03217 	ldw	r3,200(sp)
 8007344:	18c00044 	addi	r3,r3,1
 8007348:	d8c02e15 	stw	r3,184(sp)
 800734c:	1805883a 	mov	r2,r3
 8007350:	183fa10e 	bge	r3,zero,80071d8 <__alt_data_end+0xf80071d8>
 8007354:	0005883a 	mov	r2,zero
 8007358:	003f9f06 	br	80071d8 <__alt_data_end+0xf80071d8>
 800735c:	d9003617 	ldw	r4,216(sp)
 8007360:	000d883a 	mov	r6,zero
 8007364:	000f883a 	mov	r7,zero
 8007368:	a00b883a 	mov	r5,r20
 800736c:	d8c03d15 	stw	r3,244(sp)
 8007370:	da003e15 	stw	r8,248(sp)
 8007374:	801ad2c0 	call	801ad2c <__eqdf2>
 8007378:	d8c03d17 	ldw	r3,244(sp)
 800737c:	da003e17 	ldw	r8,248(sp)
 8007380:	103f8726 	beq	r2,zero,80071a0 <__alt_data_end+0xf80071a0>
 8007384:	00800044 	movi	r2,1
 8007388:	10c7c83a 	sub	r3,r2,r3
 800738c:	d8c02615 	stw	r3,152(sp)
 8007390:	003f8406 	br	80071a4 <__alt_data_end+0xf80071a4>
 8007394:	20000e1e 	bne	r4,zero,80073d0 <___svfprintf_internal_r+0x20cc>
 8007398:	9480004c 	andi	r18,r18,1
 800739c:	90000c1e 	bne	r18,zero,80073d0 <___svfprintf_internal_r+0x20cc>
 80073a0:	00800044 	movi	r2,1
 80073a4:	d8802e15 	stw	r2,184(sp)
 80073a8:	003e6606 	br	8006d44 <__alt_data_end+0xf8006d44>
 80073ac:	00800b44 	movi	r2,45
 80073b0:	05adc83a 	sub	r22,zero,r22
 80073b4:	d8802305 	stb	r2,140(sp)
 80073b8:	003f3b06 	br	80070a8 <__alt_data_end+0xf80070a8>
 80073bc:	0005883a 	mov	r2,zero
 80073c0:	003f4e06 	br	80070fc <__alt_data_end+0xf80070fc>
 80073c4:	90a4703a 	and	r18,r18,r2
 80073c8:	903f4a26 	beq	r18,zero,80070f4 <__alt_data_end+0xf80070f4>
 80073cc:	003f4606 	br	80070e8 <__alt_data_end+0xf80070e8>
 80073d0:	d8c02917 	ldw	r3,164(sp)
 80073d4:	18c00084 	addi	r3,r3,2
 80073d8:	d8c02e15 	stw	r3,184(sp)
 80073dc:	1805883a 	mov	r2,r3
 80073e0:	183e580e 	bge	r3,zero,8006d44 <__alt_data_end+0xf8006d44>
 80073e4:	003fd006 	br	8007328 <__alt_data_end+0xf8007328>
 80073e8:	00800084 	movi	r2,2
 80073ec:	10c5c83a 	sub	r2,r2,r3
 80073f0:	003f7506 	br	80071c8 <__alt_data_end+0xf80071c8>
 80073f4:	d8802d17 	ldw	r2,180(sp)
 80073f8:	d9002d17 	ldw	r4,180(sp)
 80073fc:	bc400043 	ldbu	r17,1(r23)
 8007400:	10800017 	ldw	r2,0(r2)
 8007404:	582f883a 	mov	r23,r11
 8007408:	d8802915 	stw	r2,164(sp)
 800740c:	20800104 	addi	r2,r4,4
 8007410:	d9002917 	ldw	r4,164(sp)
 8007414:	d8802d15 	stw	r2,180(sp)
 8007418:	203df00e 	bge	r4,zero,8006bdc <__alt_data_end+0xf8006bdc>
 800741c:	8c403fcc 	andi	r17,r17,255
 8007420:	00bfffc4 	movi	r2,-1
 8007424:	8c40201c 	xori	r17,r17,128
 8007428:	d8802915 	stw	r2,164(sp)
 800742c:	8c7fe004 	addi	r17,r17,-128
 8007430:	00380806 	br	8005454 <__alt_data_end+0xf8005454>
 8007434:	9080004c 	andi	r2,r18,1
 8007438:	0039883a 	mov	fp,zero
 800743c:	10000726 	beq	r2,zero,800745c <___svfprintf_internal_r+0x2158>
 8007440:	d8c02817 	ldw	r3,160(sp)
 8007444:	dc001dc4 	addi	r16,sp,119
 8007448:	00800c04 	movi	r2,48
 800744c:	1c07c83a 	sub	r3,r3,r16
 8007450:	d8801dc5 	stb	r2,119(sp)
 8007454:	d8c02e15 	stw	r3,184(sp)
 8007458:	00395206 	br	80059a4 <__alt_data_end+0xf80059a4>
 800745c:	d8002e15 	stw	zero,184(sp)
 8007460:	dc001e04 	addi	r16,sp,120
 8007464:	00394f06 	br	80059a4 <__alt_data_end+0xf80059a4>
 8007468:	0005883a 	mov	r2,zero
 800746c:	003e3206 	br	8006d38 <__alt_data_end+0xf8006d38>
 8007470:	dd802617 	ldw	r22,152(sp)
 8007474:	003f0606 	br	8007090 <__alt_data_end+0xf8007090>
 8007478:	d9c02785 	stb	r7,158(sp)
 800747c:	003a5106 	br	8005dc4 <__alt_data_end+0xf8005dc4>
 8007480:	d9c02785 	stb	r7,158(sp)
 8007484:	003a3706 	br	8005d64 <__alt_data_end+0xf8005d64>
 8007488:	0005883a 	mov	r2,zero
 800748c:	003f5e06 	br	8007208 <__alt_data_end+0xf8007208>
 8007490:	d9c02785 	stb	r7,158(sp)
 8007494:	00391706 	br	80058f4 <__alt_data_end+0xf80058f4>
 8007498:	d9c02785 	stb	r7,158(sp)
 800749c:	0038e606 	br	8005838 <__alt_data_end+0xf8005838>
 80074a0:	d8802344 	addi	r2,sp,141
 80074a4:	003f0806 	br	80070c8 <__alt_data_end+0xf80070c8>
 80074a8:	d9c02785 	stb	r7,158(sp)
 80074ac:	0038b706 	br	800578c <__alt_data_end+0xf800578c>
 80074b0:	d9c02785 	stb	r7,158(sp)
 80074b4:	003adc06 	br	8006028 <__alt_data_end+0xf8006028>
 80074b8:	d9403917 	ldw	r5,228(sp)
 80074bc:	00800304 	movi	r2,12
 80074c0:	28800015 	stw	r2,0(r5)
 80074c4:	00bfffc4 	movi	r2,-1
 80074c8:	00387806 	br	80056ac <__alt_data_end+0xf80056ac>
 80074cc:	d9c02785 	stb	r7,158(sp)
 80074d0:	003abf06 	br	8005fd0 <__alt_data_end+0xf8005fd0>
 80074d4:	d9c02785 	stb	r7,158(sp)
 80074d8:	003a9b06 	br	8005f48 <__alt_data_end+0xf8005f48>

080074dc <__ssvfscanf_r>:
 80074dc:	2880030b 	ldhu	r2,12(r5)
 80074e0:	deff4b04 	addi	sp,sp,-724
 80074e4:	df00b315 	stw	fp,716(sp)
 80074e8:	dd80b115 	stw	r22,708(sp)
 80074ec:	dfc0b415 	stw	ra,720(sp)
 80074f0:	ddc0b215 	stw	r23,712(sp)
 80074f4:	dd40b015 	stw	r21,704(sp)
 80074f8:	dd00af15 	stw	r20,700(sp)
 80074fc:	dcc0ae15 	stw	r19,696(sp)
 8007500:	dc80ad15 	stw	r18,692(sp)
 8007504:	dc40ac15 	stw	r17,688(sp)
 8007508:	dc00ab15 	stw	r16,684(sp)
 800750c:	10c8000c 	andi	r3,r2,8192
 8007510:	d9c09c15 	stw	r7,624(sp)
 8007514:	2839883a 	mov	fp,r5
 8007518:	202d883a 	mov	r22,r4
 800751c:	1800061e 	bne	r3,zero,8007538 <__ssvfscanf_r+0x5c>
 8007520:	29001917 	ldw	r4,100(r5)
 8007524:	00f7ffc4 	movi	r3,-8193
 8007528:	10880014 	ori	r2,r2,8192
 800752c:	20c6703a 	and	r3,r4,r3
 8007530:	2880030d 	sth	r2,12(r5)
 8007534:	28c01915 	stw	r3,100(r5)
 8007538:	30800003 	ldbu	r2,0(r6)
 800753c:	0021883a 	mov	r16,zero
 8007540:	05c200b4 	movhi	r23,2050
 8007544:	d800a115 	stw	zero,644(sp)
 8007548:	d8009e15 	stw	zero,632(sp)
 800754c:	d800a015 	stw	zero,640(sp)
 8007550:	d8809b15 	stw	r2,620(sp)
 8007554:	bdc81204 	addi	r23,r23,8264
 8007558:	8025883a 	mov	r18,r16
 800755c:	35000044 	addi	r20,r6,1
 8007560:	10001e26 	beq	r2,zero,80075dc <__ssvfscanf_r+0x100>
 8007564:	b9c00017 	ldw	r7,0(r23)
 8007568:	3887883a 	add	r3,r7,r2
 800756c:	18c00043 	ldbu	r3,1(r3)
 8007570:	18c0020c 	andi	r3,r3,8
 8007574:	18001b26 	beq	r3,zero,80075e4 <__ssvfscanf_r+0x108>
 8007578:	e0800117 	ldw	r2,4(fp)
 800757c:	00800e0e 	bge	zero,r2,80075b8 <__ssvfscanf_r+0xdc>
 8007580:	e0c00017 	ldw	r3,0(fp)
 8007584:	b9000017 	ldw	r4,0(r23)
 8007588:	18800003 	ldbu	r2,0(r3)
 800758c:	2085883a 	add	r2,r4,r2
 8007590:	10800043 	ldbu	r2,1(r2)
 8007594:	1080020c 	andi	r2,r2,8
 8007598:	10000b26 	beq	r2,zero,80075c8 <__ssvfscanf_r+0xec>
 800759c:	e0800117 	ldw	r2,4(fp)
 80075a0:	18c00044 	addi	r3,r3,1
 80075a4:	e0c00015 	stw	r3,0(fp)
 80075a8:	10bfffc4 	addi	r2,r2,-1
 80075ac:	e0800115 	stw	r2,4(fp)
 80075b0:	94800044 	addi	r18,r18,1
 80075b4:	00bff216 	blt	zero,r2,8007580 <__alt_data_end+0xf8007580>
 80075b8:	e00b883a 	mov	r5,fp
 80075bc:	b009883a 	mov	r4,r22
 80075c0:	8014edc0 	call	8014edc <__ssrefill_r>
 80075c4:	103fee26 	beq	r2,zero,8007580 <__alt_data_end+0xf8007580>
 80075c8:	a00d883a 	mov	r6,r20
 80075cc:	30800003 	ldbu	r2,0(r6)
 80075d0:	35000044 	addi	r20,r6,1
 80075d4:	d8809b15 	stw	r2,620(sp)
 80075d8:	103fe21e 	bne	r2,zero,8007564 <__alt_data_end+0xf8007564>
 80075dc:	d880a017 	ldw	r2,640(sp)
 80075e0:	00009906 	br	8007848 <__ssvfscanf_r+0x36c>
 80075e4:	00c00944 	movi	r3,37
 80075e8:	10c0881e 	bne	r2,r3,800780c <__ssvfscanf_r+0x330>
 80075ec:	30c00043 	ldbu	r3,1(r6)
 80075f0:	0023883a 	mov	r17,zero
 80075f4:	0027883a 	mov	r19,zero
 80075f8:	01001e04 	movi	r4,120
 80075fc:	01401b04 	movi	r5,108
 8007600:	a1800044 	addi	r6,r20,1
 8007604:	20c0a236 	bltu	r4,r3,8007890 <__ssvfscanf_r+0x3b4>
 8007608:	180490ba 	slli	r2,r3,2
 800760c:	02020034 	movhi	r8,2048
 8007610:	421d8804 	addi	r8,r8,30240
 8007614:	1205883a 	add	r2,r2,r8
 8007618:	10800017 	ldw	r2,0(r2)
 800761c:	1000683a 	jmp	r2
 8007620:	08007844 	addi	zero,at,481
 8007624:	08007890 	cmplti	zero,at,482
 8007628:	08007890 	cmplti	zero,at,482
 800762c:	08007890 	cmplti	zero,at,482
 8007630:	08007890 	cmplti	zero,at,482
 8007634:	08007890 	cmplti	zero,at,482
 8007638:	08007890 	cmplti	zero,at,482
 800763c:	08007890 	cmplti	zero,at,482
 8007640:	08007890 	cmplti	zero,at,482
 8007644:	08007890 	cmplti	zero,at,482
 8007648:	08007890 	cmplti	zero,at,482
 800764c:	08007890 	cmplti	zero,at,482
 8007650:	08007890 	cmplti	zero,at,482
 8007654:	08007890 	cmplti	zero,at,482
 8007658:	08007890 	cmplti	zero,at,482
 800765c:	08007890 	cmplti	zero,at,482
 8007660:	08007890 	cmplti	zero,at,482
 8007664:	08007890 	cmplti	zero,at,482
 8007668:	08007890 	cmplti	zero,at,482
 800766c:	08007890 	cmplti	zero,at,482
 8007670:	08007890 	cmplti	zero,at,482
 8007674:	08007890 	cmplti	zero,at,482
 8007678:	08007890 	cmplti	zero,at,482
 800767c:	08007890 	cmplti	zero,at,482
 8007680:	08007890 	cmplti	zero,at,482
 8007684:	08007890 	cmplti	zero,at,482
 8007688:	08007890 	cmplti	zero,at,482
 800768c:	08007890 	cmplti	zero,at,482
 8007690:	08007890 	cmplti	zero,at,482
 8007694:	08007890 	cmplti	zero,at,482
 8007698:	08007890 	cmplti	zero,at,482
 800769c:	08007890 	cmplti	zero,at,482
 80076a0:	08007890 	cmplti	zero,at,482
 80076a4:	08007890 	cmplti	zero,at,482
 80076a8:	08007890 	cmplti	zero,at,482
 80076ac:	08007890 	cmplti	zero,at,482
 80076b0:	08007890 	cmplti	zero,at,482
 80076b4:	08007804 	addi	zero,at,480
 80076b8:	08007890 	cmplti	zero,at,482
 80076bc:	08007890 	cmplti	zero,at,482
 80076c0:	08007890 	cmplti	zero,at,482
 80076c4:	08007890 	cmplti	zero,at,482
 80076c8:	08007878 	rdprs	zero,at,481
 80076cc:	08007890 	cmplti	zero,at,482
 80076d0:	08007890 	cmplti	zero,at,482
 80076d4:	08007890 	cmplti	zero,at,482
 80076d8:	08007890 	cmplti	zero,at,482
 80076dc:	08007890 	cmplti	zero,at,482
 80076e0:	080079ac 	andhi	zero,at,486
 80076e4:	080079ac 	andhi	zero,at,486
 80076e8:	080079ac 	andhi	zero,at,486
 80076ec:	080079ac 	andhi	zero,at,486
 80076f0:	080079ac 	andhi	zero,at,486
 80076f4:	080079ac 	andhi	zero,at,486
 80076f8:	080079ac 	andhi	zero,at,486
 80076fc:	080079ac 	andhi	zero,at,486
 8007700:	080079ac 	andhi	zero,at,486
 8007704:	080079ac 	andhi	zero,at,486
 8007708:	08007890 	cmplti	zero,at,482
 800770c:	08007890 	cmplti	zero,at,482
 8007710:	08007890 	cmplti	zero,at,482
 8007714:	08007890 	cmplti	zero,at,482
 8007718:	08007890 	cmplti	zero,at,482
 800771c:	08007890 	cmplti	zero,at,482
 8007720:	08007890 	cmplti	zero,at,482
 8007724:	08007890 	cmplti	zero,at,482
 8007728:	08007890 	cmplti	zero,at,482
 800772c:	08007890 	cmplti	zero,at,482
 8007730:	08007980 	call	800798 <__alt_mem_sdram-0x77ff868>
 8007734:	08007a30 	cmpltui	zero,at,488
 8007738:	08007890 	cmplti	zero,at,482
 800773c:	08007a30 	cmpltui	zero,at,488
 8007740:	08007890 	cmplti	zero,at,482
 8007744:	08007890 	cmplti	zero,at,482
 8007748:	08007890 	cmplti	zero,at,482
 800774c:	08007890 	cmplti	zero,at,482
 8007750:	08007a1c 	xori	zero,at,488
 8007754:	08007890 	cmplti	zero,at,482
 8007758:	08007890 	cmplti	zero,at,482
 800775c:	080079f0 	cmpltui	zero,at,487
 8007760:	08007890 	cmplti	zero,at,482
 8007764:	08007890 	cmplti	zero,at,482
 8007768:	08007890 	cmplti	zero,at,482
 800776c:	08007890 	cmplti	zero,at,482
 8007770:	08007890 	cmplti	zero,at,482
 8007774:	08007890 	cmplti	zero,at,482
 8007778:	08007890 	cmplti	zero,at,482
 800777c:	08007890 	cmplti	zero,at,482
 8007780:	080079c8 	cmpgei	zero,at,487
 8007784:	08007890 	cmplti	zero,at,482
 8007788:	08007890 	cmplti	zero,at,482
 800778c:	08007b64 	muli	zero,at,493
 8007790:	08007890 	cmplti	zero,at,482
 8007794:	08007890 	cmplti	zero,at,482
 8007798:	08007890 	cmplti	zero,at,482
 800779c:	08007890 	cmplti	zero,at,482
 80077a0:	08007890 	cmplti	zero,at,482
 80077a4:	08007890 	cmplti	zero,at,482
 80077a8:	08007890 	cmplti	zero,at,482
 80077ac:	08007ae8 	cmpgeui	zero,at,491
 80077b0:	08007ac0 	call	8007ac <__alt_mem_sdram-0x77ff854>
 80077b4:	08007a30 	cmpltui	zero,at,488
 80077b8:	08007a30 	cmpltui	zero,at,488
 80077bc:	08007a30 	cmpltui	zero,at,488
 80077c0:	08007aac 	andhi	zero,at,490
 80077c4:	08007bf0 	cmpltui	zero,at,495
 80077c8:	08007890 	cmplti	zero,at,482
 80077cc:	08007890 	cmplti	zero,at,482
 80077d0:	08007a98 	cmpnei	zero,at,490
 80077d4:	08007890 	cmplti	zero,at,482
 80077d8:	08007a68 	cmpgeui	zero,at,489
 80077dc:	08007a44 	addi	zero,at,489
 80077e0:	08007954 	ori	zero,at,485
 80077e4:	08007890 	cmplti	zero,at,482
 80077e8:	08007890 	cmplti	zero,at,482
 80077ec:	08007940 	call	800794 <__alt_mem_sdram-0x77ff86c>
 80077f0:	08007890 	cmplti	zero,at,482
 80077f4:	080078c8 	cmpgei	zero,at,483
 80077f8:	08007890 	cmplti	zero,at,482
 80077fc:	08007890 	cmplti	zero,at,482
 8007800:	080079c8 	cmpgei	zero,at,487
 8007804:	d9809d15 	stw	r6,628(sp)
 8007808:	3029883a 	mov	r20,r6
 800780c:	e0800117 	ldw	r2,4(fp)
 8007810:	0081aa0e 	bge	zero,r2,8007ebc <__ssvfscanf_r+0x9e0>
 8007814:	e0800017 	ldw	r2,0(fp)
 8007818:	a0ffffc3 	ldbu	r3,-1(r20)
 800781c:	11000003 	ldbu	r4,0(r2)
 8007820:	20ff6e1e 	bne	r4,r3,80075dc <__alt_data_end+0xf80075dc>
 8007824:	e0c00117 	ldw	r3,4(fp)
 8007828:	10800044 	addi	r2,r2,1
 800782c:	e0800015 	stw	r2,0(fp)
 8007830:	18bfffc4 	addi	r2,r3,-1
 8007834:	e0800115 	stw	r2,4(fp)
 8007838:	94800044 	addi	r18,r18,1
 800783c:	a00d883a 	mov	r6,r20
 8007840:	003f6206 	br	80075cc <__alt_data_end+0xf80075cc>
 8007844:	00bfffc4 	movi	r2,-1
 8007848:	dfc0b417 	ldw	ra,720(sp)
 800784c:	df00b317 	ldw	fp,716(sp)
 8007850:	ddc0b217 	ldw	r23,712(sp)
 8007854:	dd80b117 	ldw	r22,708(sp)
 8007858:	dd40b017 	ldw	r21,704(sp)
 800785c:	dd00af17 	ldw	r20,700(sp)
 8007860:	dcc0ae17 	ldw	r19,696(sp)
 8007864:	dc80ad17 	ldw	r18,692(sp)
 8007868:	dc40ac17 	ldw	r17,688(sp)
 800786c:	dc00ab17 	ldw	r16,684(sp)
 8007870:	dec0b504 	addi	sp,sp,724
 8007874:	f800283a 	ret
 8007878:	a0800043 	ldbu	r2,1(r20)
 800787c:	3029883a 	mov	r20,r6
 8007880:	8c400414 	ori	r17,r17,16
 8007884:	10c03fcc 	andi	r3,r2,255
 8007888:	a1800044 	addi	r6,r20,1
 800788c:	20ff5e2e 	bgeu	r4,r3,8007608 <__alt_data_end+0xf8007608>
 8007890:	38c7883a 	add	r3,r7,r3
 8007894:	18800043 	ldbu	r2,1(r3)
 8007898:	d9809d15 	stw	r6,628(sp)
 800789c:	00c00044 	movi	r3,1
 80078a0:	108000cc 	andi	r2,r2,3
 80078a4:	10c18f26 	beq	r2,r3,8007ee4 <__ssvfscanf_r+0xa08>
 80078a8:	e0800117 	ldw	r2,4(fp)
 80078ac:	00808716 	blt	zero,r2,8007acc <__ssvfscanf_r+0x5f0>
 80078b0:	e00b883a 	mov	r5,fp
 80078b4:	b009883a 	mov	r4,r22
 80078b8:	8014edc0 	call	8014edc <__ssrefill_r>
 80078bc:	1001431e 	bne	r2,zero,8007dcc <__ssvfscanf_r+0x8f0>
 80078c0:	b9c00017 	ldw	r7,0(r23)
 80078c4:	00008106 	br	8007acc <__ssvfscanf_r+0x5f0>
 80078c8:	e0800117 	ldw	r2,4(fp)
 80078cc:	d9809d15 	stw	r6,628(sp)
 80078d0:	0081a30e 	bge	zero,r2,8007f60 <__ssvfscanf_r+0xa84>
 80078d4:	00820074 	movhi	r2,2049
 80078d8:	108d1004 	addi	r2,r2,13376
 80078dc:	02000284 	movi	r8,10
 80078e0:	d880a115 	stw	r2,644(sp)
 80078e4:	da009e15 	stw	r8,632(sp)
 80078e8:	050000c4 	movi	r20,3
 80078ec:	e0c00017 	ldw	r3,0(fp)
 80078f0:	00000206 	br	80078fc <__ssvfscanf_r+0x420>
 80078f4:	18c00044 	addi	r3,r3,1
 80078f8:	e0c00015 	stw	r3,0(fp)
 80078fc:	19000003 	ldbu	r4,0(r3)
 8007900:	20803fcc 	andi	r2,r4,255
 8007904:	3885883a 	add	r2,r7,r2
 8007908:	10800043 	ldbu	r2,1(r2)
 800790c:	1140020c 	andi	r5,r2,8
 8007910:	2801ab26 	beq	r5,zero,8007fc0 <__ssvfscanf_r+0xae4>
 8007914:	e0800117 	ldw	r2,4(fp)
 8007918:	94800044 	addi	r18,r18,1
 800791c:	10bfffc4 	addi	r2,r2,-1
 8007920:	e0800115 	stw	r2,4(fp)
 8007924:	00bff316 	blt	zero,r2,80078f4 <__alt_data_end+0xf80078f4>
 8007928:	e00b883a 	mov	r5,fp
 800792c:	b009883a 	mov	r4,r22
 8007930:	8014edc0 	call	8014edc <__ssrefill_r>
 8007934:	1001251e 	bne	r2,zero,8007dcc <__ssvfscanf_r+0x8f0>
 8007938:	b9c00017 	ldw	r7,0(r23)
 800793c:	003feb06 	br	80078ec <__alt_data_end+0xf80078ec>
 8007940:	e0800117 	ldw	r2,4(fp)
 8007944:	d9809d15 	stw	r6,628(sp)
 8007948:	00818b0e 	bge	zero,r2,8007f78 <__ssvfscanf_r+0xa9c>
 800794c:	05000084 	movi	r20,2
 8007950:	003fe606 	br	80078ec <__alt_data_end+0xf80078ec>
 8007954:	e0800117 	ldw	r2,4(fp)
 8007958:	d9809d15 	stw	r6,628(sp)
 800795c:	8c408814 	ori	r17,r17,544
 8007960:	00801d0e 	bge	zero,r2,80079d8 <__ssvfscanf_r+0x4fc>
 8007964:	00820074 	movhi	r2,2049
 8007968:	108d1004 	addi	r2,r2,13376
 800796c:	02000404 	movi	r8,16
 8007970:	d880a115 	stw	r2,644(sp)
 8007974:	da009e15 	stw	r8,632(sp)
 8007978:	050000c4 	movi	r20,3
 800797c:	003fdb06 	br	80078ec <__alt_data_end+0xf80078ec>
 8007980:	e0800117 	ldw	r2,4(fp)
 8007984:	d9809d15 	stw	r6,628(sp)
 8007988:	8c400054 	ori	r17,r17,1
 800798c:	00bfc80e 	bge	zero,r2,80078b0 <__alt_data_end+0xf80078b0>
 8007990:	00c20074 	movhi	r3,2049
 8007994:	18cbba04 	addi	r3,r3,12008
 8007998:	02000284 	movi	r8,10
 800799c:	d8c0a115 	stw	r3,644(sp)
 80079a0:	da009e15 	stw	r8,632(sp)
 80079a4:	050000c4 	movi	r20,3
 80079a8:	003fd006 	br	80078ec <__alt_data_end+0xf80078ec>
 80079ac:	9cc002a4 	muli	r19,r19,10
 80079b0:	a0800043 	ldbu	r2,1(r20)
 80079b4:	3029883a 	mov	r20,r6
 80079b8:	98e7883a 	add	r19,r19,r3
 80079bc:	9cfff404 	addi	r19,r19,-48
 80079c0:	10c03fcc 	andi	r3,r2,255
 80079c4:	003f0e06 	br	8007600 <__alt_data_end+0xf8007600>
 80079c8:	e0800117 	ldw	r2,4(fp)
 80079cc:	d9809d15 	stw	r6,628(sp)
 80079d0:	8c408014 	ori	r17,r17,512
 80079d4:	00bfe316 	blt	zero,r2,8007964 <__alt_data_end+0xf8007964>
 80079d8:	e00b883a 	mov	r5,fp
 80079dc:	b009883a 	mov	r4,r22
 80079e0:	8014edc0 	call	8014edc <__ssrefill_r>
 80079e4:	1000f91e 	bne	r2,zero,8007dcc <__ssvfscanf_r+0x8f0>
 80079e8:	b9c00017 	ldw	r7,0(r23)
 80079ec:	003fdd06 	br	8007964 <__alt_data_end+0xf8007964>
 80079f0:	e0800117 	ldw	r2,4(fp)
 80079f4:	d9809d15 	stw	r6,628(sp)
 80079f8:	8c400054 	ori	r17,r17,1
 80079fc:	0080140e 	bge	zero,r2,8007a50 <__ssvfscanf_r+0x574>
 8007a00:	00820074 	movhi	r2,2049
 8007a04:	108d1004 	addi	r2,r2,13376
 8007a08:	02000204 	movi	r8,8
 8007a0c:	d880a115 	stw	r2,644(sp)
 8007a10:	da009e15 	stw	r8,632(sp)
 8007a14:	050000c4 	movi	r20,3
 8007a18:	003fb406 	br	80078ec <__alt_data_end+0xf80078ec>
 8007a1c:	a0800043 	ldbu	r2,1(r20)
 8007a20:	8c400094 	ori	r17,r17,2
 8007a24:	3029883a 	mov	r20,r6
 8007a28:	10c03fcc 	andi	r3,r2,255
 8007a2c:	003ef406 	br	8007600 <__alt_data_end+0xf8007600>
 8007a30:	e0800117 	ldw	r2,4(fp)
 8007a34:	d9809d15 	stw	r6,628(sp)
 8007a38:	0081420e 	bge	zero,r2,8007f44 <__ssvfscanf_r+0xa68>
 8007a3c:	05000104 	movi	r20,4
 8007a40:	003faa06 	br	80078ec <__alt_data_end+0xf80078ec>
 8007a44:	e0800117 	ldw	r2,4(fp)
 8007a48:	d9809d15 	stw	r6,628(sp)
 8007a4c:	00bfec16 	blt	zero,r2,8007a00 <__alt_data_end+0xf8007a00>
 8007a50:	e00b883a 	mov	r5,fp
 8007a54:	b009883a 	mov	r4,r22
 8007a58:	8014edc0 	call	8014edc <__ssrefill_r>
 8007a5c:	1000db1e 	bne	r2,zero,8007dcc <__ssvfscanf_r+0x8f0>
 8007a60:	b9c00017 	ldw	r7,0(r23)
 8007a64:	003fe606 	br	8007a00 <__alt_data_end+0xf8007a00>
 8007a68:	d9809d15 	stw	r6,628(sp)
 8007a6c:	8880040c 	andi	r2,r17,16
 8007a70:	10009c1e 	bne	r2,zero,8007ce4 <__ssvfscanf_r+0x808>
 8007a74:	8880010c 	andi	r2,r17,4
 8007a78:	10011e26 	beq	r2,zero,8007ef4 <__ssvfscanf_r+0xa18>
 8007a7c:	da009c17 	ldw	r8,624(sp)
 8007a80:	3029883a 	mov	r20,r6
 8007a84:	40800017 	ldw	r2,0(r8)
 8007a88:	42000104 	addi	r8,r8,4
 8007a8c:	da009c15 	stw	r8,624(sp)
 8007a90:	1480000d 	sth	r18,0(r2)
 8007a94:	003ecc06 	br	80075c8 <__alt_data_end+0xf80075c8>
 8007a98:	a0c00043 	ldbu	r3,1(r20)
 8007a9c:	19410c26 	beq	r3,r5,8007ed0 <__ssvfscanf_r+0x9f4>
 8007aa0:	8c400054 	ori	r17,r17,1
 8007aa4:	3029883a 	mov	r20,r6
 8007aa8:	003ed506 	br	8007600 <__alt_data_end+0xf8007600>
 8007aac:	a0800043 	ldbu	r2,1(r20)
 8007ab0:	8c400114 	ori	r17,r17,4
 8007ab4:	3029883a 	mov	r20,r6
 8007ab8:	10c03fcc 	andi	r3,r2,255
 8007abc:	003ed006 	br	8007600 <__alt_data_end+0xf8007600>
 8007ac0:	e0800117 	ldw	r2,4(fp)
 8007ac4:	d9809d15 	stw	r6,628(sp)
 8007ac8:	00bf790e 	bge	zero,r2,80078b0 <__alt_data_end+0xf80078b0>
 8007acc:	00820074 	movhi	r2,2049
 8007ad0:	108bba04 	addi	r2,r2,12008
 8007ad4:	02000284 	movi	r8,10
 8007ad8:	d880a115 	stw	r2,644(sp)
 8007adc:	da009e15 	stw	r8,632(sp)
 8007ae0:	050000c4 	movi	r20,3
 8007ae4:	003f8106 	br	80078ec <__alt_data_end+0xf80078ec>
 8007ae8:	e0800117 	ldw	r2,4(fp)
 8007aec:	d9809d15 	stw	r6,628(sp)
 8007af0:	0080c40e 	bge	zero,r2,8007e04 <__ssvfscanf_r+0x928>
 8007af4:	9800011e 	bne	r19,zero,8007afc <__ssvfscanf_r+0x620>
 8007af8:	04c00044 	movi	r19,1
 8007afc:	8880004c 	andi	r2,r17,1
 8007b00:	1000441e 	bne	r2,zero,8007c14 <__ssvfscanf_r+0x738>
 8007b04:	8c40040c 	andi	r17,r17,16
 8007b08:	8800da26 	beq	r17,zero,8007e74 <__ssvfscanf_r+0x998>
 8007b0c:	0021883a 	mov	r16,zero
 8007b10:	00000806 	br	8007b34 <__ssvfscanf_r+0x658>
 8007b14:	1887883a 	add	r3,r3,r2
 8007b18:	e00b883a 	mov	r5,fp
 8007b1c:	b009883a 	mov	r4,r22
 8007b20:	e0c00015 	stw	r3,0(fp)
 8007b24:	80a1883a 	add	r16,r16,r2
 8007b28:	98a7c83a 	sub	r19,r19,r2
 8007b2c:	8014edc0 	call	8014edc <__ssrefill_r>
 8007b30:	1000ca1e 	bne	r2,zero,8007e5c <__ssvfscanf_r+0x980>
 8007b34:	e0800117 	ldw	r2,4(fp)
 8007b38:	e0c00017 	ldw	r3,0(fp)
 8007b3c:	14fff516 	blt	r2,r19,8007b14 <__alt_data_end+0xf8007b14>
 8007b40:	14c5c83a 	sub	r2,r2,r19
 8007b44:	1cd5883a 	add	r10,r3,r19
 8007b48:	84e1883a 	add	r16,r16,r19
 8007b4c:	e0800115 	stw	r2,4(fp)
 8007b50:	e2800015 	stw	r10,0(fp)
 8007b54:	dd009d17 	ldw	r20,628(sp)
 8007b58:	9425883a 	add	r18,r18,r16
 8007b5c:	a00d883a 	mov	r6,r20
 8007b60:	003e9a06 	br	80075cc <__alt_data_end+0xf80075cc>
 8007b64:	300b883a 	mov	r5,r6
 8007b68:	d9005884 	addi	r4,sp,354
 8007b6c:	d9809d15 	stw	r6,628(sp)
 8007b70:	801169c0 	call	801169c <__sccl>
 8007b74:	1029883a 	mov	r20,r2
 8007b78:	e0800117 	ldw	r2,4(fp)
 8007b7c:	0081050e 	bge	zero,r2,8007f94 <__ssvfscanf_r+0xab8>
 8007b80:	e1000017 	ldw	r4,0(fp)
 8007b84:	20800003 	ldbu	r2,0(r4)
 8007b88:	98005926 	beq	r19,zero,8007cf0 <__ssvfscanf_r+0x814>
 8007b8c:	8c40040c 	andi	r17,r17,16
 8007b90:	88005a26 	beq	r17,zero,8007cfc <__ssvfscanf_r+0x820>
 8007b94:	9823883a 	mov	r17,r19
 8007b98:	0021883a 	mov	r16,zero
 8007b9c:	00000106 	br	8007ba4 <__ssvfscanf_r+0x6c8>
 8007ba0:	20800003 	ldbu	r2,0(r4)
 8007ba4:	10803fcc 	andi	r2,r2,255
 8007ba8:	d8c05884 	addi	r3,sp,354
 8007bac:	1885883a 	add	r2,r3,r2
 8007bb0:	10800007 	ldb	r2,0(r2)
 8007bb4:	1000ad26 	beq	r2,zero,8007e6c <__ssvfscanf_r+0x990>
 8007bb8:	e0800117 	ldw	r2,4(fp)
 8007bbc:	21000044 	addi	r4,r4,1
 8007bc0:	84000044 	addi	r16,r16,1
 8007bc4:	10bfffc4 	addi	r2,r2,-1
 8007bc8:	e0800115 	stw	r2,4(fp)
 8007bcc:	e1000015 	stw	r4,0(fp)
 8007bd0:	84c0a026 	beq	r16,r19,8007e54 <__ssvfscanf_r+0x978>
 8007bd4:	00bff216 	blt	zero,r2,8007ba0 <__alt_data_end+0xf8007ba0>
 8007bd8:	e00b883a 	mov	r5,fp
 8007bdc:	b009883a 	mov	r4,r22
 8007be0:	8014edc0 	call	8014edc <__ssrefill_r>
 8007be4:	10009a1e 	bne	r2,zero,8007e50 <__ssvfscanf_r+0x974>
 8007be8:	e1000017 	ldw	r4,0(fp)
 8007bec:	003fec06 	br	8007ba0 <__alt_data_end+0xf8007ba0>
 8007bf0:	e0800117 	ldw	r2,4(fp)
 8007bf4:	d9809d15 	stw	r6,628(sp)
 8007bf8:	0080eb0e 	bge	zero,r2,8007fa8 <__ssvfscanf_r+0xacc>
 8007bfc:	00820074 	movhi	r2,2049
 8007c00:	108bba04 	addi	r2,r2,12008
 8007c04:	d880a115 	stw	r2,644(sp)
 8007c08:	d8009e15 	stw	zero,632(sp)
 8007c0c:	050000c4 	movi	r20,3
 8007c10:	003f3606 	br	80078ec <__alt_data_end+0xf80078ec>
 8007c14:	dd409904 	addi	r21,sp,612
 8007c18:	8c40040c 	andi	r17,r17,16
 8007c1c:	01800204 	movi	r6,8
 8007c20:	000b883a 	mov	r5,zero
 8007c24:	a809883a 	mov	r4,r21
 8007c28:	dc409f15 	stw	r17,636(sp)
 8007c2c:	80047e00 	call	80047e0 <memset>
 8007c30:	dc409f17 	ldw	r17,636(sp)
 8007c34:	88006e26 	beq	r17,zero,8007df0 <__ssvfscanf_r+0x914>
 8007c38:	0029883a 	mov	r20,zero
 8007c3c:	0023883a 	mov	r17,zero
 8007c40:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 8007c44:	14406126 	beq	r2,r17,8007dcc <__ssvfscanf_r+0x8f0>
 8007c48:	e0800017 	ldw	r2,0(fp)
 8007c4c:	e0c00117 	ldw	r3,4(fp)
 8007c50:	d9000104 	addi	r4,sp,4
 8007c54:	12000003 	ldbu	r8,0(r2)
 8007c58:	18ffffc4 	addi	r3,r3,-1
 8007c5c:	10800044 	addi	r2,r2,1
 8007c60:	e0c00115 	stw	r3,4(fp)
 8007c64:	e0800015 	stw	r2,0(fp)
 8007c68:	8c000044 	addi	r16,r17,1
 8007c6c:	dd400015 	stw	r21,0(sp)
 8007c70:	2463883a 	add	r17,r4,r17
 8007c74:	200d883a 	mov	r6,r4
 8007c78:	a00b883a 	mov	r5,r20
 8007c7c:	800f883a 	mov	r7,r16
 8007c80:	b009883a 	mov	r4,r22
 8007c84:	8a000005 	stb	r8,0(r17)
 8007c88:	800f8cc0 	call	800f8cc <_mbrtowc_r>
 8007c8c:	017fffc4 	movi	r5,-1
 8007c90:	11404e26 	beq	r2,r5,8007dcc <__ssvfscanf_r+0x8f0>
 8007c94:	1000601e 	bne	r2,zero,8007e18 <__ssvfscanf_r+0x93c>
 8007c98:	da009f17 	ldw	r8,636(sp)
 8007c9c:	4000641e 	bne	r8,zero,8007e30 <__ssvfscanf_r+0x954>
 8007ca0:	a0000015 	stw	zero,0(r20)
 8007ca4:	9425883a 	add	r18,r18,r16
 8007ca8:	9967883a 	add	r19,r19,r5
 8007cac:	a5000104 	addi	r20,r20,4
 8007cb0:	e0800117 	ldw	r2,4(fp)
 8007cb4:	0023883a 	mov	r17,zero
 8007cb8:	00804b16 	blt	zero,r2,8007de8 <__ssvfscanf_r+0x90c>
 8007cbc:	e00b883a 	mov	r5,fp
 8007cc0:	b009883a 	mov	r4,r22
 8007cc4:	8014edc0 	call	8014edc <__ssrefill_r>
 8007cc8:	10004726 	beq	r2,zero,8007de8 <__ssvfscanf_r+0x90c>
 8007ccc:	88003f1e 	bne	r17,zero,8007dcc <__ssvfscanf_r+0x8f0>
 8007cd0:	d8c09f17 	ldw	r3,636(sp)
 8007cd4:	1800031e 	bne	r3,zero,8007ce4 <__ssvfscanf_r+0x808>
 8007cd8:	da00a017 	ldw	r8,640(sp)
 8007cdc:	42000044 	addi	r8,r8,1
 8007ce0:	da00a015 	stw	r8,640(sp)
 8007ce4:	dd009d17 	ldw	r20,628(sp)
 8007ce8:	a00d883a 	mov	r6,r20
 8007cec:	003e3706 	br	80075cc <__alt_data_end+0xf80075cc>
 8007cf0:	8c40040c 	andi	r17,r17,16
 8007cf4:	04ffffc4 	movi	r19,-1
 8007cf8:	883fa61e 	bne	r17,zero,8007b94 <__alt_data_end+0xf8007b94>
 8007cfc:	da009c17 	ldw	r8,624(sp)
 8007d00:	9abfffc4 	addi	r10,r19,-1
 8007d04:	44000017 	ldw	r16,0(r8)
 8007d08:	44400104 	addi	r17,r8,4
 8007d0c:	8007883a 	mov	r3,r16
 8007d10:	82ab883a 	add	r21,r16,r10
 8007d14:	00000306 	br	8007d24 <__ssvfscanf_r+0x848>
 8007d18:	e1000017 	ldw	r4,0(fp)
 8007d1c:	9807883a 	mov	r3,r19
 8007d20:	20800003 	ldbu	r2,0(r4)
 8007d24:	10803fcc 	andi	r2,r2,255
 8007d28:	d9405884 	addi	r5,sp,354
 8007d2c:	2885883a 	add	r2,r5,r2
 8007d30:	10800007 	ldb	r2,0(r2)
 8007d34:	10004b26 	beq	r2,zero,8007e64 <__ssvfscanf_r+0x988>
 8007d38:	e0800117 	ldw	r2,4(fp)
 8007d3c:	21400044 	addi	r5,r4,1
 8007d40:	e1400015 	stw	r5,0(fp)
 8007d44:	10bfffc4 	addi	r2,r2,-1
 8007d48:	e0800115 	stw	r2,4(fp)
 8007d4c:	20800003 	ldbu	r2,0(r4)
 8007d50:	1cc00044 	addi	r19,r3,1
 8007d54:	18800005 	stb	r2,0(r3)
 8007d58:	1d400726 	beq	r3,r21,8007d78 <__ssvfscanf_r+0x89c>
 8007d5c:	e0800117 	ldw	r2,4(fp)
 8007d60:	00bfed16 	blt	zero,r2,8007d18 <__alt_data_end+0xf8007d18>
 8007d64:	e00b883a 	mov	r5,fp
 8007d68:	b009883a 	mov	r4,r22
 8007d6c:	8014edc0 	call	8014edc <__ssrefill_r>
 8007d70:	103fe926 	beq	r2,zero,8007d18 <__alt_data_end+0xf8007d18>
 8007d74:	84c01526 	beq	r16,r19,8007dcc <__ssvfscanf_r+0x8f0>
 8007d78:	9c21c83a 	sub	r16,r19,r16
 8007d7c:	803e1726 	beq	r16,zero,80075dc <__alt_data_end+0xf80075dc>
 8007d80:	da00a017 	ldw	r8,640(sp)
 8007d84:	98000005 	stb	zero,0(r19)
 8007d88:	dc409c15 	stw	r17,624(sp)
 8007d8c:	42000044 	addi	r8,r8,1
 8007d90:	da00a015 	stw	r8,640(sp)
 8007d94:	9425883a 	add	r18,r18,r16
 8007d98:	a00d883a 	mov	r6,r20
 8007d9c:	003e0b06 	br	80075cc <__alt_data_end+0xf80075cc>
 8007da0:	017fff84 	movi	r5,-2
 8007da4:	11439b1e 	bne	r2,r5,8008c14 <__ssvfscanf_r+0x1738>
 8007da8:	8821883a 	mov	r16,r17
 8007dac:	e0800117 	ldw	r2,4(fp)
 8007db0:	0082e516 	blt	zero,r2,8008948 <__ssvfscanf_r+0x146c>
 8007db4:	e00b883a 	mov	r5,fp
 8007db8:	b009883a 	mov	r4,r22
 8007dbc:	8014edc0 	call	8014edc <__ssrefill_r>
 8007dc0:	1002e126 	beq	r2,zero,8008948 <__ssvfscanf_r+0x146c>
 8007dc4:	dc409f17 	ldw	r17,636(sp)
 8007dc8:	8002e826 	beq	r16,zero,800896c <__ssvfscanf_r+0x1490>
 8007dcc:	da00a017 	ldw	r8,640(sp)
 8007dd0:	403e9c26 	beq	r8,zero,8007844 <__alt_data_end+0xf8007844>
 8007dd4:	e080030b 	ldhu	r2,12(fp)
 8007dd8:	1080100c 	andi	r2,r2,64
 8007ddc:	103e991e 	bne	r2,zero,8007844 <__alt_data_end+0xf8007844>
 8007de0:	4005883a 	mov	r2,r8
 8007de4:	003e9806 	br	8007848 <__alt_data_end+0xf8007848>
 8007de8:	983f951e 	bne	r19,zero,8007c40 <__alt_data_end+0xf8007c40>
 8007dec:	003fb806 	br	8007cd0 <__alt_data_end+0xf8007cd0>
 8007df0:	da009c17 	ldw	r8,624(sp)
 8007df4:	45000017 	ldw	r20,0(r8)
 8007df8:	42000104 	addi	r8,r8,4
 8007dfc:	da009c15 	stw	r8,624(sp)
 8007e00:	003f8e06 	br	8007c3c <__alt_data_end+0xf8007c3c>
 8007e04:	e00b883a 	mov	r5,fp
 8007e08:	b009883a 	mov	r4,r22
 8007e0c:	8014edc0 	call	8014edc <__ssrefill_r>
 8007e10:	103f3826 	beq	r2,zero,8007af4 <__alt_data_end+0xf8007af4>
 8007e14:	003fed06 	br	8007dcc <__alt_data_end+0xf8007dcc>
 8007e18:	00ffff84 	movi	r3,-2
 8007e1c:	10c0071e 	bne	r2,r3,8007e3c <__ssvfscanf_r+0x960>
 8007e20:	e0800117 	ldw	r2,4(fp)
 8007e24:	8023883a 	mov	r17,r16
 8007e28:	00bf8516 	blt	zero,r2,8007c40 <__alt_data_end+0xf8007c40>
 8007e2c:	003fa306 	br	8007cbc <__alt_data_end+0xf8007cbc>
 8007e30:	9425883a 	add	r18,r18,r16
 8007e34:	9cffffc4 	addi	r19,r19,-1
 8007e38:	003f9d06 	br	8007cb0 <__alt_data_end+0xf8007cb0>
 8007e3c:	da009f17 	ldw	r8,636(sp)
 8007e40:	9425883a 	add	r18,r18,r16
 8007e44:	9cffffc4 	addi	r19,r19,-1
 8007e48:	403f9826 	beq	r8,zero,8007cac <__alt_data_end+0xf8007cac>
 8007e4c:	003f9806 	br	8007cb0 <__alt_data_end+0xf8007cb0>
 8007e50:	8023883a 	mov	r17,r16
 8007e54:	8821883a 	mov	r16,r17
 8007e58:	003fce06 	br	8007d94 <__alt_data_end+0xf8007d94>
 8007e5c:	803f3d1e 	bne	r16,zero,8007b54 <__alt_data_end+0xf8007b54>
 8007e60:	003fda06 	br	8007dcc <__alt_data_end+0xf8007dcc>
 8007e64:	1827883a 	mov	r19,r3
 8007e68:	003fc306 	br	8007d78 <__alt_data_end+0xf8007d78>
 8007e6c:	803fc91e 	bne	r16,zero,8007d94 <__alt_data_end+0xf8007d94>
 8007e70:	003dda06 	br	80075dc <__alt_data_end+0xf80075dc>
 8007e74:	da009c17 	ldw	r8,624(sp)
 8007e78:	df000015 	stw	fp,0(sp)
 8007e7c:	980f883a 	mov	r7,r19
 8007e80:	41400017 	ldw	r5,0(r8)
 8007e84:	01800044 	movi	r6,1
 8007e88:	b009883a 	mov	r4,r22
 8007e8c:	8014f4c0 	call	8014f4c <_sfread_r>
 8007e90:	da009c17 	ldw	r8,624(sp)
 8007e94:	40c00104 	addi	r3,r8,4
 8007e98:	103fcc26 	beq	r2,zero,8007dcc <__alt_data_end+0xf8007dcc>
 8007e9c:	da00a017 	ldw	r8,640(sp)
 8007ea0:	dd009d17 	ldw	r20,628(sp)
 8007ea4:	90a5883a 	add	r18,r18,r2
 8007ea8:	42000044 	addi	r8,r8,1
 8007eac:	da00a015 	stw	r8,640(sp)
 8007eb0:	d8c09c15 	stw	r3,624(sp)
 8007eb4:	a00d883a 	mov	r6,r20
 8007eb8:	003dc406 	br	80075cc <__alt_data_end+0xf80075cc>
 8007ebc:	e00b883a 	mov	r5,fp
 8007ec0:	b009883a 	mov	r4,r22
 8007ec4:	8014edc0 	call	8014edc <__ssrefill_r>
 8007ec8:	103e5226 	beq	r2,zero,8007814 <__alt_data_end+0xf8007814>
 8007ecc:	003fbf06 	br	8007dcc <__alt_data_end+0xf8007dcc>
 8007ed0:	a0800083 	ldbu	r2,2(r20)
 8007ed4:	8c400094 	ori	r17,r17,2
 8007ed8:	a5000084 	addi	r20,r20,2
 8007edc:	10c03fcc 	andi	r3,r2,255
 8007ee0:	003dc706 	br	8007600 <__alt_data_end+0xf8007600>
 8007ee4:	e0800117 	ldw	r2,4(fp)
 8007ee8:	88e2b03a 	or	r17,r17,r3
 8007eec:	00bef716 	blt	zero,r2,8007acc <__alt_data_end+0xf8007acc>
 8007ef0:	003e6f06 	br	80078b0 <__alt_data_end+0xf80078b0>
 8007ef4:	8880004c 	andi	r2,r17,1
 8007ef8:	10000b1e 	bne	r2,zero,8007f28 <__ssvfscanf_r+0xa4c>
 8007efc:	8c40008c 	andi	r17,r17,2
 8007f00:	88000926 	beq	r17,zero,8007f28 <__ssvfscanf_r+0xa4c>
 8007f04:	da009c17 	ldw	r8,624(sp)
 8007f08:	9007d7fa 	srai	r3,r18,31
 8007f0c:	dd009d17 	ldw	r20,628(sp)
 8007f10:	40800017 	ldw	r2,0(r8)
 8007f14:	42000104 	addi	r8,r8,4
 8007f18:	da009c15 	stw	r8,624(sp)
 8007f1c:	14800015 	stw	r18,0(r2)
 8007f20:	10c00115 	stw	r3,4(r2)
 8007f24:	003da806 	br	80075c8 <__alt_data_end+0xf80075c8>
 8007f28:	da009c17 	ldw	r8,624(sp)
 8007f2c:	dd009d17 	ldw	r20,628(sp)
 8007f30:	40800017 	ldw	r2,0(r8)
 8007f34:	42000104 	addi	r8,r8,4
 8007f38:	da009c15 	stw	r8,624(sp)
 8007f3c:	14800015 	stw	r18,0(r2)
 8007f40:	003da106 	br	80075c8 <__alt_data_end+0xf80075c8>
 8007f44:	e00b883a 	mov	r5,fp
 8007f48:	b009883a 	mov	r4,r22
 8007f4c:	8014edc0 	call	8014edc <__ssrefill_r>
 8007f50:	103f9e1e 	bne	r2,zero,8007dcc <__alt_data_end+0xf8007dcc>
 8007f54:	b9c00017 	ldw	r7,0(r23)
 8007f58:	05000104 	movi	r20,4
 8007f5c:	003e6306 	br	80078ec <__alt_data_end+0xf80078ec>
 8007f60:	e00b883a 	mov	r5,fp
 8007f64:	b009883a 	mov	r4,r22
 8007f68:	8014edc0 	call	8014edc <__ssrefill_r>
 8007f6c:	103f971e 	bne	r2,zero,8007dcc <__alt_data_end+0xf8007dcc>
 8007f70:	b9c00017 	ldw	r7,0(r23)
 8007f74:	003e5706 	br	80078d4 <__alt_data_end+0xf80078d4>
 8007f78:	e00b883a 	mov	r5,fp
 8007f7c:	b009883a 	mov	r4,r22
 8007f80:	8014edc0 	call	8014edc <__ssrefill_r>
 8007f84:	103f911e 	bne	r2,zero,8007dcc <__alt_data_end+0xf8007dcc>
 8007f88:	b9c00017 	ldw	r7,0(r23)
 8007f8c:	05000084 	movi	r20,2
 8007f90:	003e5606 	br	80078ec <__alt_data_end+0xf80078ec>
 8007f94:	e00b883a 	mov	r5,fp
 8007f98:	b009883a 	mov	r4,r22
 8007f9c:	8014edc0 	call	8014edc <__ssrefill_r>
 8007fa0:	103ef726 	beq	r2,zero,8007b80 <__alt_data_end+0xf8007b80>
 8007fa4:	003f8906 	br	8007dcc <__alt_data_end+0xf8007dcc>
 8007fa8:	e00b883a 	mov	r5,fp
 8007fac:	b009883a 	mov	r4,r22
 8007fb0:	8014edc0 	call	8014edc <__ssrefill_r>
 8007fb4:	103f851e 	bne	r2,zero,8007dcc <__alt_data_end+0xf8007dcc>
 8007fb8:	b9c00017 	ldw	r7,0(r23)
 8007fbc:	003f0f06 	br	8007bfc <__alt_data_end+0xf8007bfc>
 8007fc0:	014000c4 	movi	r5,3
 8007fc4:	a1414a26 	beq	r20,r5,80084f0 <__ssvfscanf_r+0x1014>
 8007fc8:	01000104 	movi	r4,4
 8007fcc:	a101f11e 	bne	r20,r4,8008794 <__ssvfscanf_r+0x12b8>
 8007fd0:	b009883a 	mov	r4,r22
 8007fd4:	800f6800 	call	800f680 <_localeconv_r>
 8007fd8:	10800017 	ldw	r2,0(r2)
 8007fdc:	98ffffc4 	addi	r3,r19,-1
 8007fe0:	d880a315 	stw	r2,652(sp)
 8007fe4:	00805704 	movi	r2,348
 8007fe8:	10c21e2e 	bgeu	r2,r3,8008864 <__ssvfscanf_r+0x1388>
 8007fec:	9cffa8c4 	addi	r19,r19,-349
 8007ff0:	dcc0a215 	stw	r19,648(sp)
 8007ff4:	04c05744 	movi	r19,349
 8007ff8:	8d01e014 	ori	r20,r17,1920
 8007ffc:	0023883a 	mov	r17,zero
 8008000:	dc000104 	addi	r16,sp,4
 8008004:	8805883a 	mov	r2,r17
 8008008:	0019883a 	mov	r12,zero
 800800c:	8023883a 	mov	r17,r16
 8008010:	b007883a 	mov	r3,r22
 8008014:	9821883a 	mov	r16,r19
 8008018:	002b883a 	mov	r21,zero
 800801c:	d800a515 	stw	zero,660(sp)
 8008020:	d800a415 	stw	zero,656(sp)
 8008024:	d8009f15 	stw	zero,636(sp)
 8008028:	01c01384 	movi	r7,78
 800802c:	602d883a 	mov	r22,r12
 8008030:	1027883a 	mov	r19,r2
 8008034:	e1000017 	ldw	r4,0(fp)
 8008038:	21400003 	ldbu	r5,0(r4)
 800803c:	28bff544 	addi	r2,r5,-43
 8008040:	10803fcc 	andi	r2,r2,255
 8008044:	38810e36 	bltu	r7,r2,8008480 <__ssvfscanf_r+0xfa4>
 8008048:	100490ba 	slli	r2,r2,2
 800804c:	01820074 	movhi	r6,2049
 8008050:	31a01804 	addi	r6,r6,-32672
 8008054:	1185883a 	add	r2,r2,r6
 8008058:	10800017 	ldw	r2,0(r2)
 800805c:	1000683a 	jmp	r2
 8008060:	08008358 	cmpnei	zero,at,525
 8008064:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008068:	08008358 	cmpnei	zero,at,525
 800806c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008070:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008074:	0800832c 	andhi	zero,at,524
 8008078:	0800819c 	xori	zero,at,518
 800807c:	0800819c 	xori	zero,at,518
 8008080:	0800819c 	xori	zero,at,518
 8008084:	0800819c 	xori	zero,at,518
 8008088:	0800819c 	xori	zero,at,518
 800808c:	0800819c 	xori	zero,at,518
 8008090:	0800819c 	xori	zero,at,518
 8008094:	0800819c 	xori	zero,at,518
 8008098:	0800819c 	xori	zero,at,518
 800809c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080a0:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080a4:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080a8:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080ac:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080b0:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080b4:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080b8:	08008470 	cmpltui	zero,at,529
 80080bc:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080c0:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080c4:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080c8:	0800842c 	andhi	zero,at,528
 80080cc:	08008410 	cmplti	zero,at,528
 80080d0:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080d4:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080d8:	080083dc 	xori	zero,at,527
 80080dc:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080e0:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080e4:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080e8:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080ec:	080083a4 	muli	zero,at,526
 80080f0:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080f4:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080f8:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 80080fc:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008100:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008104:	08008388 	cmpgei	zero,at,526
 8008108:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 800810c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008110:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008114:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008118:	0800836c 	andhi	zero,at,525
 800811c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008120:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008124:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008128:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 800812c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008130:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008134:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008138:	08008470 	cmpltui	zero,at,529
 800813c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008140:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008144:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008148:	0800842c 	andhi	zero,at,528
 800814c:	08008410 	cmplti	zero,at,528
 8008150:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008154:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008158:	080083dc 	xori	zero,at,527
 800815c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008160:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008164:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008168:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 800816c:	080083a4 	muli	zero,at,526
 8008170:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008174:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008178:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 800817c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008180:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008184:	08008388 	cmpgei	zero,at,526
 8008188:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 800818c:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008190:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008194:	08008480 	call	800848 <__alt_mem_sdram-0x77ff7b8>
 8008198:	0800836c 	andhi	zero,at,525
 800819c:	a8803fcc 	andi	r2,r21,255
 80081a0:	1080201c 	xori	r2,r2,128
 80081a4:	10bfe004 	addi	r2,r2,-128
 80081a8:	b085883a 	add	r2,r22,r2
 80081ac:	10000d1e 	bne	r2,zero,80081e4 <__ssvfscanf_r+0xd08>
 80081b0:	00bf9fc4 	movi	r2,-385
 80081b4:	a0a8703a 	and	r20,r20,r2
 80081b8:	89400005 	stb	r5,0(r17)
 80081bc:	8c400044 	addi	r17,r17,1
 80081c0:	e0800117 	ldw	r2,4(fp)
 80081c4:	843fffc4 	addi	r16,r16,-1
 80081c8:	94800044 	addi	r18,r18,1
 80081cc:	10bfffc4 	addi	r2,r2,-1
 80081d0:	e0800115 	stw	r2,4(fp)
 80081d4:	0080b40e 	bge	zero,r2,80084a8 <__ssvfscanf_r+0xfcc>
 80081d8:	21000044 	addi	r4,r4,1
 80081dc:	e1000015 	stw	r4,0(fp)
 80081e0:	803f941e 	bne	r16,zero,8008034 <__alt_data_end+0xf8008034>
 80081e4:	8821883a 	mov	r16,r17
 80081e8:	b019883a 	mov	r12,r22
 80081ec:	9823883a 	mov	r17,r19
 80081f0:	182d883a 	mov	r22,r3
 80081f4:	9801961e 	bne	r19,zero,8008850 <__ssvfscanf_r+0x1374>
 80081f8:	633fffc4 	addi	r12,r12,-1
 80081fc:	00800044 	movi	r2,1
 8008200:	1302882e 	bgeu	r2,r12,8008c24 <__ssvfscanf_r+0x1748>
 8008204:	a8803fcc 	andi	r2,r21,255
 8008208:	1080201c 	xori	r2,r2,128
 800820c:	10bfe004 	addi	r2,r2,-128
 8008210:	113fffc4 	addi	r4,r2,-1
 8008214:	01400184 	movi	r5,6
 8008218:	29001136 	bltu	r5,r4,8008260 <__ssvfscanf_r+0xd84>
 800821c:	01000084 	movi	r4,2
 8008220:	2082900e 	bge	r4,r2,8008c64 <__ssvfscanf_r+0x1788>
 8008224:	00c000c4 	movi	r3,3
 8008228:	10c00d26 	beq	r2,r3,8008260 <__ssvfscanf_r+0xd84>
 800822c:	9425c83a 	sub	r18,r18,r16
 8008230:	1827883a 	mov	r19,r3
 8008234:	843fffc4 	addi	r16,r16,-1
 8008238:	81400007 	ldb	r5,0(r16)
 800823c:	e00d883a 	mov	r6,fp
 8008240:	b009883a 	mov	r4,r22
 8008244:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008248:	a8bfffc4 	addi	r2,r21,-1
 800824c:	10c03fcc 	andi	r3,r2,255
 8008250:	8493883a 	add	r9,r16,r18
 8008254:	102b883a 	mov	r21,r2
 8008258:	98fff636 	bltu	r19,r3,8008234 <__alt_data_end+0xf8008234>
 800825c:	4825883a 	mov	r18,r9
 8008260:	a080400c 	andi	r2,r20,256
 8008264:	10001426 	beq	r2,zero,80082b8 <__ssvfscanf_r+0xddc>
 8008268:	a081000c 	andi	r2,r20,1024
 800826c:	1002571e 	bne	r2,zero,8008bcc <__ssvfscanf_r+0x16f0>
 8008270:	817fffc7 	ldb	r5,-1(r16)
 8008274:	00801944 	movi	r2,101
 8008278:	84ffffc4 	addi	r19,r16,-1
 800827c:	957fffc4 	addi	r21,r18,-1
 8008280:	28800826 	beq	r5,r2,80082a4 <__ssvfscanf_r+0xdc8>
 8008284:	00801144 	movi	r2,69
 8008288:	28800626 	beq	r5,r2,80082a4 <__ssvfscanf_r+0xdc8>
 800828c:	e00d883a 	mov	r6,fp
 8008290:	b009883a 	mov	r4,r22
 8008294:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008298:	817fff87 	ldb	r5,-2(r16)
 800829c:	84ffff84 	addi	r19,r16,-2
 80082a0:	957fff84 	addi	r21,r18,-2
 80082a4:	e00d883a 	mov	r6,fp
 80082a8:	b009883a 	mov	r4,r22
 80082ac:	8014dd40 	call	8014dd4 <_sungetc_r>
 80082b0:	a825883a 	mov	r18,r21
 80082b4:	9821883a 	mov	r16,r19
 80082b8:	a080040c 	andi	r2,r20,16
 80082bc:	103e891e 	bne	r2,zero,8007ce4 <__alt_data_end+0xf8007ce4>
 80082c0:	80000005 	stb	zero,0(r16)
 80082c4:	a081800c 	andi	r2,r20,1536
 80082c8:	01010004 	movi	r4,1024
 80082cc:	1101dd26 	beq	r2,r4,8008a44 <__ssvfscanf_r+0x1568>
 80082d0:	da00a417 	ldw	r8,656(sp)
 80082d4:	4001e71e 	bne	r8,zero,8008a74 <__ssvfscanf_r+0x1598>
 80082d8:	000d883a 	mov	r6,zero
 80082dc:	d9400104 	addi	r5,sp,4
 80082e0:	b009883a 	mov	r4,r22
 80082e4:	80117d80 	call	80117d8 <_strtod_r>
 80082e8:	1021883a 	mov	r16,r2
 80082ec:	a080004c 	andi	r2,r20,1
 80082f0:	1000021e 	bne	r2,zero,80082fc <__ssvfscanf_r+0xe20>
 80082f4:	a2c0008c 	andi	r11,r20,2
 80082f8:	5801e826 	beq	r11,zero,8008a9c <__ssvfscanf_r+0x15c0>
 80082fc:	da009c17 	ldw	r8,624(sp)
 8008300:	40800017 	ldw	r2,0(r8)
 8008304:	42000104 	addi	r8,r8,4
 8008308:	da009c15 	stw	r8,624(sp)
 800830c:	14000015 	stw	r16,0(r2)
 8008310:	10c00115 	stw	r3,4(r2)
 8008314:	da00a017 	ldw	r8,640(sp)
 8008318:	dd009d17 	ldw	r20,628(sp)
 800831c:	42000044 	addi	r8,r8,1
 8008320:	da00a015 	stw	r8,640(sp)
 8008324:	a00d883a 	mov	r6,r20
 8008328:	003ca806 	br	80075cc <__alt_data_end+0xf80075cc>
 800832c:	a080400c 	andi	r2,r20,256
 8008330:	103f9a26 	beq	r2,zero,800819c <__alt_data_end+0xf800819c>
 8008334:	da00a217 	ldw	r8,648(sp)
 8008338:	00bfdfc4 	movi	r2,-129
 800833c:	a0a8703a 	and	r20,r20,r2
 8008340:	9cc00044 	addi	r19,r19,1
 8008344:	403f9e26 	beq	r8,zero,80081c0 <__alt_data_end+0xf80081c0>
 8008348:	423fffc4 	addi	r8,r8,-1
 800834c:	da00a215 	stw	r8,648(sp)
 8008350:	84000044 	addi	r16,r16,1
 8008354:	003f9a06 	br	80081c0 <__alt_data_end+0xf80081c0>
 8008358:	a080200c 	andi	r2,r20,128
 800835c:	103fa126 	beq	r2,zero,80081e4 <__alt_data_end+0xf80081e4>
 8008360:	00bfdfc4 	movi	r2,-129
 8008364:	a0a8703a 	and	r20,r20,r2
 8008368:	003f9306 	br	80081b8 <__alt_data_end+0xf80081b8>
 800836c:	a8803fcc 	andi	r2,r21,255
 8008370:	1080201c 	xori	r2,r2,128
 8008374:	10bfe004 	addi	r2,r2,-128
 8008378:	020001c4 	movi	r8,7
 800837c:	123f991e 	bne	r2,r8,80081e4 <__alt_data_end+0xf80081e4>
 8008380:	05400204 	movi	r21,8
 8008384:	003f8c06 	br	80081b8 <__alt_data_end+0xf80081b8>
 8008388:	a8803fcc 	andi	r2,r21,255
 800838c:	1080201c 	xori	r2,r2,128
 8008390:	10bfe004 	addi	r2,r2,-128
 8008394:	01800184 	movi	r6,6
 8008398:	11bf921e 	bne	r2,r6,80081e4 <__alt_data_end+0xf80081e4>
 800839c:	054001c4 	movi	r21,7
 80083a0:	003f8506 	br	80081b8 <__alt_data_end+0xf80081b8>
 80083a4:	b000491e 	bne	r22,zero,80084cc <__ssvfscanf_r+0xff0>
 80083a8:	9800031e 	bne	r19,zero,80083b8 <__ssvfscanf_r+0xedc>
 80083ac:	a081c00c 	andi	r2,r20,1792
 80083b0:	0181c004 	movi	r6,1792
 80083b4:	11819f26 	beq	r2,r6,8008a34 <__ssvfscanf_r+0x1558>
 80083b8:	a8803fcc 	andi	r2,r21,255
 80083bc:	1080201c 	xori	r2,r2,128
 80083c0:	10bfe004 	addi	r2,r2,-128
 80083c4:	01800044 	movi	r6,1
 80083c8:	11800226 	beq	r2,r6,80083d4 <__ssvfscanf_r+0xef8>
 80083cc:	01800104 	movi	r6,4
 80083d0:	11bf841e 	bne	r2,r6,80081e4 <__alt_data_end+0xf80081e4>
 80083d4:	ad400044 	addi	r21,r21,1
 80083d8:	003f7706 	br	80081b8 <__alt_data_end+0xf80081b8>
 80083dc:	a8803fcc 	andi	r2,r21,255
 80083e0:	1080201c 	xori	r2,r2,128
 80083e4:	10bfe004 	addi	r2,r2,-128
 80083e8:	10003c1e 	bne	r2,zero,80084dc <__ssvfscanf_r+0x1000>
 80083ec:	9801141e 	bne	r19,zero,8008840 <__ssvfscanf_r+0x1364>
 80083f0:	a081c00c 	andi	r2,r20,1792
 80083f4:	0181c004 	movi	r6,1792
 80083f8:	11818226 	beq	r2,r6,8008a04 <__ssvfscanf_r+0x1528>
 80083fc:	8821883a 	mov	r16,r17
 8008400:	b019883a 	mov	r12,r22
 8008404:	9823883a 	mov	r17,r19
 8008408:	182d883a 	mov	r22,r3
 800840c:	003f7a06 	br	80081f8 <__alt_data_end+0xf80081f8>
 8008410:	a8803fcc 	andi	r2,r21,255
 8008414:	1080201c 	xori	r2,r2,128
 8008418:	10bfe004 	addi	r2,r2,-128
 800841c:	01800084 	movi	r6,2
 8008420:	11bf701e 	bne	r2,r6,80081e4 <__alt_data_end+0xf80081e4>
 8008424:	054000c4 	movi	r21,3
 8008428:	003f6306 	br	80081b8 <__alt_data_end+0xf80081b8>
 800842c:	a081400c 	andi	r2,r20,1280
 8008430:	01810004 	movi	r6,1024
 8008434:	11800326 	beq	r2,r6,8008444 <__ssvfscanf_r+0xf68>
 8008438:	a184703a 	and	r2,r20,r6
 800843c:	103f6926 	beq	r2,zero,80081e4 <__alt_data_end+0xf80081e4>
 8008440:	983fee26 	beq	r19,zero,80083fc <__alt_data_end+0xf80083fc>
 8008444:	a080800c 	andi	r2,r20,512
 8008448:	1000041e 	bne	r2,zero,800845c <__ssvfscanf_r+0xf80>
 800844c:	da009f17 	ldw	r8,636(sp)
 8008450:	dc40a515 	stw	r17,660(sp)
 8008454:	9a27c83a 	sub	r19,r19,r8
 8008458:	dcc0a415 	stw	r19,656(sp)
 800845c:	00be1fc4 	movi	r2,-1921
 8008460:	a0a8703a 	and	r20,r20,r2
 8008464:	a5006014 	ori	r20,r20,384
 8008468:	0027883a 	mov	r19,zero
 800846c:	003f5206 	br	80081b8 <__alt_data_end+0xf80081b8>
 8008470:	00800044 	movi	r2,1
 8008474:	b0bf5b1e 	bne	r22,r2,80081e4 <__alt_data_end+0xf80081e4>
 8008478:	05800084 	movi	r22,2
 800847c:	003f4e06 	br	80081b8 <__alt_data_end+0xf80081b8>
 8008480:	d980a317 	ldw	r6,652(sp)
 8008484:	30800003 	ldbu	r2,0(r6)
 8008488:	29803fcc 	andi	r6,r5,255
 800848c:	30bf551e 	bne	r6,r2,80081e4 <__alt_data_end+0xf80081e4>
 8008490:	a080800c 	andi	r2,r20,512
 8008494:	103f5326 	beq	r2,zero,80081e4 <__alt_data_end+0xf80081e4>
 8008498:	023f5fc4 	movi	r8,-641
 800849c:	a228703a 	and	r20,r20,r8
 80084a0:	dcc09f15 	stw	r19,636(sp)
 80084a4:	003f4406 	br	80081b8 <__alt_data_end+0xf80081b8>
 80084a8:	1809883a 	mov	r4,r3
 80084ac:	e00b883a 	mov	r5,fp
 80084b0:	d8c0a615 	stw	r3,664(sp)
 80084b4:	d9c0aa15 	stw	r7,680(sp)
 80084b8:	8014edc0 	call	8014edc <__ssrefill_r>
 80084bc:	d8c0a617 	ldw	r3,664(sp)
 80084c0:	d9c0aa17 	ldw	r7,680(sp)
 80084c4:	103f4626 	beq	r2,zero,80081e0 <__alt_data_end+0xf80081e0>
 80084c8:	003f4606 	br	80081e4 <__alt_data_end+0xf80081e4>
 80084cc:	00800084 	movi	r2,2
 80084d0:	b0bfb91e 	bne	r22,r2,80083b8 <__alt_data_end+0xf80083b8>
 80084d4:	058000c4 	movi	r22,3
 80084d8:	003f3706 	br	80081b8 <__alt_data_end+0xf80081b8>
 80084dc:	018000c4 	movi	r6,3
 80084e0:	11bfbc26 	beq	r2,r6,80083d4 <__alt_data_end+0xf80083d4>
 80084e4:	01800144 	movi	r6,5
 80084e8:	11bfba26 	beq	r2,r6,80083d4 <__alt_data_end+0xf80083d4>
 80084ec:	003f3d06 	br	80081e4 <__alt_data_end+0xf80081e4>
 80084f0:	98bfffc4 	addi	r2,r19,-1
 80084f4:	01405704 	movi	r5,348
 80084f8:	2880d82e 	bgeu	r5,r2,800885c <__ssvfscanf_r+0x1380>
 80084fc:	99ffa8c4 	addi	r7,r19,-349
 8008500:	04c05744 	movi	r19,349
 8008504:	8c436014 	ori	r17,r17,3456
 8008508:	9013883a 	mov	r9,r18
 800850c:	8825883a 	mov	r18,r17
 8008510:	dc409e17 	ldw	r17,632(sp)
 8008514:	0029883a 	mov	r20,zero
 8008518:	dc000104 	addi	r16,sp,4
 800851c:	05401344 	movi	r21,77
 8008520:	02c08004 	movi	r11,512
 8008524:	01bf7fc4 	movi	r6,-513
 8008528:	023fdfc4 	movi	r8,-129
 800852c:	20bff544 	addi	r2,r4,-43
 8008530:	10803fcc 	andi	r2,r2,255
 8008534:	a8807236 	bltu	r21,r2,8008700 <__ssvfscanf_r+0x1224>
 8008538:	100490ba 	slli	r2,r2,2
 800853c:	01420074 	movhi	r5,2049
 8008540:	29615404 	addi	r5,r5,-31408
 8008544:	1145883a 	add	r2,r2,r5
 8008548:	10800017 	ldw	r2,0(r2)
 800854c:	1000683a 	jmp	r2
 8008550:	08008784 	addi	zero,at,542
 8008554:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008558:	08008784 	addi	zero,at,542
 800855c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008560:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008564:	0800875c 	xori	zero,at,541
 8008568:	0800873c 	xorhi	zero,at,540
 800856c:	0800873c 	xorhi	zero,at,540
 8008570:	0800873c 	xorhi	zero,at,540
 8008574:	0800873c 	xorhi	zero,at,540
 8008578:	0800873c 	xorhi	zero,at,540
 800857c:	0800873c 	xorhi	zero,at,540
 8008580:	0800873c 	xorhi	zero,at,540
 8008584:	080086e4 	muli	zero,at,539
 8008588:	080086e4 	muli	zero,at,539
 800858c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008590:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008594:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008598:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800859c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085a0:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085a4:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085a8:	080086d0 	cmplti	zero,at,539
 80085ac:	080086d0 	cmplti	zero,at,539
 80085b0:	080086d0 	cmplti	zero,at,539
 80085b4:	080086d0 	cmplti	zero,at,539
 80085b8:	080086d0 	cmplti	zero,at,539
 80085bc:	080086d0 	cmplti	zero,at,539
 80085c0:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085c4:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085c8:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085cc:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085d0:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085d4:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085d8:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085dc:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085e0:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085e4:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085e8:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085ec:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085f0:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085f4:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085f8:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 80085fc:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008600:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008604:	08008688 	cmpgei	zero,at,538
 8008608:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800860c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008610:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008614:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008618:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800861c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008620:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008624:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008628:	080086d0 	cmplti	zero,at,539
 800862c:	080086d0 	cmplti	zero,at,539
 8008630:	080086d0 	cmplti	zero,at,539
 8008634:	080086d0 	cmplti	zero,at,539
 8008638:	080086d0 	cmplti	zero,at,539
 800863c:	080086d0 	cmplti	zero,at,539
 8008640:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008644:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008648:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800864c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008650:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008654:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008658:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800865c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008660:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008664:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008668:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800866c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008670:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008674:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008678:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 800867c:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008680:	08008700 	call	800870 <__alt_mem_sdram-0x77ff790>
 8008684:	08008688 	cmpgei	zero,at,538
 8008688:	9081800c 	andi	r2,r18,1536
 800868c:	12c01c1e 	bne	r2,r11,8008700 <__ssvfscanf_r+0x1224>
 8008690:	91a4703a 	and	r18,r18,r6
 8008694:	94814014 	ori	r18,r18,1280
 8008698:	04400404 	movi	r17,16
 800869c:	81000005 	stb	r4,0(r16)
 80086a0:	84000044 	addi	r16,r16,1
 80086a4:	e0800117 	ldw	r2,4(fp)
 80086a8:	10bfffc4 	addi	r2,r2,-1
 80086ac:	e0800115 	stw	r2,4(fp)
 80086b0:	0080540e 	bge	zero,r2,8008804 <__ssvfscanf_r+0x1328>
 80086b4:	18c00044 	addi	r3,r3,1
 80086b8:	e0c00015 	stw	r3,0(fp)
 80086bc:	9cffffc4 	addi	r19,r19,-1
 80086c0:	98000f26 	beq	r19,zero,8008700 <__ssvfscanf_r+0x1224>
 80086c4:	e0c00017 	ldw	r3,0(fp)
 80086c8:	19000003 	ldbu	r4,0(r3)
 80086cc:	003f9706 	br	800852c <__alt_data_end+0xf800852c>
 80086d0:	00800284 	movi	r2,10
 80086d4:	14400a0e 	bge	r2,r17,8008700 <__ssvfscanf_r+0x1224>
 80086d8:	00bd1fc4 	movi	r2,-2945
 80086dc:	90a4703a 	and	r18,r18,r2
 80086e0:	003fee06 	br	800869c <__alt_data_end+0xf800869c>
 80086e4:	014200b4 	movhi	r5,2050
 80086e8:	8c63883a 	add	r17,r17,r17
 80086ec:	297f5484 	addi	r5,r5,-686
 80086f0:	2c45883a 	add	r2,r5,r17
 80086f4:	1440000f 	ldh	r17,0(r2)
 80086f8:	00800204 	movi	r2,8
 80086fc:	147ff616 	blt	r2,r17,80086d8 <__alt_data_end+0xf80086d8>
 8008700:	dc409e15 	stw	r17,632(sp)
 8008704:	9023883a 	mov	r17,r18
 8008708:	8880400c 	andi	r2,r17,256
 800870c:	4825883a 	mov	r18,r9
 8008710:	10000426 	beq	r2,zero,8008724 <__ssvfscanf_r+0x1248>
 8008714:	d9800104 	addi	r6,sp,4
 8008718:	3400be36 	bltu	r6,r16,8008a14 <__ssvfscanf_r+0x1538>
 800871c:	da000104 	addi	r8,sp,4
 8008720:	443bae26 	beq	r8,r16,80075dc <__alt_data_end+0xf80075dc>
 8008724:	8880040c 	andi	r2,r17,16
 8008728:	10009326 	beq	r2,zero,8008978 <__ssvfscanf_r+0x149c>
 800872c:	d8800104 	addi	r2,sp,4
 8008730:	80a1c83a 	sub	r16,r16,r2
 8008734:	8521883a 	add	r16,r16,r20
 8008738:	003d0606 	br	8007b54 <__alt_data_end+0xf8007b54>
 800873c:	014200b4 	movhi	r5,2050
 8008740:	8c63883a 	add	r17,r17,r17
 8008744:	297f5484 	addi	r5,r5,-686
 8008748:	2c45883a 	add	r2,r5,r17
 800874c:	1440000f 	ldh	r17,0(r2)
 8008750:	00bd1fc4 	movi	r2,-2945
 8008754:	90a4703a 	and	r18,r18,r2
 8008758:	003fd006 	br	800869c <__alt_data_end+0xf800869c>
 800875c:	9082000c 	andi	r2,r18,2048
 8008760:	103fce26 	beq	r2,zero,800869c <__alt_data_end+0xf800869c>
 8008764:	8800021e 	bne	r17,zero,8008770 <__ssvfscanf_r+0x1294>
 8008768:	94808014 	ori	r18,r18,512
 800876c:	04400204 	movi	r17,8
 8008770:	9081000c 	andi	r2,r18,1024
 8008774:	10009426 	beq	r2,zero,80089c8 <__ssvfscanf_r+0x14ec>
 8008778:	00be9fc4 	movi	r2,-1409
 800877c:	90a4703a 	and	r18,r18,r2
 8008780:	003fc606 	br	800869c <__alt_data_end+0xf800869c>
 8008784:	9080200c 	andi	r2,r18,128
 8008788:	103fdd26 	beq	r2,zero,8008700 <__alt_data_end+0xf8008700>
 800878c:	9224703a 	and	r18,r18,r8
 8008790:	003fc206 	br	800869c <__alt_data_end+0xf800869c>
 8008794:	9800011e 	bne	r19,zero,800879c <__ssvfscanf_r+0x12c0>
 8008798:	04ffffc4 	movi	r19,-1
 800879c:	8900004c 	andi	r4,r17,1
 80087a0:	20005b1e 	bne	r4,zero,8008910 <__ssvfscanf_r+0x1434>
 80087a4:	8c40040c 	andi	r17,r17,16
 80087a8:	88003026 	beq	r17,zero,800886c <__ssvfscanf_r+0x1390>
 80087ac:	0021883a 	mov	r16,zero
 80087b0:	00000306 	br	80087c0 <__ssvfscanf_r+0x12e4>
 80087b4:	18800003 	ldbu	r2,0(r3)
 80087b8:	3885883a 	add	r2,r7,r2
 80087bc:	10800043 	ldbu	r2,1(r2)
 80087c0:	1080020c 	andi	r2,r2,8
 80087c4:	103ce31e 	bne	r2,zero,8007b54 <__alt_data_end+0xf8007b54>
 80087c8:	e0800117 	ldw	r2,4(fp)
 80087cc:	18c00044 	addi	r3,r3,1
 80087d0:	84000044 	addi	r16,r16,1
 80087d4:	10bfffc4 	addi	r2,r2,-1
 80087d8:	e0800115 	stw	r2,4(fp)
 80087dc:	e0c00015 	stw	r3,0(fp)
 80087e0:	84fcdc26 	beq	r16,r19,8007b54 <__alt_data_end+0xf8007b54>
 80087e4:	00bff316 	blt	zero,r2,80087b4 <__alt_data_end+0xf80087b4>
 80087e8:	e00b883a 	mov	r5,fp
 80087ec:	b009883a 	mov	r4,r22
 80087f0:	8014edc0 	call	8014edc <__ssrefill_r>
 80087f4:	103cd71e 	bne	r2,zero,8007b54 <__alt_data_end+0xf8007b54>
 80087f8:	b9c00017 	ldw	r7,0(r23)
 80087fc:	e0c00017 	ldw	r3,0(fp)
 8008800:	003fec06 	br	80087b4 <__alt_data_end+0xf80087b4>
 8008804:	e00b883a 	mov	r5,fp
 8008808:	b009883a 	mov	r4,r22
 800880c:	d980a715 	stw	r6,668(sp)
 8008810:	d9c0aa15 	stw	r7,680(sp)
 8008814:	da00a815 	stw	r8,672(sp)
 8008818:	da40a915 	stw	r9,676(sp)
 800881c:	dac0a615 	stw	r11,664(sp)
 8008820:	8014edc0 	call	8014edc <__ssrefill_r>
 8008824:	d980a717 	ldw	r6,668(sp)
 8008828:	d9c0aa17 	ldw	r7,680(sp)
 800882c:	da00a817 	ldw	r8,672(sp)
 8008830:	da40a917 	ldw	r9,676(sp)
 8008834:	dac0a617 	ldw	r11,664(sp)
 8008838:	103fa026 	beq	r2,zero,80086bc <__alt_data_end+0xf80086bc>
 800883c:	003fb006 	br	8008700 <__alt_data_end+0xf8008700>
 8008840:	8821883a 	mov	r16,r17
 8008844:	b019883a 	mov	r12,r22
 8008848:	9823883a 	mov	r17,r19
 800884c:	182d883a 	mov	r22,r3
 8008850:	00bfbfc4 	movi	r2,-257
 8008854:	a0a8703a 	and	r20,r20,r2
 8008858:	003e6706 	br	80081f8 <__alt_data_end+0xf80081f8>
 800885c:	000f883a 	mov	r7,zero
 8008860:	003f2806 	br	8008504 <__alt_data_end+0xf8008504>
 8008864:	d800a215 	stw	zero,648(sp)
 8008868:	003de306 	br	8007ff8 <__alt_data_end+0xf8007ff8>
 800886c:	da009c17 	ldw	r8,624(sp)
 8008870:	9abfffc4 	addi	r10,r19,-1
 8008874:	44400017 	ldw	r17,0(r8)
 8008878:	44000104 	addi	r16,r8,4
 800887c:	880b883a 	mov	r5,r17
 8008880:	8aa9883a 	add	r20,r17,r10
 8008884:	00000606 	br	80088a0 <__ssvfscanf_r+0x13c4>
 8008888:	e0c00017 	ldw	r3,0(fp)
 800888c:	b9000017 	ldw	r4,0(r23)
 8008890:	a80b883a 	mov	r5,r21
 8008894:	18800003 	ldbu	r2,0(r3)
 8008898:	2085883a 	add	r2,r4,r2
 800889c:	10800043 	ldbu	r2,1(r2)
 80088a0:	1080020c 	andi	r2,r2,8
 80088a4:	1000551e 	bne	r2,zero,80089fc <__ssvfscanf_r+0x1520>
 80088a8:	e0800117 	ldw	r2,4(fp)
 80088ac:	19000044 	addi	r4,r3,1
 80088b0:	e1000015 	stw	r4,0(fp)
 80088b4:	10bfffc4 	addi	r2,r2,-1
 80088b8:	e0800115 	stw	r2,4(fp)
 80088bc:	18800003 	ldbu	r2,0(r3)
 80088c0:	2d400044 	addi	r21,r5,1
 80088c4:	a827883a 	mov	r19,r21
 80088c8:	28800005 	stb	r2,0(r5)
 80088cc:	2d000626 	beq	r5,r20,80088e8 <__ssvfscanf_r+0x140c>
 80088d0:	e0800117 	ldw	r2,4(fp)
 80088d4:	00bfec16 	blt	zero,r2,8008888 <__alt_data_end+0xf8008888>
 80088d8:	e00b883a 	mov	r5,fp
 80088dc:	b009883a 	mov	r4,r22
 80088e0:	8014edc0 	call	8014edc <__ssrefill_r>
 80088e4:	103fe826 	beq	r2,zero,8008888 <__alt_data_end+0xf8008888>
 80088e8:	da00a017 	ldw	r8,640(sp)
 80088ec:	dd009d17 	ldw	r20,628(sp)
 80088f0:	9c63c83a 	sub	r17,r19,r17
 80088f4:	42000044 	addi	r8,r8,1
 80088f8:	98000005 	stb	zero,0(r19)
 80088fc:	9465883a 	add	r18,r18,r17
 8008900:	da00a015 	stw	r8,640(sp)
 8008904:	dc009c15 	stw	r16,624(sp)
 8008908:	a00d883a 	mov	r6,r20
 800890c:	003b2f06 	br	80075cc <__alt_data_end+0xf80075cc>
 8008910:	dd409904 	addi	r21,sp,612
 8008914:	8c40040c 	andi	r17,r17,16
 8008918:	01800204 	movi	r6,8
 800891c:	000b883a 	mov	r5,zero
 8008920:	a809883a 	mov	r4,r21
 8008924:	80047e00 	call	80047e0 <memset>
 8008928:	8800401e 	bne	r17,zero,8008a2c <__ssvfscanf_r+0x1550>
 800892c:	da009c17 	ldw	r8,624(sp)
 8008930:	45000017 	ldw	r20,0(r8)
 8008934:	42000104 	addi	r8,r8,4
 8008938:	da009c15 	stw	r8,624(sp)
 800893c:	000d883a 	mov	r6,zero
 8008940:	3021883a 	mov	r16,r6
 8008944:	dc409f15 	stw	r17,636(sp)
 8008948:	e0800017 	ldw	r2,0(fp)
 800894c:	b8c00017 	ldw	r3,0(r23)
 8008950:	10800003 	ldbu	r2,0(r2)
 8008954:	1885883a 	add	r2,r3,r2
 8008958:	10800043 	ldbu	r2,1(r2)
 800895c:	1080020c 	andi	r2,r2,8
 8008960:	1000011e 	bne	r2,zero,8008968 <__ssvfscanf_r+0x148c>
 8008964:	9800701e 	bne	r19,zero,8008b28 <__ssvfscanf_r+0x164c>
 8008968:	dc409f17 	ldw	r17,636(sp)
 800896c:	883cdd1e 	bne	r17,zero,8007ce4 <__alt_data_end+0xf8007ce4>
 8008970:	a0000015 	stw	zero,0(r20)
 8008974:	003cd806 	br	8007cd8 <__alt_data_end+0xf8007cd8>
 8008978:	d9c09e17 	ldw	r7,632(sp)
 800897c:	da00a117 	ldw	r8,644(sp)
 8008980:	000d883a 	mov	r6,zero
 8008984:	d9400104 	addi	r5,sp,4
 8008988:	b009883a 	mov	r4,r22
 800898c:	80000005 	stb	zero,0(r16)
 8008990:	403ee83a 	callr	r8
 8008994:	88c0080c 	andi	r3,r17,32
 8008998:	1800121e 	bne	r3,zero,80089e4 <__ssvfscanf_r+0x1508>
 800899c:	88c0010c 	andi	r3,r17,4
 80089a0:	18004d26 	beq	r3,zero,8008ad8 <__ssvfscanf_r+0x15fc>
 80089a4:	da009c17 	ldw	r8,624(sp)
 80089a8:	40c00017 	ldw	r3,0(r8)
 80089ac:	42000104 	addi	r8,r8,4
 80089b0:	da009c15 	stw	r8,624(sp)
 80089b4:	1880000d 	sth	r2,0(r3)
 80089b8:	da00a017 	ldw	r8,640(sp)
 80089bc:	42000044 	addi	r8,r8,1
 80089c0:	da00a015 	stw	r8,640(sp)
 80089c4:	003f5906 	br	800872c <__alt_data_end+0xf800872c>
 80089c8:	00bf1fc4 	movi	r2,-897
 80089cc:	90a4703a 	and	r18,r18,r2
 80089d0:	38000226 	beq	r7,zero,80089dc <__ssvfscanf_r+0x1500>
 80089d4:	39ffffc4 	addi	r7,r7,-1
 80089d8:	9cc00044 	addi	r19,r19,1
 80089dc:	a5000044 	addi	r20,r20,1
 80089e0:	003f3006 	br	80086a4 <__alt_data_end+0xf80086a4>
 80089e4:	da009c17 	ldw	r8,624(sp)
 80089e8:	40c00017 	ldw	r3,0(r8)
 80089ec:	42000104 	addi	r8,r8,4
 80089f0:	da009c15 	stw	r8,624(sp)
 80089f4:	18800015 	stw	r2,0(r3)
 80089f8:	003fef06 	br	80089b8 <__alt_data_end+0xf80089b8>
 80089fc:	2827883a 	mov	r19,r5
 8008a00:	003fb906 	br	80088e8 <__alt_data_end+0xf80088e8>
 8008a04:	01be1fc4 	movi	r6,-1921
 8008a08:	a1a8703a 	and	r20,r20,r6
 8008a0c:	05400044 	movi	r21,1
 8008a10:	003de906 	br	80081b8 <__alt_data_end+0xf80081b8>
 8008a14:	817fffc7 	ldb	r5,-1(r16)
 8008a18:	e00d883a 	mov	r6,fp
 8008a1c:	b009883a 	mov	r4,r22
 8008a20:	843fffc4 	addi	r16,r16,-1
 8008a24:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008a28:	003f3c06 	br	800871c <__alt_data_end+0xf800871c>
 8008a2c:	dd009b04 	addi	r20,sp,620
 8008a30:	003fc206 	br	800893c <__alt_data_end+0xf800893c>
 8008a34:	00be1fc4 	movi	r2,-1921
 8008a38:	a0a8703a 	and	r20,r20,r2
 8008a3c:	05800044 	movi	r22,1
 8008a40:	003ddd06 	br	80081b8 <__alt_data_end+0xf80081b8>
 8008a44:	d8c09f17 	ldw	r3,636(sp)
 8008a48:	88e3c83a 	sub	r17,r17,r3
 8008a4c:	044dc83a 	sub	r6,zero,r17
 8008a50:	883e2126 	beq	r17,zero,80082d8 <__alt_data_end+0xf80082d8>
 8008a54:	d88055c4 	addi	r2,sp,343
 8008a58:	80800136 	bltu	r16,r2,8008a60 <__ssvfscanf_r+0x1584>
 8008a5c:	dc005584 	addi	r16,sp,342
 8008a60:	014200b4 	movhi	r5,2050
 8008a64:	297f5304 	addi	r5,r5,-692
 8008a68:	8009883a 	mov	r4,r16
 8008a6c:	8004e640 	call	8004e64 <sprintf>
 8008a70:	003e1906 	br	80082d8 <__alt_data_end+0xf80082d8>
 8008a74:	d8c0a517 	ldw	r3,660(sp)
 8008a78:	000d883a 	mov	r6,zero
 8008a7c:	01c00284 	movi	r7,10
 8008a80:	19400044 	addi	r5,r3,1
 8008a84:	b009883a 	mov	r4,r22
 8008a88:	8012ee80 	call	8012ee8 <_strtol_r>
 8008a8c:	da00a417 	ldw	r8,656(sp)
 8008a90:	dc00a517 	ldw	r16,660(sp)
 8008a94:	120dc83a 	sub	r6,r2,r8
 8008a98:	003fee06 	br	8008a54 <__alt_data_end+0xf8008a54>
 8008a9c:	da009c17 	ldw	r8,624(sp)
 8008aa0:	180b883a 	mov	r5,r3
 8008aa4:	8009883a 	mov	r4,r16
 8008aa8:	45000017 	ldw	r20,0(r8)
 8008aac:	44400104 	addi	r17,r8,4
 8008ab0:	d8c0a615 	stw	r3,664(sp)
 8008ab4:	80116280 	call	8011628 <__fpclassifyd>
 8008ab8:	d8c0a617 	ldw	r3,664(sp)
 8008abc:	10006426 	beq	r2,zero,8008c50 <__ssvfscanf_r+0x1774>
 8008ac0:	8009883a 	mov	r4,r16
 8008ac4:	180b883a 	mov	r5,r3
 8008ac8:	801c19c0 	call	801c19c <__truncdfsf2>
 8008acc:	a0800015 	stw	r2,0(r20)
 8008ad0:	dc409c15 	stw	r17,624(sp)
 8008ad4:	003e0f06 	br	8008314 <__alt_data_end+0xf8008314>
 8008ad8:	88c0004c 	andi	r3,r17,1
 8008adc:	183fc11e 	bne	r3,zero,80089e4 <__alt_data_end+0xf80089e4>
 8008ae0:	8c40008c 	andi	r17,r17,2
 8008ae4:	883fbf26 	beq	r17,zero,80089e4 <__alt_data_end+0xf80089e4>
 8008ae8:	da00a117 	ldw	r8,644(sp)
 8008aec:	00820074 	movhi	r2,2049
 8008af0:	108d1004 	addi	r2,r2,13376
 8008af4:	d9c09e17 	ldw	r7,632(sp)
 8008af8:	000d883a 	mov	r6,zero
 8008afc:	d9400104 	addi	r5,sp,4
 8008b00:	b009883a 	mov	r4,r22
 8008b04:	40806226 	beq	r8,r2,8008c90 <__ssvfscanf_r+0x17b4>
 8008b08:	801313c0 	call	801313c <_strtoll_r>
 8008b0c:	da009c17 	ldw	r8,624(sp)
 8008b10:	41000017 	ldw	r4,0(r8)
 8008b14:	42000104 	addi	r8,r8,4
 8008b18:	da009c15 	stw	r8,624(sp)
 8008b1c:	20800015 	stw	r2,0(r4)
 8008b20:	20c00115 	stw	r3,4(r4)
 8008b24:	003fa406 	br	80089b8 <__alt_data_end+0xf80089b8>
 8008b28:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 8008b2c:	80bca726 	beq	r16,r2,8007dcc <__alt_data_end+0xf8007dcc>
 8008b30:	e0800017 	ldw	r2,0(fp)
 8008b34:	e1000117 	ldw	r4,4(fp)
 8008b38:	d8c00104 	addi	r3,sp,4
 8008b3c:	12000003 	ldbu	r8,0(r2)
 8008b40:	213fffc4 	addi	r4,r4,-1
 8008b44:	10800044 	addi	r2,r2,1
 8008b48:	e1000115 	stw	r4,4(fp)
 8008b4c:	e0800015 	stw	r2,0(fp)
 8008b50:	84400044 	addi	r17,r16,1
 8008b54:	dd400015 	stw	r21,0(sp)
 8008b58:	1c21883a 	add	r16,r3,r16
 8008b5c:	b009883a 	mov	r4,r22
 8008b60:	880f883a 	mov	r7,r17
 8008b64:	180d883a 	mov	r6,r3
 8008b68:	a00b883a 	mov	r5,r20
 8008b6c:	82000005 	stb	r8,0(r16)
 8008b70:	800f8cc0 	call	800f8cc <_mbrtowc_r>
 8008b74:	013fffc4 	movi	r4,-1
 8008b78:	113c9426 	beq	r2,r4,8007dcc <__alt_data_end+0xf8007dcc>
 8008b7c:	103c881e 	bne	r2,zero,8007da0 <__alt_data_end+0xf8007da0>
 8008b80:	a0000015 	stw	zero,0(r20)
 8008b84:	0009883a 	mov	r4,zero
 8008b88:	800f5a40 	call	800f5a4 <iswspace>
 8008b8c:	10001a26 	beq	r2,zero,8008bf8 <__ssvfscanf_r+0x171c>
 8008b90:	8821883a 	mov	r16,r17
 8008b94:	dc409f17 	ldw	r17,636(sp)
 8008b98:	803f7426 	beq	r16,zero,800896c <__alt_data_end+0xf800896c>
 8008b9c:	843fffc4 	addi	r16,r16,-1
 8008ba0:	d9800104 	addi	r6,sp,4
 8008ba4:	342b883a 	add	r21,r6,r16
 8008ba8:	00000106 	br	8008bb0 <__ssvfscanf_r+0x16d4>
 8008bac:	843fffc4 	addi	r16,r16,-1
 8008bb0:	a9400003 	ldbu	r5,0(r21)
 8008bb4:	e00d883a 	mov	r6,fp
 8008bb8:	b009883a 	mov	r4,r22
 8008bbc:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008bc0:	ad7fffc4 	addi	r21,r21,-1
 8008bc4:	803ff91e 	bne	r16,zero,8008bac <__alt_data_end+0xf8008bac>
 8008bc8:	003f6806 	br	800896c <__alt_data_end+0xf800896c>
 8008bcc:	d9800104 	addi	r6,sp,4
 8008bd0:	802b883a 	mov	r21,r16
 8008bd4:	343a812e 	bgeu	r6,r16,80075dc <__alt_data_end+0xf80075dc>
 8008bd8:	ad7fffc4 	addi	r21,r21,-1
 8008bdc:	a9400007 	ldb	r5,0(r21)
 8008be0:	e00d883a 	mov	r6,fp
 8008be4:	b009883a 	mov	r4,r22
 8008be8:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008bec:	da000104 	addi	r8,sp,4
 8008bf0:	457ff91e 	bne	r8,r21,8008bd8 <__alt_data_end+0xf8008bd8>
 8008bf4:	003a7906 	br	80075dc <__alt_data_end+0xf80075dc>
 8008bf8:	da009f17 	ldw	r8,636(sp)
 8008bfc:	9465883a 	add	r18,r18,r17
 8008c00:	9cffffc4 	addi	r19,r19,-1
 8008c04:	4000051e 	bne	r8,zero,8008c1c <__ssvfscanf_r+0x1740>
 8008c08:	a5000104 	addi	r20,r20,4
 8008c0c:	0021883a 	mov	r16,zero
 8008c10:	003c6606 	br	8007dac <__alt_data_end+0xf8007dac>
 8008c14:	a1000017 	ldw	r4,0(r20)
 8008c18:	003fdb06 	br	8008b88 <__alt_data_end+0xf8008b88>
 8008c1c:	0021883a 	mov	r16,zero
 8008c20:	003c6206 	br	8007dac <__alt_data_end+0xf8007dac>
 8008c24:	d8800104 	addi	r2,sp,4
 8008c28:	802b883a 	mov	r21,r16
 8008c2c:	143a6b2e 	bgeu	r2,r16,80075dc <__alt_data_end+0xf80075dc>
 8008c30:	ad7fffc4 	addi	r21,r21,-1
 8008c34:	a9400007 	ldb	r5,0(r21)
 8008c38:	e00d883a 	mov	r6,fp
 8008c3c:	b009883a 	mov	r4,r22
 8008c40:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008c44:	d8c00104 	addi	r3,sp,4
 8008c48:	1d7ff91e 	bne	r3,r21,8008c30 <__alt_data_end+0xf8008c30>
 8008c4c:	003a6306 	br	80075dc <__alt_data_end+0xf80075dc>
 8008c50:	0009883a 	mov	r4,zero
 8008c54:	801176c0 	call	801176c <nanf>
 8008c58:	a0800015 	stw	r2,0(r20)
 8008c5c:	dc409c15 	stw	r17,624(sp)
 8008c60:	003dac06 	br	8008314 <__alt_data_end+0xf8008314>
 8008c64:	d9000104 	addi	r4,sp,4
 8008c68:	802b883a 	mov	r21,r16
 8008c6c:	243a5b2e 	bgeu	r4,r16,80075dc <__alt_data_end+0xf80075dc>
 8008c70:	ad7fffc4 	addi	r21,r21,-1
 8008c74:	a9400007 	ldb	r5,0(r21)
 8008c78:	e00d883a 	mov	r6,fp
 8008c7c:	b009883a 	mov	r4,r22
 8008c80:	8014dd40 	call	8014dd4 <_sungetc_r>
 8008c84:	d9400104 	addi	r5,sp,4
 8008c88:	2d7ff91e 	bne	r5,r21,8008c70 <__alt_data_end+0xf8008c70>
 8008c8c:	003a5306 	br	80075dc <__alt_data_end+0xf80075dc>
 8008c90:	80136a80 	call	80136a8 <_strtoull_r>
 8008c94:	003f9d06 	br	8008b0c <__alt_data_end+0xf8008b0c>

08008c98 <___vfprintf_internal_r>:
 8008c98:	deffb804 	addi	sp,sp,-288
 8008c9c:	dfc04715 	stw	ra,284(sp)
 8008ca0:	ddc04515 	stw	r23,276(sp)
 8008ca4:	dd404315 	stw	r21,268(sp)
 8008ca8:	d9002c15 	stw	r4,176(sp)
 8008cac:	282f883a 	mov	r23,r5
 8008cb0:	302b883a 	mov	r21,r6
 8008cb4:	d9c02d15 	stw	r7,180(sp)
 8008cb8:	df004615 	stw	fp,280(sp)
 8008cbc:	dd804415 	stw	r22,272(sp)
 8008cc0:	dd004215 	stw	r20,264(sp)
 8008cc4:	dcc04115 	stw	r19,260(sp)
 8008cc8:	dc804015 	stw	r18,256(sp)
 8008ccc:	dc403f15 	stw	r17,252(sp)
 8008cd0:	dc003e15 	stw	r16,248(sp)
 8008cd4:	800f6800 	call	800f680 <_localeconv_r>
 8008cd8:	10800017 	ldw	r2,0(r2)
 8008cdc:	1009883a 	mov	r4,r2
 8008ce0:	d8803415 	stw	r2,208(sp)
 8008ce4:	800526c0 	call	800526c <strlen>
 8008ce8:	d8803715 	stw	r2,220(sp)
 8008cec:	d8802c17 	ldw	r2,176(sp)
 8008cf0:	10000226 	beq	r2,zero,8008cfc <___vfprintf_internal_r+0x64>
 8008cf4:	10800e17 	ldw	r2,56(r2)
 8008cf8:	1000f926 	beq	r2,zero,80090e0 <___vfprintf_internal_r+0x448>
 8008cfc:	b880030b 	ldhu	r2,12(r23)
 8008d00:	10c8000c 	andi	r3,r2,8192
 8008d04:	1800061e 	bne	r3,zero,8008d20 <___vfprintf_internal_r+0x88>
 8008d08:	b9001917 	ldw	r4,100(r23)
 8008d0c:	00f7ffc4 	movi	r3,-8193
 8008d10:	10880014 	ori	r2,r2,8192
 8008d14:	20c6703a 	and	r3,r4,r3
 8008d18:	b880030d 	sth	r2,12(r23)
 8008d1c:	b8c01915 	stw	r3,100(r23)
 8008d20:	10c0020c 	andi	r3,r2,8
 8008d24:	1800c126 	beq	r3,zero,800902c <___vfprintf_internal_r+0x394>
 8008d28:	b8c00417 	ldw	r3,16(r23)
 8008d2c:	1800bf26 	beq	r3,zero,800902c <___vfprintf_internal_r+0x394>
 8008d30:	1080068c 	andi	r2,r2,26
 8008d34:	00c00284 	movi	r3,10
 8008d38:	10c0c426 	beq	r2,r3,800904c <___vfprintf_internal_r+0x3b4>
 8008d3c:	d8c00404 	addi	r3,sp,16
 8008d40:	050200b4 	movhi	r20,2050
 8008d44:	d9001e04 	addi	r4,sp,120
 8008d48:	a53f5d04 	addi	r20,r20,-652
 8008d4c:	d8c01e15 	stw	r3,120(sp)
 8008d50:	d8002015 	stw	zero,128(sp)
 8008d54:	d8001f15 	stw	zero,124(sp)
 8008d58:	d8003315 	stw	zero,204(sp)
 8008d5c:	d8003615 	stw	zero,216(sp)
 8008d60:	d8003815 	stw	zero,224(sp)
 8008d64:	1811883a 	mov	r8,r3
 8008d68:	d8003915 	stw	zero,228(sp)
 8008d6c:	d8003a15 	stw	zero,232(sp)
 8008d70:	d8002f15 	stw	zero,188(sp)
 8008d74:	d9002815 	stw	r4,160(sp)
 8008d78:	a8800007 	ldb	r2,0(r21)
 8008d7c:	10027b26 	beq	r2,zero,800976c <___vfprintf_internal_r+0xad4>
 8008d80:	00c00944 	movi	r3,37
 8008d84:	a821883a 	mov	r16,r21
 8008d88:	10c0021e 	bne	r2,r3,8008d94 <___vfprintf_internal_r+0xfc>
 8008d8c:	00001406 	br	8008de0 <___vfprintf_internal_r+0x148>
 8008d90:	10c00326 	beq	r2,r3,8008da0 <___vfprintf_internal_r+0x108>
 8008d94:	84000044 	addi	r16,r16,1
 8008d98:	80800007 	ldb	r2,0(r16)
 8008d9c:	103ffc1e 	bne	r2,zero,8008d90 <__alt_data_end+0xf8008d90>
 8008da0:	8563c83a 	sub	r17,r16,r21
 8008da4:	88000e26 	beq	r17,zero,8008de0 <___vfprintf_internal_r+0x148>
 8008da8:	d8c02017 	ldw	r3,128(sp)
 8008dac:	d8801f17 	ldw	r2,124(sp)
 8008db0:	45400015 	stw	r21,0(r8)
 8008db4:	1c47883a 	add	r3,r3,r17
 8008db8:	10800044 	addi	r2,r2,1
 8008dbc:	d8c02015 	stw	r3,128(sp)
 8008dc0:	44400115 	stw	r17,4(r8)
 8008dc4:	d8801f15 	stw	r2,124(sp)
 8008dc8:	00c001c4 	movi	r3,7
 8008dcc:	1880a716 	blt	r3,r2,800906c <___vfprintf_internal_r+0x3d4>
 8008dd0:	42000204 	addi	r8,r8,8
 8008dd4:	d9402f17 	ldw	r5,188(sp)
 8008dd8:	2c4b883a 	add	r5,r5,r17
 8008ddc:	d9402f15 	stw	r5,188(sp)
 8008de0:	80800007 	ldb	r2,0(r16)
 8008de4:	1000a826 	beq	r2,zero,8009088 <___vfprintf_internal_r+0x3f0>
 8008de8:	84400047 	ldb	r17,1(r16)
 8008dec:	00bfffc4 	movi	r2,-1
 8008df0:	85400044 	addi	r21,r16,1
 8008df4:	d8002785 	stb	zero,158(sp)
 8008df8:	0007883a 	mov	r3,zero
 8008dfc:	000f883a 	mov	r7,zero
 8008e00:	d8802915 	stw	r2,164(sp)
 8008e04:	d8003115 	stw	zero,196(sp)
 8008e08:	0025883a 	mov	r18,zero
 8008e0c:	01401604 	movi	r5,88
 8008e10:	01800244 	movi	r6,9
 8008e14:	02800a84 	movi	r10,42
 8008e18:	02401b04 	movi	r9,108
 8008e1c:	ad400044 	addi	r21,r21,1
 8008e20:	88bff804 	addi	r2,r17,-32
 8008e24:	28830436 	bltu	r5,r2,8009a38 <___vfprintf_internal_r+0xda0>
 8008e28:	100490ba 	slli	r2,r2,2
 8008e2c:	01020074 	movhi	r4,2049
 8008e30:	21239004 	addi	r4,r4,-29120
 8008e34:	1105883a 	add	r2,r2,r4
 8008e38:	10800017 	ldw	r2,0(r2)
 8008e3c:	1000683a 	jmp	r2
 8008e40:	08009958 	cmpnei	zero,at,613
 8008e44:	08009a38 	rdprs	zero,at,616
 8008e48:	08009a38 	rdprs	zero,at,616
 8008e4c:	08009978 	rdprs	zero,at,613
 8008e50:	08009a38 	rdprs	zero,at,616
 8008e54:	08009a38 	rdprs	zero,at,616
 8008e58:	08009a38 	rdprs	zero,at,616
 8008e5c:	08009a38 	rdprs	zero,at,616
 8008e60:	08009a38 	rdprs	zero,at,616
 8008e64:	08009a38 	rdprs	zero,at,616
 8008e68:	080090ec 	andhi	zero,at,579
 8008e6c:	08009894 	ori	zero,at,610
 8008e70:	08009a38 	rdprs	zero,at,616
 8008e74:	08008fb4 	orhi	zero,at,574
 8008e78:	08009114 	ori	zero,at,580
 8008e7c:	08009a38 	rdprs	zero,at,616
 8008e80:	08009154 	ori	zero,at,581
 8008e84:	08009160 	cmpeqi	zero,at,581
 8008e88:	08009160 	cmpeqi	zero,at,581
 8008e8c:	08009160 	cmpeqi	zero,at,581
 8008e90:	08009160 	cmpeqi	zero,at,581
 8008e94:	08009160 	cmpeqi	zero,at,581
 8008e98:	08009160 	cmpeqi	zero,at,581
 8008e9c:	08009160 	cmpeqi	zero,at,581
 8008ea0:	08009160 	cmpeqi	zero,at,581
 8008ea4:	08009160 	cmpeqi	zero,at,581
 8008ea8:	08009a38 	rdprs	zero,at,616
 8008eac:	08009a38 	rdprs	zero,at,616
 8008eb0:	08009a38 	rdprs	zero,at,616
 8008eb4:	08009a38 	rdprs	zero,at,616
 8008eb8:	08009a38 	rdprs	zero,at,616
 8008ebc:	08009a38 	rdprs	zero,at,616
 8008ec0:	08009a38 	rdprs	zero,at,616
 8008ec4:	08009a38 	rdprs	zero,at,616
 8008ec8:	08009a38 	rdprs	zero,at,616
 8008ecc:	08009a38 	rdprs	zero,at,616
 8008ed0:	08009194 	ori	zero,at,582
 8008ed4:	08009250 	cmplti	zero,at,585
 8008ed8:	08009a38 	rdprs	zero,at,616
 8008edc:	08009250 	cmplti	zero,at,585
 8008ee0:	08009a38 	rdprs	zero,at,616
 8008ee4:	08009a38 	rdprs	zero,at,616
 8008ee8:	08009a38 	rdprs	zero,at,616
 8008eec:	08009a38 	rdprs	zero,at,616
 8008ef0:	080092f0 	cmpltui	zero,at,587
 8008ef4:	08009a38 	rdprs	zero,at,616
 8008ef8:	08009a38 	rdprs	zero,at,616
 8008efc:	080092fc 	xorhi	zero,at,587
 8008f00:	08009a38 	rdprs	zero,at,616
 8008f04:	08009a38 	rdprs	zero,at,616
 8008f08:	08009a38 	rdprs	zero,at,616
 8008f0c:	08009a38 	rdprs	zero,at,616
 8008f10:	08009a38 	rdprs	zero,at,616
 8008f14:	08009774 	orhi	zero,at,605
 8008f18:	08009a38 	rdprs	zero,at,616
 8008f1c:	08009a38 	rdprs	zero,at,616
 8008f20:	080097d4 	ori	zero,at,607
 8008f24:	08009a38 	rdprs	zero,at,616
 8008f28:	08009a38 	rdprs	zero,at,616
 8008f2c:	08009a38 	rdprs	zero,at,616
 8008f30:	08009a38 	rdprs	zero,at,616
 8008f34:	08009a38 	rdprs	zero,at,616
 8008f38:	08009a38 	rdprs	zero,at,616
 8008f3c:	08009a38 	rdprs	zero,at,616
 8008f40:	08009a38 	rdprs	zero,at,616
 8008f44:	08009a38 	rdprs	zero,at,616
 8008f48:	08009a38 	rdprs	zero,at,616
 8008f4c:	080099e4 	muli	zero,at,615
 8008f50:	08009984 	addi	zero,at,614
 8008f54:	08009250 	cmplti	zero,at,585
 8008f58:	08009250 	cmplti	zero,at,585
 8008f5c:	08009250 	cmplti	zero,at,585
 8008f60:	08009994 	ori	zero,at,614
 8008f64:	08009984 	addi	zero,at,614
 8008f68:	08009a38 	rdprs	zero,at,616
 8008f6c:	08009a38 	rdprs	zero,at,616
 8008f70:	080099a0 	cmpeqi	zero,at,614
 8008f74:	08009a38 	rdprs	zero,at,616
 8008f78:	080099b0 	cmpltui	zero,at,614
 8008f7c:	08009884 	addi	zero,at,610
 8008f80:	08008fc0 	call	8008fc <__alt_mem_sdram-0x77ff704>
 8008f84:	080098a4 	muli	zero,at,610
 8008f88:	08009a38 	rdprs	zero,at,616
 8008f8c:	080098b0 	cmpltui	zero,at,610
 8008f90:	08009a38 	rdprs	zero,at,616
 8008f94:	0800990c 	andi	zero,at,612
 8008f98:	08009a38 	rdprs	zero,at,616
 8008f9c:	08009a38 	rdprs	zero,at,616
 8008fa0:	0800991c 	xori	zero,at,612
 8008fa4:	d9003117 	ldw	r4,196(sp)
 8008fa8:	d8802d15 	stw	r2,180(sp)
 8008fac:	0109c83a 	sub	r4,zero,r4
 8008fb0:	d9003115 	stw	r4,196(sp)
 8008fb4:	94800114 	ori	r18,r18,4
 8008fb8:	ac400007 	ldb	r17,0(r21)
 8008fbc:	003f9706 	br	8008e1c <__alt_data_end+0xf8008e1c>
 8008fc0:	00800c04 	movi	r2,48
 8008fc4:	d9002d17 	ldw	r4,180(sp)
 8008fc8:	d9402917 	ldw	r5,164(sp)
 8008fcc:	d8802705 	stb	r2,156(sp)
 8008fd0:	00801e04 	movi	r2,120
 8008fd4:	d8802745 	stb	r2,157(sp)
 8008fd8:	d8002785 	stb	zero,158(sp)
 8008fdc:	20c00104 	addi	r3,r4,4
 8008fe0:	24c00017 	ldw	r19,0(r4)
 8008fe4:	002d883a 	mov	r22,zero
 8008fe8:	90800094 	ori	r2,r18,2
 8008fec:	28029a16 	blt	r5,zero,8009a58 <___vfprintf_internal_r+0xdc0>
 8008ff0:	00bfdfc4 	movi	r2,-129
 8008ff4:	90a4703a 	and	r18,r18,r2
 8008ff8:	d8c02d15 	stw	r3,180(sp)
 8008ffc:	94800094 	ori	r18,r18,2
 8009000:	9802871e 	bne	r19,zero,8009a20 <___vfprintf_internal_r+0xd88>
 8009004:	008200b4 	movhi	r2,2050
 8009008:	10bf4304 	addi	r2,r2,-756
 800900c:	d8803915 	stw	r2,228(sp)
 8009010:	04401e04 	movi	r17,120
 8009014:	d8802917 	ldw	r2,164(sp)
 8009018:	0039883a 	mov	fp,zero
 800901c:	1001e926 	beq	r2,zero,80097c4 <___vfprintf_internal_r+0xb2c>
 8009020:	0027883a 	mov	r19,zero
 8009024:	002d883a 	mov	r22,zero
 8009028:	00020506 	br	8009840 <___vfprintf_internal_r+0xba8>
 800902c:	d9002c17 	ldw	r4,176(sp)
 8009030:	b80b883a 	mov	r5,r23
 8009034:	800c8540 	call	800c854 <__swsetup_r>
 8009038:	1005ac1e 	bne	r2,zero,800a6ec <___vfprintf_internal_r+0x1a54>
 800903c:	b880030b 	ldhu	r2,12(r23)
 8009040:	00c00284 	movi	r3,10
 8009044:	1080068c 	andi	r2,r2,26
 8009048:	10ff3c1e 	bne	r2,r3,8008d3c <__alt_data_end+0xf8008d3c>
 800904c:	b880038f 	ldh	r2,14(r23)
 8009050:	103f3a16 	blt	r2,zero,8008d3c <__alt_data_end+0xf8008d3c>
 8009054:	d9c02d17 	ldw	r7,180(sp)
 8009058:	d9002c17 	ldw	r4,176(sp)
 800905c:	a80d883a 	mov	r6,r21
 8009060:	b80b883a 	mov	r5,r23
 8009064:	800aeac0 	call	800aeac <__sbprintf>
 8009068:	00001106 	br	80090b0 <___vfprintf_internal_r+0x418>
 800906c:	d9002c17 	ldw	r4,176(sp)
 8009070:	d9801e04 	addi	r6,sp,120
 8009074:	b80b883a 	mov	r5,r23
 8009078:	80164b00 	call	80164b0 <__sprint_r>
 800907c:	1000081e 	bne	r2,zero,80090a0 <___vfprintf_internal_r+0x408>
 8009080:	da000404 	addi	r8,sp,16
 8009084:	003f5306 	br	8008dd4 <__alt_data_end+0xf8008dd4>
 8009088:	d8802017 	ldw	r2,128(sp)
 800908c:	10000426 	beq	r2,zero,80090a0 <___vfprintf_internal_r+0x408>
 8009090:	d9002c17 	ldw	r4,176(sp)
 8009094:	d9801e04 	addi	r6,sp,120
 8009098:	b80b883a 	mov	r5,r23
 800909c:	80164b00 	call	80164b0 <__sprint_r>
 80090a0:	b880030b 	ldhu	r2,12(r23)
 80090a4:	1080100c 	andi	r2,r2,64
 80090a8:	1005901e 	bne	r2,zero,800a6ec <___vfprintf_internal_r+0x1a54>
 80090ac:	d8802f17 	ldw	r2,188(sp)
 80090b0:	dfc04717 	ldw	ra,284(sp)
 80090b4:	df004617 	ldw	fp,280(sp)
 80090b8:	ddc04517 	ldw	r23,276(sp)
 80090bc:	dd804417 	ldw	r22,272(sp)
 80090c0:	dd404317 	ldw	r21,268(sp)
 80090c4:	dd004217 	ldw	r20,264(sp)
 80090c8:	dcc04117 	ldw	r19,260(sp)
 80090cc:	dc804017 	ldw	r18,256(sp)
 80090d0:	dc403f17 	ldw	r17,252(sp)
 80090d4:	dc003e17 	ldw	r16,248(sp)
 80090d8:	dec04804 	addi	sp,sp,288
 80090dc:	f800283a 	ret
 80090e0:	d9002c17 	ldw	r4,176(sp)
 80090e4:	800e87c0 	call	800e87c <__sinit>
 80090e8:	003f0406 	br	8008cfc <__alt_data_end+0xf8008cfc>
 80090ec:	d8802d17 	ldw	r2,180(sp)
 80090f0:	d9002d17 	ldw	r4,180(sp)
 80090f4:	10800017 	ldw	r2,0(r2)
 80090f8:	d8803115 	stw	r2,196(sp)
 80090fc:	20800104 	addi	r2,r4,4
 8009100:	d9003117 	ldw	r4,196(sp)
 8009104:	203fa716 	blt	r4,zero,8008fa4 <__alt_data_end+0xf8008fa4>
 8009108:	d8802d15 	stw	r2,180(sp)
 800910c:	ac400007 	ldb	r17,0(r21)
 8009110:	003f4206 	br	8008e1c <__alt_data_end+0xf8008e1c>
 8009114:	ac400007 	ldb	r17,0(r21)
 8009118:	aac00044 	addi	r11,r21,1
 800911c:	8a872826 	beq	r17,r10,800adc0 <___vfprintf_internal_r+0x2128>
 8009120:	88bff404 	addi	r2,r17,-48
 8009124:	0009883a 	mov	r4,zero
 8009128:	30867d36 	bltu	r6,r2,800ab20 <___vfprintf_internal_r+0x1e88>
 800912c:	5c400007 	ldb	r17,0(r11)
 8009130:	210002a4 	muli	r4,r4,10
 8009134:	5d400044 	addi	r21,r11,1
 8009138:	a817883a 	mov	r11,r21
 800913c:	2089883a 	add	r4,r4,r2
 8009140:	88bff404 	addi	r2,r17,-48
 8009144:	30bff92e 	bgeu	r6,r2,800912c <__alt_data_end+0xf800912c>
 8009148:	2005c916 	blt	r4,zero,800a870 <___vfprintf_internal_r+0x1bd8>
 800914c:	d9002915 	stw	r4,164(sp)
 8009150:	003f3306 	br	8008e20 <__alt_data_end+0xf8008e20>
 8009154:	94802014 	ori	r18,r18,128
 8009158:	ac400007 	ldb	r17,0(r21)
 800915c:	003f2f06 	br	8008e1c <__alt_data_end+0xf8008e1c>
 8009160:	a809883a 	mov	r4,r21
 8009164:	d8003115 	stw	zero,196(sp)
 8009168:	88bff404 	addi	r2,r17,-48
 800916c:	0017883a 	mov	r11,zero
 8009170:	24400007 	ldb	r17,0(r4)
 8009174:	5ac002a4 	muli	r11,r11,10
 8009178:	ad400044 	addi	r21,r21,1
 800917c:	a809883a 	mov	r4,r21
 8009180:	12d7883a 	add	r11,r2,r11
 8009184:	88bff404 	addi	r2,r17,-48
 8009188:	30bff92e 	bgeu	r6,r2,8009170 <__alt_data_end+0xf8009170>
 800918c:	dac03115 	stw	r11,196(sp)
 8009190:	003f2306 	br	8008e20 <__alt_data_end+0xf8008e20>
 8009194:	18c03fcc 	andi	r3,r3,255
 8009198:	18072b1e 	bne	r3,zero,800ae48 <___vfprintf_internal_r+0x21b0>
 800919c:	94800414 	ori	r18,r18,16
 80091a0:	9080080c 	andi	r2,r18,32
 80091a4:	10037b26 	beq	r2,zero,8009f94 <___vfprintf_internal_r+0x12fc>
 80091a8:	d9402d17 	ldw	r5,180(sp)
 80091ac:	28800117 	ldw	r2,4(r5)
 80091b0:	2cc00017 	ldw	r19,0(r5)
 80091b4:	29400204 	addi	r5,r5,8
 80091b8:	d9402d15 	stw	r5,180(sp)
 80091bc:	102d883a 	mov	r22,r2
 80091c0:	10044b16 	blt	r2,zero,800a2f0 <___vfprintf_internal_r+0x1658>
 80091c4:	d9402917 	ldw	r5,164(sp)
 80091c8:	df002783 	ldbu	fp,158(sp)
 80091cc:	2803bc16 	blt	r5,zero,800a0c0 <___vfprintf_internal_r+0x1428>
 80091d0:	00ffdfc4 	movi	r3,-129
 80091d4:	9d84b03a 	or	r2,r19,r22
 80091d8:	90e4703a 	and	r18,r18,r3
 80091dc:	10017726 	beq	r2,zero,80097bc <___vfprintf_internal_r+0xb24>
 80091e0:	b0038326 	beq	r22,zero,8009ff0 <___vfprintf_internal_r+0x1358>
 80091e4:	dc402a15 	stw	r17,168(sp)
 80091e8:	dc001e04 	addi	r16,sp,120
 80091ec:	b023883a 	mov	r17,r22
 80091f0:	402d883a 	mov	r22,r8
 80091f4:	9809883a 	mov	r4,r19
 80091f8:	880b883a 	mov	r5,r17
 80091fc:	01800284 	movi	r6,10
 8009200:	000f883a 	mov	r7,zero
 8009204:	80194640 	call	8019464 <__umoddi3>
 8009208:	10800c04 	addi	r2,r2,48
 800920c:	843fffc4 	addi	r16,r16,-1
 8009210:	9809883a 	mov	r4,r19
 8009214:	880b883a 	mov	r5,r17
 8009218:	80800005 	stb	r2,0(r16)
 800921c:	01800284 	movi	r6,10
 8009220:	000f883a 	mov	r7,zero
 8009224:	8018eec0 	call	8018eec <__udivdi3>
 8009228:	1027883a 	mov	r19,r2
 800922c:	10c4b03a 	or	r2,r2,r3
 8009230:	1823883a 	mov	r17,r3
 8009234:	103fef1e 	bne	r2,zero,80091f4 <__alt_data_end+0xf80091f4>
 8009238:	d8c02817 	ldw	r3,160(sp)
 800923c:	dc402a17 	ldw	r17,168(sp)
 8009240:	b011883a 	mov	r8,r22
 8009244:	1c07c83a 	sub	r3,r3,r16
 8009248:	d8c02e15 	stw	r3,184(sp)
 800924c:	00005906 	br	80093b4 <___vfprintf_internal_r+0x71c>
 8009250:	18c03fcc 	andi	r3,r3,255
 8009254:	1806fa1e 	bne	r3,zero,800ae40 <___vfprintf_internal_r+0x21a8>
 8009258:	9080020c 	andi	r2,r18,8
 800925c:	10048a26 	beq	r2,zero,800a488 <___vfprintf_internal_r+0x17f0>
 8009260:	d8c02d17 	ldw	r3,180(sp)
 8009264:	d9002d17 	ldw	r4,180(sp)
 8009268:	d9402d17 	ldw	r5,180(sp)
 800926c:	18c00017 	ldw	r3,0(r3)
 8009270:	21000117 	ldw	r4,4(r4)
 8009274:	29400204 	addi	r5,r5,8
 8009278:	d8c03615 	stw	r3,216(sp)
 800927c:	d9003815 	stw	r4,224(sp)
 8009280:	d9402d15 	stw	r5,180(sp)
 8009284:	d9003617 	ldw	r4,216(sp)
 8009288:	d9403817 	ldw	r5,224(sp)
 800928c:	da003d15 	stw	r8,244(sp)
 8009290:	04000044 	movi	r16,1
 8009294:	80116280 	call	8011628 <__fpclassifyd>
 8009298:	da003d17 	ldw	r8,244(sp)
 800929c:	14041f1e 	bne	r2,r16,800a31c <___vfprintf_internal_r+0x1684>
 80092a0:	d9003617 	ldw	r4,216(sp)
 80092a4:	d9403817 	ldw	r5,224(sp)
 80092a8:	000d883a 	mov	r6,zero
 80092ac:	000f883a 	mov	r7,zero
 80092b0:	801ae900 	call	801ae90 <__ledf2>
 80092b4:	da003d17 	ldw	r8,244(sp)
 80092b8:	1005be16 	blt	r2,zero,800a9b4 <___vfprintf_internal_r+0x1d1c>
 80092bc:	df002783 	ldbu	fp,158(sp)
 80092c0:	008011c4 	movi	r2,71
 80092c4:	1445330e 	bge	r2,r17,800a794 <___vfprintf_internal_r+0x1afc>
 80092c8:	040200b4 	movhi	r16,2050
 80092cc:	843f3b04 	addi	r16,r16,-788
 80092d0:	00c000c4 	movi	r3,3
 80092d4:	00bfdfc4 	movi	r2,-129
 80092d8:	d8c02a15 	stw	r3,168(sp)
 80092dc:	90a4703a 	and	r18,r18,r2
 80092e0:	d8c02e15 	stw	r3,184(sp)
 80092e4:	d8002915 	stw	zero,164(sp)
 80092e8:	d8003215 	stw	zero,200(sp)
 80092ec:	00003706 	br	80093cc <___vfprintf_internal_r+0x734>
 80092f0:	94800214 	ori	r18,r18,8
 80092f4:	ac400007 	ldb	r17,0(r21)
 80092f8:	003ec806 	br	8008e1c <__alt_data_end+0xf8008e1c>
 80092fc:	18c03fcc 	andi	r3,r3,255
 8009300:	1806db1e 	bne	r3,zero,800ae70 <___vfprintf_internal_r+0x21d8>
 8009304:	94800414 	ori	r18,r18,16
 8009308:	9080080c 	andi	r2,r18,32
 800930c:	1002d826 	beq	r2,zero,8009e70 <___vfprintf_internal_r+0x11d8>
 8009310:	d9402d17 	ldw	r5,180(sp)
 8009314:	d8c02917 	ldw	r3,164(sp)
 8009318:	d8002785 	stb	zero,158(sp)
 800931c:	28800204 	addi	r2,r5,8
 8009320:	2cc00017 	ldw	r19,0(r5)
 8009324:	2d800117 	ldw	r22,4(r5)
 8009328:	18048f16 	blt	r3,zero,800a568 <___vfprintf_internal_r+0x18d0>
 800932c:	013fdfc4 	movi	r4,-129
 8009330:	9d86b03a 	or	r3,r19,r22
 8009334:	d8802d15 	stw	r2,180(sp)
 8009338:	9124703a 	and	r18,r18,r4
 800933c:	1802d91e 	bne	r3,zero,8009ea4 <___vfprintf_internal_r+0x120c>
 8009340:	d8c02917 	ldw	r3,164(sp)
 8009344:	0039883a 	mov	fp,zero
 8009348:	1805c326 	beq	r3,zero,800aa58 <___vfprintf_internal_r+0x1dc0>
 800934c:	0027883a 	mov	r19,zero
 8009350:	002d883a 	mov	r22,zero
 8009354:	dc001e04 	addi	r16,sp,120
 8009358:	9806d0fa 	srli	r3,r19,3
 800935c:	b008977a 	slli	r4,r22,29
 8009360:	b02cd0fa 	srli	r22,r22,3
 8009364:	9cc001cc 	andi	r19,r19,7
 8009368:	98800c04 	addi	r2,r19,48
 800936c:	843fffc4 	addi	r16,r16,-1
 8009370:	20e6b03a 	or	r19,r4,r3
 8009374:	80800005 	stb	r2,0(r16)
 8009378:	9d86b03a 	or	r3,r19,r22
 800937c:	183ff61e 	bne	r3,zero,8009358 <__alt_data_end+0xf8009358>
 8009380:	90c0004c 	andi	r3,r18,1
 8009384:	18013b26 	beq	r3,zero,8009874 <___vfprintf_internal_r+0xbdc>
 8009388:	10803fcc 	andi	r2,r2,255
 800938c:	1080201c 	xori	r2,r2,128
 8009390:	10bfe004 	addi	r2,r2,-128
 8009394:	00c00c04 	movi	r3,48
 8009398:	10c13626 	beq	r2,r3,8009874 <___vfprintf_internal_r+0xbdc>
 800939c:	80ffffc5 	stb	r3,-1(r16)
 80093a0:	d8c02817 	ldw	r3,160(sp)
 80093a4:	80bfffc4 	addi	r2,r16,-1
 80093a8:	1021883a 	mov	r16,r2
 80093ac:	1887c83a 	sub	r3,r3,r2
 80093b0:	d8c02e15 	stw	r3,184(sp)
 80093b4:	d8802e17 	ldw	r2,184(sp)
 80093b8:	d9002917 	ldw	r4,164(sp)
 80093bc:	1100010e 	bge	r2,r4,80093c4 <___vfprintf_internal_r+0x72c>
 80093c0:	2005883a 	mov	r2,r4
 80093c4:	d8802a15 	stw	r2,168(sp)
 80093c8:	d8003215 	stw	zero,200(sp)
 80093cc:	e7003fcc 	andi	fp,fp,255
 80093d0:	e700201c 	xori	fp,fp,128
 80093d4:	e73fe004 	addi	fp,fp,-128
 80093d8:	e0000326 	beq	fp,zero,80093e8 <___vfprintf_internal_r+0x750>
 80093dc:	d8c02a17 	ldw	r3,168(sp)
 80093e0:	18c00044 	addi	r3,r3,1
 80093e4:	d8c02a15 	stw	r3,168(sp)
 80093e8:	90c0008c 	andi	r3,r18,2
 80093ec:	d8c02b15 	stw	r3,172(sp)
 80093f0:	18000326 	beq	r3,zero,8009400 <___vfprintf_internal_r+0x768>
 80093f4:	d8c02a17 	ldw	r3,168(sp)
 80093f8:	18c00084 	addi	r3,r3,2
 80093fc:	d8c02a15 	stw	r3,168(sp)
 8009400:	90c0210c 	andi	r3,r18,132
 8009404:	d8c03015 	stw	r3,192(sp)
 8009408:	1801a31e 	bne	r3,zero,8009a98 <___vfprintf_internal_r+0xe00>
 800940c:	d9003117 	ldw	r4,196(sp)
 8009410:	d8c02a17 	ldw	r3,168(sp)
 8009414:	20e7c83a 	sub	r19,r4,r3
 8009418:	04c19f0e 	bge	zero,r19,8009a98 <___vfprintf_internal_r+0xe00>
 800941c:	02400404 	movi	r9,16
 8009420:	d8c02017 	ldw	r3,128(sp)
 8009424:	d8801f17 	ldw	r2,124(sp)
 8009428:	4cc50d0e 	bge	r9,r19,800a860 <___vfprintf_internal_r+0x1bc8>
 800942c:	014200b4 	movhi	r5,2050
 8009430:	297f6104 	addi	r5,r5,-636
 8009434:	dc403b15 	stw	r17,236(sp)
 8009438:	d9403515 	stw	r5,212(sp)
 800943c:	9823883a 	mov	r17,r19
 8009440:	482d883a 	mov	r22,r9
 8009444:	9027883a 	mov	r19,r18
 8009448:	070001c4 	movi	fp,7
 800944c:	8025883a 	mov	r18,r16
 8009450:	dc002c17 	ldw	r16,176(sp)
 8009454:	00000306 	br	8009464 <___vfprintf_internal_r+0x7cc>
 8009458:	8c7ffc04 	addi	r17,r17,-16
 800945c:	42000204 	addi	r8,r8,8
 8009460:	b440130e 	bge	r22,r17,80094b0 <___vfprintf_internal_r+0x818>
 8009464:	010200b4 	movhi	r4,2050
 8009468:	18c00404 	addi	r3,r3,16
 800946c:	10800044 	addi	r2,r2,1
 8009470:	213f6104 	addi	r4,r4,-636
 8009474:	41000015 	stw	r4,0(r8)
 8009478:	45800115 	stw	r22,4(r8)
 800947c:	d8c02015 	stw	r3,128(sp)
 8009480:	d8801f15 	stw	r2,124(sp)
 8009484:	e0bff40e 	bge	fp,r2,8009458 <__alt_data_end+0xf8009458>
 8009488:	d9801e04 	addi	r6,sp,120
 800948c:	b80b883a 	mov	r5,r23
 8009490:	8009883a 	mov	r4,r16
 8009494:	80164b00 	call	80164b0 <__sprint_r>
 8009498:	103f011e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800949c:	8c7ffc04 	addi	r17,r17,-16
 80094a0:	d8c02017 	ldw	r3,128(sp)
 80094a4:	d8801f17 	ldw	r2,124(sp)
 80094a8:	da000404 	addi	r8,sp,16
 80094ac:	b47fed16 	blt	r22,r17,8009464 <__alt_data_end+0xf8009464>
 80094b0:	9021883a 	mov	r16,r18
 80094b4:	9825883a 	mov	r18,r19
 80094b8:	8827883a 	mov	r19,r17
 80094bc:	dc403b17 	ldw	r17,236(sp)
 80094c0:	d9403517 	ldw	r5,212(sp)
 80094c4:	98c7883a 	add	r3,r19,r3
 80094c8:	10800044 	addi	r2,r2,1
 80094cc:	41400015 	stw	r5,0(r8)
 80094d0:	44c00115 	stw	r19,4(r8)
 80094d4:	d8c02015 	stw	r3,128(sp)
 80094d8:	d8801f15 	stw	r2,124(sp)
 80094dc:	010001c4 	movi	r4,7
 80094e0:	2082a316 	blt	r4,r2,8009f70 <___vfprintf_internal_r+0x12d8>
 80094e4:	df002787 	ldb	fp,158(sp)
 80094e8:	42000204 	addi	r8,r8,8
 80094ec:	e0000c26 	beq	fp,zero,8009520 <___vfprintf_internal_r+0x888>
 80094f0:	d8801f17 	ldw	r2,124(sp)
 80094f4:	d9002784 	addi	r4,sp,158
 80094f8:	18c00044 	addi	r3,r3,1
 80094fc:	10800044 	addi	r2,r2,1
 8009500:	41000015 	stw	r4,0(r8)
 8009504:	01000044 	movi	r4,1
 8009508:	41000115 	stw	r4,4(r8)
 800950c:	d8c02015 	stw	r3,128(sp)
 8009510:	d8801f15 	stw	r2,124(sp)
 8009514:	010001c4 	movi	r4,7
 8009518:	20823c16 	blt	r4,r2,8009e0c <___vfprintf_internal_r+0x1174>
 800951c:	42000204 	addi	r8,r8,8
 8009520:	d8802b17 	ldw	r2,172(sp)
 8009524:	10000c26 	beq	r2,zero,8009558 <___vfprintf_internal_r+0x8c0>
 8009528:	d8801f17 	ldw	r2,124(sp)
 800952c:	d9002704 	addi	r4,sp,156
 8009530:	18c00084 	addi	r3,r3,2
 8009534:	10800044 	addi	r2,r2,1
 8009538:	41000015 	stw	r4,0(r8)
 800953c:	01000084 	movi	r4,2
 8009540:	41000115 	stw	r4,4(r8)
 8009544:	d8c02015 	stw	r3,128(sp)
 8009548:	d8801f15 	stw	r2,124(sp)
 800954c:	010001c4 	movi	r4,7
 8009550:	20823616 	blt	r4,r2,8009e2c <___vfprintf_internal_r+0x1194>
 8009554:	42000204 	addi	r8,r8,8
 8009558:	d9003017 	ldw	r4,192(sp)
 800955c:	00802004 	movi	r2,128
 8009560:	20819926 	beq	r4,r2,8009bc8 <___vfprintf_internal_r+0xf30>
 8009564:	d9402917 	ldw	r5,164(sp)
 8009568:	d8802e17 	ldw	r2,184(sp)
 800956c:	28adc83a 	sub	r22,r5,r2
 8009570:	0580310e 	bge	zero,r22,8009638 <___vfprintf_internal_r+0x9a0>
 8009574:	07000404 	movi	fp,16
 8009578:	d8801f17 	ldw	r2,124(sp)
 800957c:	e584140e 	bge	fp,r22,800a5d0 <___vfprintf_internal_r+0x1938>
 8009580:	014200b4 	movhi	r5,2050
 8009584:	297f5d04 	addi	r5,r5,-652
 8009588:	dc402915 	stw	r17,164(sp)
 800958c:	d9402b15 	stw	r5,172(sp)
 8009590:	b023883a 	mov	r17,r22
 8009594:	04c001c4 	movi	r19,7
 8009598:	a82d883a 	mov	r22,r21
 800959c:	902b883a 	mov	r21,r18
 80095a0:	8025883a 	mov	r18,r16
 80095a4:	dc002c17 	ldw	r16,176(sp)
 80095a8:	00000306 	br	80095b8 <___vfprintf_internal_r+0x920>
 80095ac:	8c7ffc04 	addi	r17,r17,-16
 80095b0:	42000204 	addi	r8,r8,8
 80095b4:	e440110e 	bge	fp,r17,80095fc <___vfprintf_internal_r+0x964>
 80095b8:	18c00404 	addi	r3,r3,16
 80095bc:	10800044 	addi	r2,r2,1
 80095c0:	45000015 	stw	r20,0(r8)
 80095c4:	47000115 	stw	fp,4(r8)
 80095c8:	d8c02015 	stw	r3,128(sp)
 80095cc:	d8801f15 	stw	r2,124(sp)
 80095d0:	98bff60e 	bge	r19,r2,80095ac <__alt_data_end+0xf80095ac>
 80095d4:	d9801e04 	addi	r6,sp,120
 80095d8:	b80b883a 	mov	r5,r23
 80095dc:	8009883a 	mov	r4,r16
 80095e0:	80164b00 	call	80164b0 <__sprint_r>
 80095e4:	103eae1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 80095e8:	8c7ffc04 	addi	r17,r17,-16
 80095ec:	d8c02017 	ldw	r3,128(sp)
 80095f0:	d8801f17 	ldw	r2,124(sp)
 80095f4:	da000404 	addi	r8,sp,16
 80095f8:	e47fef16 	blt	fp,r17,80095b8 <__alt_data_end+0xf80095b8>
 80095fc:	9021883a 	mov	r16,r18
 8009600:	a825883a 	mov	r18,r21
 8009604:	b02b883a 	mov	r21,r22
 8009608:	882d883a 	mov	r22,r17
 800960c:	dc402917 	ldw	r17,164(sp)
 8009610:	d9002b17 	ldw	r4,172(sp)
 8009614:	1d87883a 	add	r3,r3,r22
 8009618:	10800044 	addi	r2,r2,1
 800961c:	41000015 	stw	r4,0(r8)
 8009620:	45800115 	stw	r22,4(r8)
 8009624:	d8c02015 	stw	r3,128(sp)
 8009628:	d8801f15 	stw	r2,124(sp)
 800962c:	010001c4 	movi	r4,7
 8009630:	2081ee16 	blt	r4,r2,8009dec <___vfprintf_internal_r+0x1154>
 8009634:	42000204 	addi	r8,r8,8
 8009638:	9080400c 	andi	r2,r18,256
 800963c:	1001181e 	bne	r2,zero,8009aa0 <___vfprintf_internal_r+0xe08>
 8009640:	d9402e17 	ldw	r5,184(sp)
 8009644:	d8801f17 	ldw	r2,124(sp)
 8009648:	44000015 	stw	r16,0(r8)
 800964c:	1947883a 	add	r3,r3,r5
 8009650:	10800044 	addi	r2,r2,1
 8009654:	41400115 	stw	r5,4(r8)
 8009658:	d8c02015 	stw	r3,128(sp)
 800965c:	d8801f15 	stw	r2,124(sp)
 8009660:	010001c4 	movi	r4,7
 8009664:	2081d316 	blt	r4,r2,8009db4 <___vfprintf_internal_r+0x111c>
 8009668:	42000204 	addi	r8,r8,8
 800966c:	9480010c 	andi	r18,r18,4
 8009670:	90003226 	beq	r18,zero,800973c <___vfprintf_internal_r+0xaa4>
 8009674:	d9403117 	ldw	r5,196(sp)
 8009678:	d8802a17 	ldw	r2,168(sp)
 800967c:	28a1c83a 	sub	r16,r5,r2
 8009680:	04002e0e 	bge	zero,r16,800973c <___vfprintf_internal_r+0xaa4>
 8009684:	04400404 	movi	r17,16
 8009688:	d8801f17 	ldw	r2,124(sp)
 800968c:	8c04a20e 	bge	r17,r16,800a918 <___vfprintf_internal_r+0x1c80>
 8009690:	014200b4 	movhi	r5,2050
 8009694:	297f6104 	addi	r5,r5,-636
 8009698:	d9403515 	stw	r5,212(sp)
 800969c:	048001c4 	movi	r18,7
 80096a0:	dcc02c17 	ldw	r19,176(sp)
 80096a4:	00000306 	br	80096b4 <___vfprintf_internal_r+0xa1c>
 80096a8:	843ffc04 	addi	r16,r16,-16
 80096ac:	42000204 	addi	r8,r8,8
 80096b0:	8c00130e 	bge	r17,r16,8009700 <___vfprintf_internal_r+0xa68>
 80096b4:	010200b4 	movhi	r4,2050
 80096b8:	18c00404 	addi	r3,r3,16
 80096bc:	10800044 	addi	r2,r2,1
 80096c0:	213f6104 	addi	r4,r4,-636
 80096c4:	41000015 	stw	r4,0(r8)
 80096c8:	44400115 	stw	r17,4(r8)
 80096cc:	d8c02015 	stw	r3,128(sp)
 80096d0:	d8801f15 	stw	r2,124(sp)
 80096d4:	90bff40e 	bge	r18,r2,80096a8 <__alt_data_end+0xf80096a8>
 80096d8:	d9801e04 	addi	r6,sp,120
 80096dc:	b80b883a 	mov	r5,r23
 80096e0:	9809883a 	mov	r4,r19
 80096e4:	80164b00 	call	80164b0 <__sprint_r>
 80096e8:	103e6d1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 80096ec:	843ffc04 	addi	r16,r16,-16
 80096f0:	d8c02017 	ldw	r3,128(sp)
 80096f4:	d8801f17 	ldw	r2,124(sp)
 80096f8:	da000404 	addi	r8,sp,16
 80096fc:	8c3fed16 	blt	r17,r16,80096b4 <__alt_data_end+0xf80096b4>
 8009700:	d9403517 	ldw	r5,212(sp)
 8009704:	1c07883a 	add	r3,r3,r16
 8009708:	10800044 	addi	r2,r2,1
 800970c:	41400015 	stw	r5,0(r8)
 8009710:	44000115 	stw	r16,4(r8)
 8009714:	d8c02015 	stw	r3,128(sp)
 8009718:	d8801f15 	stw	r2,124(sp)
 800971c:	010001c4 	movi	r4,7
 8009720:	2080060e 	bge	r4,r2,800973c <___vfprintf_internal_r+0xaa4>
 8009724:	d9002c17 	ldw	r4,176(sp)
 8009728:	d9801e04 	addi	r6,sp,120
 800972c:	b80b883a 	mov	r5,r23
 8009730:	80164b00 	call	80164b0 <__sprint_r>
 8009734:	103e5a1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009738:	d8c02017 	ldw	r3,128(sp)
 800973c:	d8803117 	ldw	r2,196(sp)
 8009740:	d9002a17 	ldw	r4,168(sp)
 8009744:	1100010e 	bge	r2,r4,800974c <___vfprintf_internal_r+0xab4>
 8009748:	2005883a 	mov	r2,r4
 800974c:	d9402f17 	ldw	r5,188(sp)
 8009750:	288b883a 	add	r5,r5,r2
 8009754:	d9402f15 	stw	r5,188(sp)
 8009758:	18019e1e 	bne	r3,zero,8009dd4 <___vfprintf_internal_r+0x113c>
 800975c:	a8800007 	ldb	r2,0(r21)
 8009760:	d8001f15 	stw	zero,124(sp)
 8009764:	da000404 	addi	r8,sp,16
 8009768:	103d851e 	bne	r2,zero,8008d80 <__alt_data_end+0xf8008d80>
 800976c:	a821883a 	mov	r16,r21
 8009770:	003d9b06 	br	8008de0 <__alt_data_end+0xf8008de0>
 8009774:	18c03fcc 	andi	r3,r3,255
 8009778:	1805c11e 	bne	r3,zero,800ae80 <___vfprintf_internal_r+0x21e8>
 800977c:	94800414 	ori	r18,r18,16
 8009780:	9080080c 	andi	r2,r18,32
 8009784:	10020c26 	beq	r2,zero,8009fb8 <___vfprintf_internal_r+0x1320>
 8009788:	d8802d17 	ldw	r2,180(sp)
 800978c:	d9002917 	ldw	r4,164(sp)
 8009790:	d8002785 	stb	zero,158(sp)
 8009794:	10c00204 	addi	r3,r2,8
 8009798:	14c00017 	ldw	r19,0(r2)
 800979c:	15800117 	ldw	r22,4(r2)
 80097a0:	20040f16 	blt	r4,zero,800a7e0 <___vfprintf_internal_r+0x1b48>
 80097a4:	013fdfc4 	movi	r4,-129
 80097a8:	9d84b03a 	or	r2,r19,r22
 80097ac:	d8c02d15 	stw	r3,180(sp)
 80097b0:	9124703a 	and	r18,r18,r4
 80097b4:	0039883a 	mov	fp,zero
 80097b8:	103e891e 	bne	r2,zero,80091e0 <__alt_data_end+0xf80091e0>
 80097bc:	d9002917 	ldw	r4,164(sp)
 80097c0:	2002c11e 	bne	r4,zero,800a2c8 <___vfprintf_internal_r+0x1630>
 80097c4:	d8002915 	stw	zero,164(sp)
 80097c8:	d8002e15 	stw	zero,184(sp)
 80097cc:	dc001e04 	addi	r16,sp,120
 80097d0:	003ef806 	br	80093b4 <__alt_data_end+0xf80093b4>
 80097d4:	18c03fcc 	andi	r3,r3,255
 80097d8:	18059d1e 	bne	r3,zero,800ae50 <___vfprintf_internal_r+0x21b8>
 80097dc:	014200b4 	movhi	r5,2050
 80097e0:	297f3e04 	addi	r5,r5,-776
 80097e4:	d9403915 	stw	r5,228(sp)
 80097e8:	9080080c 	andi	r2,r18,32
 80097ec:	10005226 	beq	r2,zero,8009938 <___vfprintf_internal_r+0xca0>
 80097f0:	d8802d17 	ldw	r2,180(sp)
 80097f4:	14c00017 	ldw	r19,0(r2)
 80097f8:	15800117 	ldw	r22,4(r2)
 80097fc:	10800204 	addi	r2,r2,8
 8009800:	d8802d15 	stw	r2,180(sp)
 8009804:	9080004c 	andi	r2,r18,1
 8009808:	10019026 	beq	r2,zero,8009e4c <___vfprintf_internal_r+0x11b4>
 800980c:	9d84b03a 	or	r2,r19,r22
 8009810:	10036926 	beq	r2,zero,800a5b8 <___vfprintf_internal_r+0x1920>
 8009814:	d8c02917 	ldw	r3,164(sp)
 8009818:	00800c04 	movi	r2,48
 800981c:	d8802705 	stb	r2,156(sp)
 8009820:	dc402745 	stb	r17,157(sp)
 8009824:	d8002785 	stb	zero,158(sp)
 8009828:	90800094 	ori	r2,r18,2
 800982c:	18045d16 	blt	r3,zero,800a9a4 <___vfprintf_internal_r+0x1d0c>
 8009830:	00bfdfc4 	movi	r2,-129
 8009834:	90a4703a 	and	r18,r18,r2
 8009838:	94800094 	ori	r18,r18,2
 800983c:	0039883a 	mov	fp,zero
 8009840:	d9003917 	ldw	r4,228(sp)
 8009844:	dc001e04 	addi	r16,sp,120
 8009848:	988003cc 	andi	r2,r19,15
 800984c:	b006973a 	slli	r3,r22,28
 8009850:	2085883a 	add	r2,r4,r2
 8009854:	9826d13a 	srli	r19,r19,4
 8009858:	10800003 	ldbu	r2,0(r2)
 800985c:	b02cd13a 	srli	r22,r22,4
 8009860:	843fffc4 	addi	r16,r16,-1
 8009864:	1ce6b03a 	or	r19,r3,r19
 8009868:	80800005 	stb	r2,0(r16)
 800986c:	9d84b03a 	or	r2,r19,r22
 8009870:	103ff51e 	bne	r2,zero,8009848 <__alt_data_end+0xf8009848>
 8009874:	d8c02817 	ldw	r3,160(sp)
 8009878:	1c07c83a 	sub	r3,r3,r16
 800987c:	d8c02e15 	stw	r3,184(sp)
 8009880:	003ecc06 	br	80093b4 <__alt_data_end+0xf80093b4>
 8009884:	18c03fcc 	andi	r3,r3,255
 8009888:	183e9f26 	beq	r3,zero,8009308 <__alt_data_end+0xf8009308>
 800988c:	d9c02785 	stb	r7,158(sp)
 8009890:	003e9d06 	br	8009308 <__alt_data_end+0xf8009308>
 8009894:	00c00044 	movi	r3,1
 8009898:	01c00ac4 	movi	r7,43
 800989c:	ac400007 	ldb	r17,0(r21)
 80098a0:	003d5e06 	br	8008e1c <__alt_data_end+0xf8008e1c>
 80098a4:	94800814 	ori	r18,r18,32
 80098a8:	ac400007 	ldb	r17,0(r21)
 80098ac:	003d5b06 	br	8008e1c <__alt_data_end+0xf8008e1c>
 80098b0:	d8c02d17 	ldw	r3,180(sp)
 80098b4:	d8002785 	stb	zero,158(sp)
 80098b8:	1c000017 	ldw	r16,0(r3)
 80098bc:	1cc00104 	addi	r19,r3,4
 80098c0:	80041926 	beq	r16,zero,800a928 <___vfprintf_internal_r+0x1c90>
 80098c4:	d9002917 	ldw	r4,164(sp)
 80098c8:	2003d016 	blt	r4,zero,800a80c <___vfprintf_internal_r+0x1b74>
 80098cc:	200d883a 	mov	r6,r4
 80098d0:	000b883a 	mov	r5,zero
 80098d4:	8009883a 	mov	r4,r16
 80098d8:	da003d15 	stw	r8,244(sp)
 80098dc:	800faf00 	call	800faf0 <memchr>
 80098e0:	da003d17 	ldw	r8,244(sp)
 80098e4:	10045426 	beq	r2,zero,800aa38 <___vfprintf_internal_r+0x1da0>
 80098e8:	1405c83a 	sub	r2,r2,r16
 80098ec:	d8802e15 	stw	r2,184(sp)
 80098f0:	1003cc16 	blt	r2,zero,800a824 <___vfprintf_internal_r+0x1b8c>
 80098f4:	df002783 	ldbu	fp,158(sp)
 80098f8:	d8802a15 	stw	r2,168(sp)
 80098fc:	dcc02d15 	stw	r19,180(sp)
 8009900:	d8002915 	stw	zero,164(sp)
 8009904:	d8003215 	stw	zero,200(sp)
 8009908:	003eb006 	br	80093cc <__alt_data_end+0xf80093cc>
 800990c:	18c03fcc 	andi	r3,r3,255
 8009910:	183f9b26 	beq	r3,zero,8009780 <__alt_data_end+0xf8009780>
 8009914:	d9c02785 	stb	r7,158(sp)
 8009918:	003f9906 	br	8009780 <__alt_data_end+0xf8009780>
 800991c:	18c03fcc 	andi	r3,r3,255
 8009920:	1805551e 	bne	r3,zero,800ae78 <___vfprintf_internal_r+0x21e0>
 8009924:	014200b4 	movhi	r5,2050
 8009928:	297f4304 	addi	r5,r5,-756
 800992c:	d9403915 	stw	r5,228(sp)
 8009930:	9080080c 	andi	r2,r18,32
 8009934:	103fae1e 	bne	r2,zero,80097f0 <__alt_data_end+0xf80097f0>
 8009938:	9080040c 	andi	r2,r18,16
 800993c:	1002de26 	beq	r2,zero,800a4b8 <___vfprintf_internal_r+0x1820>
 8009940:	d8c02d17 	ldw	r3,180(sp)
 8009944:	002d883a 	mov	r22,zero
 8009948:	1cc00017 	ldw	r19,0(r3)
 800994c:	18c00104 	addi	r3,r3,4
 8009950:	d8c02d15 	stw	r3,180(sp)
 8009954:	003fab06 	br	8009804 <__alt_data_end+0xf8009804>
 8009958:	38803fcc 	andi	r2,r7,255
 800995c:	1080201c 	xori	r2,r2,128
 8009960:	10bfe004 	addi	r2,r2,-128
 8009964:	1002d21e 	bne	r2,zero,800a4b0 <___vfprintf_internal_r+0x1818>
 8009968:	00c00044 	movi	r3,1
 800996c:	01c00804 	movi	r7,32
 8009970:	ac400007 	ldb	r17,0(r21)
 8009974:	003d2906 	br	8008e1c <__alt_data_end+0xf8008e1c>
 8009978:	94800054 	ori	r18,r18,1
 800997c:	ac400007 	ldb	r17,0(r21)
 8009980:	003d2606 	br	8008e1c <__alt_data_end+0xf8008e1c>
 8009984:	18c03fcc 	andi	r3,r3,255
 8009988:	183e0526 	beq	r3,zero,80091a0 <__alt_data_end+0xf80091a0>
 800998c:	d9c02785 	stb	r7,158(sp)
 8009990:	003e0306 	br	80091a0 <__alt_data_end+0xf80091a0>
 8009994:	94801014 	ori	r18,r18,64
 8009998:	ac400007 	ldb	r17,0(r21)
 800999c:	003d1f06 	br	8008e1c <__alt_data_end+0xf8008e1c>
 80099a0:	ac400007 	ldb	r17,0(r21)
 80099a4:	8a438726 	beq	r17,r9,800a7c4 <___vfprintf_internal_r+0x1b2c>
 80099a8:	94800414 	ori	r18,r18,16
 80099ac:	003d1b06 	br	8008e1c <__alt_data_end+0xf8008e1c>
 80099b0:	18c03fcc 	andi	r3,r3,255
 80099b4:	1805341e 	bne	r3,zero,800ae88 <___vfprintf_internal_r+0x21f0>
 80099b8:	9080080c 	andi	r2,r18,32
 80099bc:	1002cd26 	beq	r2,zero,800a4f4 <___vfprintf_internal_r+0x185c>
 80099c0:	d9402d17 	ldw	r5,180(sp)
 80099c4:	d9002f17 	ldw	r4,188(sp)
 80099c8:	28800017 	ldw	r2,0(r5)
 80099cc:	2007d7fa 	srai	r3,r4,31
 80099d0:	29400104 	addi	r5,r5,4
 80099d4:	d9402d15 	stw	r5,180(sp)
 80099d8:	11000015 	stw	r4,0(r2)
 80099dc:	10c00115 	stw	r3,4(r2)
 80099e0:	003ce506 	br	8008d78 <__alt_data_end+0xf8008d78>
 80099e4:	d8c02d17 	ldw	r3,180(sp)
 80099e8:	d9002d17 	ldw	r4,180(sp)
 80099ec:	d8002785 	stb	zero,158(sp)
 80099f0:	18800017 	ldw	r2,0(r3)
 80099f4:	21000104 	addi	r4,r4,4
 80099f8:	00c00044 	movi	r3,1
 80099fc:	d8c02a15 	stw	r3,168(sp)
 8009a00:	d8801405 	stb	r2,80(sp)
 8009a04:	d9002d15 	stw	r4,180(sp)
 8009a08:	d8c02e15 	stw	r3,184(sp)
 8009a0c:	d8002915 	stw	zero,164(sp)
 8009a10:	d8003215 	stw	zero,200(sp)
 8009a14:	dc001404 	addi	r16,sp,80
 8009a18:	0039883a 	mov	fp,zero
 8009a1c:	003e7206 	br	80093e8 <__alt_data_end+0xf80093e8>
 8009a20:	010200b4 	movhi	r4,2050
 8009a24:	213f4304 	addi	r4,r4,-756
 8009a28:	0039883a 	mov	fp,zero
 8009a2c:	d9003915 	stw	r4,228(sp)
 8009a30:	04401e04 	movi	r17,120
 8009a34:	003f8206 	br	8009840 <__alt_data_end+0xf8009840>
 8009a38:	18c03fcc 	andi	r3,r3,255
 8009a3c:	1805061e 	bne	r3,zero,800ae58 <___vfprintf_internal_r+0x21c0>
 8009a40:	883d9126 	beq	r17,zero,8009088 <__alt_data_end+0xf8009088>
 8009a44:	00c00044 	movi	r3,1
 8009a48:	d8c02a15 	stw	r3,168(sp)
 8009a4c:	dc401405 	stb	r17,80(sp)
 8009a50:	d8002785 	stb	zero,158(sp)
 8009a54:	003fec06 	br	8009a08 <__alt_data_end+0xf8009a08>
 8009a58:	014200b4 	movhi	r5,2050
 8009a5c:	297f4304 	addi	r5,r5,-756
 8009a60:	d9403915 	stw	r5,228(sp)
 8009a64:	d8c02d15 	stw	r3,180(sp)
 8009a68:	1025883a 	mov	r18,r2
 8009a6c:	04401e04 	movi	r17,120
 8009a70:	9d84b03a 	or	r2,r19,r22
 8009a74:	1000fc1e 	bne	r2,zero,8009e68 <___vfprintf_internal_r+0x11d0>
 8009a78:	0039883a 	mov	fp,zero
 8009a7c:	00800084 	movi	r2,2
 8009a80:	10803fcc 	andi	r2,r2,255
 8009a84:	00c00044 	movi	r3,1
 8009a88:	10c20f26 	beq	r2,r3,800a2c8 <___vfprintf_internal_r+0x1630>
 8009a8c:	00c00084 	movi	r3,2
 8009a90:	10fd6326 	beq	r2,r3,8009020 <__alt_data_end+0xf8009020>
 8009a94:	003e2d06 	br	800934c <__alt_data_end+0xf800934c>
 8009a98:	d8c02017 	ldw	r3,128(sp)
 8009a9c:	003e9306 	br	80094ec <__alt_data_end+0xf80094ec>
 8009aa0:	00801944 	movi	r2,101
 8009aa4:	14407e0e 	bge	r2,r17,8009ca0 <___vfprintf_internal_r+0x1008>
 8009aa8:	d9003617 	ldw	r4,216(sp)
 8009aac:	d9403817 	ldw	r5,224(sp)
 8009ab0:	000d883a 	mov	r6,zero
 8009ab4:	000f883a 	mov	r7,zero
 8009ab8:	d8c03c15 	stw	r3,240(sp)
 8009abc:	da003d15 	stw	r8,244(sp)
 8009ac0:	801ad2c0 	call	801ad2c <__eqdf2>
 8009ac4:	d8c03c17 	ldw	r3,240(sp)
 8009ac8:	da003d17 	ldw	r8,244(sp)
 8009acc:	1000f71e 	bne	r2,zero,8009eac <___vfprintf_internal_r+0x1214>
 8009ad0:	d8801f17 	ldw	r2,124(sp)
 8009ad4:	010200b4 	movhi	r4,2050
 8009ad8:	213f4a04 	addi	r4,r4,-728
 8009adc:	18c00044 	addi	r3,r3,1
 8009ae0:	10800044 	addi	r2,r2,1
 8009ae4:	41000015 	stw	r4,0(r8)
 8009ae8:	01000044 	movi	r4,1
 8009aec:	41000115 	stw	r4,4(r8)
 8009af0:	d8c02015 	stw	r3,128(sp)
 8009af4:	d8801f15 	stw	r2,124(sp)
 8009af8:	010001c4 	movi	r4,7
 8009afc:	2082b816 	blt	r4,r2,800a5e0 <___vfprintf_internal_r+0x1948>
 8009b00:	42000204 	addi	r8,r8,8
 8009b04:	d8802617 	ldw	r2,152(sp)
 8009b08:	d9403317 	ldw	r5,204(sp)
 8009b0c:	11400216 	blt	r2,r5,8009b18 <___vfprintf_internal_r+0xe80>
 8009b10:	9080004c 	andi	r2,r18,1
 8009b14:	103ed526 	beq	r2,zero,800966c <__alt_data_end+0xf800966c>
 8009b18:	d8803717 	ldw	r2,220(sp)
 8009b1c:	d9003417 	ldw	r4,208(sp)
 8009b20:	d9403717 	ldw	r5,220(sp)
 8009b24:	1887883a 	add	r3,r3,r2
 8009b28:	d8801f17 	ldw	r2,124(sp)
 8009b2c:	41000015 	stw	r4,0(r8)
 8009b30:	41400115 	stw	r5,4(r8)
 8009b34:	10800044 	addi	r2,r2,1
 8009b38:	d8c02015 	stw	r3,128(sp)
 8009b3c:	d8801f15 	stw	r2,124(sp)
 8009b40:	010001c4 	movi	r4,7
 8009b44:	20832916 	blt	r4,r2,800a7ec <___vfprintf_internal_r+0x1b54>
 8009b48:	42000204 	addi	r8,r8,8
 8009b4c:	d8803317 	ldw	r2,204(sp)
 8009b50:	143fffc4 	addi	r16,r2,-1
 8009b54:	043ec50e 	bge	zero,r16,800966c <__alt_data_end+0xf800966c>
 8009b58:	04400404 	movi	r17,16
 8009b5c:	d8801f17 	ldw	r2,124(sp)
 8009b60:	8c00880e 	bge	r17,r16,8009d84 <___vfprintf_internal_r+0x10ec>
 8009b64:	014200b4 	movhi	r5,2050
 8009b68:	297f5d04 	addi	r5,r5,-652
 8009b6c:	d9402b15 	stw	r5,172(sp)
 8009b70:	058001c4 	movi	r22,7
 8009b74:	dcc02c17 	ldw	r19,176(sp)
 8009b78:	00000306 	br	8009b88 <___vfprintf_internal_r+0xef0>
 8009b7c:	42000204 	addi	r8,r8,8
 8009b80:	843ffc04 	addi	r16,r16,-16
 8009b84:	8c00820e 	bge	r17,r16,8009d90 <___vfprintf_internal_r+0x10f8>
 8009b88:	18c00404 	addi	r3,r3,16
 8009b8c:	10800044 	addi	r2,r2,1
 8009b90:	45000015 	stw	r20,0(r8)
 8009b94:	44400115 	stw	r17,4(r8)
 8009b98:	d8c02015 	stw	r3,128(sp)
 8009b9c:	d8801f15 	stw	r2,124(sp)
 8009ba0:	b0bff60e 	bge	r22,r2,8009b7c <__alt_data_end+0xf8009b7c>
 8009ba4:	d9801e04 	addi	r6,sp,120
 8009ba8:	b80b883a 	mov	r5,r23
 8009bac:	9809883a 	mov	r4,r19
 8009bb0:	80164b00 	call	80164b0 <__sprint_r>
 8009bb4:	103d3a1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009bb8:	d8c02017 	ldw	r3,128(sp)
 8009bbc:	d8801f17 	ldw	r2,124(sp)
 8009bc0:	da000404 	addi	r8,sp,16
 8009bc4:	003fee06 	br	8009b80 <__alt_data_end+0xf8009b80>
 8009bc8:	d9403117 	ldw	r5,196(sp)
 8009bcc:	d8802a17 	ldw	r2,168(sp)
 8009bd0:	28adc83a 	sub	r22,r5,r2
 8009bd4:	05be630e 	bge	zero,r22,8009564 <__alt_data_end+0xf8009564>
 8009bd8:	07000404 	movi	fp,16
 8009bdc:	d8801f17 	ldw	r2,124(sp)
 8009be0:	e5838f0e 	bge	fp,r22,800aa20 <___vfprintf_internal_r+0x1d88>
 8009be4:	014200b4 	movhi	r5,2050
 8009be8:	297f5d04 	addi	r5,r5,-652
 8009bec:	dc403015 	stw	r17,192(sp)
 8009bf0:	d9402b15 	stw	r5,172(sp)
 8009bf4:	b023883a 	mov	r17,r22
 8009bf8:	04c001c4 	movi	r19,7
 8009bfc:	a82d883a 	mov	r22,r21
 8009c00:	902b883a 	mov	r21,r18
 8009c04:	8025883a 	mov	r18,r16
 8009c08:	dc002c17 	ldw	r16,176(sp)
 8009c0c:	00000306 	br	8009c1c <___vfprintf_internal_r+0xf84>
 8009c10:	8c7ffc04 	addi	r17,r17,-16
 8009c14:	42000204 	addi	r8,r8,8
 8009c18:	e440110e 	bge	fp,r17,8009c60 <___vfprintf_internal_r+0xfc8>
 8009c1c:	18c00404 	addi	r3,r3,16
 8009c20:	10800044 	addi	r2,r2,1
 8009c24:	45000015 	stw	r20,0(r8)
 8009c28:	47000115 	stw	fp,4(r8)
 8009c2c:	d8c02015 	stw	r3,128(sp)
 8009c30:	d8801f15 	stw	r2,124(sp)
 8009c34:	98bff60e 	bge	r19,r2,8009c10 <__alt_data_end+0xf8009c10>
 8009c38:	d9801e04 	addi	r6,sp,120
 8009c3c:	b80b883a 	mov	r5,r23
 8009c40:	8009883a 	mov	r4,r16
 8009c44:	80164b00 	call	80164b0 <__sprint_r>
 8009c48:	103d151e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009c4c:	8c7ffc04 	addi	r17,r17,-16
 8009c50:	d8c02017 	ldw	r3,128(sp)
 8009c54:	d8801f17 	ldw	r2,124(sp)
 8009c58:	da000404 	addi	r8,sp,16
 8009c5c:	e47fef16 	blt	fp,r17,8009c1c <__alt_data_end+0xf8009c1c>
 8009c60:	9021883a 	mov	r16,r18
 8009c64:	a825883a 	mov	r18,r21
 8009c68:	b02b883a 	mov	r21,r22
 8009c6c:	882d883a 	mov	r22,r17
 8009c70:	dc403017 	ldw	r17,192(sp)
 8009c74:	d9002b17 	ldw	r4,172(sp)
 8009c78:	1d87883a 	add	r3,r3,r22
 8009c7c:	10800044 	addi	r2,r2,1
 8009c80:	41000015 	stw	r4,0(r8)
 8009c84:	45800115 	stw	r22,4(r8)
 8009c88:	d8c02015 	stw	r3,128(sp)
 8009c8c:	d8801f15 	stw	r2,124(sp)
 8009c90:	010001c4 	movi	r4,7
 8009c94:	20818e16 	blt	r4,r2,800a2d0 <___vfprintf_internal_r+0x1638>
 8009c98:	42000204 	addi	r8,r8,8
 8009c9c:	003e3106 	br	8009564 <__alt_data_end+0xf8009564>
 8009ca0:	d9403317 	ldw	r5,204(sp)
 8009ca4:	00800044 	movi	r2,1
 8009ca8:	18c00044 	addi	r3,r3,1
 8009cac:	1141530e 	bge	r2,r5,800a1fc <___vfprintf_internal_r+0x1564>
 8009cb0:	dc401f17 	ldw	r17,124(sp)
 8009cb4:	00800044 	movi	r2,1
 8009cb8:	40800115 	stw	r2,4(r8)
 8009cbc:	8c400044 	addi	r17,r17,1
 8009cc0:	44000015 	stw	r16,0(r8)
 8009cc4:	d8c02015 	stw	r3,128(sp)
 8009cc8:	dc401f15 	stw	r17,124(sp)
 8009ccc:	008001c4 	movi	r2,7
 8009cd0:	14416b16 	blt	r2,r17,800a280 <___vfprintf_internal_r+0x15e8>
 8009cd4:	42000204 	addi	r8,r8,8
 8009cd8:	d8803717 	ldw	r2,220(sp)
 8009cdc:	d9003417 	ldw	r4,208(sp)
 8009ce0:	8c400044 	addi	r17,r17,1
 8009ce4:	10c7883a 	add	r3,r2,r3
 8009ce8:	40800115 	stw	r2,4(r8)
 8009cec:	41000015 	stw	r4,0(r8)
 8009cf0:	d8c02015 	stw	r3,128(sp)
 8009cf4:	dc401f15 	stw	r17,124(sp)
 8009cf8:	008001c4 	movi	r2,7
 8009cfc:	14416916 	blt	r2,r17,800a2a4 <___vfprintf_internal_r+0x160c>
 8009d00:	45800204 	addi	r22,r8,8
 8009d04:	d9003617 	ldw	r4,216(sp)
 8009d08:	d9403817 	ldw	r5,224(sp)
 8009d0c:	000d883a 	mov	r6,zero
 8009d10:	000f883a 	mov	r7,zero
 8009d14:	d8c03c15 	stw	r3,240(sp)
 8009d18:	801ad2c0 	call	801ad2c <__eqdf2>
 8009d1c:	d8c03c17 	ldw	r3,240(sp)
 8009d20:	1000bc26 	beq	r2,zero,800a014 <___vfprintf_internal_r+0x137c>
 8009d24:	d9403317 	ldw	r5,204(sp)
 8009d28:	84000044 	addi	r16,r16,1
 8009d2c:	8c400044 	addi	r17,r17,1
 8009d30:	28bfffc4 	addi	r2,r5,-1
 8009d34:	1887883a 	add	r3,r3,r2
 8009d38:	b0800115 	stw	r2,4(r22)
 8009d3c:	b4000015 	stw	r16,0(r22)
 8009d40:	d8c02015 	stw	r3,128(sp)
 8009d44:	dc401f15 	stw	r17,124(sp)
 8009d48:	008001c4 	movi	r2,7
 8009d4c:	14414316 	blt	r2,r17,800a25c <___vfprintf_internal_r+0x15c4>
 8009d50:	b5800204 	addi	r22,r22,8
 8009d54:	d9003a17 	ldw	r4,232(sp)
 8009d58:	df0022c4 	addi	fp,sp,139
 8009d5c:	8c400044 	addi	r17,r17,1
 8009d60:	20c7883a 	add	r3,r4,r3
 8009d64:	b7000015 	stw	fp,0(r22)
 8009d68:	b1000115 	stw	r4,4(r22)
 8009d6c:	d8c02015 	stw	r3,128(sp)
 8009d70:	dc401f15 	stw	r17,124(sp)
 8009d74:	008001c4 	movi	r2,7
 8009d78:	14400e16 	blt	r2,r17,8009db4 <___vfprintf_internal_r+0x111c>
 8009d7c:	b2000204 	addi	r8,r22,8
 8009d80:	003e3a06 	br	800966c <__alt_data_end+0xf800966c>
 8009d84:	010200b4 	movhi	r4,2050
 8009d88:	213f5d04 	addi	r4,r4,-652
 8009d8c:	d9002b15 	stw	r4,172(sp)
 8009d90:	d9002b17 	ldw	r4,172(sp)
 8009d94:	1c07883a 	add	r3,r3,r16
 8009d98:	44000115 	stw	r16,4(r8)
 8009d9c:	41000015 	stw	r4,0(r8)
 8009da0:	10800044 	addi	r2,r2,1
 8009da4:	d8c02015 	stw	r3,128(sp)
 8009da8:	d8801f15 	stw	r2,124(sp)
 8009dac:	010001c4 	movi	r4,7
 8009db0:	20be2d0e 	bge	r4,r2,8009668 <__alt_data_end+0xf8009668>
 8009db4:	d9002c17 	ldw	r4,176(sp)
 8009db8:	d9801e04 	addi	r6,sp,120
 8009dbc:	b80b883a 	mov	r5,r23
 8009dc0:	80164b00 	call	80164b0 <__sprint_r>
 8009dc4:	103cb61e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009dc8:	d8c02017 	ldw	r3,128(sp)
 8009dcc:	da000404 	addi	r8,sp,16
 8009dd0:	003e2606 	br	800966c <__alt_data_end+0xf800966c>
 8009dd4:	d9002c17 	ldw	r4,176(sp)
 8009dd8:	d9801e04 	addi	r6,sp,120
 8009ddc:	b80b883a 	mov	r5,r23
 8009de0:	80164b00 	call	80164b0 <__sprint_r>
 8009de4:	103e5d26 	beq	r2,zero,800975c <__alt_data_end+0xf800975c>
 8009de8:	003cad06 	br	80090a0 <__alt_data_end+0xf80090a0>
 8009dec:	d9002c17 	ldw	r4,176(sp)
 8009df0:	d9801e04 	addi	r6,sp,120
 8009df4:	b80b883a 	mov	r5,r23
 8009df8:	80164b00 	call	80164b0 <__sprint_r>
 8009dfc:	103ca81e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009e00:	d8c02017 	ldw	r3,128(sp)
 8009e04:	da000404 	addi	r8,sp,16
 8009e08:	003e0b06 	br	8009638 <__alt_data_end+0xf8009638>
 8009e0c:	d9002c17 	ldw	r4,176(sp)
 8009e10:	d9801e04 	addi	r6,sp,120
 8009e14:	b80b883a 	mov	r5,r23
 8009e18:	80164b00 	call	80164b0 <__sprint_r>
 8009e1c:	103ca01e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009e20:	d8c02017 	ldw	r3,128(sp)
 8009e24:	da000404 	addi	r8,sp,16
 8009e28:	003dbd06 	br	8009520 <__alt_data_end+0xf8009520>
 8009e2c:	d9002c17 	ldw	r4,176(sp)
 8009e30:	d9801e04 	addi	r6,sp,120
 8009e34:	b80b883a 	mov	r5,r23
 8009e38:	80164b00 	call	80164b0 <__sprint_r>
 8009e3c:	103c981e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009e40:	d8c02017 	ldw	r3,128(sp)
 8009e44:	da000404 	addi	r8,sp,16
 8009e48:	003dc306 	br	8009558 <__alt_data_end+0xf8009558>
 8009e4c:	d8802917 	ldw	r2,164(sp)
 8009e50:	d8002785 	stb	zero,158(sp)
 8009e54:	103f0616 	blt	r2,zero,8009a70 <__alt_data_end+0xf8009a70>
 8009e58:	00ffdfc4 	movi	r3,-129
 8009e5c:	9d84b03a 	or	r2,r19,r22
 8009e60:	90e4703a 	and	r18,r18,r3
 8009e64:	103c6b26 	beq	r2,zero,8009014 <__alt_data_end+0xf8009014>
 8009e68:	0039883a 	mov	fp,zero
 8009e6c:	003e7406 	br	8009840 <__alt_data_end+0xf8009840>
 8009e70:	9080040c 	andi	r2,r18,16
 8009e74:	1001b326 	beq	r2,zero,800a544 <___vfprintf_internal_r+0x18ac>
 8009e78:	d9002d17 	ldw	r4,180(sp)
 8009e7c:	d9402917 	ldw	r5,164(sp)
 8009e80:	d8002785 	stb	zero,158(sp)
 8009e84:	20800104 	addi	r2,r4,4
 8009e88:	24c00017 	ldw	r19,0(r4)
 8009e8c:	002d883a 	mov	r22,zero
 8009e90:	2801b516 	blt	r5,zero,800a568 <___vfprintf_internal_r+0x18d0>
 8009e94:	00ffdfc4 	movi	r3,-129
 8009e98:	d8802d15 	stw	r2,180(sp)
 8009e9c:	90e4703a 	and	r18,r18,r3
 8009ea0:	983d2726 	beq	r19,zero,8009340 <__alt_data_end+0xf8009340>
 8009ea4:	0039883a 	mov	fp,zero
 8009ea8:	003d2a06 	br	8009354 <__alt_data_end+0xf8009354>
 8009eac:	dc402617 	ldw	r17,152(sp)
 8009eb0:	0441d30e 	bge	zero,r17,800a600 <___vfprintf_internal_r+0x1968>
 8009eb4:	dc403217 	ldw	r17,200(sp)
 8009eb8:	d8803317 	ldw	r2,204(sp)
 8009ebc:	1440010e 	bge	r2,r17,8009ec4 <___vfprintf_internal_r+0x122c>
 8009ec0:	1023883a 	mov	r17,r2
 8009ec4:	04400a0e 	bge	zero,r17,8009ef0 <___vfprintf_internal_r+0x1258>
 8009ec8:	d8801f17 	ldw	r2,124(sp)
 8009ecc:	1c47883a 	add	r3,r3,r17
 8009ed0:	44000015 	stw	r16,0(r8)
 8009ed4:	10800044 	addi	r2,r2,1
 8009ed8:	44400115 	stw	r17,4(r8)
 8009edc:	d8c02015 	stw	r3,128(sp)
 8009ee0:	d8801f15 	stw	r2,124(sp)
 8009ee4:	010001c4 	movi	r4,7
 8009ee8:	20826516 	blt	r4,r2,800a880 <___vfprintf_internal_r+0x1be8>
 8009eec:	42000204 	addi	r8,r8,8
 8009ef0:	88026116 	blt	r17,zero,800a878 <___vfprintf_internal_r+0x1be0>
 8009ef4:	d9003217 	ldw	r4,200(sp)
 8009ef8:	2463c83a 	sub	r17,r4,r17
 8009efc:	04407b0e 	bge	zero,r17,800a0ec <___vfprintf_internal_r+0x1454>
 8009f00:	05800404 	movi	r22,16
 8009f04:	d8801f17 	ldw	r2,124(sp)
 8009f08:	b4419d0e 	bge	r22,r17,800a580 <___vfprintf_internal_r+0x18e8>
 8009f0c:	010200b4 	movhi	r4,2050
 8009f10:	213f5d04 	addi	r4,r4,-652
 8009f14:	d9002b15 	stw	r4,172(sp)
 8009f18:	070001c4 	movi	fp,7
 8009f1c:	dcc02c17 	ldw	r19,176(sp)
 8009f20:	00000306 	br	8009f30 <___vfprintf_internal_r+0x1298>
 8009f24:	42000204 	addi	r8,r8,8
 8009f28:	8c7ffc04 	addi	r17,r17,-16
 8009f2c:	b441970e 	bge	r22,r17,800a58c <___vfprintf_internal_r+0x18f4>
 8009f30:	18c00404 	addi	r3,r3,16
 8009f34:	10800044 	addi	r2,r2,1
 8009f38:	45000015 	stw	r20,0(r8)
 8009f3c:	45800115 	stw	r22,4(r8)
 8009f40:	d8c02015 	stw	r3,128(sp)
 8009f44:	d8801f15 	stw	r2,124(sp)
 8009f48:	e0bff60e 	bge	fp,r2,8009f24 <__alt_data_end+0xf8009f24>
 8009f4c:	d9801e04 	addi	r6,sp,120
 8009f50:	b80b883a 	mov	r5,r23
 8009f54:	9809883a 	mov	r4,r19
 8009f58:	80164b00 	call	80164b0 <__sprint_r>
 8009f5c:	103c501e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009f60:	d8c02017 	ldw	r3,128(sp)
 8009f64:	d8801f17 	ldw	r2,124(sp)
 8009f68:	da000404 	addi	r8,sp,16
 8009f6c:	003fee06 	br	8009f28 <__alt_data_end+0xf8009f28>
 8009f70:	d9002c17 	ldw	r4,176(sp)
 8009f74:	d9801e04 	addi	r6,sp,120
 8009f78:	b80b883a 	mov	r5,r23
 8009f7c:	80164b00 	call	80164b0 <__sprint_r>
 8009f80:	103c471e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 8009f84:	d8c02017 	ldw	r3,128(sp)
 8009f88:	df002787 	ldb	fp,158(sp)
 8009f8c:	da000404 	addi	r8,sp,16
 8009f90:	003d5606 	br	80094ec <__alt_data_end+0xf80094ec>
 8009f94:	9080040c 	andi	r2,r18,16
 8009f98:	10016126 	beq	r2,zero,800a520 <___vfprintf_internal_r+0x1888>
 8009f9c:	d8802d17 	ldw	r2,180(sp)
 8009fa0:	14c00017 	ldw	r19,0(r2)
 8009fa4:	10800104 	addi	r2,r2,4
 8009fa8:	d8802d15 	stw	r2,180(sp)
 8009fac:	982dd7fa 	srai	r22,r19,31
 8009fb0:	b005883a 	mov	r2,r22
 8009fb4:	003c8206 	br	80091c0 <__alt_data_end+0xf80091c0>
 8009fb8:	9080040c 	andi	r2,r18,16
 8009fbc:	10003526 	beq	r2,zero,800a094 <___vfprintf_internal_r+0x13fc>
 8009fc0:	d9402d17 	ldw	r5,180(sp)
 8009fc4:	d8c02917 	ldw	r3,164(sp)
 8009fc8:	d8002785 	stb	zero,158(sp)
 8009fcc:	28800104 	addi	r2,r5,4
 8009fd0:	2cc00017 	ldw	r19,0(r5)
 8009fd4:	002d883a 	mov	r22,zero
 8009fd8:	18003716 	blt	r3,zero,800a0b8 <___vfprintf_internal_r+0x1420>
 8009fdc:	00ffdfc4 	movi	r3,-129
 8009fe0:	d8802d15 	stw	r2,180(sp)
 8009fe4:	90e4703a 	and	r18,r18,r3
 8009fe8:	0039883a 	mov	fp,zero
 8009fec:	983df326 	beq	r19,zero,80097bc <__alt_data_end+0xf80097bc>
 8009ff0:	00800244 	movi	r2,9
 8009ff4:	14fc7b36 	bltu	r2,r19,80091e4 <__alt_data_end+0xf80091e4>
 8009ff8:	d8c02817 	ldw	r3,160(sp)
 8009ffc:	dc001dc4 	addi	r16,sp,119
 800a000:	9cc00c04 	addi	r19,r19,48
 800a004:	1c07c83a 	sub	r3,r3,r16
 800a008:	dcc01dc5 	stb	r19,119(sp)
 800a00c:	d8c02e15 	stw	r3,184(sp)
 800a010:	003ce806 	br	80093b4 <__alt_data_end+0xf80093b4>
 800a014:	d8803317 	ldw	r2,204(sp)
 800a018:	143fffc4 	addi	r16,r2,-1
 800a01c:	043f4d0e 	bge	zero,r16,8009d54 <__alt_data_end+0xf8009d54>
 800a020:	07000404 	movi	fp,16
 800a024:	e400810e 	bge	fp,r16,800a22c <___vfprintf_internal_r+0x1594>
 800a028:	014200b4 	movhi	r5,2050
 800a02c:	297f5d04 	addi	r5,r5,-652
 800a030:	d9402b15 	stw	r5,172(sp)
 800a034:	01c001c4 	movi	r7,7
 800a038:	dcc02c17 	ldw	r19,176(sp)
 800a03c:	00000306 	br	800a04c <___vfprintf_internal_r+0x13b4>
 800a040:	b5800204 	addi	r22,r22,8
 800a044:	843ffc04 	addi	r16,r16,-16
 800a048:	e4007b0e 	bge	fp,r16,800a238 <___vfprintf_internal_r+0x15a0>
 800a04c:	18c00404 	addi	r3,r3,16
 800a050:	8c400044 	addi	r17,r17,1
 800a054:	b5000015 	stw	r20,0(r22)
 800a058:	b7000115 	stw	fp,4(r22)
 800a05c:	d8c02015 	stw	r3,128(sp)
 800a060:	dc401f15 	stw	r17,124(sp)
 800a064:	3c7ff60e 	bge	r7,r17,800a040 <__alt_data_end+0xf800a040>
 800a068:	d9801e04 	addi	r6,sp,120
 800a06c:	b80b883a 	mov	r5,r23
 800a070:	9809883a 	mov	r4,r19
 800a074:	d9c03c15 	stw	r7,240(sp)
 800a078:	80164b00 	call	80164b0 <__sprint_r>
 800a07c:	d9c03c17 	ldw	r7,240(sp)
 800a080:	103c071e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a084:	d8c02017 	ldw	r3,128(sp)
 800a088:	dc401f17 	ldw	r17,124(sp)
 800a08c:	dd800404 	addi	r22,sp,16
 800a090:	003fec06 	br	800a044 <__alt_data_end+0xf800a044>
 800a094:	9080100c 	andi	r2,r18,64
 800a098:	d8002785 	stb	zero,158(sp)
 800a09c:	10010e26 	beq	r2,zero,800a4d8 <___vfprintf_internal_r+0x1840>
 800a0a0:	d9002d17 	ldw	r4,180(sp)
 800a0a4:	d9402917 	ldw	r5,164(sp)
 800a0a8:	002d883a 	mov	r22,zero
 800a0ac:	20800104 	addi	r2,r4,4
 800a0b0:	24c0000b 	ldhu	r19,0(r4)
 800a0b4:	283fc90e 	bge	r5,zero,8009fdc <__alt_data_end+0xf8009fdc>
 800a0b8:	d8802d15 	stw	r2,180(sp)
 800a0bc:	0039883a 	mov	fp,zero
 800a0c0:	9d84b03a 	or	r2,r19,r22
 800a0c4:	103c461e 	bne	r2,zero,80091e0 <__alt_data_end+0xf80091e0>
 800a0c8:	00800044 	movi	r2,1
 800a0cc:	003e6c06 	br	8009a80 <__alt_data_end+0xf8009a80>
 800a0d0:	d9002c17 	ldw	r4,176(sp)
 800a0d4:	d9801e04 	addi	r6,sp,120
 800a0d8:	b80b883a 	mov	r5,r23
 800a0dc:	80164b00 	call	80164b0 <__sprint_r>
 800a0e0:	103bef1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a0e4:	d8c02017 	ldw	r3,128(sp)
 800a0e8:	da000404 	addi	r8,sp,16
 800a0ec:	d9003217 	ldw	r4,200(sp)
 800a0f0:	d8802617 	ldw	r2,152(sp)
 800a0f4:	d9403317 	ldw	r5,204(sp)
 800a0f8:	8123883a 	add	r17,r16,r4
 800a0fc:	11400216 	blt	r2,r5,800a108 <___vfprintf_internal_r+0x1470>
 800a100:	9100004c 	andi	r4,r18,1
 800a104:	20000d26 	beq	r4,zero,800a13c <___vfprintf_internal_r+0x14a4>
 800a108:	d9003717 	ldw	r4,220(sp)
 800a10c:	d9403417 	ldw	r5,208(sp)
 800a110:	1907883a 	add	r3,r3,r4
 800a114:	d9001f17 	ldw	r4,124(sp)
 800a118:	41400015 	stw	r5,0(r8)
 800a11c:	d9403717 	ldw	r5,220(sp)
 800a120:	21000044 	addi	r4,r4,1
 800a124:	d8c02015 	stw	r3,128(sp)
 800a128:	41400115 	stw	r5,4(r8)
 800a12c:	d9001f15 	stw	r4,124(sp)
 800a130:	014001c4 	movi	r5,7
 800a134:	2901e816 	blt	r5,r4,800a8d8 <___vfprintf_internal_r+0x1c40>
 800a138:	42000204 	addi	r8,r8,8
 800a13c:	d9003317 	ldw	r4,204(sp)
 800a140:	8121883a 	add	r16,r16,r4
 800a144:	2085c83a 	sub	r2,r4,r2
 800a148:	8461c83a 	sub	r16,r16,r17
 800a14c:	1400010e 	bge	r2,r16,800a154 <___vfprintf_internal_r+0x14bc>
 800a150:	1021883a 	mov	r16,r2
 800a154:	04000a0e 	bge	zero,r16,800a180 <___vfprintf_internal_r+0x14e8>
 800a158:	d9001f17 	ldw	r4,124(sp)
 800a15c:	1c07883a 	add	r3,r3,r16
 800a160:	44400015 	stw	r17,0(r8)
 800a164:	21000044 	addi	r4,r4,1
 800a168:	44000115 	stw	r16,4(r8)
 800a16c:	d8c02015 	stw	r3,128(sp)
 800a170:	d9001f15 	stw	r4,124(sp)
 800a174:	014001c4 	movi	r5,7
 800a178:	2901fb16 	blt	r5,r4,800a968 <___vfprintf_internal_r+0x1cd0>
 800a17c:	42000204 	addi	r8,r8,8
 800a180:	8001f716 	blt	r16,zero,800a960 <___vfprintf_internal_r+0x1cc8>
 800a184:	1421c83a 	sub	r16,r2,r16
 800a188:	043d380e 	bge	zero,r16,800966c <__alt_data_end+0xf800966c>
 800a18c:	04400404 	movi	r17,16
 800a190:	d8801f17 	ldw	r2,124(sp)
 800a194:	8c3efb0e 	bge	r17,r16,8009d84 <__alt_data_end+0xf8009d84>
 800a198:	014200b4 	movhi	r5,2050
 800a19c:	297f5d04 	addi	r5,r5,-652
 800a1a0:	d9402b15 	stw	r5,172(sp)
 800a1a4:	058001c4 	movi	r22,7
 800a1a8:	dcc02c17 	ldw	r19,176(sp)
 800a1ac:	00000306 	br	800a1bc <___vfprintf_internal_r+0x1524>
 800a1b0:	42000204 	addi	r8,r8,8
 800a1b4:	843ffc04 	addi	r16,r16,-16
 800a1b8:	8c3ef50e 	bge	r17,r16,8009d90 <__alt_data_end+0xf8009d90>
 800a1bc:	18c00404 	addi	r3,r3,16
 800a1c0:	10800044 	addi	r2,r2,1
 800a1c4:	45000015 	stw	r20,0(r8)
 800a1c8:	44400115 	stw	r17,4(r8)
 800a1cc:	d8c02015 	stw	r3,128(sp)
 800a1d0:	d8801f15 	stw	r2,124(sp)
 800a1d4:	b0bff60e 	bge	r22,r2,800a1b0 <__alt_data_end+0xf800a1b0>
 800a1d8:	d9801e04 	addi	r6,sp,120
 800a1dc:	b80b883a 	mov	r5,r23
 800a1e0:	9809883a 	mov	r4,r19
 800a1e4:	80164b00 	call	80164b0 <__sprint_r>
 800a1e8:	103bad1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a1ec:	d8c02017 	ldw	r3,128(sp)
 800a1f0:	d8801f17 	ldw	r2,124(sp)
 800a1f4:	da000404 	addi	r8,sp,16
 800a1f8:	003fee06 	br	800a1b4 <__alt_data_end+0xf800a1b4>
 800a1fc:	9088703a 	and	r4,r18,r2
 800a200:	203eab1e 	bne	r4,zero,8009cb0 <__alt_data_end+0xf8009cb0>
 800a204:	dc401f17 	ldw	r17,124(sp)
 800a208:	40800115 	stw	r2,4(r8)
 800a20c:	44000015 	stw	r16,0(r8)
 800a210:	8c400044 	addi	r17,r17,1
 800a214:	d8c02015 	stw	r3,128(sp)
 800a218:	dc401f15 	stw	r17,124(sp)
 800a21c:	008001c4 	movi	r2,7
 800a220:	14400e16 	blt	r2,r17,800a25c <___vfprintf_internal_r+0x15c4>
 800a224:	45800204 	addi	r22,r8,8
 800a228:	003eca06 	br	8009d54 <__alt_data_end+0xf8009d54>
 800a22c:	010200b4 	movhi	r4,2050
 800a230:	213f5d04 	addi	r4,r4,-652
 800a234:	d9002b15 	stw	r4,172(sp)
 800a238:	d8802b17 	ldw	r2,172(sp)
 800a23c:	1c07883a 	add	r3,r3,r16
 800a240:	8c400044 	addi	r17,r17,1
 800a244:	b0800015 	stw	r2,0(r22)
 800a248:	b4000115 	stw	r16,4(r22)
 800a24c:	d8c02015 	stw	r3,128(sp)
 800a250:	dc401f15 	stw	r17,124(sp)
 800a254:	008001c4 	movi	r2,7
 800a258:	147ebd0e 	bge	r2,r17,8009d50 <__alt_data_end+0xf8009d50>
 800a25c:	d9002c17 	ldw	r4,176(sp)
 800a260:	d9801e04 	addi	r6,sp,120
 800a264:	b80b883a 	mov	r5,r23
 800a268:	80164b00 	call	80164b0 <__sprint_r>
 800a26c:	103b8c1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a270:	d8c02017 	ldw	r3,128(sp)
 800a274:	dc401f17 	ldw	r17,124(sp)
 800a278:	dd800404 	addi	r22,sp,16
 800a27c:	003eb506 	br	8009d54 <__alt_data_end+0xf8009d54>
 800a280:	d9002c17 	ldw	r4,176(sp)
 800a284:	d9801e04 	addi	r6,sp,120
 800a288:	b80b883a 	mov	r5,r23
 800a28c:	80164b00 	call	80164b0 <__sprint_r>
 800a290:	103b831e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a294:	d8c02017 	ldw	r3,128(sp)
 800a298:	dc401f17 	ldw	r17,124(sp)
 800a29c:	da000404 	addi	r8,sp,16
 800a2a0:	003e8d06 	br	8009cd8 <__alt_data_end+0xf8009cd8>
 800a2a4:	d9002c17 	ldw	r4,176(sp)
 800a2a8:	d9801e04 	addi	r6,sp,120
 800a2ac:	b80b883a 	mov	r5,r23
 800a2b0:	80164b00 	call	80164b0 <__sprint_r>
 800a2b4:	103b7a1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a2b8:	d8c02017 	ldw	r3,128(sp)
 800a2bc:	dc401f17 	ldw	r17,124(sp)
 800a2c0:	dd800404 	addi	r22,sp,16
 800a2c4:	003e8f06 	br	8009d04 <__alt_data_end+0xf8009d04>
 800a2c8:	0027883a 	mov	r19,zero
 800a2cc:	003f4a06 	br	8009ff8 <__alt_data_end+0xf8009ff8>
 800a2d0:	d9002c17 	ldw	r4,176(sp)
 800a2d4:	d9801e04 	addi	r6,sp,120
 800a2d8:	b80b883a 	mov	r5,r23
 800a2dc:	80164b00 	call	80164b0 <__sprint_r>
 800a2e0:	103b6f1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a2e4:	d8c02017 	ldw	r3,128(sp)
 800a2e8:	da000404 	addi	r8,sp,16
 800a2ec:	003c9d06 	br	8009564 <__alt_data_end+0xf8009564>
 800a2f0:	04e7c83a 	sub	r19,zero,r19
 800a2f4:	9804c03a 	cmpne	r2,r19,zero
 800a2f8:	05adc83a 	sub	r22,zero,r22
 800a2fc:	b0adc83a 	sub	r22,r22,r2
 800a300:	d8802917 	ldw	r2,164(sp)
 800a304:	07000b44 	movi	fp,45
 800a308:	df002785 	stb	fp,158(sp)
 800a30c:	10017b16 	blt	r2,zero,800a8fc <___vfprintf_internal_r+0x1c64>
 800a310:	00bfdfc4 	movi	r2,-129
 800a314:	90a4703a 	and	r18,r18,r2
 800a318:	003bb106 	br	80091e0 <__alt_data_end+0xf80091e0>
 800a31c:	d9003617 	ldw	r4,216(sp)
 800a320:	d9403817 	ldw	r5,224(sp)
 800a324:	da003d15 	stw	r8,244(sp)
 800a328:	80116280 	call	8011628 <__fpclassifyd>
 800a32c:	da003d17 	ldw	r8,244(sp)
 800a330:	1000f026 	beq	r2,zero,800a6f4 <___vfprintf_internal_r+0x1a5c>
 800a334:	d9002917 	ldw	r4,164(sp)
 800a338:	05bff7c4 	movi	r22,-33
 800a33c:	00bfffc4 	movi	r2,-1
 800a340:	8dac703a 	and	r22,r17,r22
 800a344:	20820026 	beq	r4,r2,800ab48 <___vfprintf_internal_r+0x1eb0>
 800a348:	008011c4 	movi	r2,71
 800a34c:	b081f726 	beq	r22,r2,800ab2c <___vfprintf_internal_r+0x1e94>
 800a350:	d9003817 	ldw	r4,224(sp)
 800a354:	90c04014 	ori	r3,r18,256
 800a358:	d8c02b15 	stw	r3,172(sp)
 800a35c:	20021516 	blt	r4,zero,800abb4 <___vfprintf_internal_r+0x1f1c>
 800a360:	dcc03817 	ldw	r19,224(sp)
 800a364:	d8002a05 	stb	zero,168(sp)
 800a368:	00801984 	movi	r2,102
 800a36c:	8881f926 	beq	r17,r2,800ab54 <___vfprintf_internal_r+0x1ebc>
 800a370:	00801184 	movi	r2,70
 800a374:	88821c26 	beq	r17,r2,800abe8 <___vfprintf_internal_r+0x1f50>
 800a378:	00801144 	movi	r2,69
 800a37c:	b081ef26 	beq	r22,r2,800ab3c <___vfprintf_internal_r+0x1ea4>
 800a380:	d8c02917 	ldw	r3,164(sp)
 800a384:	d8802104 	addi	r2,sp,132
 800a388:	d8800315 	stw	r2,12(sp)
 800a38c:	d9403617 	ldw	r5,216(sp)
 800a390:	d8802504 	addi	r2,sp,148
 800a394:	d9002c17 	ldw	r4,176(sp)
 800a398:	d8800215 	stw	r2,8(sp)
 800a39c:	d8802604 	addi	r2,sp,152
 800a3a0:	d8c00015 	stw	r3,0(sp)
 800a3a4:	d8800115 	stw	r2,4(sp)
 800a3a8:	01c00084 	movi	r7,2
 800a3ac:	980d883a 	mov	r6,r19
 800a3b0:	d8c03c15 	stw	r3,240(sp)
 800a3b4:	da003d15 	stw	r8,244(sp)
 800a3b8:	800cbfc0 	call	800cbfc <_dtoa_r>
 800a3bc:	1021883a 	mov	r16,r2
 800a3c0:	008019c4 	movi	r2,103
 800a3c4:	d8c03c17 	ldw	r3,240(sp)
 800a3c8:	da003d17 	ldw	r8,244(sp)
 800a3cc:	88817126 	beq	r17,r2,800a994 <___vfprintf_internal_r+0x1cfc>
 800a3d0:	008011c4 	movi	r2,71
 800a3d4:	88829226 	beq	r17,r2,800ae20 <___vfprintf_internal_r+0x2188>
 800a3d8:	80f9883a 	add	fp,r16,r3
 800a3dc:	d9003617 	ldw	r4,216(sp)
 800a3e0:	000d883a 	mov	r6,zero
 800a3e4:	000f883a 	mov	r7,zero
 800a3e8:	980b883a 	mov	r5,r19
 800a3ec:	da003d15 	stw	r8,244(sp)
 800a3f0:	801ad2c0 	call	801ad2c <__eqdf2>
 800a3f4:	da003d17 	ldw	r8,244(sp)
 800a3f8:	10018d26 	beq	r2,zero,800aa30 <___vfprintf_internal_r+0x1d98>
 800a3fc:	d8802117 	ldw	r2,132(sp)
 800a400:	1700062e 	bgeu	r2,fp,800a41c <___vfprintf_internal_r+0x1784>
 800a404:	01000c04 	movi	r4,48
 800a408:	10c00044 	addi	r3,r2,1
 800a40c:	d8c02115 	stw	r3,132(sp)
 800a410:	11000005 	stb	r4,0(r2)
 800a414:	d8802117 	ldw	r2,132(sp)
 800a418:	173ffb36 	bltu	r2,fp,800a408 <__alt_data_end+0xf800a408>
 800a41c:	1405c83a 	sub	r2,r2,r16
 800a420:	d8803315 	stw	r2,204(sp)
 800a424:	008011c4 	movi	r2,71
 800a428:	b0817626 	beq	r22,r2,800aa04 <___vfprintf_internal_r+0x1d6c>
 800a42c:	00801944 	movi	r2,101
 800a430:	1442810e 	bge	r2,r17,800ae38 <___vfprintf_internal_r+0x21a0>
 800a434:	d8c02617 	ldw	r3,152(sp)
 800a438:	00801984 	movi	r2,102
 800a43c:	d8c03215 	stw	r3,200(sp)
 800a440:	8881fe26 	beq	r17,r2,800ac3c <___vfprintf_internal_r+0x1fa4>
 800a444:	d8c03217 	ldw	r3,200(sp)
 800a448:	d9003317 	ldw	r4,204(sp)
 800a44c:	1901dd16 	blt	r3,r4,800abc4 <___vfprintf_internal_r+0x1f2c>
 800a450:	9480004c 	andi	r18,r18,1
 800a454:	90022b1e 	bne	r18,zero,800ad04 <___vfprintf_internal_r+0x206c>
 800a458:	1805883a 	mov	r2,r3
 800a45c:	18028016 	blt	r3,zero,800ae60 <___vfprintf_internal_r+0x21c8>
 800a460:	d8c03217 	ldw	r3,200(sp)
 800a464:	044019c4 	movi	r17,103
 800a468:	d8c02e15 	stw	r3,184(sp)
 800a46c:	df002a07 	ldb	fp,168(sp)
 800a470:	e001531e 	bne	fp,zero,800a9c0 <___vfprintf_internal_r+0x1d28>
 800a474:	df002783 	ldbu	fp,158(sp)
 800a478:	d8802a15 	stw	r2,168(sp)
 800a47c:	dc802b17 	ldw	r18,172(sp)
 800a480:	d8002915 	stw	zero,164(sp)
 800a484:	003bd106 	br	80093cc <__alt_data_end+0xf80093cc>
 800a488:	d8802d17 	ldw	r2,180(sp)
 800a48c:	d8c02d17 	ldw	r3,180(sp)
 800a490:	d9002d17 	ldw	r4,180(sp)
 800a494:	10800017 	ldw	r2,0(r2)
 800a498:	18c00117 	ldw	r3,4(r3)
 800a49c:	21000204 	addi	r4,r4,8
 800a4a0:	d8803615 	stw	r2,216(sp)
 800a4a4:	d8c03815 	stw	r3,224(sp)
 800a4a8:	d9002d15 	stw	r4,180(sp)
 800a4ac:	003b7506 	br	8009284 <__alt_data_end+0xf8009284>
 800a4b0:	ac400007 	ldb	r17,0(r21)
 800a4b4:	003a5906 	br	8008e1c <__alt_data_end+0xf8008e1c>
 800a4b8:	9080100c 	andi	r2,r18,64
 800a4bc:	1000a826 	beq	r2,zero,800a760 <___vfprintf_internal_r+0x1ac8>
 800a4c0:	d9002d17 	ldw	r4,180(sp)
 800a4c4:	002d883a 	mov	r22,zero
 800a4c8:	24c0000b 	ldhu	r19,0(r4)
 800a4cc:	21000104 	addi	r4,r4,4
 800a4d0:	d9002d15 	stw	r4,180(sp)
 800a4d4:	003ccb06 	br	8009804 <__alt_data_end+0xf8009804>
 800a4d8:	d8c02d17 	ldw	r3,180(sp)
 800a4dc:	d9002917 	ldw	r4,164(sp)
 800a4e0:	002d883a 	mov	r22,zero
 800a4e4:	18800104 	addi	r2,r3,4
 800a4e8:	1cc00017 	ldw	r19,0(r3)
 800a4ec:	203ebb0e 	bge	r4,zero,8009fdc <__alt_data_end+0xf8009fdc>
 800a4f0:	003ef106 	br	800a0b8 <__alt_data_end+0xf800a0b8>
 800a4f4:	9080040c 	andi	r2,r18,16
 800a4f8:	1000921e 	bne	r2,zero,800a744 <___vfprintf_internal_r+0x1aac>
 800a4fc:	9480100c 	andi	r18,r18,64
 800a500:	90013926 	beq	r18,zero,800a9e8 <___vfprintf_internal_r+0x1d50>
 800a504:	d9002d17 	ldw	r4,180(sp)
 800a508:	d9402f17 	ldw	r5,188(sp)
 800a50c:	20800017 	ldw	r2,0(r4)
 800a510:	21000104 	addi	r4,r4,4
 800a514:	d9002d15 	stw	r4,180(sp)
 800a518:	1140000d 	sth	r5,0(r2)
 800a51c:	003a1606 	br	8008d78 <__alt_data_end+0xf8008d78>
 800a520:	9080100c 	andi	r2,r18,64
 800a524:	10008026 	beq	r2,zero,800a728 <___vfprintf_internal_r+0x1a90>
 800a528:	d8c02d17 	ldw	r3,180(sp)
 800a52c:	1cc0000f 	ldh	r19,0(r3)
 800a530:	18c00104 	addi	r3,r3,4
 800a534:	d8c02d15 	stw	r3,180(sp)
 800a538:	982dd7fa 	srai	r22,r19,31
 800a53c:	b005883a 	mov	r2,r22
 800a540:	003b1f06 	br	80091c0 <__alt_data_end+0xf80091c0>
 800a544:	9080100c 	andi	r2,r18,64
 800a548:	d8002785 	stb	zero,158(sp)
 800a54c:	10008a1e 	bne	r2,zero,800a778 <___vfprintf_internal_r+0x1ae0>
 800a550:	d9402d17 	ldw	r5,180(sp)
 800a554:	d8c02917 	ldw	r3,164(sp)
 800a558:	002d883a 	mov	r22,zero
 800a55c:	28800104 	addi	r2,r5,4
 800a560:	2cc00017 	ldw	r19,0(r5)
 800a564:	183e4b0e 	bge	r3,zero,8009e94 <__alt_data_end+0xf8009e94>
 800a568:	9d86b03a 	or	r3,r19,r22
 800a56c:	d8802d15 	stw	r2,180(sp)
 800a570:	183e4c1e 	bne	r3,zero,8009ea4 <__alt_data_end+0xf8009ea4>
 800a574:	0039883a 	mov	fp,zero
 800a578:	0005883a 	mov	r2,zero
 800a57c:	003d4006 	br	8009a80 <__alt_data_end+0xf8009a80>
 800a580:	014200b4 	movhi	r5,2050
 800a584:	297f5d04 	addi	r5,r5,-652
 800a588:	d9402b15 	stw	r5,172(sp)
 800a58c:	d9402b17 	ldw	r5,172(sp)
 800a590:	1c47883a 	add	r3,r3,r17
 800a594:	10800044 	addi	r2,r2,1
 800a598:	41400015 	stw	r5,0(r8)
 800a59c:	44400115 	stw	r17,4(r8)
 800a5a0:	d8c02015 	stw	r3,128(sp)
 800a5a4:	d8801f15 	stw	r2,124(sp)
 800a5a8:	010001c4 	movi	r4,7
 800a5ac:	20bec816 	blt	r4,r2,800a0d0 <__alt_data_end+0xf800a0d0>
 800a5b0:	42000204 	addi	r8,r8,8
 800a5b4:	003ecd06 	br	800a0ec <__alt_data_end+0xf800a0ec>
 800a5b8:	d9002917 	ldw	r4,164(sp)
 800a5bc:	d8002785 	stb	zero,158(sp)
 800a5c0:	203d2d16 	blt	r4,zero,8009a78 <__alt_data_end+0xf8009a78>
 800a5c4:	00bfdfc4 	movi	r2,-129
 800a5c8:	90a4703a 	and	r18,r18,r2
 800a5cc:	003a9106 	br	8009014 <__alt_data_end+0xf8009014>
 800a5d0:	010200b4 	movhi	r4,2050
 800a5d4:	213f5d04 	addi	r4,r4,-652
 800a5d8:	d9002b15 	stw	r4,172(sp)
 800a5dc:	003c0c06 	br	8009610 <__alt_data_end+0xf8009610>
 800a5e0:	d9002c17 	ldw	r4,176(sp)
 800a5e4:	d9801e04 	addi	r6,sp,120
 800a5e8:	b80b883a 	mov	r5,r23
 800a5ec:	80164b00 	call	80164b0 <__sprint_r>
 800a5f0:	103aab1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a5f4:	d8c02017 	ldw	r3,128(sp)
 800a5f8:	da000404 	addi	r8,sp,16
 800a5fc:	003d4106 	br	8009b04 <__alt_data_end+0xf8009b04>
 800a600:	d8801f17 	ldw	r2,124(sp)
 800a604:	014200b4 	movhi	r5,2050
 800a608:	01000044 	movi	r4,1
 800a60c:	18c00044 	addi	r3,r3,1
 800a610:	10800044 	addi	r2,r2,1
 800a614:	297f4a04 	addi	r5,r5,-728
 800a618:	41000115 	stw	r4,4(r8)
 800a61c:	41400015 	stw	r5,0(r8)
 800a620:	d8c02015 	stw	r3,128(sp)
 800a624:	d8801f15 	stw	r2,124(sp)
 800a628:	010001c4 	movi	r4,7
 800a62c:	20805c16 	blt	r4,r2,800a7a0 <___vfprintf_internal_r+0x1b08>
 800a630:	42000204 	addi	r8,r8,8
 800a634:	8800041e 	bne	r17,zero,800a648 <___vfprintf_internal_r+0x19b0>
 800a638:	d8803317 	ldw	r2,204(sp)
 800a63c:	1000021e 	bne	r2,zero,800a648 <___vfprintf_internal_r+0x19b0>
 800a640:	9080004c 	andi	r2,r18,1
 800a644:	103c0926 	beq	r2,zero,800966c <__alt_data_end+0xf800966c>
 800a648:	d9003717 	ldw	r4,220(sp)
 800a64c:	d8801f17 	ldw	r2,124(sp)
 800a650:	d9403417 	ldw	r5,208(sp)
 800a654:	20c7883a 	add	r3,r4,r3
 800a658:	10800044 	addi	r2,r2,1
 800a65c:	41000115 	stw	r4,4(r8)
 800a660:	41400015 	stw	r5,0(r8)
 800a664:	d8c02015 	stw	r3,128(sp)
 800a668:	d8801f15 	stw	r2,124(sp)
 800a66c:	010001c4 	movi	r4,7
 800a670:	20812116 	blt	r4,r2,800aaf8 <___vfprintf_internal_r+0x1e60>
 800a674:	42000204 	addi	r8,r8,8
 800a678:	0463c83a 	sub	r17,zero,r17
 800a67c:	0440730e 	bge	zero,r17,800a84c <___vfprintf_internal_r+0x1bb4>
 800a680:	05800404 	movi	r22,16
 800a684:	b440860e 	bge	r22,r17,800a8a0 <___vfprintf_internal_r+0x1c08>
 800a688:	014200b4 	movhi	r5,2050
 800a68c:	297f5d04 	addi	r5,r5,-652
 800a690:	d9402b15 	stw	r5,172(sp)
 800a694:	070001c4 	movi	fp,7
 800a698:	dcc02c17 	ldw	r19,176(sp)
 800a69c:	00000306 	br	800a6ac <___vfprintf_internal_r+0x1a14>
 800a6a0:	42000204 	addi	r8,r8,8
 800a6a4:	8c7ffc04 	addi	r17,r17,-16
 800a6a8:	b440800e 	bge	r22,r17,800a8ac <___vfprintf_internal_r+0x1c14>
 800a6ac:	18c00404 	addi	r3,r3,16
 800a6b0:	10800044 	addi	r2,r2,1
 800a6b4:	45000015 	stw	r20,0(r8)
 800a6b8:	45800115 	stw	r22,4(r8)
 800a6bc:	d8c02015 	stw	r3,128(sp)
 800a6c0:	d8801f15 	stw	r2,124(sp)
 800a6c4:	e0bff60e 	bge	fp,r2,800a6a0 <__alt_data_end+0xf800a6a0>
 800a6c8:	d9801e04 	addi	r6,sp,120
 800a6cc:	b80b883a 	mov	r5,r23
 800a6d0:	9809883a 	mov	r4,r19
 800a6d4:	80164b00 	call	80164b0 <__sprint_r>
 800a6d8:	103a711e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a6dc:	d8c02017 	ldw	r3,128(sp)
 800a6e0:	d8801f17 	ldw	r2,124(sp)
 800a6e4:	da000404 	addi	r8,sp,16
 800a6e8:	003fee06 	br	800a6a4 <__alt_data_end+0xf800a6a4>
 800a6ec:	00bfffc4 	movi	r2,-1
 800a6f0:	003a6f06 	br	80090b0 <__alt_data_end+0xf80090b0>
 800a6f4:	008011c4 	movi	r2,71
 800a6f8:	1440b816 	blt	r2,r17,800a9dc <___vfprintf_internal_r+0x1d44>
 800a6fc:	040200b4 	movhi	r16,2050
 800a700:	843f3c04 	addi	r16,r16,-784
 800a704:	00c000c4 	movi	r3,3
 800a708:	00bfdfc4 	movi	r2,-129
 800a70c:	d8c02a15 	stw	r3,168(sp)
 800a710:	90a4703a 	and	r18,r18,r2
 800a714:	df002783 	ldbu	fp,158(sp)
 800a718:	d8c02e15 	stw	r3,184(sp)
 800a71c:	d8002915 	stw	zero,164(sp)
 800a720:	d8003215 	stw	zero,200(sp)
 800a724:	003b2906 	br	80093cc <__alt_data_end+0xf80093cc>
 800a728:	d9002d17 	ldw	r4,180(sp)
 800a72c:	24c00017 	ldw	r19,0(r4)
 800a730:	21000104 	addi	r4,r4,4
 800a734:	d9002d15 	stw	r4,180(sp)
 800a738:	982dd7fa 	srai	r22,r19,31
 800a73c:	b005883a 	mov	r2,r22
 800a740:	003a9f06 	br	80091c0 <__alt_data_end+0xf80091c0>
 800a744:	d9402d17 	ldw	r5,180(sp)
 800a748:	d8c02f17 	ldw	r3,188(sp)
 800a74c:	28800017 	ldw	r2,0(r5)
 800a750:	29400104 	addi	r5,r5,4
 800a754:	d9402d15 	stw	r5,180(sp)
 800a758:	10c00015 	stw	r3,0(r2)
 800a75c:	00398606 	br	8008d78 <__alt_data_end+0xf8008d78>
 800a760:	d9402d17 	ldw	r5,180(sp)
 800a764:	002d883a 	mov	r22,zero
 800a768:	2cc00017 	ldw	r19,0(r5)
 800a76c:	29400104 	addi	r5,r5,4
 800a770:	d9402d15 	stw	r5,180(sp)
 800a774:	003c2306 	br	8009804 <__alt_data_end+0xf8009804>
 800a778:	d8c02d17 	ldw	r3,180(sp)
 800a77c:	d9002917 	ldw	r4,164(sp)
 800a780:	002d883a 	mov	r22,zero
 800a784:	18800104 	addi	r2,r3,4
 800a788:	1cc0000b 	ldhu	r19,0(r3)
 800a78c:	203dc10e 	bge	r4,zero,8009e94 <__alt_data_end+0xf8009e94>
 800a790:	003f7506 	br	800a568 <__alt_data_end+0xf800a568>
 800a794:	040200b4 	movhi	r16,2050
 800a798:	843f3a04 	addi	r16,r16,-792
 800a79c:	003acc06 	br	80092d0 <__alt_data_end+0xf80092d0>
 800a7a0:	d9002c17 	ldw	r4,176(sp)
 800a7a4:	d9801e04 	addi	r6,sp,120
 800a7a8:	b80b883a 	mov	r5,r23
 800a7ac:	80164b00 	call	80164b0 <__sprint_r>
 800a7b0:	103a3b1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a7b4:	dc402617 	ldw	r17,152(sp)
 800a7b8:	d8c02017 	ldw	r3,128(sp)
 800a7bc:	da000404 	addi	r8,sp,16
 800a7c0:	003f9c06 	br	800a634 <__alt_data_end+0xf800a634>
 800a7c4:	ac400043 	ldbu	r17,1(r21)
 800a7c8:	94800814 	ori	r18,r18,32
 800a7cc:	ad400044 	addi	r21,r21,1
 800a7d0:	8c403fcc 	andi	r17,r17,255
 800a7d4:	8c40201c 	xori	r17,r17,128
 800a7d8:	8c7fe004 	addi	r17,r17,-128
 800a7dc:	00398f06 	br	8008e1c <__alt_data_end+0xf8008e1c>
 800a7e0:	d8c02d15 	stw	r3,180(sp)
 800a7e4:	0039883a 	mov	fp,zero
 800a7e8:	003e3506 	br	800a0c0 <__alt_data_end+0xf800a0c0>
 800a7ec:	d9002c17 	ldw	r4,176(sp)
 800a7f0:	d9801e04 	addi	r6,sp,120
 800a7f4:	b80b883a 	mov	r5,r23
 800a7f8:	80164b00 	call	80164b0 <__sprint_r>
 800a7fc:	103a281e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a800:	d8c02017 	ldw	r3,128(sp)
 800a804:	da000404 	addi	r8,sp,16
 800a808:	003cd006 	br	8009b4c <__alt_data_end+0xf8009b4c>
 800a80c:	8009883a 	mov	r4,r16
 800a810:	da003d15 	stw	r8,244(sp)
 800a814:	800526c0 	call	800526c <strlen>
 800a818:	d8802e15 	stw	r2,184(sp)
 800a81c:	da003d17 	ldw	r8,244(sp)
 800a820:	103c340e 	bge	r2,zero,80098f4 <__alt_data_end+0xf80098f4>
 800a824:	0005883a 	mov	r2,zero
 800a828:	003c3206 	br	80098f4 <__alt_data_end+0xf80098f4>
 800a82c:	d9002c17 	ldw	r4,176(sp)
 800a830:	d9801e04 	addi	r6,sp,120
 800a834:	b80b883a 	mov	r5,r23
 800a838:	80164b00 	call	80164b0 <__sprint_r>
 800a83c:	103a181e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a840:	d8c02017 	ldw	r3,128(sp)
 800a844:	d8801f17 	ldw	r2,124(sp)
 800a848:	da000404 	addi	r8,sp,16
 800a84c:	d9403317 	ldw	r5,204(sp)
 800a850:	10800044 	addi	r2,r2,1
 800a854:	44000015 	stw	r16,0(r8)
 800a858:	28c7883a 	add	r3,r5,r3
 800a85c:	003b7d06 	br	8009654 <__alt_data_end+0xf8009654>
 800a860:	010200b4 	movhi	r4,2050
 800a864:	213f6104 	addi	r4,r4,-636
 800a868:	d9003515 	stw	r4,212(sp)
 800a86c:	003b1406 	br	80094c0 <__alt_data_end+0xf80094c0>
 800a870:	013fffc4 	movi	r4,-1
 800a874:	003a3506 	br	800914c <__alt_data_end+0xf800914c>
 800a878:	0023883a 	mov	r17,zero
 800a87c:	003d9d06 	br	8009ef4 <__alt_data_end+0xf8009ef4>
 800a880:	d9002c17 	ldw	r4,176(sp)
 800a884:	d9801e04 	addi	r6,sp,120
 800a888:	b80b883a 	mov	r5,r23
 800a88c:	80164b00 	call	80164b0 <__sprint_r>
 800a890:	103a031e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a894:	d8c02017 	ldw	r3,128(sp)
 800a898:	da000404 	addi	r8,sp,16
 800a89c:	003d9406 	br	8009ef0 <__alt_data_end+0xf8009ef0>
 800a8a0:	010200b4 	movhi	r4,2050
 800a8a4:	213f5d04 	addi	r4,r4,-652
 800a8a8:	d9002b15 	stw	r4,172(sp)
 800a8ac:	d9002b17 	ldw	r4,172(sp)
 800a8b0:	1c47883a 	add	r3,r3,r17
 800a8b4:	10800044 	addi	r2,r2,1
 800a8b8:	41000015 	stw	r4,0(r8)
 800a8bc:	44400115 	stw	r17,4(r8)
 800a8c0:	d8c02015 	stw	r3,128(sp)
 800a8c4:	d8801f15 	stw	r2,124(sp)
 800a8c8:	010001c4 	movi	r4,7
 800a8cc:	20bfd716 	blt	r4,r2,800a82c <__alt_data_end+0xf800a82c>
 800a8d0:	42000204 	addi	r8,r8,8
 800a8d4:	003fdd06 	br	800a84c <__alt_data_end+0xf800a84c>
 800a8d8:	d9002c17 	ldw	r4,176(sp)
 800a8dc:	d9801e04 	addi	r6,sp,120
 800a8e0:	b80b883a 	mov	r5,r23
 800a8e4:	80164b00 	call	80164b0 <__sprint_r>
 800a8e8:	1039ed1e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a8ec:	d8802617 	ldw	r2,152(sp)
 800a8f0:	d8c02017 	ldw	r3,128(sp)
 800a8f4:	da000404 	addi	r8,sp,16
 800a8f8:	003e1006 	br	800a13c <__alt_data_end+0xf800a13c>
 800a8fc:	00800044 	movi	r2,1
 800a900:	10803fcc 	andi	r2,r2,255
 800a904:	00c00044 	movi	r3,1
 800a908:	10fa3526 	beq	r2,r3,80091e0 <__alt_data_end+0xf80091e0>
 800a90c:	00c00084 	movi	r3,2
 800a910:	10fbcb26 	beq	r2,r3,8009840 <__alt_data_end+0xf8009840>
 800a914:	003a8f06 	br	8009354 <__alt_data_end+0xf8009354>
 800a918:	010200b4 	movhi	r4,2050
 800a91c:	213f6104 	addi	r4,r4,-636
 800a920:	d9003515 	stw	r4,212(sp)
 800a924:	003b7606 	br	8009700 <__alt_data_end+0xf8009700>
 800a928:	d8802917 	ldw	r2,164(sp)
 800a92c:	00c00184 	movi	r3,6
 800a930:	1880012e 	bgeu	r3,r2,800a938 <___vfprintf_internal_r+0x1ca0>
 800a934:	1805883a 	mov	r2,r3
 800a938:	d8802e15 	stw	r2,184(sp)
 800a93c:	1000ef16 	blt	r2,zero,800acfc <___vfprintf_internal_r+0x2064>
 800a940:	040200b4 	movhi	r16,2050
 800a944:	d8802a15 	stw	r2,168(sp)
 800a948:	dcc02d15 	stw	r19,180(sp)
 800a94c:	d8002915 	stw	zero,164(sp)
 800a950:	d8003215 	stw	zero,200(sp)
 800a954:	843f4804 	addi	r16,r16,-736
 800a958:	0039883a 	mov	fp,zero
 800a95c:	003aa206 	br	80093e8 <__alt_data_end+0xf80093e8>
 800a960:	0021883a 	mov	r16,zero
 800a964:	003e0706 	br	800a184 <__alt_data_end+0xf800a184>
 800a968:	d9002c17 	ldw	r4,176(sp)
 800a96c:	d9801e04 	addi	r6,sp,120
 800a970:	b80b883a 	mov	r5,r23
 800a974:	80164b00 	call	80164b0 <__sprint_r>
 800a978:	1039c91e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800a97c:	d8802617 	ldw	r2,152(sp)
 800a980:	d9403317 	ldw	r5,204(sp)
 800a984:	d8c02017 	ldw	r3,128(sp)
 800a988:	da000404 	addi	r8,sp,16
 800a98c:	2885c83a 	sub	r2,r5,r2
 800a990:	003dfb06 	br	800a180 <__alt_data_end+0xf800a180>
 800a994:	9080004c 	andi	r2,r18,1
 800a998:	103e8f1e 	bne	r2,zero,800a3d8 <__alt_data_end+0xf800a3d8>
 800a99c:	d8802117 	ldw	r2,132(sp)
 800a9a0:	003e9e06 	br	800a41c <__alt_data_end+0xf800a41c>
 800a9a4:	1025883a 	mov	r18,r2
 800a9a8:	0039883a 	mov	fp,zero
 800a9ac:	00800084 	movi	r2,2
 800a9b0:	003fd306 	br	800a900 <__alt_data_end+0xf800a900>
 800a9b4:	07000b44 	movi	fp,45
 800a9b8:	df002785 	stb	fp,158(sp)
 800a9bc:	003a4006 	br	80092c0 <__alt_data_end+0xf80092c0>
 800a9c0:	00c00b44 	movi	r3,45
 800a9c4:	d8c02785 	stb	r3,158(sp)
 800a9c8:	d8802a15 	stw	r2,168(sp)
 800a9cc:	dc802b17 	ldw	r18,172(sp)
 800a9d0:	d8002915 	stw	zero,164(sp)
 800a9d4:	07000b44 	movi	fp,45
 800a9d8:	003a8006 	br	80093dc <__alt_data_end+0xf80093dc>
 800a9dc:	040200b4 	movhi	r16,2050
 800a9e0:	843f3d04 	addi	r16,r16,-780
 800a9e4:	003f4706 	br	800a704 <__alt_data_end+0xf800a704>
 800a9e8:	d8c02d17 	ldw	r3,180(sp)
 800a9ec:	d9002f17 	ldw	r4,188(sp)
 800a9f0:	18800017 	ldw	r2,0(r3)
 800a9f4:	18c00104 	addi	r3,r3,4
 800a9f8:	d8c02d15 	stw	r3,180(sp)
 800a9fc:	11000015 	stw	r4,0(r2)
 800aa00:	0038dd06 	br	8008d78 <__alt_data_end+0xf8008d78>
 800aa04:	dd802617 	ldw	r22,152(sp)
 800aa08:	00bfff44 	movi	r2,-3
 800aa0c:	b0801c16 	blt	r22,r2,800aa80 <___vfprintf_internal_r+0x1de8>
 800aa10:	d9402917 	ldw	r5,164(sp)
 800aa14:	2d801a16 	blt	r5,r22,800aa80 <___vfprintf_internal_r+0x1de8>
 800aa18:	dd803215 	stw	r22,200(sp)
 800aa1c:	003e8906 	br	800a444 <__alt_data_end+0xf800a444>
 800aa20:	010200b4 	movhi	r4,2050
 800aa24:	213f5d04 	addi	r4,r4,-652
 800aa28:	d9002b15 	stw	r4,172(sp)
 800aa2c:	003c9106 	br	8009c74 <__alt_data_end+0xf8009c74>
 800aa30:	e005883a 	mov	r2,fp
 800aa34:	003e7906 	br	800a41c <__alt_data_end+0xf800a41c>
 800aa38:	d9402917 	ldw	r5,164(sp)
 800aa3c:	df002783 	ldbu	fp,158(sp)
 800aa40:	dcc02d15 	stw	r19,180(sp)
 800aa44:	d9402a15 	stw	r5,168(sp)
 800aa48:	d9402e15 	stw	r5,184(sp)
 800aa4c:	d8002915 	stw	zero,164(sp)
 800aa50:	d8003215 	stw	zero,200(sp)
 800aa54:	003a5d06 	br	80093cc <__alt_data_end+0xf80093cc>
 800aa58:	9080004c 	andi	r2,r18,1
 800aa5c:	0039883a 	mov	fp,zero
 800aa60:	10000426 	beq	r2,zero,800aa74 <___vfprintf_internal_r+0x1ddc>
 800aa64:	00800c04 	movi	r2,48
 800aa68:	dc001dc4 	addi	r16,sp,119
 800aa6c:	d8801dc5 	stb	r2,119(sp)
 800aa70:	003b8006 	br	8009874 <__alt_data_end+0xf8009874>
 800aa74:	d8002e15 	stw	zero,184(sp)
 800aa78:	dc001e04 	addi	r16,sp,120
 800aa7c:	003a4d06 	br	80093b4 <__alt_data_end+0xf80093b4>
 800aa80:	8c7fff84 	addi	r17,r17,-2
 800aa84:	b5bfffc4 	addi	r22,r22,-1
 800aa88:	dd802615 	stw	r22,152(sp)
 800aa8c:	dc4022c5 	stb	r17,139(sp)
 800aa90:	b000bf16 	blt	r22,zero,800ad90 <___vfprintf_internal_r+0x20f8>
 800aa94:	00800ac4 	movi	r2,43
 800aa98:	d8802305 	stb	r2,140(sp)
 800aa9c:	00800244 	movi	r2,9
 800aaa0:	15807016 	blt	r2,r22,800ac64 <___vfprintf_internal_r+0x1fcc>
 800aaa4:	00800c04 	movi	r2,48
 800aaa8:	b5800c04 	addi	r22,r22,48
 800aaac:	d8802345 	stb	r2,141(sp)
 800aab0:	dd802385 	stb	r22,142(sp)
 800aab4:	d88023c4 	addi	r2,sp,143
 800aab8:	df0022c4 	addi	fp,sp,139
 800aabc:	d8c03317 	ldw	r3,204(sp)
 800aac0:	1739c83a 	sub	fp,r2,fp
 800aac4:	d9003317 	ldw	r4,204(sp)
 800aac8:	e0c7883a 	add	r3,fp,r3
 800aacc:	df003a15 	stw	fp,232(sp)
 800aad0:	d8c02e15 	stw	r3,184(sp)
 800aad4:	00800044 	movi	r2,1
 800aad8:	1100b30e 	bge	r2,r4,800ada8 <___vfprintf_internal_r+0x2110>
 800aadc:	d8c02e17 	ldw	r3,184(sp)
 800aae0:	18c00044 	addi	r3,r3,1
 800aae4:	d8c02e15 	stw	r3,184(sp)
 800aae8:	1805883a 	mov	r2,r3
 800aaec:	1800ac16 	blt	r3,zero,800ada0 <___vfprintf_internal_r+0x2108>
 800aaf0:	d8003215 	stw	zero,200(sp)
 800aaf4:	003e5d06 	br	800a46c <__alt_data_end+0xf800a46c>
 800aaf8:	d9002c17 	ldw	r4,176(sp)
 800aafc:	d9801e04 	addi	r6,sp,120
 800ab00:	b80b883a 	mov	r5,r23
 800ab04:	80164b00 	call	80164b0 <__sprint_r>
 800ab08:	1039651e 	bne	r2,zero,80090a0 <__alt_data_end+0xf80090a0>
 800ab0c:	dc402617 	ldw	r17,152(sp)
 800ab10:	d8c02017 	ldw	r3,128(sp)
 800ab14:	d8801f17 	ldw	r2,124(sp)
 800ab18:	da000404 	addi	r8,sp,16
 800ab1c:	003ed606 	br	800a678 <__alt_data_end+0xf800a678>
 800ab20:	582b883a 	mov	r21,r11
 800ab24:	d8002915 	stw	zero,164(sp)
 800ab28:	0038bd06 	br	8008e20 <__alt_data_end+0xf8008e20>
 800ab2c:	d8802917 	ldw	r2,164(sp)
 800ab30:	103e071e 	bne	r2,zero,800a350 <__alt_data_end+0xf800a350>
 800ab34:	dc002915 	stw	r16,164(sp)
 800ab38:	003e0506 	br	800a350 <__alt_data_end+0xf800a350>
 800ab3c:	d9002917 	ldw	r4,164(sp)
 800ab40:	20c00044 	addi	r3,r4,1
 800ab44:	003e0f06 	br	800a384 <__alt_data_end+0xf800a384>
 800ab48:	01400184 	movi	r5,6
 800ab4c:	d9402915 	stw	r5,164(sp)
 800ab50:	003dff06 	br	800a350 <__alt_data_end+0xf800a350>
 800ab54:	d8802104 	addi	r2,sp,132
 800ab58:	d8800315 	stw	r2,12(sp)
 800ab5c:	d8802504 	addi	r2,sp,148
 800ab60:	d8800215 	stw	r2,8(sp)
 800ab64:	d8802604 	addi	r2,sp,152
 800ab68:	d8800115 	stw	r2,4(sp)
 800ab6c:	d8802917 	ldw	r2,164(sp)
 800ab70:	d9403617 	ldw	r5,216(sp)
 800ab74:	d9002c17 	ldw	r4,176(sp)
 800ab78:	d8800015 	stw	r2,0(sp)
 800ab7c:	01c000c4 	movi	r7,3
 800ab80:	980d883a 	mov	r6,r19
 800ab84:	da003d15 	stw	r8,244(sp)
 800ab88:	800cbfc0 	call	800cbfc <_dtoa_r>
 800ab8c:	d8c02917 	ldw	r3,164(sp)
 800ab90:	da003d17 	ldw	r8,244(sp)
 800ab94:	1021883a 	mov	r16,r2
 800ab98:	10f9883a 	add	fp,r2,r3
 800ab9c:	81000007 	ldb	r4,0(r16)
 800aba0:	00800c04 	movi	r2,48
 800aba4:	20805e26 	beq	r4,r2,800ad20 <___vfprintf_internal_r+0x2088>
 800aba8:	d8c02617 	ldw	r3,152(sp)
 800abac:	e0f9883a 	add	fp,fp,r3
 800abb0:	003e0a06 	br	800a3dc <__alt_data_end+0xf800a3dc>
 800abb4:	00c00b44 	movi	r3,45
 800abb8:	24e0003c 	xorhi	r19,r4,32768
 800abbc:	d8c02a05 	stb	r3,168(sp)
 800abc0:	003de906 	br	800a368 <__alt_data_end+0xf800a368>
 800abc4:	d8c03217 	ldw	r3,200(sp)
 800abc8:	00c07a0e 	bge	zero,r3,800adb4 <___vfprintf_internal_r+0x211c>
 800abcc:	00800044 	movi	r2,1
 800abd0:	d9003317 	ldw	r4,204(sp)
 800abd4:	1105883a 	add	r2,r2,r4
 800abd8:	d8802e15 	stw	r2,184(sp)
 800abdc:	10004e16 	blt	r2,zero,800ad18 <___vfprintf_internal_r+0x2080>
 800abe0:	044019c4 	movi	r17,103
 800abe4:	003e2106 	br	800a46c <__alt_data_end+0xf800a46c>
 800abe8:	d9002917 	ldw	r4,164(sp)
 800abec:	d8802104 	addi	r2,sp,132
 800abf0:	d8800315 	stw	r2,12(sp)
 800abf4:	d9000015 	stw	r4,0(sp)
 800abf8:	d8802504 	addi	r2,sp,148
 800abfc:	d9403617 	ldw	r5,216(sp)
 800ac00:	d9002c17 	ldw	r4,176(sp)
 800ac04:	d8800215 	stw	r2,8(sp)
 800ac08:	d8802604 	addi	r2,sp,152
 800ac0c:	d8800115 	stw	r2,4(sp)
 800ac10:	01c000c4 	movi	r7,3
 800ac14:	980d883a 	mov	r6,r19
 800ac18:	da003d15 	stw	r8,244(sp)
 800ac1c:	800cbfc0 	call	800cbfc <_dtoa_r>
 800ac20:	d8c02917 	ldw	r3,164(sp)
 800ac24:	da003d17 	ldw	r8,244(sp)
 800ac28:	1021883a 	mov	r16,r2
 800ac2c:	00801184 	movi	r2,70
 800ac30:	80f9883a 	add	fp,r16,r3
 800ac34:	88bfd926 	beq	r17,r2,800ab9c <__alt_data_end+0xf800ab9c>
 800ac38:	003de806 	br	800a3dc <__alt_data_end+0xf800a3dc>
 800ac3c:	d9002917 	ldw	r4,164(sp)
 800ac40:	00c04d0e 	bge	zero,r3,800ad78 <___vfprintf_internal_r+0x20e0>
 800ac44:	2000441e 	bne	r4,zero,800ad58 <___vfprintf_internal_r+0x20c0>
 800ac48:	9480004c 	andi	r18,r18,1
 800ac4c:	9000421e 	bne	r18,zero,800ad58 <___vfprintf_internal_r+0x20c0>
 800ac50:	1805883a 	mov	r2,r3
 800ac54:	18007016 	blt	r3,zero,800ae18 <___vfprintf_internal_r+0x2180>
 800ac58:	d8c03217 	ldw	r3,200(sp)
 800ac5c:	d8c02e15 	stw	r3,184(sp)
 800ac60:	003e0206 	br	800a46c <__alt_data_end+0xf800a46c>
 800ac64:	df0022c4 	addi	fp,sp,139
 800ac68:	dc002915 	stw	r16,164(sp)
 800ac6c:	4027883a 	mov	r19,r8
 800ac70:	e021883a 	mov	r16,fp
 800ac74:	b009883a 	mov	r4,r22
 800ac78:	01400284 	movi	r5,10
 800ac7c:	80039440 	call	8003944 <__modsi3>
 800ac80:	10800c04 	addi	r2,r2,48
 800ac84:	843fffc4 	addi	r16,r16,-1
 800ac88:	b009883a 	mov	r4,r22
 800ac8c:	01400284 	movi	r5,10
 800ac90:	80800005 	stb	r2,0(r16)
 800ac94:	80038c00 	call	80038c0 <__divsi3>
 800ac98:	102d883a 	mov	r22,r2
 800ac9c:	00800244 	movi	r2,9
 800aca0:	15bff416 	blt	r2,r22,800ac74 <__alt_data_end+0xf800ac74>
 800aca4:	9811883a 	mov	r8,r19
 800aca8:	b0800c04 	addi	r2,r22,48
 800acac:	8027883a 	mov	r19,r16
 800acb0:	997fffc4 	addi	r5,r19,-1
 800acb4:	98bfffc5 	stb	r2,-1(r19)
 800acb8:	dc002917 	ldw	r16,164(sp)
 800acbc:	2f006a2e 	bgeu	r5,fp,800ae68 <___vfprintf_internal_r+0x21d0>
 800acc0:	d9c02384 	addi	r7,sp,142
 800acc4:	3ccfc83a 	sub	r7,r7,r19
 800acc8:	d9002344 	addi	r4,sp,141
 800accc:	e1cf883a 	add	r7,fp,r7
 800acd0:	00000106 	br	800acd8 <___vfprintf_internal_r+0x2040>
 800acd4:	28800003 	ldbu	r2,0(r5)
 800acd8:	20800005 	stb	r2,0(r4)
 800acdc:	21000044 	addi	r4,r4,1
 800ace0:	29400044 	addi	r5,r5,1
 800ace4:	393ffb1e 	bne	r7,r4,800acd4 <__alt_data_end+0xf800acd4>
 800ace8:	d8802304 	addi	r2,sp,140
 800acec:	14c5c83a 	sub	r2,r2,r19
 800acf0:	d8c02344 	addi	r3,sp,141
 800acf4:	1885883a 	add	r2,r3,r2
 800acf8:	003f7006 	br	800aabc <__alt_data_end+0xf800aabc>
 800acfc:	0005883a 	mov	r2,zero
 800ad00:	003f0f06 	br	800a940 <__alt_data_end+0xf800a940>
 800ad04:	d8c03217 	ldw	r3,200(sp)
 800ad08:	18c00044 	addi	r3,r3,1
 800ad0c:	d8c02e15 	stw	r3,184(sp)
 800ad10:	1805883a 	mov	r2,r3
 800ad14:	183fb20e 	bge	r3,zero,800abe0 <__alt_data_end+0xf800abe0>
 800ad18:	0005883a 	mov	r2,zero
 800ad1c:	003fb006 	br	800abe0 <__alt_data_end+0xf800abe0>
 800ad20:	d9003617 	ldw	r4,216(sp)
 800ad24:	000d883a 	mov	r6,zero
 800ad28:	000f883a 	mov	r7,zero
 800ad2c:	980b883a 	mov	r5,r19
 800ad30:	d8c03c15 	stw	r3,240(sp)
 800ad34:	da003d15 	stw	r8,244(sp)
 800ad38:	801ad2c0 	call	801ad2c <__eqdf2>
 800ad3c:	d8c03c17 	ldw	r3,240(sp)
 800ad40:	da003d17 	ldw	r8,244(sp)
 800ad44:	103f9826 	beq	r2,zero,800aba8 <__alt_data_end+0xf800aba8>
 800ad48:	00800044 	movi	r2,1
 800ad4c:	10c7c83a 	sub	r3,r2,r3
 800ad50:	d8c02615 	stw	r3,152(sp)
 800ad54:	003f9506 	br	800abac <__alt_data_end+0xf800abac>
 800ad58:	d9002917 	ldw	r4,164(sp)
 800ad5c:	d8c03217 	ldw	r3,200(sp)
 800ad60:	20800044 	addi	r2,r4,1
 800ad64:	1885883a 	add	r2,r3,r2
 800ad68:	d8802e15 	stw	r2,184(sp)
 800ad6c:	103dbf0e 	bge	r2,zero,800a46c <__alt_data_end+0xf800a46c>
 800ad70:	0005883a 	mov	r2,zero
 800ad74:	003dbd06 	br	800a46c <__alt_data_end+0xf800a46c>
 800ad78:	2000211e 	bne	r4,zero,800ae00 <___vfprintf_internal_r+0x2168>
 800ad7c:	9480004c 	andi	r18,r18,1
 800ad80:	90001f1e 	bne	r18,zero,800ae00 <___vfprintf_internal_r+0x2168>
 800ad84:	00800044 	movi	r2,1
 800ad88:	d8802e15 	stw	r2,184(sp)
 800ad8c:	003db706 	br	800a46c <__alt_data_end+0xf800a46c>
 800ad90:	00800b44 	movi	r2,45
 800ad94:	05adc83a 	sub	r22,zero,r22
 800ad98:	d8802305 	stb	r2,140(sp)
 800ad9c:	003f3f06 	br	800aa9c <__alt_data_end+0xf800aa9c>
 800ada0:	0005883a 	mov	r2,zero
 800ada4:	003f5206 	br	800aaf0 <__alt_data_end+0xf800aaf0>
 800ada8:	90a4703a 	and	r18,r18,r2
 800adac:	903f4e26 	beq	r18,zero,800aae8 <__alt_data_end+0xf800aae8>
 800adb0:	003f4a06 	br	800aadc <__alt_data_end+0xf800aadc>
 800adb4:	00800084 	movi	r2,2
 800adb8:	10c5c83a 	sub	r2,r2,r3
 800adbc:	003f8406 	br	800abd0 <__alt_data_end+0xf800abd0>
 800adc0:	d8802d17 	ldw	r2,180(sp)
 800adc4:	d9002d17 	ldw	r4,180(sp)
 800adc8:	ac400043 	ldbu	r17,1(r21)
 800adcc:	10800017 	ldw	r2,0(r2)
 800add0:	582b883a 	mov	r21,r11
 800add4:	d8802915 	stw	r2,164(sp)
 800add8:	20800104 	addi	r2,r4,4
 800addc:	d9002917 	ldw	r4,164(sp)
 800ade0:	d8802d15 	stw	r2,180(sp)
 800ade4:	203e7a0e 	bge	r4,zero,800a7d0 <__alt_data_end+0xf800a7d0>
 800ade8:	8c403fcc 	andi	r17,r17,255
 800adec:	00bfffc4 	movi	r2,-1
 800adf0:	8c40201c 	xori	r17,r17,128
 800adf4:	d8802915 	stw	r2,164(sp)
 800adf8:	8c7fe004 	addi	r17,r17,-128
 800adfc:	00380706 	br	8008e1c <__alt_data_end+0xf8008e1c>
 800ae00:	d8c02917 	ldw	r3,164(sp)
 800ae04:	18c00084 	addi	r3,r3,2
 800ae08:	d8c02e15 	stw	r3,184(sp)
 800ae0c:	1805883a 	mov	r2,r3
 800ae10:	183d960e 	bge	r3,zero,800a46c <__alt_data_end+0xf800a46c>
 800ae14:	003fd606 	br	800ad70 <__alt_data_end+0xf800ad70>
 800ae18:	0005883a 	mov	r2,zero
 800ae1c:	003f8e06 	br	800ac58 <__alt_data_end+0xf800ac58>
 800ae20:	9080004c 	andi	r2,r18,1
 800ae24:	103f811e 	bne	r2,zero,800ac2c <__alt_data_end+0xf800ac2c>
 800ae28:	d8802117 	ldw	r2,132(sp)
 800ae2c:	1405c83a 	sub	r2,r2,r16
 800ae30:	d8803315 	stw	r2,204(sp)
 800ae34:	b47ef326 	beq	r22,r17,800aa04 <__alt_data_end+0xf800aa04>
 800ae38:	dd802617 	ldw	r22,152(sp)
 800ae3c:	003f1106 	br	800aa84 <__alt_data_end+0xf800aa84>
 800ae40:	d9c02785 	stb	r7,158(sp)
 800ae44:	00390406 	br	8009258 <__alt_data_end+0xf8009258>
 800ae48:	d9c02785 	stb	r7,158(sp)
 800ae4c:	0038d306 	br	800919c <__alt_data_end+0xf800919c>
 800ae50:	d9c02785 	stb	r7,158(sp)
 800ae54:	003a6106 	br	80097dc <__alt_data_end+0xf80097dc>
 800ae58:	d9c02785 	stb	r7,158(sp)
 800ae5c:	003af806 	br	8009a40 <__alt_data_end+0xf8009a40>
 800ae60:	0005883a 	mov	r2,zero
 800ae64:	003d7e06 	br	800a460 <__alt_data_end+0xf800a460>
 800ae68:	d8802344 	addi	r2,sp,141
 800ae6c:	003f1306 	br	800aabc <__alt_data_end+0xf800aabc>
 800ae70:	d9c02785 	stb	r7,158(sp)
 800ae74:	00392306 	br	8009304 <__alt_data_end+0xf8009304>
 800ae78:	d9c02785 	stb	r7,158(sp)
 800ae7c:	003aa906 	br	8009924 <__alt_data_end+0xf8009924>
 800ae80:	d9c02785 	stb	r7,158(sp)
 800ae84:	003a3d06 	br	800977c <__alt_data_end+0xf800977c>
 800ae88:	d9c02785 	stb	r7,158(sp)
 800ae8c:	003aca06 	br	80099b8 <__alt_data_end+0xf80099b8>

0800ae90 <__vfprintf_internal>:
 800ae90:	008200b4 	movhi	r2,2050
 800ae94:	10881404 	addi	r2,r2,8272
 800ae98:	300f883a 	mov	r7,r6
 800ae9c:	280d883a 	mov	r6,r5
 800aea0:	200b883a 	mov	r5,r4
 800aea4:	11000017 	ldw	r4,0(r2)
 800aea8:	8008c981 	jmpi	8008c98 <___vfprintf_internal_r>

0800aeac <__sbprintf>:
 800aeac:	2880030b 	ldhu	r2,12(r5)
 800aeb0:	2ac01917 	ldw	r11,100(r5)
 800aeb4:	2a80038b 	ldhu	r10,14(r5)
 800aeb8:	2a400717 	ldw	r9,28(r5)
 800aebc:	2a000917 	ldw	r8,36(r5)
 800aec0:	defee204 	addi	sp,sp,-1144
 800aec4:	00c10004 	movi	r3,1024
 800aec8:	dc011a15 	stw	r16,1128(sp)
 800aecc:	10bfff4c 	andi	r2,r2,65533
 800aed0:	2821883a 	mov	r16,r5
 800aed4:	d8cb883a 	add	r5,sp,r3
 800aed8:	dc811c15 	stw	r18,1136(sp)
 800aedc:	dc411b15 	stw	r17,1132(sp)
 800aee0:	dfc11d15 	stw	ra,1140(sp)
 800aee4:	2025883a 	mov	r18,r4
 800aee8:	d881030d 	sth	r2,1036(sp)
 800aeec:	dac11915 	stw	r11,1124(sp)
 800aef0:	da81038d 	sth	r10,1038(sp)
 800aef4:	da410715 	stw	r9,1052(sp)
 800aef8:	da010915 	stw	r8,1060(sp)
 800aefc:	dec10015 	stw	sp,1024(sp)
 800af00:	dec10415 	stw	sp,1040(sp)
 800af04:	d8c10215 	stw	r3,1032(sp)
 800af08:	d8c10515 	stw	r3,1044(sp)
 800af0c:	d8010615 	stw	zero,1048(sp)
 800af10:	8008c980 	call	8008c98 <___vfprintf_internal_r>
 800af14:	1023883a 	mov	r17,r2
 800af18:	10000416 	blt	r2,zero,800af2c <__sbprintf+0x80>
 800af1c:	d9410004 	addi	r5,sp,1024
 800af20:	9009883a 	mov	r4,r18
 800af24:	800e4a00 	call	800e4a0 <_fflush_r>
 800af28:	10000d1e 	bne	r2,zero,800af60 <__sbprintf+0xb4>
 800af2c:	d881030b 	ldhu	r2,1036(sp)
 800af30:	1080100c 	andi	r2,r2,64
 800af34:	10000326 	beq	r2,zero,800af44 <__sbprintf+0x98>
 800af38:	8080030b 	ldhu	r2,12(r16)
 800af3c:	10801014 	ori	r2,r2,64
 800af40:	8080030d 	sth	r2,12(r16)
 800af44:	8805883a 	mov	r2,r17
 800af48:	dfc11d17 	ldw	ra,1140(sp)
 800af4c:	dc811c17 	ldw	r18,1136(sp)
 800af50:	dc411b17 	ldw	r17,1132(sp)
 800af54:	dc011a17 	ldw	r16,1128(sp)
 800af58:	dec11e04 	addi	sp,sp,1144
 800af5c:	f800283a 	ret
 800af60:	047fffc4 	movi	r17,-1
 800af64:	003ff106 	br	800af2c <__alt_data_end+0xf800af2c>

0800af68 <__svfscanf_r>:
 800af68:	2880030b 	ldhu	r2,12(r5)
 800af6c:	deff4b04 	addi	sp,sp,-724
 800af70:	df00b315 	stw	fp,716(sp)
 800af74:	dd80b115 	stw	r22,708(sp)
 800af78:	dfc0b415 	stw	ra,720(sp)
 800af7c:	ddc0b215 	stw	r23,712(sp)
 800af80:	dd40b015 	stw	r21,704(sp)
 800af84:	dd00af15 	stw	r20,700(sp)
 800af88:	dcc0ae15 	stw	r19,696(sp)
 800af8c:	dc80ad15 	stw	r18,692(sp)
 800af90:	dc40ac15 	stw	r17,688(sp)
 800af94:	dc00ab15 	stw	r16,684(sp)
 800af98:	10c8000c 	andi	r3,r2,8192
 800af9c:	d9c09c15 	stw	r7,624(sp)
 800afa0:	2839883a 	mov	fp,r5
 800afa4:	202d883a 	mov	r22,r4
 800afa8:	1800061e 	bne	r3,zero,800afc4 <__svfscanf_r+0x5c>
 800afac:	29001917 	ldw	r4,100(r5)
 800afb0:	00f7ffc4 	movi	r3,-8193
 800afb4:	10880014 	ori	r2,r2,8192
 800afb8:	20c6703a 	and	r3,r4,r3
 800afbc:	2880030d 	sth	r2,12(r5)
 800afc0:	28c01915 	stw	r3,100(r5)
 800afc4:	30800003 	ldbu	r2,0(r6)
 800afc8:	0021883a 	mov	r16,zero
 800afcc:	05c200b4 	movhi	r23,2050
 800afd0:	d800a115 	stw	zero,644(sp)
 800afd4:	d8009e15 	stw	zero,632(sp)
 800afd8:	d800a015 	stw	zero,640(sp)
 800afdc:	d8809b15 	stw	r2,620(sp)
 800afe0:	bdc81204 	addi	r23,r23,8264
 800afe4:	8025883a 	mov	r18,r16
 800afe8:	35000044 	addi	r20,r6,1
 800afec:	10001e26 	beq	r2,zero,800b068 <__svfscanf_r+0x100>
 800aff0:	b9c00017 	ldw	r7,0(r23)
 800aff4:	3887883a 	add	r3,r7,r2
 800aff8:	18c00043 	ldbu	r3,1(r3)
 800affc:	18c0020c 	andi	r3,r3,8
 800b000:	18001b26 	beq	r3,zero,800b070 <__svfscanf_r+0x108>
 800b004:	e0800117 	ldw	r2,4(fp)
 800b008:	00800e0e 	bge	zero,r2,800b044 <__svfscanf_r+0xdc>
 800b00c:	e0c00017 	ldw	r3,0(fp)
 800b010:	b9000017 	ldw	r4,0(r23)
 800b014:	18800003 	ldbu	r2,0(r3)
 800b018:	2085883a 	add	r2,r4,r2
 800b01c:	10800043 	ldbu	r2,1(r2)
 800b020:	1080020c 	andi	r2,r2,8
 800b024:	10000b26 	beq	r2,zero,800b054 <__svfscanf_r+0xec>
 800b028:	e0800117 	ldw	r2,4(fp)
 800b02c:	18c00044 	addi	r3,r3,1
 800b030:	e0c00015 	stw	r3,0(fp)
 800b034:	10bfffc4 	addi	r2,r2,-1
 800b038:	e0800115 	stw	r2,4(fp)
 800b03c:	94800044 	addi	r18,r18,1
 800b040:	00bff216 	blt	zero,r2,800b00c <__alt_data_end+0xf800b00c>
 800b044:	e00b883a 	mov	r5,fp
 800b048:	b009883a 	mov	r4,r22
 800b04c:	80114540 	call	8011454 <__srefill_r>
 800b050:	103fee26 	beq	r2,zero,800b00c <__alt_data_end+0xf800b00c>
 800b054:	a00d883a 	mov	r6,r20
 800b058:	30800003 	ldbu	r2,0(r6)
 800b05c:	35000044 	addi	r20,r6,1
 800b060:	d8809b15 	stw	r2,620(sp)
 800b064:	103fe21e 	bne	r2,zero,800aff0 <__alt_data_end+0xf800aff0>
 800b068:	d880a017 	ldw	r2,640(sp)
 800b06c:	00009906 	br	800b2d4 <__svfscanf_r+0x36c>
 800b070:	00c00944 	movi	r3,37
 800b074:	10c0881e 	bne	r2,r3,800b298 <__svfscanf_r+0x330>
 800b078:	30c00043 	ldbu	r3,1(r6)
 800b07c:	0023883a 	mov	r17,zero
 800b080:	0027883a 	mov	r19,zero
 800b084:	01001e04 	movi	r4,120
 800b088:	01401b04 	movi	r5,108
 800b08c:	a1800044 	addi	r6,r20,1
 800b090:	20c0a236 	bltu	r4,r3,800b31c <__svfscanf_r+0x3b4>
 800b094:	180490ba 	slli	r2,r3,2
 800b098:	02020074 	movhi	r8,2049
 800b09c:	422c2b04 	addi	r8,r8,-20308
 800b0a0:	1205883a 	add	r2,r2,r8
 800b0a4:	10800017 	ldw	r2,0(r2)
 800b0a8:	1000683a 	jmp	r2
 800b0ac:	0800b2d0 	cmplti	zero,at,715
 800b0b0:	0800b31c 	xori	zero,at,716
 800b0b4:	0800b31c 	xori	zero,at,716
 800b0b8:	0800b31c 	xori	zero,at,716
 800b0bc:	0800b31c 	xori	zero,at,716
 800b0c0:	0800b31c 	xori	zero,at,716
 800b0c4:	0800b31c 	xori	zero,at,716
 800b0c8:	0800b31c 	xori	zero,at,716
 800b0cc:	0800b31c 	xori	zero,at,716
 800b0d0:	0800b31c 	xori	zero,at,716
 800b0d4:	0800b31c 	xori	zero,at,716
 800b0d8:	0800b31c 	xori	zero,at,716
 800b0dc:	0800b31c 	xori	zero,at,716
 800b0e0:	0800b31c 	xori	zero,at,716
 800b0e4:	0800b31c 	xori	zero,at,716
 800b0e8:	0800b31c 	xori	zero,at,716
 800b0ec:	0800b31c 	xori	zero,at,716
 800b0f0:	0800b31c 	xori	zero,at,716
 800b0f4:	0800b31c 	xori	zero,at,716
 800b0f8:	0800b31c 	xori	zero,at,716
 800b0fc:	0800b31c 	xori	zero,at,716
 800b100:	0800b31c 	xori	zero,at,716
 800b104:	0800b31c 	xori	zero,at,716
 800b108:	0800b31c 	xori	zero,at,716
 800b10c:	0800b31c 	xori	zero,at,716
 800b110:	0800b31c 	xori	zero,at,716
 800b114:	0800b31c 	xori	zero,at,716
 800b118:	0800b31c 	xori	zero,at,716
 800b11c:	0800b31c 	xori	zero,at,716
 800b120:	0800b31c 	xori	zero,at,716
 800b124:	0800b31c 	xori	zero,at,716
 800b128:	0800b31c 	xori	zero,at,716
 800b12c:	0800b31c 	xori	zero,at,716
 800b130:	0800b31c 	xori	zero,at,716
 800b134:	0800b31c 	xori	zero,at,716
 800b138:	0800b31c 	xori	zero,at,716
 800b13c:	0800b31c 	xori	zero,at,716
 800b140:	0800b290 	cmplti	zero,at,714
 800b144:	0800b31c 	xori	zero,at,716
 800b148:	0800b31c 	xori	zero,at,716
 800b14c:	0800b31c 	xori	zero,at,716
 800b150:	0800b31c 	xori	zero,at,716
 800b154:	0800b304 	addi	zero,at,716
 800b158:	0800b31c 	xori	zero,at,716
 800b15c:	0800b31c 	xori	zero,at,716
 800b160:	0800b31c 	xori	zero,at,716
 800b164:	0800b31c 	xori	zero,at,716
 800b168:	0800b31c 	xori	zero,at,716
 800b16c:	0800b438 	rdprs	zero,at,720
 800b170:	0800b438 	rdprs	zero,at,720
 800b174:	0800b438 	rdprs	zero,at,720
 800b178:	0800b438 	rdprs	zero,at,720
 800b17c:	0800b438 	rdprs	zero,at,720
 800b180:	0800b438 	rdprs	zero,at,720
 800b184:	0800b438 	rdprs	zero,at,720
 800b188:	0800b438 	rdprs	zero,at,720
 800b18c:	0800b438 	rdprs	zero,at,720
 800b190:	0800b438 	rdprs	zero,at,720
 800b194:	0800b31c 	xori	zero,at,716
 800b198:	0800b31c 	xori	zero,at,716
 800b19c:	0800b31c 	xori	zero,at,716
 800b1a0:	0800b31c 	xori	zero,at,716
 800b1a4:	0800b31c 	xori	zero,at,716
 800b1a8:	0800b31c 	xori	zero,at,716
 800b1ac:	0800b31c 	xori	zero,at,716
 800b1b0:	0800b31c 	xori	zero,at,716
 800b1b4:	0800b31c 	xori	zero,at,716
 800b1b8:	0800b31c 	xori	zero,at,716
 800b1bc:	0800b40c 	andi	zero,at,720
 800b1c0:	0800b4bc 	xorhi	zero,at,722
 800b1c4:	0800b31c 	xori	zero,at,716
 800b1c8:	0800b4bc 	xorhi	zero,at,722
 800b1cc:	0800b31c 	xori	zero,at,716
 800b1d0:	0800b31c 	xori	zero,at,716
 800b1d4:	0800b31c 	xori	zero,at,716
 800b1d8:	0800b31c 	xori	zero,at,716
 800b1dc:	0800b4a8 	cmpgeui	zero,at,722
 800b1e0:	0800b31c 	xori	zero,at,716
 800b1e4:	0800b31c 	xori	zero,at,716
 800b1e8:	0800b47c 	xorhi	zero,at,721
 800b1ec:	0800b31c 	xori	zero,at,716
 800b1f0:	0800b31c 	xori	zero,at,716
 800b1f4:	0800b31c 	xori	zero,at,716
 800b1f8:	0800b31c 	xori	zero,at,716
 800b1fc:	0800b31c 	xori	zero,at,716
 800b200:	0800b31c 	xori	zero,at,716
 800b204:	0800b31c 	xori	zero,at,716
 800b208:	0800b31c 	xori	zero,at,716
 800b20c:	0800b454 	ori	zero,at,721
 800b210:	0800b31c 	xori	zero,at,716
 800b214:	0800b31c 	xori	zero,at,716
 800b218:	0800b5f0 	cmpltui	zero,at,727
 800b21c:	0800b31c 	xori	zero,at,716
 800b220:	0800b31c 	xori	zero,at,716
 800b224:	0800b31c 	xori	zero,at,716
 800b228:	0800b31c 	xori	zero,at,716
 800b22c:	0800b31c 	xori	zero,at,716
 800b230:	0800b31c 	xori	zero,at,716
 800b234:	0800b31c 	xori	zero,at,716
 800b238:	0800b574 	orhi	zero,at,725
 800b23c:	0800b54c 	andi	zero,at,725
 800b240:	0800b4bc 	xorhi	zero,at,722
 800b244:	0800b4bc 	xorhi	zero,at,722
 800b248:	0800b4bc 	xorhi	zero,at,722
 800b24c:	0800b538 	rdprs	zero,at,724
 800b250:	0800b67c 	xorhi	zero,at,729
 800b254:	0800b31c 	xori	zero,at,716
 800b258:	0800b31c 	xori	zero,at,716
 800b25c:	0800b524 	muli	zero,at,724
 800b260:	0800b31c 	xori	zero,at,716
 800b264:	0800b4f4 	orhi	zero,at,723
 800b268:	0800b4d0 	cmplti	zero,at,723
 800b26c:	0800b3e0 	cmpeqi	zero,at,719
 800b270:	0800b31c 	xori	zero,at,716
 800b274:	0800b31c 	xori	zero,at,716
 800b278:	0800b3cc 	andi	zero,at,719
 800b27c:	0800b31c 	xori	zero,at,716
 800b280:	0800b354 	ori	zero,at,717
 800b284:	0800b31c 	xori	zero,at,716
 800b288:	0800b31c 	xori	zero,at,716
 800b28c:	0800b454 	ori	zero,at,721
 800b290:	d9809d15 	stw	r6,628(sp)
 800b294:	3029883a 	mov	r20,r6
 800b298:	e0800117 	ldw	r2,4(fp)
 800b29c:	0081aa0e 	bge	zero,r2,800b948 <__svfscanf_r+0x9e0>
 800b2a0:	e0800017 	ldw	r2,0(fp)
 800b2a4:	a0ffffc3 	ldbu	r3,-1(r20)
 800b2a8:	11000003 	ldbu	r4,0(r2)
 800b2ac:	20ff6e1e 	bne	r4,r3,800b068 <__alt_data_end+0xf800b068>
 800b2b0:	e0c00117 	ldw	r3,4(fp)
 800b2b4:	10800044 	addi	r2,r2,1
 800b2b8:	e0800015 	stw	r2,0(fp)
 800b2bc:	18bfffc4 	addi	r2,r3,-1
 800b2c0:	e0800115 	stw	r2,4(fp)
 800b2c4:	94800044 	addi	r18,r18,1
 800b2c8:	a00d883a 	mov	r6,r20
 800b2cc:	003f6206 	br	800b058 <__alt_data_end+0xf800b058>
 800b2d0:	00bfffc4 	movi	r2,-1
 800b2d4:	dfc0b417 	ldw	ra,720(sp)
 800b2d8:	df00b317 	ldw	fp,716(sp)
 800b2dc:	ddc0b217 	ldw	r23,712(sp)
 800b2e0:	dd80b117 	ldw	r22,708(sp)
 800b2e4:	dd40b017 	ldw	r21,704(sp)
 800b2e8:	dd00af17 	ldw	r20,700(sp)
 800b2ec:	dcc0ae17 	ldw	r19,696(sp)
 800b2f0:	dc80ad17 	ldw	r18,692(sp)
 800b2f4:	dc40ac17 	ldw	r17,688(sp)
 800b2f8:	dc00ab17 	ldw	r16,684(sp)
 800b2fc:	dec0b504 	addi	sp,sp,724
 800b300:	f800283a 	ret
 800b304:	a0800043 	ldbu	r2,1(r20)
 800b308:	3029883a 	mov	r20,r6
 800b30c:	8c400414 	ori	r17,r17,16
 800b310:	10c03fcc 	andi	r3,r2,255
 800b314:	a1800044 	addi	r6,r20,1
 800b318:	20ff5e2e 	bgeu	r4,r3,800b094 <__alt_data_end+0xf800b094>
 800b31c:	38c7883a 	add	r3,r7,r3
 800b320:	18800043 	ldbu	r2,1(r3)
 800b324:	d9809d15 	stw	r6,628(sp)
 800b328:	00c00044 	movi	r3,1
 800b32c:	108000cc 	andi	r2,r2,3
 800b330:	10c18f26 	beq	r2,r3,800b970 <__svfscanf_r+0xa08>
 800b334:	e0800117 	ldw	r2,4(fp)
 800b338:	00808716 	blt	zero,r2,800b558 <__svfscanf_r+0x5f0>
 800b33c:	e00b883a 	mov	r5,fp
 800b340:	b009883a 	mov	r4,r22
 800b344:	80114540 	call	8011454 <__srefill_r>
 800b348:	1001431e 	bne	r2,zero,800b858 <__svfscanf_r+0x8f0>
 800b34c:	b9c00017 	ldw	r7,0(r23)
 800b350:	00008106 	br	800b558 <__svfscanf_r+0x5f0>
 800b354:	e0800117 	ldw	r2,4(fp)
 800b358:	d9809d15 	stw	r6,628(sp)
 800b35c:	0081a30e 	bge	zero,r2,800b9ec <__svfscanf_r+0xa84>
 800b360:	00820074 	movhi	r2,2049
 800b364:	108d1004 	addi	r2,r2,13376
 800b368:	02000284 	movi	r8,10
 800b36c:	d880a115 	stw	r2,644(sp)
 800b370:	da009e15 	stw	r8,632(sp)
 800b374:	050000c4 	movi	r20,3
 800b378:	e0c00017 	ldw	r3,0(fp)
 800b37c:	00000206 	br	800b388 <__svfscanf_r+0x420>
 800b380:	18c00044 	addi	r3,r3,1
 800b384:	e0c00015 	stw	r3,0(fp)
 800b388:	19000003 	ldbu	r4,0(r3)
 800b38c:	20803fcc 	andi	r2,r4,255
 800b390:	3885883a 	add	r2,r7,r2
 800b394:	10800043 	ldbu	r2,1(r2)
 800b398:	1140020c 	andi	r5,r2,8
 800b39c:	2801ab26 	beq	r5,zero,800ba4c <__svfscanf_r+0xae4>
 800b3a0:	e0800117 	ldw	r2,4(fp)
 800b3a4:	94800044 	addi	r18,r18,1
 800b3a8:	10bfffc4 	addi	r2,r2,-1
 800b3ac:	e0800115 	stw	r2,4(fp)
 800b3b0:	00bff316 	blt	zero,r2,800b380 <__alt_data_end+0xf800b380>
 800b3b4:	e00b883a 	mov	r5,fp
 800b3b8:	b009883a 	mov	r4,r22
 800b3bc:	80114540 	call	8011454 <__srefill_r>
 800b3c0:	1001251e 	bne	r2,zero,800b858 <__svfscanf_r+0x8f0>
 800b3c4:	b9c00017 	ldw	r7,0(r23)
 800b3c8:	003feb06 	br	800b378 <__alt_data_end+0xf800b378>
 800b3cc:	e0800117 	ldw	r2,4(fp)
 800b3d0:	d9809d15 	stw	r6,628(sp)
 800b3d4:	00818b0e 	bge	zero,r2,800ba04 <__svfscanf_r+0xa9c>
 800b3d8:	05000084 	movi	r20,2
 800b3dc:	003fe606 	br	800b378 <__alt_data_end+0xf800b378>
 800b3e0:	e0800117 	ldw	r2,4(fp)
 800b3e4:	d9809d15 	stw	r6,628(sp)
 800b3e8:	8c408814 	ori	r17,r17,544
 800b3ec:	00801d0e 	bge	zero,r2,800b464 <__svfscanf_r+0x4fc>
 800b3f0:	00820074 	movhi	r2,2049
 800b3f4:	108d1004 	addi	r2,r2,13376
 800b3f8:	02000404 	movi	r8,16
 800b3fc:	d880a115 	stw	r2,644(sp)
 800b400:	da009e15 	stw	r8,632(sp)
 800b404:	050000c4 	movi	r20,3
 800b408:	003fdb06 	br	800b378 <__alt_data_end+0xf800b378>
 800b40c:	e0800117 	ldw	r2,4(fp)
 800b410:	d9809d15 	stw	r6,628(sp)
 800b414:	8c400054 	ori	r17,r17,1
 800b418:	00bfc80e 	bge	zero,r2,800b33c <__alt_data_end+0xf800b33c>
 800b41c:	00c20074 	movhi	r3,2049
 800b420:	18cbba04 	addi	r3,r3,12008
 800b424:	02000284 	movi	r8,10
 800b428:	d8c0a115 	stw	r3,644(sp)
 800b42c:	da009e15 	stw	r8,632(sp)
 800b430:	050000c4 	movi	r20,3
 800b434:	003fd006 	br	800b378 <__alt_data_end+0xf800b378>
 800b438:	9cc002a4 	muli	r19,r19,10
 800b43c:	a0800043 	ldbu	r2,1(r20)
 800b440:	3029883a 	mov	r20,r6
 800b444:	98e7883a 	add	r19,r19,r3
 800b448:	9cfff404 	addi	r19,r19,-48
 800b44c:	10c03fcc 	andi	r3,r2,255
 800b450:	003f0e06 	br	800b08c <__alt_data_end+0xf800b08c>
 800b454:	e0800117 	ldw	r2,4(fp)
 800b458:	d9809d15 	stw	r6,628(sp)
 800b45c:	8c408014 	ori	r17,r17,512
 800b460:	00bfe316 	blt	zero,r2,800b3f0 <__alt_data_end+0xf800b3f0>
 800b464:	e00b883a 	mov	r5,fp
 800b468:	b009883a 	mov	r4,r22
 800b46c:	80114540 	call	8011454 <__srefill_r>
 800b470:	1000f91e 	bne	r2,zero,800b858 <__svfscanf_r+0x8f0>
 800b474:	b9c00017 	ldw	r7,0(r23)
 800b478:	003fdd06 	br	800b3f0 <__alt_data_end+0xf800b3f0>
 800b47c:	e0800117 	ldw	r2,4(fp)
 800b480:	d9809d15 	stw	r6,628(sp)
 800b484:	8c400054 	ori	r17,r17,1
 800b488:	0080140e 	bge	zero,r2,800b4dc <__svfscanf_r+0x574>
 800b48c:	00820074 	movhi	r2,2049
 800b490:	108d1004 	addi	r2,r2,13376
 800b494:	02000204 	movi	r8,8
 800b498:	d880a115 	stw	r2,644(sp)
 800b49c:	da009e15 	stw	r8,632(sp)
 800b4a0:	050000c4 	movi	r20,3
 800b4a4:	003fb406 	br	800b378 <__alt_data_end+0xf800b378>
 800b4a8:	a0800043 	ldbu	r2,1(r20)
 800b4ac:	8c400094 	ori	r17,r17,2
 800b4b0:	3029883a 	mov	r20,r6
 800b4b4:	10c03fcc 	andi	r3,r2,255
 800b4b8:	003ef406 	br	800b08c <__alt_data_end+0xf800b08c>
 800b4bc:	e0800117 	ldw	r2,4(fp)
 800b4c0:	d9809d15 	stw	r6,628(sp)
 800b4c4:	0081420e 	bge	zero,r2,800b9d0 <__svfscanf_r+0xa68>
 800b4c8:	05000104 	movi	r20,4
 800b4cc:	003faa06 	br	800b378 <__alt_data_end+0xf800b378>
 800b4d0:	e0800117 	ldw	r2,4(fp)
 800b4d4:	d9809d15 	stw	r6,628(sp)
 800b4d8:	00bfec16 	blt	zero,r2,800b48c <__alt_data_end+0xf800b48c>
 800b4dc:	e00b883a 	mov	r5,fp
 800b4e0:	b009883a 	mov	r4,r22
 800b4e4:	80114540 	call	8011454 <__srefill_r>
 800b4e8:	1000db1e 	bne	r2,zero,800b858 <__svfscanf_r+0x8f0>
 800b4ec:	b9c00017 	ldw	r7,0(r23)
 800b4f0:	003fe606 	br	800b48c <__alt_data_end+0xf800b48c>
 800b4f4:	d9809d15 	stw	r6,628(sp)
 800b4f8:	8880040c 	andi	r2,r17,16
 800b4fc:	10009c1e 	bne	r2,zero,800b770 <__svfscanf_r+0x808>
 800b500:	8880010c 	andi	r2,r17,4
 800b504:	10011e26 	beq	r2,zero,800b980 <__svfscanf_r+0xa18>
 800b508:	da009c17 	ldw	r8,624(sp)
 800b50c:	3029883a 	mov	r20,r6
 800b510:	40800017 	ldw	r2,0(r8)
 800b514:	42000104 	addi	r8,r8,4
 800b518:	da009c15 	stw	r8,624(sp)
 800b51c:	1480000d 	sth	r18,0(r2)
 800b520:	003ecc06 	br	800b054 <__alt_data_end+0xf800b054>
 800b524:	a0c00043 	ldbu	r3,1(r20)
 800b528:	19410c26 	beq	r3,r5,800b95c <__svfscanf_r+0x9f4>
 800b52c:	8c400054 	ori	r17,r17,1
 800b530:	3029883a 	mov	r20,r6
 800b534:	003ed506 	br	800b08c <__alt_data_end+0xf800b08c>
 800b538:	a0800043 	ldbu	r2,1(r20)
 800b53c:	8c400114 	ori	r17,r17,4
 800b540:	3029883a 	mov	r20,r6
 800b544:	10c03fcc 	andi	r3,r2,255
 800b548:	003ed006 	br	800b08c <__alt_data_end+0xf800b08c>
 800b54c:	e0800117 	ldw	r2,4(fp)
 800b550:	d9809d15 	stw	r6,628(sp)
 800b554:	00bf790e 	bge	zero,r2,800b33c <__alt_data_end+0xf800b33c>
 800b558:	00820074 	movhi	r2,2049
 800b55c:	108bba04 	addi	r2,r2,12008
 800b560:	02000284 	movi	r8,10
 800b564:	d880a115 	stw	r2,644(sp)
 800b568:	da009e15 	stw	r8,632(sp)
 800b56c:	050000c4 	movi	r20,3
 800b570:	003f8106 	br	800b378 <__alt_data_end+0xf800b378>
 800b574:	e0800117 	ldw	r2,4(fp)
 800b578:	d9809d15 	stw	r6,628(sp)
 800b57c:	0080c40e 	bge	zero,r2,800b890 <__svfscanf_r+0x928>
 800b580:	9800011e 	bne	r19,zero,800b588 <__svfscanf_r+0x620>
 800b584:	04c00044 	movi	r19,1
 800b588:	8880004c 	andi	r2,r17,1
 800b58c:	1000441e 	bne	r2,zero,800b6a0 <__svfscanf_r+0x738>
 800b590:	8c40040c 	andi	r17,r17,16
 800b594:	8800da26 	beq	r17,zero,800b900 <__svfscanf_r+0x998>
 800b598:	0021883a 	mov	r16,zero
 800b59c:	00000806 	br	800b5c0 <__svfscanf_r+0x658>
 800b5a0:	1887883a 	add	r3,r3,r2
 800b5a4:	e00b883a 	mov	r5,fp
 800b5a8:	b009883a 	mov	r4,r22
 800b5ac:	e0c00015 	stw	r3,0(fp)
 800b5b0:	80a1883a 	add	r16,r16,r2
 800b5b4:	98a7c83a 	sub	r19,r19,r2
 800b5b8:	80114540 	call	8011454 <__srefill_r>
 800b5bc:	1000ca1e 	bne	r2,zero,800b8e8 <__svfscanf_r+0x980>
 800b5c0:	e0800117 	ldw	r2,4(fp)
 800b5c4:	e0c00017 	ldw	r3,0(fp)
 800b5c8:	14fff516 	blt	r2,r19,800b5a0 <__alt_data_end+0xf800b5a0>
 800b5cc:	14c5c83a 	sub	r2,r2,r19
 800b5d0:	1cd5883a 	add	r10,r3,r19
 800b5d4:	84e1883a 	add	r16,r16,r19
 800b5d8:	e0800115 	stw	r2,4(fp)
 800b5dc:	e2800015 	stw	r10,0(fp)
 800b5e0:	dd009d17 	ldw	r20,628(sp)
 800b5e4:	9425883a 	add	r18,r18,r16
 800b5e8:	a00d883a 	mov	r6,r20
 800b5ec:	003e9a06 	br	800b058 <__alt_data_end+0xf800b058>
 800b5f0:	300b883a 	mov	r5,r6
 800b5f4:	d9005884 	addi	r4,sp,354
 800b5f8:	d9809d15 	stw	r6,628(sp)
 800b5fc:	801169c0 	call	801169c <__sccl>
 800b600:	1029883a 	mov	r20,r2
 800b604:	e0800117 	ldw	r2,4(fp)
 800b608:	0081050e 	bge	zero,r2,800ba20 <__svfscanf_r+0xab8>
 800b60c:	e1000017 	ldw	r4,0(fp)
 800b610:	20800003 	ldbu	r2,0(r4)
 800b614:	98005926 	beq	r19,zero,800b77c <__svfscanf_r+0x814>
 800b618:	8c40040c 	andi	r17,r17,16
 800b61c:	88005a26 	beq	r17,zero,800b788 <__svfscanf_r+0x820>
 800b620:	9823883a 	mov	r17,r19
 800b624:	0021883a 	mov	r16,zero
 800b628:	00000106 	br	800b630 <__svfscanf_r+0x6c8>
 800b62c:	20800003 	ldbu	r2,0(r4)
 800b630:	10803fcc 	andi	r2,r2,255
 800b634:	d8c05884 	addi	r3,sp,354
 800b638:	1885883a 	add	r2,r3,r2
 800b63c:	10800007 	ldb	r2,0(r2)
 800b640:	1000ad26 	beq	r2,zero,800b8f8 <__svfscanf_r+0x990>
 800b644:	e0800117 	ldw	r2,4(fp)
 800b648:	21000044 	addi	r4,r4,1
 800b64c:	84000044 	addi	r16,r16,1
 800b650:	10bfffc4 	addi	r2,r2,-1
 800b654:	e0800115 	stw	r2,4(fp)
 800b658:	e1000015 	stw	r4,0(fp)
 800b65c:	84c0a026 	beq	r16,r19,800b8e0 <__svfscanf_r+0x978>
 800b660:	00bff216 	blt	zero,r2,800b62c <__alt_data_end+0xf800b62c>
 800b664:	e00b883a 	mov	r5,fp
 800b668:	b009883a 	mov	r4,r22
 800b66c:	80114540 	call	8011454 <__srefill_r>
 800b670:	10009a1e 	bne	r2,zero,800b8dc <__svfscanf_r+0x974>
 800b674:	e1000017 	ldw	r4,0(fp)
 800b678:	003fec06 	br	800b62c <__alt_data_end+0xf800b62c>
 800b67c:	e0800117 	ldw	r2,4(fp)
 800b680:	d9809d15 	stw	r6,628(sp)
 800b684:	0080eb0e 	bge	zero,r2,800ba34 <__svfscanf_r+0xacc>
 800b688:	00820074 	movhi	r2,2049
 800b68c:	108bba04 	addi	r2,r2,12008
 800b690:	d880a115 	stw	r2,644(sp)
 800b694:	d8009e15 	stw	zero,632(sp)
 800b698:	050000c4 	movi	r20,3
 800b69c:	003f3606 	br	800b378 <__alt_data_end+0xf800b378>
 800b6a0:	dd409904 	addi	r21,sp,612
 800b6a4:	8c40040c 	andi	r17,r17,16
 800b6a8:	01800204 	movi	r6,8
 800b6ac:	000b883a 	mov	r5,zero
 800b6b0:	a809883a 	mov	r4,r21
 800b6b4:	dc409f15 	stw	r17,636(sp)
 800b6b8:	80047e00 	call	80047e0 <memset>
 800b6bc:	dc409f17 	ldw	r17,636(sp)
 800b6c0:	88006e26 	beq	r17,zero,800b87c <__svfscanf_r+0x914>
 800b6c4:	0029883a 	mov	r20,zero
 800b6c8:	0023883a 	mov	r17,zero
 800b6cc:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 800b6d0:	14406126 	beq	r2,r17,800b858 <__svfscanf_r+0x8f0>
 800b6d4:	e0800017 	ldw	r2,0(fp)
 800b6d8:	e0c00117 	ldw	r3,4(fp)
 800b6dc:	d9000104 	addi	r4,sp,4
 800b6e0:	12000003 	ldbu	r8,0(r2)
 800b6e4:	18ffffc4 	addi	r3,r3,-1
 800b6e8:	10800044 	addi	r2,r2,1
 800b6ec:	e0c00115 	stw	r3,4(fp)
 800b6f0:	e0800015 	stw	r2,0(fp)
 800b6f4:	8c000044 	addi	r16,r17,1
 800b6f8:	dd400015 	stw	r21,0(sp)
 800b6fc:	2463883a 	add	r17,r4,r17
 800b700:	200d883a 	mov	r6,r4
 800b704:	a00b883a 	mov	r5,r20
 800b708:	800f883a 	mov	r7,r16
 800b70c:	b009883a 	mov	r4,r22
 800b710:	8a000005 	stb	r8,0(r17)
 800b714:	800f8cc0 	call	800f8cc <_mbrtowc_r>
 800b718:	017fffc4 	movi	r5,-1
 800b71c:	11404e26 	beq	r2,r5,800b858 <__svfscanf_r+0x8f0>
 800b720:	1000601e 	bne	r2,zero,800b8a4 <__svfscanf_r+0x93c>
 800b724:	da009f17 	ldw	r8,636(sp)
 800b728:	4000641e 	bne	r8,zero,800b8bc <__svfscanf_r+0x954>
 800b72c:	a0000015 	stw	zero,0(r20)
 800b730:	9425883a 	add	r18,r18,r16
 800b734:	9967883a 	add	r19,r19,r5
 800b738:	a5000104 	addi	r20,r20,4
 800b73c:	e0800117 	ldw	r2,4(fp)
 800b740:	0023883a 	mov	r17,zero
 800b744:	00804b16 	blt	zero,r2,800b874 <__svfscanf_r+0x90c>
 800b748:	e00b883a 	mov	r5,fp
 800b74c:	b009883a 	mov	r4,r22
 800b750:	80114540 	call	8011454 <__srefill_r>
 800b754:	10004726 	beq	r2,zero,800b874 <__svfscanf_r+0x90c>
 800b758:	88003f1e 	bne	r17,zero,800b858 <__svfscanf_r+0x8f0>
 800b75c:	d8c09f17 	ldw	r3,636(sp)
 800b760:	1800031e 	bne	r3,zero,800b770 <__svfscanf_r+0x808>
 800b764:	da00a017 	ldw	r8,640(sp)
 800b768:	42000044 	addi	r8,r8,1
 800b76c:	da00a015 	stw	r8,640(sp)
 800b770:	dd009d17 	ldw	r20,628(sp)
 800b774:	a00d883a 	mov	r6,r20
 800b778:	003e3706 	br	800b058 <__alt_data_end+0xf800b058>
 800b77c:	8c40040c 	andi	r17,r17,16
 800b780:	04ffffc4 	movi	r19,-1
 800b784:	883fa61e 	bne	r17,zero,800b620 <__alt_data_end+0xf800b620>
 800b788:	da009c17 	ldw	r8,624(sp)
 800b78c:	9abfffc4 	addi	r10,r19,-1
 800b790:	44000017 	ldw	r16,0(r8)
 800b794:	44400104 	addi	r17,r8,4
 800b798:	8007883a 	mov	r3,r16
 800b79c:	82ab883a 	add	r21,r16,r10
 800b7a0:	00000306 	br	800b7b0 <__svfscanf_r+0x848>
 800b7a4:	e1000017 	ldw	r4,0(fp)
 800b7a8:	9807883a 	mov	r3,r19
 800b7ac:	20800003 	ldbu	r2,0(r4)
 800b7b0:	10803fcc 	andi	r2,r2,255
 800b7b4:	d9405884 	addi	r5,sp,354
 800b7b8:	2885883a 	add	r2,r5,r2
 800b7bc:	10800007 	ldb	r2,0(r2)
 800b7c0:	10004b26 	beq	r2,zero,800b8f0 <__svfscanf_r+0x988>
 800b7c4:	e0800117 	ldw	r2,4(fp)
 800b7c8:	21400044 	addi	r5,r4,1
 800b7cc:	e1400015 	stw	r5,0(fp)
 800b7d0:	10bfffc4 	addi	r2,r2,-1
 800b7d4:	e0800115 	stw	r2,4(fp)
 800b7d8:	20800003 	ldbu	r2,0(r4)
 800b7dc:	1cc00044 	addi	r19,r3,1
 800b7e0:	18800005 	stb	r2,0(r3)
 800b7e4:	1d400726 	beq	r3,r21,800b804 <__svfscanf_r+0x89c>
 800b7e8:	e0800117 	ldw	r2,4(fp)
 800b7ec:	00bfed16 	blt	zero,r2,800b7a4 <__alt_data_end+0xf800b7a4>
 800b7f0:	e00b883a 	mov	r5,fp
 800b7f4:	b009883a 	mov	r4,r22
 800b7f8:	80114540 	call	8011454 <__srefill_r>
 800b7fc:	103fe926 	beq	r2,zero,800b7a4 <__alt_data_end+0xf800b7a4>
 800b800:	84c01526 	beq	r16,r19,800b858 <__svfscanf_r+0x8f0>
 800b804:	9c21c83a 	sub	r16,r19,r16
 800b808:	803e1726 	beq	r16,zero,800b068 <__alt_data_end+0xf800b068>
 800b80c:	da00a017 	ldw	r8,640(sp)
 800b810:	98000005 	stb	zero,0(r19)
 800b814:	dc409c15 	stw	r17,624(sp)
 800b818:	42000044 	addi	r8,r8,1
 800b81c:	da00a015 	stw	r8,640(sp)
 800b820:	9425883a 	add	r18,r18,r16
 800b824:	a00d883a 	mov	r6,r20
 800b828:	003e0b06 	br	800b058 <__alt_data_end+0xf800b058>
 800b82c:	017fff84 	movi	r5,-2
 800b830:	11439b1e 	bne	r2,r5,800c6a0 <__svfscanf_r+0x1738>
 800b834:	8821883a 	mov	r16,r17
 800b838:	e0800117 	ldw	r2,4(fp)
 800b83c:	0082e516 	blt	zero,r2,800c3d4 <__svfscanf_r+0x146c>
 800b840:	e00b883a 	mov	r5,fp
 800b844:	b009883a 	mov	r4,r22
 800b848:	80114540 	call	8011454 <__srefill_r>
 800b84c:	1002e126 	beq	r2,zero,800c3d4 <__svfscanf_r+0x146c>
 800b850:	dc409f17 	ldw	r17,636(sp)
 800b854:	8002e826 	beq	r16,zero,800c3f8 <__svfscanf_r+0x1490>
 800b858:	da00a017 	ldw	r8,640(sp)
 800b85c:	403e9c26 	beq	r8,zero,800b2d0 <__alt_data_end+0xf800b2d0>
 800b860:	e080030b 	ldhu	r2,12(fp)
 800b864:	1080100c 	andi	r2,r2,64
 800b868:	103e991e 	bne	r2,zero,800b2d0 <__alt_data_end+0xf800b2d0>
 800b86c:	4005883a 	mov	r2,r8
 800b870:	003e9806 	br	800b2d4 <__alt_data_end+0xf800b2d4>
 800b874:	983f951e 	bne	r19,zero,800b6cc <__alt_data_end+0xf800b6cc>
 800b878:	003fb806 	br	800b75c <__alt_data_end+0xf800b75c>
 800b87c:	da009c17 	ldw	r8,624(sp)
 800b880:	45000017 	ldw	r20,0(r8)
 800b884:	42000104 	addi	r8,r8,4
 800b888:	da009c15 	stw	r8,624(sp)
 800b88c:	003f8e06 	br	800b6c8 <__alt_data_end+0xf800b6c8>
 800b890:	e00b883a 	mov	r5,fp
 800b894:	b009883a 	mov	r4,r22
 800b898:	80114540 	call	8011454 <__srefill_r>
 800b89c:	103f3826 	beq	r2,zero,800b580 <__alt_data_end+0xf800b580>
 800b8a0:	003fed06 	br	800b858 <__alt_data_end+0xf800b858>
 800b8a4:	00ffff84 	movi	r3,-2
 800b8a8:	10c0071e 	bne	r2,r3,800b8c8 <__svfscanf_r+0x960>
 800b8ac:	e0800117 	ldw	r2,4(fp)
 800b8b0:	8023883a 	mov	r17,r16
 800b8b4:	00bf8516 	blt	zero,r2,800b6cc <__alt_data_end+0xf800b6cc>
 800b8b8:	003fa306 	br	800b748 <__alt_data_end+0xf800b748>
 800b8bc:	9425883a 	add	r18,r18,r16
 800b8c0:	9cffffc4 	addi	r19,r19,-1
 800b8c4:	003f9d06 	br	800b73c <__alt_data_end+0xf800b73c>
 800b8c8:	da009f17 	ldw	r8,636(sp)
 800b8cc:	9425883a 	add	r18,r18,r16
 800b8d0:	9cffffc4 	addi	r19,r19,-1
 800b8d4:	403f9826 	beq	r8,zero,800b738 <__alt_data_end+0xf800b738>
 800b8d8:	003f9806 	br	800b73c <__alt_data_end+0xf800b73c>
 800b8dc:	8023883a 	mov	r17,r16
 800b8e0:	8821883a 	mov	r16,r17
 800b8e4:	003fce06 	br	800b820 <__alt_data_end+0xf800b820>
 800b8e8:	803f3d1e 	bne	r16,zero,800b5e0 <__alt_data_end+0xf800b5e0>
 800b8ec:	003fda06 	br	800b858 <__alt_data_end+0xf800b858>
 800b8f0:	1827883a 	mov	r19,r3
 800b8f4:	003fc306 	br	800b804 <__alt_data_end+0xf800b804>
 800b8f8:	803fc91e 	bne	r16,zero,800b820 <__alt_data_end+0xf800b820>
 800b8fc:	003dda06 	br	800b068 <__alt_data_end+0xf800b068>
 800b900:	da009c17 	ldw	r8,624(sp)
 800b904:	df000015 	stw	fp,0(sp)
 800b908:	980f883a 	mov	r7,r19
 800b90c:	41400017 	ldw	r5,0(r8)
 800b910:	01800044 	movi	r6,1
 800b914:	b009883a 	mov	r4,r22
 800b918:	800e8cc0 	call	800e8cc <_fread_r>
 800b91c:	da009c17 	ldw	r8,624(sp)
 800b920:	40c00104 	addi	r3,r8,4
 800b924:	103fcc26 	beq	r2,zero,800b858 <__alt_data_end+0xf800b858>
 800b928:	da00a017 	ldw	r8,640(sp)
 800b92c:	dd009d17 	ldw	r20,628(sp)
 800b930:	90a5883a 	add	r18,r18,r2
 800b934:	42000044 	addi	r8,r8,1
 800b938:	da00a015 	stw	r8,640(sp)
 800b93c:	d8c09c15 	stw	r3,624(sp)
 800b940:	a00d883a 	mov	r6,r20
 800b944:	003dc406 	br	800b058 <__alt_data_end+0xf800b058>
 800b948:	e00b883a 	mov	r5,fp
 800b94c:	b009883a 	mov	r4,r22
 800b950:	80114540 	call	8011454 <__srefill_r>
 800b954:	103e5226 	beq	r2,zero,800b2a0 <__alt_data_end+0xf800b2a0>
 800b958:	003fbf06 	br	800b858 <__alt_data_end+0xf800b858>
 800b95c:	a0800083 	ldbu	r2,2(r20)
 800b960:	8c400094 	ori	r17,r17,2
 800b964:	a5000084 	addi	r20,r20,2
 800b968:	10c03fcc 	andi	r3,r2,255
 800b96c:	003dc706 	br	800b08c <__alt_data_end+0xf800b08c>
 800b970:	e0800117 	ldw	r2,4(fp)
 800b974:	88e2b03a 	or	r17,r17,r3
 800b978:	00bef716 	blt	zero,r2,800b558 <__alt_data_end+0xf800b558>
 800b97c:	003e6f06 	br	800b33c <__alt_data_end+0xf800b33c>
 800b980:	8880004c 	andi	r2,r17,1
 800b984:	10000b1e 	bne	r2,zero,800b9b4 <__svfscanf_r+0xa4c>
 800b988:	8c40008c 	andi	r17,r17,2
 800b98c:	88000926 	beq	r17,zero,800b9b4 <__svfscanf_r+0xa4c>
 800b990:	da009c17 	ldw	r8,624(sp)
 800b994:	9007d7fa 	srai	r3,r18,31
 800b998:	dd009d17 	ldw	r20,628(sp)
 800b99c:	40800017 	ldw	r2,0(r8)
 800b9a0:	42000104 	addi	r8,r8,4
 800b9a4:	da009c15 	stw	r8,624(sp)
 800b9a8:	14800015 	stw	r18,0(r2)
 800b9ac:	10c00115 	stw	r3,4(r2)
 800b9b0:	003da806 	br	800b054 <__alt_data_end+0xf800b054>
 800b9b4:	da009c17 	ldw	r8,624(sp)
 800b9b8:	dd009d17 	ldw	r20,628(sp)
 800b9bc:	40800017 	ldw	r2,0(r8)
 800b9c0:	42000104 	addi	r8,r8,4
 800b9c4:	da009c15 	stw	r8,624(sp)
 800b9c8:	14800015 	stw	r18,0(r2)
 800b9cc:	003da106 	br	800b054 <__alt_data_end+0xf800b054>
 800b9d0:	e00b883a 	mov	r5,fp
 800b9d4:	b009883a 	mov	r4,r22
 800b9d8:	80114540 	call	8011454 <__srefill_r>
 800b9dc:	103f9e1e 	bne	r2,zero,800b858 <__alt_data_end+0xf800b858>
 800b9e0:	b9c00017 	ldw	r7,0(r23)
 800b9e4:	05000104 	movi	r20,4
 800b9e8:	003e6306 	br	800b378 <__alt_data_end+0xf800b378>
 800b9ec:	e00b883a 	mov	r5,fp
 800b9f0:	b009883a 	mov	r4,r22
 800b9f4:	80114540 	call	8011454 <__srefill_r>
 800b9f8:	103f971e 	bne	r2,zero,800b858 <__alt_data_end+0xf800b858>
 800b9fc:	b9c00017 	ldw	r7,0(r23)
 800ba00:	003e5706 	br	800b360 <__alt_data_end+0xf800b360>
 800ba04:	e00b883a 	mov	r5,fp
 800ba08:	b009883a 	mov	r4,r22
 800ba0c:	80114540 	call	8011454 <__srefill_r>
 800ba10:	103f911e 	bne	r2,zero,800b858 <__alt_data_end+0xf800b858>
 800ba14:	b9c00017 	ldw	r7,0(r23)
 800ba18:	05000084 	movi	r20,2
 800ba1c:	003e5606 	br	800b378 <__alt_data_end+0xf800b378>
 800ba20:	e00b883a 	mov	r5,fp
 800ba24:	b009883a 	mov	r4,r22
 800ba28:	80114540 	call	8011454 <__srefill_r>
 800ba2c:	103ef726 	beq	r2,zero,800b60c <__alt_data_end+0xf800b60c>
 800ba30:	003f8906 	br	800b858 <__alt_data_end+0xf800b858>
 800ba34:	e00b883a 	mov	r5,fp
 800ba38:	b009883a 	mov	r4,r22
 800ba3c:	80114540 	call	8011454 <__srefill_r>
 800ba40:	103f851e 	bne	r2,zero,800b858 <__alt_data_end+0xf800b858>
 800ba44:	b9c00017 	ldw	r7,0(r23)
 800ba48:	003f0f06 	br	800b688 <__alt_data_end+0xf800b688>
 800ba4c:	014000c4 	movi	r5,3
 800ba50:	a1414a26 	beq	r20,r5,800bf7c <__svfscanf_r+0x1014>
 800ba54:	01000104 	movi	r4,4
 800ba58:	a101f11e 	bne	r20,r4,800c220 <__svfscanf_r+0x12b8>
 800ba5c:	b009883a 	mov	r4,r22
 800ba60:	800f6800 	call	800f680 <_localeconv_r>
 800ba64:	10800017 	ldw	r2,0(r2)
 800ba68:	98ffffc4 	addi	r3,r19,-1
 800ba6c:	d880a315 	stw	r2,652(sp)
 800ba70:	00805704 	movi	r2,348
 800ba74:	10c21e2e 	bgeu	r2,r3,800c2f0 <__svfscanf_r+0x1388>
 800ba78:	9cffa8c4 	addi	r19,r19,-349
 800ba7c:	dcc0a215 	stw	r19,648(sp)
 800ba80:	04c05744 	movi	r19,349
 800ba84:	8d01e014 	ori	r20,r17,1920
 800ba88:	0023883a 	mov	r17,zero
 800ba8c:	dc000104 	addi	r16,sp,4
 800ba90:	8805883a 	mov	r2,r17
 800ba94:	0019883a 	mov	r12,zero
 800ba98:	8023883a 	mov	r17,r16
 800ba9c:	b007883a 	mov	r3,r22
 800baa0:	9821883a 	mov	r16,r19
 800baa4:	002b883a 	mov	r21,zero
 800baa8:	d800a515 	stw	zero,660(sp)
 800baac:	d800a415 	stw	zero,656(sp)
 800bab0:	d8009f15 	stw	zero,636(sp)
 800bab4:	01c01384 	movi	r7,78
 800bab8:	602d883a 	mov	r22,r12
 800babc:	1027883a 	mov	r19,r2
 800bac0:	e1000017 	ldw	r4,0(fp)
 800bac4:	21400003 	ldbu	r5,0(r4)
 800bac8:	28bff544 	addi	r2,r5,-43
 800bacc:	10803fcc 	andi	r2,r2,255
 800bad0:	38810e36 	bltu	r7,r2,800bf0c <__svfscanf_r+0xfa4>
 800bad4:	100490ba 	slli	r2,r2,2
 800bad8:	01820074 	movhi	r6,2049
 800badc:	31aebb04 	addi	r6,r6,-17684
 800bae0:	1185883a 	add	r2,r2,r6
 800bae4:	10800017 	ldw	r2,0(r2)
 800bae8:	1000683a 	jmp	r2
 800baec:	0800bde4 	muli	zero,at,759
 800baf0:	0800bf0c 	andi	zero,at,764
 800baf4:	0800bde4 	muli	zero,at,759
 800baf8:	0800bf0c 	andi	zero,at,764
 800bafc:	0800bf0c 	andi	zero,at,764
 800bb00:	0800bdb8 	rdprs	zero,at,758
 800bb04:	0800bc28 	cmpgeui	zero,at,752
 800bb08:	0800bc28 	cmpgeui	zero,at,752
 800bb0c:	0800bc28 	cmpgeui	zero,at,752
 800bb10:	0800bc28 	cmpgeui	zero,at,752
 800bb14:	0800bc28 	cmpgeui	zero,at,752
 800bb18:	0800bc28 	cmpgeui	zero,at,752
 800bb1c:	0800bc28 	cmpgeui	zero,at,752
 800bb20:	0800bc28 	cmpgeui	zero,at,752
 800bb24:	0800bc28 	cmpgeui	zero,at,752
 800bb28:	0800bf0c 	andi	zero,at,764
 800bb2c:	0800bf0c 	andi	zero,at,764
 800bb30:	0800bf0c 	andi	zero,at,764
 800bb34:	0800bf0c 	andi	zero,at,764
 800bb38:	0800bf0c 	andi	zero,at,764
 800bb3c:	0800bf0c 	andi	zero,at,764
 800bb40:	0800bf0c 	andi	zero,at,764
 800bb44:	0800befc 	xorhi	zero,at,763
 800bb48:	0800bf0c 	andi	zero,at,764
 800bb4c:	0800bf0c 	andi	zero,at,764
 800bb50:	0800bf0c 	andi	zero,at,764
 800bb54:	0800beb8 	rdprs	zero,at,762
 800bb58:	0800be9c 	xori	zero,at,762
 800bb5c:	0800bf0c 	andi	zero,at,764
 800bb60:	0800bf0c 	andi	zero,at,764
 800bb64:	0800be68 	cmpgeui	zero,at,761
 800bb68:	0800bf0c 	andi	zero,at,764
 800bb6c:	0800bf0c 	andi	zero,at,764
 800bb70:	0800bf0c 	andi	zero,at,764
 800bb74:	0800bf0c 	andi	zero,at,764
 800bb78:	0800be30 	cmpltui	zero,at,760
 800bb7c:	0800bf0c 	andi	zero,at,764
 800bb80:	0800bf0c 	andi	zero,at,764
 800bb84:	0800bf0c 	andi	zero,at,764
 800bb88:	0800bf0c 	andi	zero,at,764
 800bb8c:	0800bf0c 	andi	zero,at,764
 800bb90:	0800be14 	ori	zero,at,760
 800bb94:	0800bf0c 	andi	zero,at,764
 800bb98:	0800bf0c 	andi	zero,at,764
 800bb9c:	0800bf0c 	andi	zero,at,764
 800bba0:	0800bf0c 	andi	zero,at,764
 800bba4:	0800bdf8 	rdprs	zero,at,759
 800bba8:	0800bf0c 	andi	zero,at,764
 800bbac:	0800bf0c 	andi	zero,at,764
 800bbb0:	0800bf0c 	andi	zero,at,764
 800bbb4:	0800bf0c 	andi	zero,at,764
 800bbb8:	0800bf0c 	andi	zero,at,764
 800bbbc:	0800bf0c 	andi	zero,at,764
 800bbc0:	0800bf0c 	andi	zero,at,764
 800bbc4:	0800befc 	xorhi	zero,at,763
 800bbc8:	0800bf0c 	andi	zero,at,764
 800bbcc:	0800bf0c 	andi	zero,at,764
 800bbd0:	0800bf0c 	andi	zero,at,764
 800bbd4:	0800beb8 	rdprs	zero,at,762
 800bbd8:	0800be9c 	xori	zero,at,762
 800bbdc:	0800bf0c 	andi	zero,at,764
 800bbe0:	0800bf0c 	andi	zero,at,764
 800bbe4:	0800be68 	cmpgeui	zero,at,761
 800bbe8:	0800bf0c 	andi	zero,at,764
 800bbec:	0800bf0c 	andi	zero,at,764
 800bbf0:	0800bf0c 	andi	zero,at,764
 800bbf4:	0800bf0c 	andi	zero,at,764
 800bbf8:	0800be30 	cmpltui	zero,at,760
 800bbfc:	0800bf0c 	andi	zero,at,764
 800bc00:	0800bf0c 	andi	zero,at,764
 800bc04:	0800bf0c 	andi	zero,at,764
 800bc08:	0800bf0c 	andi	zero,at,764
 800bc0c:	0800bf0c 	andi	zero,at,764
 800bc10:	0800be14 	ori	zero,at,760
 800bc14:	0800bf0c 	andi	zero,at,764
 800bc18:	0800bf0c 	andi	zero,at,764
 800bc1c:	0800bf0c 	andi	zero,at,764
 800bc20:	0800bf0c 	andi	zero,at,764
 800bc24:	0800bdf8 	rdprs	zero,at,759
 800bc28:	a8803fcc 	andi	r2,r21,255
 800bc2c:	1080201c 	xori	r2,r2,128
 800bc30:	10bfe004 	addi	r2,r2,-128
 800bc34:	b085883a 	add	r2,r22,r2
 800bc38:	10000d1e 	bne	r2,zero,800bc70 <__svfscanf_r+0xd08>
 800bc3c:	00bf9fc4 	movi	r2,-385
 800bc40:	a0a8703a 	and	r20,r20,r2
 800bc44:	89400005 	stb	r5,0(r17)
 800bc48:	8c400044 	addi	r17,r17,1
 800bc4c:	e0800117 	ldw	r2,4(fp)
 800bc50:	843fffc4 	addi	r16,r16,-1
 800bc54:	94800044 	addi	r18,r18,1
 800bc58:	10bfffc4 	addi	r2,r2,-1
 800bc5c:	e0800115 	stw	r2,4(fp)
 800bc60:	0080b40e 	bge	zero,r2,800bf34 <__svfscanf_r+0xfcc>
 800bc64:	21000044 	addi	r4,r4,1
 800bc68:	e1000015 	stw	r4,0(fp)
 800bc6c:	803f941e 	bne	r16,zero,800bac0 <__alt_data_end+0xf800bac0>
 800bc70:	8821883a 	mov	r16,r17
 800bc74:	b019883a 	mov	r12,r22
 800bc78:	9823883a 	mov	r17,r19
 800bc7c:	182d883a 	mov	r22,r3
 800bc80:	9801961e 	bne	r19,zero,800c2dc <__svfscanf_r+0x1374>
 800bc84:	633fffc4 	addi	r12,r12,-1
 800bc88:	00800044 	movi	r2,1
 800bc8c:	1302882e 	bgeu	r2,r12,800c6b0 <__svfscanf_r+0x1748>
 800bc90:	a8803fcc 	andi	r2,r21,255
 800bc94:	1080201c 	xori	r2,r2,128
 800bc98:	10bfe004 	addi	r2,r2,-128
 800bc9c:	113fffc4 	addi	r4,r2,-1
 800bca0:	01400184 	movi	r5,6
 800bca4:	29001136 	bltu	r5,r4,800bcec <__svfscanf_r+0xd84>
 800bca8:	01000084 	movi	r4,2
 800bcac:	2082900e 	bge	r4,r2,800c6f0 <__svfscanf_r+0x1788>
 800bcb0:	00c000c4 	movi	r3,3
 800bcb4:	10c00d26 	beq	r2,r3,800bcec <__svfscanf_r+0xd84>
 800bcb8:	9425c83a 	sub	r18,r18,r16
 800bcbc:	1827883a 	mov	r19,r3
 800bcc0:	843fffc4 	addi	r16,r16,-1
 800bcc4:	81400007 	ldb	r5,0(r16)
 800bcc8:	e00d883a 	mov	r6,fp
 800bccc:	b009883a 	mov	r4,r22
 800bcd0:	80162080 	call	8016208 <_ungetc_r>
 800bcd4:	a8bfffc4 	addi	r2,r21,-1
 800bcd8:	10c03fcc 	andi	r3,r2,255
 800bcdc:	8493883a 	add	r9,r16,r18
 800bce0:	102b883a 	mov	r21,r2
 800bce4:	98fff636 	bltu	r19,r3,800bcc0 <__alt_data_end+0xf800bcc0>
 800bce8:	4825883a 	mov	r18,r9
 800bcec:	a080400c 	andi	r2,r20,256
 800bcf0:	10001426 	beq	r2,zero,800bd44 <__svfscanf_r+0xddc>
 800bcf4:	a081000c 	andi	r2,r20,1024
 800bcf8:	1002571e 	bne	r2,zero,800c658 <__svfscanf_r+0x16f0>
 800bcfc:	817fffc7 	ldb	r5,-1(r16)
 800bd00:	00801944 	movi	r2,101
 800bd04:	84ffffc4 	addi	r19,r16,-1
 800bd08:	957fffc4 	addi	r21,r18,-1
 800bd0c:	28800826 	beq	r5,r2,800bd30 <__svfscanf_r+0xdc8>
 800bd10:	00801144 	movi	r2,69
 800bd14:	28800626 	beq	r5,r2,800bd30 <__svfscanf_r+0xdc8>
 800bd18:	e00d883a 	mov	r6,fp
 800bd1c:	b009883a 	mov	r4,r22
 800bd20:	80162080 	call	8016208 <_ungetc_r>
 800bd24:	817fff87 	ldb	r5,-2(r16)
 800bd28:	84ffff84 	addi	r19,r16,-2
 800bd2c:	957fff84 	addi	r21,r18,-2
 800bd30:	e00d883a 	mov	r6,fp
 800bd34:	b009883a 	mov	r4,r22
 800bd38:	80162080 	call	8016208 <_ungetc_r>
 800bd3c:	a825883a 	mov	r18,r21
 800bd40:	9821883a 	mov	r16,r19
 800bd44:	a080040c 	andi	r2,r20,16
 800bd48:	103e891e 	bne	r2,zero,800b770 <__alt_data_end+0xf800b770>
 800bd4c:	80000005 	stb	zero,0(r16)
 800bd50:	a081800c 	andi	r2,r20,1536
 800bd54:	01010004 	movi	r4,1024
 800bd58:	1101dd26 	beq	r2,r4,800c4d0 <__svfscanf_r+0x1568>
 800bd5c:	da00a417 	ldw	r8,656(sp)
 800bd60:	4001e71e 	bne	r8,zero,800c500 <__svfscanf_r+0x1598>
 800bd64:	000d883a 	mov	r6,zero
 800bd68:	d9400104 	addi	r5,sp,4
 800bd6c:	b009883a 	mov	r4,r22
 800bd70:	80117d80 	call	80117d8 <_strtod_r>
 800bd74:	1021883a 	mov	r16,r2
 800bd78:	a080004c 	andi	r2,r20,1
 800bd7c:	1000021e 	bne	r2,zero,800bd88 <__svfscanf_r+0xe20>
 800bd80:	a2c0008c 	andi	r11,r20,2
 800bd84:	5801e826 	beq	r11,zero,800c528 <__svfscanf_r+0x15c0>
 800bd88:	da009c17 	ldw	r8,624(sp)
 800bd8c:	40800017 	ldw	r2,0(r8)
 800bd90:	42000104 	addi	r8,r8,4
 800bd94:	da009c15 	stw	r8,624(sp)
 800bd98:	14000015 	stw	r16,0(r2)
 800bd9c:	10c00115 	stw	r3,4(r2)
 800bda0:	da00a017 	ldw	r8,640(sp)
 800bda4:	dd009d17 	ldw	r20,628(sp)
 800bda8:	42000044 	addi	r8,r8,1
 800bdac:	da00a015 	stw	r8,640(sp)
 800bdb0:	a00d883a 	mov	r6,r20
 800bdb4:	003ca806 	br	800b058 <__alt_data_end+0xf800b058>
 800bdb8:	a080400c 	andi	r2,r20,256
 800bdbc:	103f9a26 	beq	r2,zero,800bc28 <__alt_data_end+0xf800bc28>
 800bdc0:	da00a217 	ldw	r8,648(sp)
 800bdc4:	00bfdfc4 	movi	r2,-129
 800bdc8:	a0a8703a 	and	r20,r20,r2
 800bdcc:	9cc00044 	addi	r19,r19,1
 800bdd0:	403f9e26 	beq	r8,zero,800bc4c <__alt_data_end+0xf800bc4c>
 800bdd4:	423fffc4 	addi	r8,r8,-1
 800bdd8:	da00a215 	stw	r8,648(sp)
 800bddc:	84000044 	addi	r16,r16,1
 800bde0:	003f9a06 	br	800bc4c <__alt_data_end+0xf800bc4c>
 800bde4:	a080200c 	andi	r2,r20,128
 800bde8:	103fa126 	beq	r2,zero,800bc70 <__alt_data_end+0xf800bc70>
 800bdec:	00bfdfc4 	movi	r2,-129
 800bdf0:	a0a8703a 	and	r20,r20,r2
 800bdf4:	003f9306 	br	800bc44 <__alt_data_end+0xf800bc44>
 800bdf8:	a8803fcc 	andi	r2,r21,255
 800bdfc:	1080201c 	xori	r2,r2,128
 800be00:	10bfe004 	addi	r2,r2,-128
 800be04:	020001c4 	movi	r8,7
 800be08:	123f991e 	bne	r2,r8,800bc70 <__alt_data_end+0xf800bc70>
 800be0c:	05400204 	movi	r21,8
 800be10:	003f8c06 	br	800bc44 <__alt_data_end+0xf800bc44>
 800be14:	a8803fcc 	andi	r2,r21,255
 800be18:	1080201c 	xori	r2,r2,128
 800be1c:	10bfe004 	addi	r2,r2,-128
 800be20:	01800184 	movi	r6,6
 800be24:	11bf921e 	bne	r2,r6,800bc70 <__alt_data_end+0xf800bc70>
 800be28:	054001c4 	movi	r21,7
 800be2c:	003f8506 	br	800bc44 <__alt_data_end+0xf800bc44>
 800be30:	b000491e 	bne	r22,zero,800bf58 <__svfscanf_r+0xff0>
 800be34:	9800031e 	bne	r19,zero,800be44 <__svfscanf_r+0xedc>
 800be38:	a081c00c 	andi	r2,r20,1792
 800be3c:	0181c004 	movi	r6,1792
 800be40:	11819f26 	beq	r2,r6,800c4c0 <__svfscanf_r+0x1558>
 800be44:	a8803fcc 	andi	r2,r21,255
 800be48:	1080201c 	xori	r2,r2,128
 800be4c:	10bfe004 	addi	r2,r2,-128
 800be50:	01800044 	movi	r6,1
 800be54:	11800226 	beq	r2,r6,800be60 <__svfscanf_r+0xef8>
 800be58:	01800104 	movi	r6,4
 800be5c:	11bf841e 	bne	r2,r6,800bc70 <__alt_data_end+0xf800bc70>
 800be60:	ad400044 	addi	r21,r21,1
 800be64:	003f7706 	br	800bc44 <__alt_data_end+0xf800bc44>
 800be68:	a8803fcc 	andi	r2,r21,255
 800be6c:	1080201c 	xori	r2,r2,128
 800be70:	10bfe004 	addi	r2,r2,-128
 800be74:	10003c1e 	bne	r2,zero,800bf68 <__svfscanf_r+0x1000>
 800be78:	9801141e 	bne	r19,zero,800c2cc <__svfscanf_r+0x1364>
 800be7c:	a081c00c 	andi	r2,r20,1792
 800be80:	0181c004 	movi	r6,1792
 800be84:	11818226 	beq	r2,r6,800c490 <__svfscanf_r+0x1528>
 800be88:	8821883a 	mov	r16,r17
 800be8c:	b019883a 	mov	r12,r22
 800be90:	9823883a 	mov	r17,r19
 800be94:	182d883a 	mov	r22,r3
 800be98:	003f7a06 	br	800bc84 <__alt_data_end+0xf800bc84>
 800be9c:	a8803fcc 	andi	r2,r21,255
 800bea0:	1080201c 	xori	r2,r2,128
 800bea4:	10bfe004 	addi	r2,r2,-128
 800bea8:	01800084 	movi	r6,2
 800beac:	11bf701e 	bne	r2,r6,800bc70 <__alt_data_end+0xf800bc70>
 800beb0:	054000c4 	movi	r21,3
 800beb4:	003f6306 	br	800bc44 <__alt_data_end+0xf800bc44>
 800beb8:	a081400c 	andi	r2,r20,1280
 800bebc:	01810004 	movi	r6,1024
 800bec0:	11800326 	beq	r2,r6,800bed0 <__svfscanf_r+0xf68>
 800bec4:	a184703a 	and	r2,r20,r6
 800bec8:	103f6926 	beq	r2,zero,800bc70 <__alt_data_end+0xf800bc70>
 800becc:	983fee26 	beq	r19,zero,800be88 <__alt_data_end+0xf800be88>
 800bed0:	a080800c 	andi	r2,r20,512
 800bed4:	1000041e 	bne	r2,zero,800bee8 <__svfscanf_r+0xf80>
 800bed8:	da009f17 	ldw	r8,636(sp)
 800bedc:	dc40a515 	stw	r17,660(sp)
 800bee0:	9a27c83a 	sub	r19,r19,r8
 800bee4:	dcc0a415 	stw	r19,656(sp)
 800bee8:	00be1fc4 	movi	r2,-1921
 800beec:	a0a8703a 	and	r20,r20,r2
 800bef0:	a5006014 	ori	r20,r20,384
 800bef4:	0027883a 	mov	r19,zero
 800bef8:	003f5206 	br	800bc44 <__alt_data_end+0xf800bc44>
 800befc:	00800044 	movi	r2,1
 800bf00:	b0bf5b1e 	bne	r22,r2,800bc70 <__alt_data_end+0xf800bc70>
 800bf04:	05800084 	movi	r22,2
 800bf08:	003f4e06 	br	800bc44 <__alt_data_end+0xf800bc44>
 800bf0c:	d980a317 	ldw	r6,652(sp)
 800bf10:	30800003 	ldbu	r2,0(r6)
 800bf14:	29803fcc 	andi	r6,r5,255
 800bf18:	30bf551e 	bne	r6,r2,800bc70 <__alt_data_end+0xf800bc70>
 800bf1c:	a080800c 	andi	r2,r20,512
 800bf20:	103f5326 	beq	r2,zero,800bc70 <__alt_data_end+0xf800bc70>
 800bf24:	023f5fc4 	movi	r8,-641
 800bf28:	a228703a 	and	r20,r20,r8
 800bf2c:	dcc09f15 	stw	r19,636(sp)
 800bf30:	003f4406 	br	800bc44 <__alt_data_end+0xf800bc44>
 800bf34:	1809883a 	mov	r4,r3
 800bf38:	e00b883a 	mov	r5,fp
 800bf3c:	d8c0a615 	stw	r3,664(sp)
 800bf40:	d9c0aa15 	stw	r7,680(sp)
 800bf44:	80114540 	call	8011454 <__srefill_r>
 800bf48:	d8c0a617 	ldw	r3,664(sp)
 800bf4c:	d9c0aa17 	ldw	r7,680(sp)
 800bf50:	103f4626 	beq	r2,zero,800bc6c <__alt_data_end+0xf800bc6c>
 800bf54:	003f4606 	br	800bc70 <__alt_data_end+0xf800bc70>
 800bf58:	00800084 	movi	r2,2
 800bf5c:	b0bfb91e 	bne	r22,r2,800be44 <__alt_data_end+0xf800be44>
 800bf60:	058000c4 	movi	r22,3
 800bf64:	003f3706 	br	800bc44 <__alt_data_end+0xf800bc44>
 800bf68:	018000c4 	movi	r6,3
 800bf6c:	11bfbc26 	beq	r2,r6,800be60 <__alt_data_end+0xf800be60>
 800bf70:	01800144 	movi	r6,5
 800bf74:	11bfba26 	beq	r2,r6,800be60 <__alt_data_end+0xf800be60>
 800bf78:	003f3d06 	br	800bc70 <__alt_data_end+0xf800bc70>
 800bf7c:	98bfffc4 	addi	r2,r19,-1
 800bf80:	01405704 	movi	r5,348
 800bf84:	2880d82e 	bgeu	r5,r2,800c2e8 <__svfscanf_r+0x1380>
 800bf88:	99ffa8c4 	addi	r7,r19,-349
 800bf8c:	04c05744 	movi	r19,349
 800bf90:	8c436014 	ori	r17,r17,3456
 800bf94:	9013883a 	mov	r9,r18
 800bf98:	8825883a 	mov	r18,r17
 800bf9c:	dc409e17 	ldw	r17,632(sp)
 800bfa0:	0029883a 	mov	r20,zero
 800bfa4:	dc000104 	addi	r16,sp,4
 800bfa8:	05401344 	movi	r21,77
 800bfac:	02c08004 	movi	r11,512
 800bfb0:	01bf7fc4 	movi	r6,-513
 800bfb4:	023fdfc4 	movi	r8,-129
 800bfb8:	20bff544 	addi	r2,r4,-43
 800bfbc:	10803fcc 	andi	r2,r2,255
 800bfc0:	a8807236 	bltu	r21,r2,800c18c <__svfscanf_r+0x1224>
 800bfc4:	100490ba 	slli	r2,r2,2
 800bfc8:	01420074 	movhi	r5,2049
 800bfcc:	296ff704 	addi	r5,r5,-16420
 800bfd0:	1145883a 	add	r2,r2,r5
 800bfd4:	10800017 	ldw	r2,0(r2)
 800bfd8:	1000683a 	jmp	r2
 800bfdc:	0800c210 	cmplti	zero,at,776
 800bfe0:	0800c18c 	andi	zero,at,774
 800bfe4:	0800c210 	cmplti	zero,at,776
 800bfe8:	0800c18c 	andi	zero,at,774
 800bfec:	0800c18c 	andi	zero,at,774
 800bff0:	0800c1e8 	cmpgeui	zero,at,775
 800bff4:	0800c1c8 	cmpgei	zero,at,775
 800bff8:	0800c1c8 	cmpgei	zero,at,775
 800bffc:	0800c1c8 	cmpgei	zero,at,775
 800c000:	0800c1c8 	cmpgei	zero,at,775
 800c004:	0800c1c8 	cmpgei	zero,at,775
 800c008:	0800c1c8 	cmpgei	zero,at,775
 800c00c:	0800c1c8 	cmpgei	zero,at,775
 800c010:	0800c170 	cmpltui	zero,at,773
 800c014:	0800c170 	cmpltui	zero,at,773
 800c018:	0800c18c 	andi	zero,at,774
 800c01c:	0800c18c 	andi	zero,at,774
 800c020:	0800c18c 	andi	zero,at,774
 800c024:	0800c18c 	andi	zero,at,774
 800c028:	0800c18c 	andi	zero,at,774
 800c02c:	0800c18c 	andi	zero,at,774
 800c030:	0800c18c 	andi	zero,at,774
 800c034:	0800c15c 	xori	zero,at,773
 800c038:	0800c15c 	xori	zero,at,773
 800c03c:	0800c15c 	xori	zero,at,773
 800c040:	0800c15c 	xori	zero,at,773
 800c044:	0800c15c 	xori	zero,at,773
 800c048:	0800c15c 	xori	zero,at,773
 800c04c:	0800c18c 	andi	zero,at,774
 800c050:	0800c18c 	andi	zero,at,774
 800c054:	0800c18c 	andi	zero,at,774
 800c058:	0800c18c 	andi	zero,at,774
 800c05c:	0800c18c 	andi	zero,at,774
 800c060:	0800c18c 	andi	zero,at,774
 800c064:	0800c18c 	andi	zero,at,774
 800c068:	0800c18c 	andi	zero,at,774
 800c06c:	0800c18c 	andi	zero,at,774
 800c070:	0800c18c 	andi	zero,at,774
 800c074:	0800c18c 	andi	zero,at,774
 800c078:	0800c18c 	andi	zero,at,774
 800c07c:	0800c18c 	andi	zero,at,774
 800c080:	0800c18c 	andi	zero,at,774
 800c084:	0800c18c 	andi	zero,at,774
 800c088:	0800c18c 	andi	zero,at,774
 800c08c:	0800c18c 	andi	zero,at,774
 800c090:	0800c114 	ori	zero,at,772
 800c094:	0800c18c 	andi	zero,at,774
 800c098:	0800c18c 	andi	zero,at,774
 800c09c:	0800c18c 	andi	zero,at,774
 800c0a0:	0800c18c 	andi	zero,at,774
 800c0a4:	0800c18c 	andi	zero,at,774
 800c0a8:	0800c18c 	andi	zero,at,774
 800c0ac:	0800c18c 	andi	zero,at,774
 800c0b0:	0800c18c 	andi	zero,at,774
 800c0b4:	0800c15c 	xori	zero,at,773
 800c0b8:	0800c15c 	xori	zero,at,773
 800c0bc:	0800c15c 	xori	zero,at,773
 800c0c0:	0800c15c 	xori	zero,at,773
 800c0c4:	0800c15c 	xori	zero,at,773
 800c0c8:	0800c15c 	xori	zero,at,773
 800c0cc:	0800c18c 	andi	zero,at,774
 800c0d0:	0800c18c 	andi	zero,at,774
 800c0d4:	0800c18c 	andi	zero,at,774
 800c0d8:	0800c18c 	andi	zero,at,774
 800c0dc:	0800c18c 	andi	zero,at,774
 800c0e0:	0800c18c 	andi	zero,at,774
 800c0e4:	0800c18c 	andi	zero,at,774
 800c0e8:	0800c18c 	andi	zero,at,774
 800c0ec:	0800c18c 	andi	zero,at,774
 800c0f0:	0800c18c 	andi	zero,at,774
 800c0f4:	0800c18c 	andi	zero,at,774
 800c0f8:	0800c18c 	andi	zero,at,774
 800c0fc:	0800c18c 	andi	zero,at,774
 800c100:	0800c18c 	andi	zero,at,774
 800c104:	0800c18c 	andi	zero,at,774
 800c108:	0800c18c 	andi	zero,at,774
 800c10c:	0800c18c 	andi	zero,at,774
 800c110:	0800c114 	ori	zero,at,772
 800c114:	9081800c 	andi	r2,r18,1536
 800c118:	12c01c1e 	bne	r2,r11,800c18c <__svfscanf_r+0x1224>
 800c11c:	91a4703a 	and	r18,r18,r6
 800c120:	94814014 	ori	r18,r18,1280
 800c124:	04400404 	movi	r17,16
 800c128:	81000005 	stb	r4,0(r16)
 800c12c:	84000044 	addi	r16,r16,1
 800c130:	e0800117 	ldw	r2,4(fp)
 800c134:	10bfffc4 	addi	r2,r2,-1
 800c138:	e0800115 	stw	r2,4(fp)
 800c13c:	0080540e 	bge	zero,r2,800c290 <__svfscanf_r+0x1328>
 800c140:	18c00044 	addi	r3,r3,1
 800c144:	e0c00015 	stw	r3,0(fp)
 800c148:	9cffffc4 	addi	r19,r19,-1
 800c14c:	98000f26 	beq	r19,zero,800c18c <__svfscanf_r+0x1224>
 800c150:	e0c00017 	ldw	r3,0(fp)
 800c154:	19000003 	ldbu	r4,0(r3)
 800c158:	003f9706 	br	800bfb8 <__alt_data_end+0xf800bfb8>
 800c15c:	00800284 	movi	r2,10
 800c160:	14400a0e 	bge	r2,r17,800c18c <__svfscanf_r+0x1224>
 800c164:	00bd1fc4 	movi	r2,-2945
 800c168:	90a4703a 	and	r18,r18,r2
 800c16c:	003fee06 	br	800c128 <__alt_data_end+0xf800c128>
 800c170:	014200b4 	movhi	r5,2050
 800c174:	8c63883a 	add	r17,r17,r17
 800c178:	297f6504 	addi	r5,r5,-620
 800c17c:	2c45883a 	add	r2,r5,r17
 800c180:	1440000f 	ldh	r17,0(r2)
 800c184:	00800204 	movi	r2,8
 800c188:	147ff616 	blt	r2,r17,800c164 <__alt_data_end+0xf800c164>
 800c18c:	dc409e15 	stw	r17,632(sp)
 800c190:	9023883a 	mov	r17,r18
 800c194:	8880400c 	andi	r2,r17,256
 800c198:	4825883a 	mov	r18,r9
 800c19c:	10000426 	beq	r2,zero,800c1b0 <__svfscanf_r+0x1248>
 800c1a0:	d9800104 	addi	r6,sp,4
 800c1a4:	3400be36 	bltu	r6,r16,800c4a0 <__svfscanf_r+0x1538>
 800c1a8:	da000104 	addi	r8,sp,4
 800c1ac:	443bae26 	beq	r8,r16,800b068 <__alt_data_end+0xf800b068>
 800c1b0:	8880040c 	andi	r2,r17,16
 800c1b4:	10009326 	beq	r2,zero,800c404 <__svfscanf_r+0x149c>
 800c1b8:	d8800104 	addi	r2,sp,4
 800c1bc:	80a1c83a 	sub	r16,r16,r2
 800c1c0:	8521883a 	add	r16,r16,r20
 800c1c4:	003d0606 	br	800b5e0 <__alt_data_end+0xf800b5e0>
 800c1c8:	014200b4 	movhi	r5,2050
 800c1cc:	8c63883a 	add	r17,r17,r17
 800c1d0:	297f6504 	addi	r5,r5,-620
 800c1d4:	2c45883a 	add	r2,r5,r17
 800c1d8:	1440000f 	ldh	r17,0(r2)
 800c1dc:	00bd1fc4 	movi	r2,-2945
 800c1e0:	90a4703a 	and	r18,r18,r2
 800c1e4:	003fd006 	br	800c128 <__alt_data_end+0xf800c128>
 800c1e8:	9082000c 	andi	r2,r18,2048
 800c1ec:	103fce26 	beq	r2,zero,800c128 <__alt_data_end+0xf800c128>
 800c1f0:	8800021e 	bne	r17,zero,800c1fc <__svfscanf_r+0x1294>
 800c1f4:	94808014 	ori	r18,r18,512
 800c1f8:	04400204 	movi	r17,8
 800c1fc:	9081000c 	andi	r2,r18,1024
 800c200:	10009426 	beq	r2,zero,800c454 <__svfscanf_r+0x14ec>
 800c204:	00be9fc4 	movi	r2,-1409
 800c208:	90a4703a 	and	r18,r18,r2
 800c20c:	003fc606 	br	800c128 <__alt_data_end+0xf800c128>
 800c210:	9080200c 	andi	r2,r18,128
 800c214:	103fdd26 	beq	r2,zero,800c18c <__alt_data_end+0xf800c18c>
 800c218:	9224703a 	and	r18,r18,r8
 800c21c:	003fc206 	br	800c128 <__alt_data_end+0xf800c128>
 800c220:	9800011e 	bne	r19,zero,800c228 <__svfscanf_r+0x12c0>
 800c224:	04ffffc4 	movi	r19,-1
 800c228:	8900004c 	andi	r4,r17,1
 800c22c:	20005b1e 	bne	r4,zero,800c39c <__svfscanf_r+0x1434>
 800c230:	8c40040c 	andi	r17,r17,16
 800c234:	88003026 	beq	r17,zero,800c2f8 <__svfscanf_r+0x1390>
 800c238:	0021883a 	mov	r16,zero
 800c23c:	00000306 	br	800c24c <__svfscanf_r+0x12e4>
 800c240:	18800003 	ldbu	r2,0(r3)
 800c244:	3885883a 	add	r2,r7,r2
 800c248:	10800043 	ldbu	r2,1(r2)
 800c24c:	1080020c 	andi	r2,r2,8
 800c250:	103ce31e 	bne	r2,zero,800b5e0 <__alt_data_end+0xf800b5e0>
 800c254:	e0800117 	ldw	r2,4(fp)
 800c258:	18c00044 	addi	r3,r3,1
 800c25c:	84000044 	addi	r16,r16,1
 800c260:	10bfffc4 	addi	r2,r2,-1
 800c264:	e0800115 	stw	r2,4(fp)
 800c268:	e0c00015 	stw	r3,0(fp)
 800c26c:	84fcdc26 	beq	r16,r19,800b5e0 <__alt_data_end+0xf800b5e0>
 800c270:	00bff316 	blt	zero,r2,800c240 <__alt_data_end+0xf800c240>
 800c274:	e00b883a 	mov	r5,fp
 800c278:	b009883a 	mov	r4,r22
 800c27c:	80114540 	call	8011454 <__srefill_r>
 800c280:	103cd71e 	bne	r2,zero,800b5e0 <__alt_data_end+0xf800b5e0>
 800c284:	b9c00017 	ldw	r7,0(r23)
 800c288:	e0c00017 	ldw	r3,0(fp)
 800c28c:	003fec06 	br	800c240 <__alt_data_end+0xf800c240>
 800c290:	e00b883a 	mov	r5,fp
 800c294:	b009883a 	mov	r4,r22
 800c298:	d980a715 	stw	r6,668(sp)
 800c29c:	d9c0aa15 	stw	r7,680(sp)
 800c2a0:	da00a815 	stw	r8,672(sp)
 800c2a4:	da40a915 	stw	r9,676(sp)
 800c2a8:	dac0a615 	stw	r11,664(sp)
 800c2ac:	80114540 	call	8011454 <__srefill_r>
 800c2b0:	d980a717 	ldw	r6,668(sp)
 800c2b4:	d9c0aa17 	ldw	r7,680(sp)
 800c2b8:	da00a817 	ldw	r8,672(sp)
 800c2bc:	da40a917 	ldw	r9,676(sp)
 800c2c0:	dac0a617 	ldw	r11,664(sp)
 800c2c4:	103fa026 	beq	r2,zero,800c148 <__alt_data_end+0xf800c148>
 800c2c8:	003fb006 	br	800c18c <__alt_data_end+0xf800c18c>
 800c2cc:	8821883a 	mov	r16,r17
 800c2d0:	b019883a 	mov	r12,r22
 800c2d4:	9823883a 	mov	r17,r19
 800c2d8:	182d883a 	mov	r22,r3
 800c2dc:	00bfbfc4 	movi	r2,-257
 800c2e0:	a0a8703a 	and	r20,r20,r2
 800c2e4:	003e6706 	br	800bc84 <__alt_data_end+0xf800bc84>
 800c2e8:	000f883a 	mov	r7,zero
 800c2ec:	003f2806 	br	800bf90 <__alt_data_end+0xf800bf90>
 800c2f0:	d800a215 	stw	zero,648(sp)
 800c2f4:	003de306 	br	800ba84 <__alt_data_end+0xf800ba84>
 800c2f8:	da009c17 	ldw	r8,624(sp)
 800c2fc:	9abfffc4 	addi	r10,r19,-1
 800c300:	44400017 	ldw	r17,0(r8)
 800c304:	44000104 	addi	r16,r8,4
 800c308:	880b883a 	mov	r5,r17
 800c30c:	8aa9883a 	add	r20,r17,r10
 800c310:	00000606 	br	800c32c <__svfscanf_r+0x13c4>
 800c314:	e0c00017 	ldw	r3,0(fp)
 800c318:	b9000017 	ldw	r4,0(r23)
 800c31c:	a80b883a 	mov	r5,r21
 800c320:	18800003 	ldbu	r2,0(r3)
 800c324:	2085883a 	add	r2,r4,r2
 800c328:	10800043 	ldbu	r2,1(r2)
 800c32c:	1080020c 	andi	r2,r2,8
 800c330:	1000551e 	bne	r2,zero,800c488 <__svfscanf_r+0x1520>
 800c334:	e0800117 	ldw	r2,4(fp)
 800c338:	19000044 	addi	r4,r3,1
 800c33c:	e1000015 	stw	r4,0(fp)
 800c340:	10bfffc4 	addi	r2,r2,-1
 800c344:	e0800115 	stw	r2,4(fp)
 800c348:	18800003 	ldbu	r2,0(r3)
 800c34c:	2d400044 	addi	r21,r5,1
 800c350:	a827883a 	mov	r19,r21
 800c354:	28800005 	stb	r2,0(r5)
 800c358:	2d000626 	beq	r5,r20,800c374 <__svfscanf_r+0x140c>
 800c35c:	e0800117 	ldw	r2,4(fp)
 800c360:	00bfec16 	blt	zero,r2,800c314 <__alt_data_end+0xf800c314>
 800c364:	e00b883a 	mov	r5,fp
 800c368:	b009883a 	mov	r4,r22
 800c36c:	80114540 	call	8011454 <__srefill_r>
 800c370:	103fe826 	beq	r2,zero,800c314 <__alt_data_end+0xf800c314>
 800c374:	da00a017 	ldw	r8,640(sp)
 800c378:	dd009d17 	ldw	r20,628(sp)
 800c37c:	9c63c83a 	sub	r17,r19,r17
 800c380:	42000044 	addi	r8,r8,1
 800c384:	98000005 	stb	zero,0(r19)
 800c388:	9465883a 	add	r18,r18,r17
 800c38c:	da00a015 	stw	r8,640(sp)
 800c390:	dc009c15 	stw	r16,624(sp)
 800c394:	a00d883a 	mov	r6,r20
 800c398:	003b2f06 	br	800b058 <__alt_data_end+0xf800b058>
 800c39c:	dd409904 	addi	r21,sp,612
 800c3a0:	8c40040c 	andi	r17,r17,16
 800c3a4:	01800204 	movi	r6,8
 800c3a8:	000b883a 	mov	r5,zero
 800c3ac:	a809883a 	mov	r4,r21
 800c3b0:	80047e00 	call	80047e0 <memset>
 800c3b4:	8800401e 	bne	r17,zero,800c4b8 <__svfscanf_r+0x1550>
 800c3b8:	da009c17 	ldw	r8,624(sp)
 800c3bc:	45000017 	ldw	r20,0(r8)
 800c3c0:	42000104 	addi	r8,r8,4
 800c3c4:	da009c15 	stw	r8,624(sp)
 800c3c8:	000d883a 	mov	r6,zero
 800c3cc:	3021883a 	mov	r16,r6
 800c3d0:	dc409f15 	stw	r17,636(sp)
 800c3d4:	e0800017 	ldw	r2,0(fp)
 800c3d8:	b8c00017 	ldw	r3,0(r23)
 800c3dc:	10800003 	ldbu	r2,0(r2)
 800c3e0:	1885883a 	add	r2,r3,r2
 800c3e4:	10800043 	ldbu	r2,1(r2)
 800c3e8:	1080020c 	andi	r2,r2,8
 800c3ec:	1000011e 	bne	r2,zero,800c3f4 <__svfscanf_r+0x148c>
 800c3f0:	9800701e 	bne	r19,zero,800c5b4 <__svfscanf_r+0x164c>
 800c3f4:	dc409f17 	ldw	r17,636(sp)
 800c3f8:	883cdd1e 	bne	r17,zero,800b770 <__alt_data_end+0xf800b770>
 800c3fc:	a0000015 	stw	zero,0(r20)
 800c400:	003cd806 	br	800b764 <__alt_data_end+0xf800b764>
 800c404:	d9c09e17 	ldw	r7,632(sp)
 800c408:	da00a117 	ldw	r8,644(sp)
 800c40c:	000d883a 	mov	r6,zero
 800c410:	d9400104 	addi	r5,sp,4
 800c414:	b009883a 	mov	r4,r22
 800c418:	80000005 	stb	zero,0(r16)
 800c41c:	403ee83a 	callr	r8
 800c420:	88c0080c 	andi	r3,r17,32
 800c424:	1800121e 	bne	r3,zero,800c470 <__svfscanf_r+0x1508>
 800c428:	88c0010c 	andi	r3,r17,4
 800c42c:	18004d26 	beq	r3,zero,800c564 <__svfscanf_r+0x15fc>
 800c430:	da009c17 	ldw	r8,624(sp)
 800c434:	40c00017 	ldw	r3,0(r8)
 800c438:	42000104 	addi	r8,r8,4
 800c43c:	da009c15 	stw	r8,624(sp)
 800c440:	1880000d 	sth	r2,0(r3)
 800c444:	da00a017 	ldw	r8,640(sp)
 800c448:	42000044 	addi	r8,r8,1
 800c44c:	da00a015 	stw	r8,640(sp)
 800c450:	003f5906 	br	800c1b8 <__alt_data_end+0xf800c1b8>
 800c454:	00bf1fc4 	movi	r2,-897
 800c458:	90a4703a 	and	r18,r18,r2
 800c45c:	38000226 	beq	r7,zero,800c468 <__svfscanf_r+0x1500>
 800c460:	39ffffc4 	addi	r7,r7,-1
 800c464:	9cc00044 	addi	r19,r19,1
 800c468:	a5000044 	addi	r20,r20,1
 800c46c:	003f3006 	br	800c130 <__alt_data_end+0xf800c130>
 800c470:	da009c17 	ldw	r8,624(sp)
 800c474:	40c00017 	ldw	r3,0(r8)
 800c478:	42000104 	addi	r8,r8,4
 800c47c:	da009c15 	stw	r8,624(sp)
 800c480:	18800015 	stw	r2,0(r3)
 800c484:	003fef06 	br	800c444 <__alt_data_end+0xf800c444>
 800c488:	2827883a 	mov	r19,r5
 800c48c:	003fb906 	br	800c374 <__alt_data_end+0xf800c374>
 800c490:	01be1fc4 	movi	r6,-1921
 800c494:	a1a8703a 	and	r20,r20,r6
 800c498:	05400044 	movi	r21,1
 800c49c:	003de906 	br	800bc44 <__alt_data_end+0xf800bc44>
 800c4a0:	817fffc7 	ldb	r5,-1(r16)
 800c4a4:	e00d883a 	mov	r6,fp
 800c4a8:	b009883a 	mov	r4,r22
 800c4ac:	843fffc4 	addi	r16,r16,-1
 800c4b0:	80162080 	call	8016208 <_ungetc_r>
 800c4b4:	003f3c06 	br	800c1a8 <__alt_data_end+0xf800c1a8>
 800c4b8:	dd009b04 	addi	r20,sp,620
 800c4bc:	003fc206 	br	800c3c8 <__alt_data_end+0xf800c3c8>
 800c4c0:	00be1fc4 	movi	r2,-1921
 800c4c4:	a0a8703a 	and	r20,r20,r2
 800c4c8:	05800044 	movi	r22,1
 800c4cc:	003ddd06 	br	800bc44 <__alt_data_end+0xf800bc44>
 800c4d0:	d8c09f17 	ldw	r3,636(sp)
 800c4d4:	88e3c83a 	sub	r17,r17,r3
 800c4d8:	044dc83a 	sub	r6,zero,r17
 800c4dc:	883e2126 	beq	r17,zero,800bd64 <__alt_data_end+0xf800bd64>
 800c4e0:	d88055c4 	addi	r2,sp,343
 800c4e4:	80800136 	bltu	r16,r2,800c4ec <__svfscanf_r+0x1584>
 800c4e8:	dc005584 	addi	r16,sp,342
 800c4ec:	014200b4 	movhi	r5,2050
 800c4f0:	297f5304 	addi	r5,r5,-692
 800c4f4:	8009883a 	mov	r4,r16
 800c4f8:	8004e640 	call	8004e64 <sprintf>
 800c4fc:	003e1906 	br	800bd64 <__alt_data_end+0xf800bd64>
 800c500:	d8c0a517 	ldw	r3,660(sp)
 800c504:	000d883a 	mov	r6,zero
 800c508:	01c00284 	movi	r7,10
 800c50c:	19400044 	addi	r5,r3,1
 800c510:	b009883a 	mov	r4,r22
 800c514:	8012ee80 	call	8012ee8 <_strtol_r>
 800c518:	da00a417 	ldw	r8,656(sp)
 800c51c:	dc00a517 	ldw	r16,660(sp)
 800c520:	120dc83a 	sub	r6,r2,r8
 800c524:	003fee06 	br	800c4e0 <__alt_data_end+0xf800c4e0>
 800c528:	da009c17 	ldw	r8,624(sp)
 800c52c:	180b883a 	mov	r5,r3
 800c530:	8009883a 	mov	r4,r16
 800c534:	45000017 	ldw	r20,0(r8)
 800c538:	44400104 	addi	r17,r8,4
 800c53c:	d8c0a615 	stw	r3,664(sp)
 800c540:	80116280 	call	8011628 <__fpclassifyd>
 800c544:	d8c0a617 	ldw	r3,664(sp)
 800c548:	10006426 	beq	r2,zero,800c6dc <__svfscanf_r+0x1774>
 800c54c:	8009883a 	mov	r4,r16
 800c550:	180b883a 	mov	r5,r3
 800c554:	801c19c0 	call	801c19c <__truncdfsf2>
 800c558:	a0800015 	stw	r2,0(r20)
 800c55c:	dc409c15 	stw	r17,624(sp)
 800c560:	003e0f06 	br	800bda0 <__alt_data_end+0xf800bda0>
 800c564:	88c0004c 	andi	r3,r17,1
 800c568:	183fc11e 	bne	r3,zero,800c470 <__alt_data_end+0xf800c470>
 800c56c:	8c40008c 	andi	r17,r17,2
 800c570:	883fbf26 	beq	r17,zero,800c470 <__alt_data_end+0xf800c470>
 800c574:	da00a117 	ldw	r8,644(sp)
 800c578:	00820074 	movhi	r2,2049
 800c57c:	108d1004 	addi	r2,r2,13376
 800c580:	d9c09e17 	ldw	r7,632(sp)
 800c584:	000d883a 	mov	r6,zero
 800c588:	d9400104 	addi	r5,sp,4
 800c58c:	b009883a 	mov	r4,r22
 800c590:	40806226 	beq	r8,r2,800c71c <__svfscanf_r+0x17b4>
 800c594:	801313c0 	call	801313c <_strtoll_r>
 800c598:	da009c17 	ldw	r8,624(sp)
 800c59c:	41000017 	ldw	r4,0(r8)
 800c5a0:	42000104 	addi	r8,r8,4
 800c5a4:	da009c15 	stw	r8,624(sp)
 800c5a8:	20800015 	stw	r2,0(r4)
 800c5ac:	20c00115 	stw	r3,4(r4)
 800c5b0:	003fa406 	br	800c444 <__alt_data_end+0xf800c444>
 800c5b4:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 800c5b8:	80bca726 	beq	r16,r2,800b858 <__alt_data_end+0xf800b858>
 800c5bc:	e0800017 	ldw	r2,0(fp)
 800c5c0:	e1000117 	ldw	r4,4(fp)
 800c5c4:	d8c00104 	addi	r3,sp,4
 800c5c8:	12000003 	ldbu	r8,0(r2)
 800c5cc:	213fffc4 	addi	r4,r4,-1
 800c5d0:	10800044 	addi	r2,r2,1
 800c5d4:	e1000115 	stw	r4,4(fp)
 800c5d8:	e0800015 	stw	r2,0(fp)
 800c5dc:	84400044 	addi	r17,r16,1
 800c5e0:	dd400015 	stw	r21,0(sp)
 800c5e4:	1c21883a 	add	r16,r3,r16
 800c5e8:	b009883a 	mov	r4,r22
 800c5ec:	880f883a 	mov	r7,r17
 800c5f0:	180d883a 	mov	r6,r3
 800c5f4:	a00b883a 	mov	r5,r20
 800c5f8:	82000005 	stb	r8,0(r16)
 800c5fc:	800f8cc0 	call	800f8cc <_mbrtowc_r>
 800c600:	013fffc4 	movi	r4,-1
 800c604:	113c9426 	beq	r2,r4,800b858 <__alt_data_end+0xf800b858>
 800c608:	103c881e 	bne	r2,zero,800b82c <__alt_data_end+0xf800b82c>
 800c60c:	a0000015 	stw	zero,0(r20)
 800c610:	0009883a 	mov	r4,zero
 800c614:	800f5a40 	call	800f5a4 <iswspace>
 800c618:	10001a26 	beq	r2,zero,800c684 <__svfscanf_r+0x171c>
 800c61c:	8821883a 	mov	r16,r17
 800c620:	dc409f17 	ldw	r17,636(sp)
 800c624:	803f7426 	beq	r16,zero,800c3f8 <__alt_data_end+0xf800c3f8>
 800c628:	843fffc4 	addi	r16,r16,-1
 800c62c:	d9800104 	addi	r6,sp,4
 800c630:	342b883a 	add	r21,r6,r16
 800c634:	00000106 	br	800c63c <__svfscanf_r+0x16d4>
 800c638:	843fffc4 	addi	r16,r16,-1
 800c63c:	a9400003 	ldbu	r5,0(r21)
 800c640:	e00d883a 	mov	r6,fp
 800c644:	b009883a 	mov	r4,r22
 800c648:	80162080 	call	8016208 <_ungetc_r>
 800c64c:	ad7fffc4 	addi	r21,r21,-1
 800c650:	803ff91e 	bne	r16,zero,800c638 <__alt_data_end+0xf800c638>
 800c654:	003f6806 	br	800c3f8 <__alt_data_end+0xf800c3f8>
 800c658:	d9800104 	addi	r6,sp,4
 800c65c:	802b883a 	mov	r21,r16
 800c660:	343a812e 	bgeu	r6,r16,800b068 <__alt_data_end+0xf800b068>
 800c664:	ad7fffc4 	addi	r21,r21,-1
 800c668:	a9400007 	ldb	r5,0(r21)
 800c66c:	e00d883a 	mov	r6,fp
 800c670:	b009883a 	mov	r4,r22
 800c674:	80162080 	call	8016208 <_ungetc_r>
 800c678:	da000104 	addi	r8,sp,4
 800c67c:	457ff91e 	bne	r8,r21,800c664 <__alt_data_end+0xf800c664>
 800c680:	003a7906 	br	800b068 <__alt_data_end+0xf800b068>
 800c684:	da009f17 	ldw	r8,636(sp)
 800c688:	9465883a 	add	r18,r18,r17
 800c68c:	9cffffc4 	addi	r19,r19,-1
 800c690:	4000051e 	bne	r8,zero,800c6a8 <__svfscanf_r+0x1740>
 800c694:	a5000104 	addi	r20,r20,4
 800c698:	0021883a 	mov	r16,zero
 800c69c:	003c6606 	br	800b838 <__alt_data_end+0xf800b838>
 800c6a0:	a1000017 	ldw	r4,0(r20)
 800c6a4:	003fdb06 	br	800c614 <__alt_data_end+0xf800c614>
 800c6a8:	0021883a 	mov	r16,zero
 800c6ac:	003c6206 	br	800b838 <__alt_data_end+0xf800b838>
 800c6b0:	d8800104 	addi	r2,sp,4
 800c6b4:	802b883a 	mov	r21,r16
 800c6b8:	143a6b2e 	bgeu	r2,r16,800b068 <__alt_data_end+0xf800b068>
 800c6bc:	ad7fffc4 	addi	r21,r21,-1
 800c6c0:	a9400007 	ldb	r5,0(r21)
 800c6c4:	e00d883a 	mov	r6,fp
 800c6c8:	b009883a 	mov	r4,r22
 800c6cc:	80162080 	call	8016208 <_ungetc_r>
 800c6d0:	d8c00104 	addi	r3,sp,4
 800c6d4:	1d7ff91e 	bne	r3,r21,800c6bc <__alt_data_end+0xf800c6bc>
 800c6d8:	003a6306 	br	800b068 <__alt_data_end+0xf800b068>
 800c6dc:	0009883a 	mov	r4,zero
 800c6e0:	801176c0 	call	801176c <nanf>
 800c6e4:	a0800015 	stw	r2,0(r20)
 800c6e8:	dc409c15 	stw	r17,624(sp)
 800c6ec:	003dac06 	br	800bda0 <__alt_data_end+0xf800bda0>
 800c6f0:	d9000104 	addi	r4,sp,4
 800c6f4:	802b883a 	mov	r21,r16
 800c6f8:	243a5b2e 	bgeu	r4,r16,800b068 <__alt_data_end+0xf800b068>
 800c6fc:	ad7fffc4 	addi	r21,r21,-1
 800c700:	a9400007 	ldb	r5,0(r21)
 800c704:	e00d883a 	mov	r6,fp
 800c708:	b009883a 	mov	r4,r22
 800c70c:	80162080 	call	8016208 <_ungetc_r>
 800c710:	d9400104 	addi	r5,sp,4
 800c714:	2d7ff91e 	bne	r5,r21,800c6fc <__alt_data_end+0xf800c6fc>
 800c718:	003a5306 	br	800b068 <__alt_data_end+0xf800b068>
 800c71c:	80136a80 	call	80136a8 <_strtoull_r>
 800c720:	003f9d06 	br	800c598 <__alt_data_end+0xf800c598>

0800c724 <vfscanf>:
 800c724:	008200b4 	movhi	r2,2050
 800c728:	defffb04 	addi	sp,sp,-20
 800c72c:	10881404 	addi	r2,r2,8272
 800c730:	dc000215 	stw	r16,8(sp)
 800c734:	14000017 	ldw	r16,0(r2)
 800c738:	dc400315 	stw	r17,12(sp)
 800c73c:	dfc00415 	stw	ra,16(sp)
 800c740:	2023883a 	mov	r17,r4
 800c744:	80000826 	beq	r16,zero,800c768 <vfscanf+0x44>
 800c748:	80800e17 	ldw	r2,56(r16)
 800c74c:	1000061e 	bne	r2,zero,800c768 <vfscanf+0x44>
 800c750:	8009883a 	mov	r4,r16
 800c754:	d9400015 	stw	r5,0(sp)
 800c758:	d9800115 	stw	r6,4(sp)
 800c75c:	800e87c0 	call	800e87c <__sinit>
 800c760:	d9800117 	ldw	r6,4(sp)
 800c764:	d9400017 	ldw	r5,0(sp)
 800c768:	300f883a 	mov	r7,r6
 800c76c:	8009883a 	mov	r4,r16
 800c770:	280d883a 	mov	r6,r5
 800c774:	880b883a 	mov	r5,r17
 800c778:	dfc00417 	ldw	ra,16(sp)
 800c77c:	dc400317 	ldw	r17,12(sp)
 800c780:	dc000217 	ldw	r16,8(sp)
 800c784:	dec00504 	addi	sp,sp,20
 800c788:	800af681 	jmpi	800af68 <__svfscanf_r>

0800c78c <__svfscanf>:
 800c78c:	008200b4 	movhi	r2,2050
 800c790:	10881404 	addi	r2,r2,8272
 800c794:	300f883a 	mov	r7,r6
 800c798:	280d883a 	mov	r6,r5
 800c79c:	200b883a 	mov	r5,r4
 800c7a0:	11000017 	ldw	r4,0(r2)
 800c7a4:	800af681 	jmpi	800af68 <__svfscanf_r>

0800c7a8 <_vfscanf_r>:
 800c7a8:	defffb04 	addi	sp,sp,-20
 800c7ac:	dc000315 	stw	r16,12(sp)
 800c7b0:	dfc00415 	stw	ra,16(sp)
 800c7b4:	2021883a 	mov	r16,r4
 800c7b8:	20000926 	beq	r4,zero,800c7e0 <_vfscanf_r+0x38>
 800c7bc:	20800e17 	ldw	r2,56(r4)
 800c7c0:	1000071e 	bne	r2,zero,800c7e0 <_vfscanf_r+0x38>
 800c7c4:	d9400015 	stw	r5,0(sp)
 800c7c8:	d9800115 	stw	r6,4(sp)
 800c7cc:	d9c00215 	stw	r7,8(sp)
 800c7d0:	800e87c0 	call	800e87c <__sinit>
 800c7d4:	d9c00217 	ldw	r7,8(sp)
 800c7d8:	d9800117 	ldw	r6,4(sp)
 800c7dc:	d9400017 	ldw	r5,0(sp)
 800c7e0:	8009883a 	mov	r4,r16
 800c7e4:	dfc00417 	ldw	ra,16(sp)
 800c7e8:	dc000317 	ldw	r16,12(sp)
 800c7ec:	dec00504 	addi	sp,sp,20
 800c7f0:	800af681 	jmpi	800af68 <__svfscanf_r>

0800c7f4 <_write_r>:
 800c7f4:	defffd04 	addi	sp,sp,-12
 800c7f8:	2805883a 	mov	r2,r5
 800c7fc:	dc000015 	stw	r16,0(sp)
 800c800:	040200b4 	movhi	r16,2050
 800c804:	dc400115 	stw	r17,4(sp)
 800c808:	300b883a 	mov	r5,r6
 800c80c:	840f2904 	addi	r16,r16,15524
 800c810:	2023883a 	mov	r17,r4
 800c814:	380d883a 	mov	r6,r7
 800c818:	1009883a 	mov	r4,r2
 800c81c:	dfc00215 	stw	ra,8(sp)
 800c820:	80000015 	stw	zero,0(r16)
 800c824:	801d3380 	call	801d338 <write>
 800c828:	00ffffc4 	movi	r3,-1
 800c82c:	10c00526 	beq	r2,r3,800c844 <_write_r+0x50>
 800c830:	dfc00217 	ldw	ra,8(sp)
 800c834:	dc400117 	ldw	r17,4(sp)
 800c838:	dc000017 	ldw	r16,0(sp)
 800c83c:	dec00304 	addi	sp,sp,12
 800c840:	f800283a 	ret
 800c844:	80c00017 	ldw	r3,0(r16)
 800c848:	183ff926 	beq	r3,zero,800c830 <__alt_data_end+0xf800c830>
 800c84c:	88c00015 	stw	r3,0(r17)
 800c850:	003ff706 	br	800c830 <__alt_data_end+0xf800c830>

0800c854 <__swsetup_r>:
 800c854:	008200b4 	movhi	r2,2050
 800c858:	defffd04 	addi	sp,sp,-12
 800c85c:	10881404 	addi	r2,r2,8272
 800c860:	dc400115 	stw	r17,4(sp)
 800c864:	2023883a 	mov	r17,r4
 800c868:	11000017 	ldw	r4,0(r2)
 800c86c:	dc000015 	stw	r16,0(sp)
 800c870:	dfc00215 	stw	ra,8(sp)
 800c874:	2821883a 	mov	r16,r5
 800c878:	20000226 	beq	r4,zero,800c884 <__swsetup_r+0x30>
 800c87c:	20800e17 	ldw	r2,56(r4)
 800c880:	10003126 	beq	r2,zero,800c948 <__swsetup_r+0xf4>
 800c884:	8080030b 	ldhu	r2,12(r16)
 800c888:	10c0020c 	andi	r3,r2,8
 800c88c:	1009883a 	mov	r4,r2
 800c890:	18000f26 	beq	r3,zero,800c8d0 <__swsetup_r+0x7c>
 800c894:	80c00417 	ldw	r3,16(r16)
 800c898:	18001526 	beq	r3,zero,800c8f0 <__swsetup_r+0x9c>
 800c89c:	1100004c 	andi	r4,r2,1
 800c8a0:	20001c1e 	bne	r4,zero,800c914 <__swsetup_r+0xc0>
 800c8a4:	1080008c 	andi	r2,r2,2
 800c8a8:	1000291e 	bne	r2,zero,800c950 <__swsetup_r+0xfc>
 800c8ac:	80800517 	ldw	r2,20(r16)
 800c8b0:	80800215 	stw	r2,8(r16)
 800c8b4:	18001c26 	beq	r3,zero,800c928 <__swsetup_r+0xd4>
 800c8b8:	0005883a 	mov	r2,zero
 800c8bc:	dfc00217 	ldw	ra,8(sp)
 800c8c0:	dc400117 	ldw	r17,4(sp)
 800c8c4:	dc000017 	ldw	r16,0(sp)
 800c8c8:	dec00304 	addi	sp,sp,12
 800c8cc:	f800283a 	ret
 800c8d0:	2080040c 	andi	r2,r4,16
 800c8d4:	10002e26 	beq	r2,zero,800c990 <__swsetup_r+0x13c>
 800c8d8:	2080010c 	andi	r2,r4,4
 800c8dc:	10001e1e 	bne	r2,zero,800c958 <__swsetup_r+0x104>
 800c8e0:	80c00417 	ldw	r3,16(r16)
 800c8e4:	20800214 	ori	r2,r4,8
 800c8e8:	8080030d 	sth	r2,12(r16)
 800c8ec:	183feb1e 	bne	r3,zero,800c89c <__alt_data_end+0xf800c89c>
 800c8f0:	1100a00c 	andi	r4,r2,640
 800c8f4:	01408004 	movi	r5,512
 800c8f8:	217fe826 	beq	r4,r5,800c89c <__alt_data_end+0xf800c89c>
 800c8fc:	800b883a 	mov	r5,r16
 800c900:	8809883a 	mov	r4,r17
 800c904:	800f7100 	call	800f710 <__smakebuf_r>
 800c908:	8080030b 	ldhu	r2,12(r16)
 800c90c:	80c00417 	ldw	r3,16(r16)
 800c910:	003fe206 	br	800c89c <__alt_data_end+0xf800c89c>
 800c914:	80800517 	ldw	r2,20(r16)
 800c918:	80000215 	stw	zero,8(r16)
 800c91c:	0085c83a 	sub	r2,zero,r2
 800c920:	80800615 	stw	r2,24(r16)
 800c924:	183fe41e 	bne	r3,zero,800c8b8 <__alt_data_end+0xf800c8b8>
 800c928:	80c0030b 	ldhu	r3,12(r16)
 800c92c:	0005883a 	mov	r2,zero
 800c930:	1900200c 	andi	r4,r3,128
 800c934:	203fe126 	beq	r4,zero,800c8bc <__alt_data_end+0xf800c8bc>
 800c938:	18c01014 	ori	r3,r3,64
 800c93c:	80c0030d 	sth	r3,12(r16)
 800c940:	00bfffc4 	movi	r2,-1
 800c944:	003fdd06 	br	800c8bc <__alt_data_end+0xf800c8bc>
 800c948:	800e87c0 	call	800e87c <__sinit>
 800c94c:	003fcd06 	br	800c884 <__alt_data_end+0xf800c884>
 800c950:	0005883a 	mov	r2,zero
 800c954:	003fd606 	br	800c8b0 <__alt_data_end+0xf800c8b0>
 800c958:	81400c17 	ldw	r5,48(r16)
 800c95c:	28000626 	beq	r5,zero,800c978 <__swsetup_r+0x124>
 800c960:	80801004 	addi	r2,r16,64
 800c964:	28800326 	beq	r5,r2,800c974 <__swsetup_r+0x120>
 800c968:	8809883a 	mov	r4,r17
 800c96c:	800ec500 	call	800ec50 <_free_r>
 800c970:	8100030b 	ldhu	r4,12(r16)
 800c974:	80000c15 	stw	zero,48(r16)
 800c978:	80c00417 	ldw	r3,16(r16)
 800c97c:	00bff6c4 	movi	r2,-37
 800c980:	1108703a 	and	r4,r2,r4
 800c984:	80000115 	stw	zero,4(r16)
 800c988:	80c00015 	stw	r3,0(r16)
 800c98c:	003fd506 	br	800c8e4 <__alt_data_end+0xf800c8e4>
 800c990:	00800244 	movi	r2,9
 800c994:	88800015 	stw	r2,0(r17)
 800c998:	20801014 	ori	r2,r4,64
 800c99c:	8080030d 	sth	r2,12(r16)
 800c9a0:	00bfffc4 	movi	r2,-1
 800c9a4:	003fc506 	br	800c8bc <__alt_data_end+0xf800c8bc>

0800c9a8 <_close_r>:
 800c9a8:	defffd04 	addi	sp,sp,-12
 800c9ac:	dc000015 	stw	r16,0(sp)
 800c9b0:	040200b4 	movhi	r16,2050
 800c9b4:	dc400115 	stw	r17,4(sp)
 800c9b8:	840f2904 	addi	r16,r16,15524
 800c9bc:	2023883a 	mov	r17,r4
 800c9c0:	2809883a 	mov	r4,r5
 800c9c4:	dfc00215 	stw	ra,8(sp)
 800c9c8:	80000015 	stw	zero,0(r16)
 800c9cc:	801c3e40 	call	801c3e4 <close>
 800c9d0:	00ffffc4 	movi	r3,-1
 800c9d4:	10c00526 	beq	r2,r3,800c9ec <_close_r+0x44>
 800c9d8:	dfc00217 	ldw	ra,8(sp)
 800c9dc:	dc400117 	ldw	r17,4(sp)
 800c9e0:	dc000017 	ldw	r16,0(sp)
 800c9e4:	dec00304 	addi	sp,sp,12
 800c9e8:	f800283a 	ret
 800c9ec:	80c00017 	ldw	r3,0(r16)
 800c9f0:	183ff926 	beq	r3,zero,800c9d8 <__alt_data_end+0xf800c9d8>
 800c9f4:	88c00015 	stw	r3,0(r17)
 800c9f8:	003ff706 	br	800c9d8 <__alt_data_end+0xf800c9d8>

0800c9fc <quorem>:
 800c9fc:	defff704 	addi	sp,sp,-36
 800ca00:	dc800215 	stw	r18,8(sp)
 800ca04:	20800417 	ldw	r2,16(r4)
 800ca08:	2c800417 	ldw	r18,16(r5)
 800ca0c:	dfc00815 	stw	ra,32(sp)
 800ca10:	ddc00715 	stw	r23,28(sp)
 800ca14:	dd800615 	stw	r22,24(sp)
 800ca18:	dd400515 	stw	r21,20(sp)
 800ca1c:	dd000415 	stw	r20,16(sp)
 800ca20:	dcc00315 	stw	r19,12(sp)
 800ca24:	dc400115 	stw	r17,4(sp)
 800ca28:	dc000015 	stw	r16,0(sp)
 800ca2c:	14807116 	blt	r2,r18,800cbf4 <quorem+0x1f8>
 800ca30:	94bfffc4 	addi	r18,r18,-1
 800ca34:	94ad883a 	add	r22,r18,r18
 800ca38:	b5ad883a 	add	r22,r22,r22
 800ca3c:	2c400504 	addi	r17,r5,20
 800ca40:	8da9883a 	add	r20,r17,r22
 800ca44:	25400504 	addi	r21,r4,20
 800ca48:	282f883a 	mov	r23,r5
 800ca4c:	adad883a 	add	r22,r21,r22
 800ca50:	a1400017 	ldw	r5,0(r20)
 800ca54:	2021883a 	mov	r16,r4
 800ca58:	b1000017 	ldw	r4,0(r22)
 800ca5c:	29400044 	addi	r5,r5,1
 800ca60:	80039b80 	call	80039b8 <__udivsi3>
 800ca64:	1027883a 	mov	r19,r2
 800ca68:	10002c26 	beq	r2,zero,800cb1c <quorem+0x120>
 800ca6c:	a813883a 	mov	r9,r21
 800ca70:	880b883a 	mov	r5,r17
 800ca74:	0009883a 	mov	r4,zero
 800ca78:	000d883a 	mov	r6,zero
 800ca7c:	2a000017 	ldw	r8,0(r5)
 800ca80:	49c00017 	ldw	r7,0(r9)
 800ca84:	29400104 	addi	r5,r5,4
 800ca88:	40bfffcc 	andi	r2,r8,65535
 800ca8c:	14c5383a 	mul	r2,r2,r19
 800ca90:	4010d43a 	srli	r8,r8,16
 800ca94:	38ffffcc 	andi	r3,r7,65535
 800ca98:	1105883a 	add	r2,r2,r4
 800ca9c:	1008d43a 	srli	r4,r2,16
 800caa0:	44d1383a 	mul	r8,r8,r19
 800caa4:	198d883a 	add	r6,r3,r6
 800caa8:	10ffffcc 	andi	r3,r2,65535
 800caac:	30c7c83a 	sub	r3,r6,r3
 800cab0:	380ed43a 	srli	r7,r7,16
 800cab4:	4105883a 	add	r2,r8,r4
 800cab8:	180dd43a 	srai	r6,r3,16
 800cabc:	113fffcc 	andi	r4,r2,65535
 800cac0:	390fc83a 	sub	r7,r7,r4
 800cac4:	398d883a 	add	r6,r7,r6
 800cac8:	300e943a 	slli	r7,r6,16
 800cacc:	18ffffcc 	andi	r3,r3,65535
 800cad0:	1008d43a 	srli	r4,r2,16
 800cad4:	38ceb03a 	or	r7,r7,r3
 800cad8:	49c00015 	stw	r7,0(r9)
 800cadc:	300dd43a 	srai	r6,r6,16
 800cae0:	4a400104 	addi	r9,r9,4
 800cae4:	a17fe52e 	bgeu	r20,r5,800ca7c <__alt_data_end+0xf800ca7c>
 800cae8:	b0800017 	ldw	r2,0(r22)
 800caec:	10000b1e 	bne	r2,zero,800cb1c <quorem+0x120>
 800caf0:	b0bfff04 	addi	r2,r22,-4
 800caf4:	a880082e 	bgeu	r21,r2,800cb18 <quorem+0x11c>
 800caf8:	b0ffff17 	ldw	r3,-4(r22)
 800cafc:	18000326 	beq	r3,zero,800cb0c <quorem+0x110>
 800cb00:	00000506 	br	800cb18 <quorem+0x11c>
 800cb04:	10c00017 	ldw	r3,0(r2)
 800cb08:	1800031e 	bne	r3,zero,800cb18 <quorem+0x11c>
 800cb0c:	10bfff04 	addi	r2,r2,-4
 800cb10:	94bfffc4 	addi	r18,r18,-1
 800cb14:	a8bffb36 	bltu	r21,r2,800cb04 <__alt_data_end+0xf800cb04>
 800cb18:	84800415 	stw	r18,16(r16)
 800cb1c:	b80b883a 	mov	r5,r23
 800cb20:	8009883a 	mov	r4,r16
 800cb24:	80107400 	call	8010740 <__mcmp>
 800cb28:	10002616 	blt	r2,zero,800cbc4 <quorem+0x1c8>
 800cb2c:	9cc00044 	addi	r19,r19,1
 800cb30:	a805883a 	mov	r2,r21
 800cb34:	000b883a 	mov	r5,zero
 800cb38:	11000017 	ldw	r4,0(r2)
 800cb3c:	89800017 	ldw	r6,0(r17)
 800cb40:	10800104 	addi	r2,r2,4
 800cb44:	20ffffcc 	andi	r3,r4,65535
 800cb48:	194b883a 	add	r5,r3,r5
 800cb4c:	30ffffcc 	andi	r3,r6,65535
 800cb50:	28c7c83a 	sub	r3,r5,r3
 800cb54:	300cd43a 	srli	r6,r6,16
 800cb58:	2008d43a 	srli	r4,r4,16
 800cb5c:	180bd43a 	srai	r5,r3,16
 800cb60:	18ffffcc 	andi	r3,r3,65535
 800cb64:	2189c83a 	sub	r4,r4,r6
 800cb68:	2149883a 	add	r4,r4,r5
 800cb6c:	200c943a 	slli	r6,r4,16
 800cb70:	8c400104 	addi	r17,r17,4
 800cb74:	200bd43a 	srai	r5,r4,16
 800cb78:	30c6b03a 	or	r3,r6,r3
 800cb7c:	10ffff15 	stw	r3,-4(r2)
 800cb80:	a47fed2e 	bgeu	r20,r17,800cb38 <__alt_data_end+0xf800cb38>
 800cb84:	9485883a 	add	r2,r18,r18
 800cb88:	1085883a 	add	r2,r2,r2
 800cb8c:	a887883a 	add	r3,r21,r2
 800cb90:	18800017 	ldw	r2,0(r3)
 800cb94:	10000b1e 	bne	r2,zero,800cbc4 <quorem+0x1c8>
 800cb98:	18bfff04 	addi	r2,r3,-4
 800cb9c:	a880082e 	bgeu	r21,r2,800cbc0 <quorem+0x1c4>
 800cba0:	18ffff17 	ldw	r3,-4(r3)
 800cba4:	18000326 	beq	r3,zero,800cbb4 <quorem+0x1b8>
 800cba8:	00000506 	br	800cbc0 <quorem+0x1c4>
 800cbac:	10c00017 	ldw	r3,0(r2)
 800cbb0:	1800031e 	bne	r3,zero,800cbc0 <quorem+0x1c4>
 800cbb4:	10bfff04 	addi	r2,r2,-4
 800cbb8:	94bfffc4 	addi	r18,r18,-1
 800cbbc:	a8bffb36 	bltu	r21,r2,800cbac <__alt_data_end+0xf800cbac>
 800cbc0:	84800415 	stw	r18,16(r16)
 800cbc4:	9805883a 	mov	r2,r19
 800cbc8:	dfc00817 	ldw	ra,32(sp)
 800cbcc:	ddc00717 	ldw	r23,28(sp)
 800cbd0:	dd800617 	ldw	r22,24(sp)
 800cbd4:	dd400517 	ldw	r21,20(sp)
 800cbd8:	dd000417 	ldw	r20,16(sp)
 800cbdc:	dcc00317 	ldw	r19,12(sp)
 800cbe0:	dc800217 	ldw	r18,8(sp)
 800cbe4:	dc400117 	ldw	r17,4(sp)
 800cbe8:	dc000017 	ldw	r16,0(sp)
 800cbec:	dec00904 	addi	sp,sp,36
 800cbf0:	f800283a 	ret
 800cbf4:	0005883a 	mov	r2,zero
 800cbf8:	003ff306 	br	800cbc8 <__alt_data_end+0xf800cbc8>

0800cbfc <_dtoa_r>:
 800cbfc:	20801017 	ldw	r2,64(r4)
 800cc00:	deffde04 	addi	sp,sp,-136
 800cc04:	df002015 	stw	fp,128(sp)
 800cc08:	dcc01b15 	stw	r19,108(sp)
 800cc0c:	dc801a15 	stw	r18,104(sp)
 800cc10:	dc401915 	stw	r17,100(sp)
 800cc14:	dc001815 	stw	r16,96(sp)
 800cc18:	dfc02115 	stw	ra,132(sp)
 800cc1c:	ddc01f15 	stw	r23,124(sp)
 800cc20:	dd801e15 	stw	r22,120(sp)
 800cc24:	dd401d15 	stw	r21,116(sp)
 800cc28:	dd001c15 	stw	r20,112(sp)
 800cc2c:	d9c00315 	stw	r7,12(sp)
 800cc30:	2039883a 	mov	fp,r4
 800cc34:	3023883a 	mov	r17,r6
 800cc38:	2825883a 	mov	r18,r5
 800cc3c:	dc002417 	ldw	r16,144(sp)
 800cc40:	3027883a 	mov	r19,r6
 800cc44:	10000826 	beq	r2,zero,800cc68 <_dtoa_r+0x6c>
 800cc48:	21801117 	ldw	r6,68(r4)
 800cc4c:	00c00044 	movi	r3,1
 800cc50:	100b883a 	mov	r5,r2
 800cc54:	1986983a 	sll	r3,r3,r6
 800cc58:	11800115 	stw	r6,4(r2)
 800cc5c:	10c00215 	stw	r3,8(r2)
 800cc60:	800ff200 	call	800ff20 <_Bfree>
 800cc64:	e0001015 	stw	zero,64(fp)
 800cc68:	88002e16 	blt	r17,zero,800cd24 <_dtoa_r+0x128>
 800cc6c:	80000015 	stw	zero,0(r16)
 800cc70:	889ffc2c 	andhi	r2,r17,32752
 800cc74:	00dffc34 	movhi	r3,32752
 800cc78:	10c01c26 	beq	r2,r3,800ccec <_dtoa_r+0xf0>
 800cc7c:	000d883a 	mov	r6,zero
 800cc80:	000f883a 	mov	r7,zero
 800cc84:	9009883a 	mov	r4,r18
 800cc88:	980b883a 	mov	r5,r19
 800cc8c:	801ad2c0 	call	801ad2c <__eqdf2>
 800cc90:	10002b1e 	bne	r2,zero,800cd40 <_dtoa_r+0x144>
 800cc94:	d9c02317 	ldw	r7,140(sp)
 800cc98:	00800044 	movi	r2,1
 800cc9c:	38800015 	stw	r2,0(r7)
 800cca0:	d8802517 	ldw	r2,148(sp)
 800cca4:	10019e26 	beq	r2,zero,800d320 <_dtoa_r+0x724>
 800cca8:	d8c02517 	ldw	r3,148(sp)
 800ccac:	008200b4 	movhi	r2,2050
 800ccb0:	10bf4a44 	addi	r2,r2,-727
 800ccb4:	18800015 	stw	r2,0(r3)
 800ccb8:	10bfffc4 	addi	r2,r2,-1
 800ccbc:	dfc02117 	ldw	ra,132(sp)
 800ccc0:	df002017 	ldw	fp,128(sp)
 800ccc4:	ddc01f17 	ldw	r23,124(sp)
 800ccc8:	dd801e17 	ldw	r22,120(sp)
 800cccc:	dd401d17 	ldw	r21,116(sp)
 800ccd0:	dd001c17 	ldw	r20,112(sp)
 800ccd4:	dcc01b17 	ldw	r19,108(sp)
 800ccd8:	dc801a17 	ldw	r18,104(sp)
 800ccdc:	dc401917 	ldw	r17,100(sp)
 800cce0:	dc001817 	ldw	r16,96(sp)
 800cce4:	dec02204 	addi	sp,sp,136
 800cce8:	f800283a 	ret
 800ccec:	d8c02317 	ldw	r3,140(sp)
 800ccf0:	0089c3c4 	movi	r2,9999
 800ccf4:	18800015 	stw	r2,0(r3)
 800ccf8:	90017726 	beq	r18,zero,800d2d8 <_dtoa_r+0x6dc>
 800ccfc:	008200b4 	movhi	r2,2050
 800cd00:	10801104 	addi	r2,r2,68
 800cd04:	d9002517 	ldw	r4,148(sp)
 800cd08:	203fec26 	beq	r4,zero,800ccbc <__alt_data_end+0xf800ccbc>
 800cd0c:	10c000c7 	ldb	r3,3(r2)
 800cd10:	1801781e 	bne	r3,zero,800d2f4 <_dtoa_r+0x6f8>
 800cd14:	10c000c4 	addi	r3,r2,3
 800cd18:	d9802517 	ldw	r6,148(sp)
 800cd1c:	30c00015 	stw	r3,0(r6)
 800cd20:	003fe606 	br	800ccbc <__alt_data_end+0xf800ccbc>
 800cd24:	04e00034 	movhi	r19,32768
 800cd28:	9cffffc4 	addi	r19,r19,-1
 800cd2c:	00800044 	movi	r2,1
 800cd30:	8ce6703a 	and	r19,r17,r19
 800cd34:	80800015 	stw	r2,0(r16)
 800cd38:	9823883a 	mov	r17,r19
 800cd3c:	003fcc06 	br	800cc70 <__alt_data_end+0xf800cc70>
 800cd40:	d8800204 	addi	r2,sp,8
 800cd44:	d8800015 	stw	r2,0(sp)
 800cd48:	d9c00104 	addi	r7,sp,4
 800cd4c:	900b883a 	mov	r5,r18
 800cd50:	980d883a 	mov	r6,r19
 800cd54:	e009883a 	mov	r4,fp
 800cd58:	8820d53a 	srli	r16,r17,20
 800cd5c:	8010b0c0 	call	8010b0c <__d2b>
 800cd60:	d8800915 	stw	r2,36(sp)
 800cd64:	8001651e 	bne	r16,zero,800d2fc <_dtoa_r+0x700>
 800cd68:	dd800217 	ldw	r22,8(sp)
 800cd6c:	dc000117 	ldw	r16,4(sp)
 800cd70:	00800804 	movi	r2,32
 800cd74:	b421883a 	add	r16,r22,r16
 800cd78:	80c10c84 	addi	r3,r16,1074
 800cd7c:	10c2d10e 	bge	r2,r3,800d8c4 <_dtoa_r+0xcc8>
 800cd80:	00801004 	movi	r2,64
 800cd84:	81010484 	addi	r4,r16,1042
 800cd88:	10c7c83a 	sub	r3,r2,r3
 800cd8c:	9108d83a 	srl	r4,r18,r4
 800cd90:	88e2983a 	sll	r17,r17,r3
 800cd94:	2448b03a 	or	r4,r4,r17
 800cd98:	801c0f40 	call	801c0f4 <__floatunsidf>
 800cd9c:	017f8434 	movhi	r5,65040
 800cda0:	01800044 	movi	r6,1
 800cda4:	1009883a 	mov	r4,r2
 800cda8:	194b883a 	add	r5,r3,r5
 800cdac:	843fffc4 	addi	r16,r16,-1
 800cdb0:	d9801115 	stw	r6,68(sp)
 800cdb4:	000d883a 	mov	r6,zero
 800cdb8:	01cffe34 	movhi	r7,16376
 800cdbc:	801b69c0 	call	801b69c <__subdf3>
 800cdc0:	0198dbf4 	movhi	r6,25455
 800cdc4:	01cff4f4 	movhi	r7,16339
 800cdc8:	3190d844 	addi	r6,r6,17249
 800cdcc:	39e1e9c4 	addi	r7,r7,-30809
 800cdd0:	1009883a 	mov	r4,r2
 800cdd4:	180b883a 	mov	r5,r3
 800cdd8:	801af840 	call	801af84 <__muldf3>
 800cddc:	01a2d874 	movhi	r6,35681
 800cde0:	01cff1f4 	movhi	r7,16327
 800cde4:	31b22cc4 	addi	r6,r6,-14157
 800cde8:	39e28a04 	addi	r7,r7,-30168
 800cdec:	180b883a 	mov	r5,r3
 800cdf0:	1009883a 	mov	r4,r2
 800cdf4:	8019b980 	call	8019b98 <__adddf3>
 800cdf8:	8009883a 	mov	r4,r16
 800cdfc:	1029883a 	mov	r20,r2
 800ce00:	1823883a 	mov	r17,r3
 800ce04:	801c0180 	call	801c018 <__floatsidf>
 800ce08:	019427f4 	movhi	r6,20639
 800ce0c:	01cff4f4 	movhi	r7,16339
 800ce10:	319e7ec4 	addi	r6,r6,31227
 800ce14:	39d104c4 	addi	r7,r7,17427
 800ce18:	1009883a 	mov	r4,r2
 800ce1c:	180b883a 	mov	r5,r3
 800ce20:	801af840 	call	801af84 <__muldf3>
 800ce24:	100d883a 	mov	r6,r2
 800ce28:	180f883a 	mov	r7,r3
 800ce2c:	a009883a 	mov	r4,r20
 800ce30:	880b883a 	mov	r5,r17
 800ce34:	8019b980 	call	8019b98 <__adddf3>
 800ce38:	1009883a 	mov	r4,r2
 800ce3c:	180b883a 	mov	r5,r3
 800ce40:	1029883a 	mov	r20,r2
 800ce44:	1823883a 	mov	r17,r3
 800ce48:	801bf980 	call	801bf98 <__fixdfsi>
 800ce4c:	000d883a 	mov	r6,zero
 800ce50:	000f883a 	mov	r7,zero
 800ce54:	a009883a 	mov	r4,r20
 800ce58:	880b883a 	mov	r5,r17
 800ce5c:	d8800515 	stw	r2,20(sp)
 800ce60:	801ae900 	call	801ae90 <__ledf2>
 800ce64:	10028716 	blt	r2,zero,800d884 <_dtoa_r+0xc88>
 800ce68:	d8c00517 	ldw	r3,20(sp)
 800ce6c:	00800584 	movi	r2,22
 800ce70:	10c27536 	bltu	r2,r3,800d848 <_dtoa_r+0xc4c>
 800ce74:	180490fa 	slli	r2,r3,3
 800ce78:	00c200b4 	movhi	r3,2050
 800ce7c:	18c02d04 	addi	r3,r3,180
 800ce80:	1885883a 	add	r2,r3,r2
 800ce84:	11000017 	ldw	r4,0(r2)
 800ce88:	11400117 	ldw	r5,4(r2)
 800ce8c:	900d883a 	mov	r6,r18
 800ce90:	980f883a 	mov	r7,r19
 800ce94:	801adb40 	call	801adb4 <__gedf2>
 800ce98:	00828d0e 	bge	zero,r2,800d8d0 <_dtoa_r+0xcd4>
 800ce9c:	d9000517 	ldw	r4,20(sp)
 800cea0:	d8000e15 	stw	zero,56(sp)
 800cea4:	213fffc4 	addi	r4,r4,-1
 800cea8:	d9000515 	stw	r4,20(sp)
 800ceac:	b42dc83a 	sub	r22,r22,r16
 800ceb0:	b5bfffc4 	addi	r22,r22,-1
 800ceb4:	b0026f16 	blt	r22,zero,800d874 <_dtoa_r+0xc78>
 800ceb8:	d8000815 	stw	zero,32(sp)
 800cebc:	d9c00517 	ldw	r7,20(sp)
 800cec0:	38026416 	blt	r7,zero,800d854 <_dtoa_r+0xc58>
 800cec4:	b1ed883a 	add	r22,r22,r7
 800cec8:	d9c00d15 	stw	r7,52(sp)
 800cecc:	d8000a15 	stw	zero,40(sp)
 800ced0:	d9800317 	ldw	r6,12(sp)
 800ced4:	00800244 	movi	r2,9
 800ced8:	11811436 	bltu	r2,r6,800d32c <_dtoa_r+0x730>
 800cedc:	00800144 	movi	r2,5
 800cee0:	1184e10e 	bge	r2,r6,800e268 <_dtoa_r+0x166c>
 800cee4:	31bfff04 	addi	r6,r6,-4
 800cee8:	d9800315 	stw	r6,12(sp)
 800ceec:	0023883a 	mov	r17,zero
 800cef0:	d9800317 	ldw	r6,12(sp)
 800cef4:	008000c4 	movi	r2,3
 800cef8:	30836726 	beq	r6,r2,800dc98 <_dtoa_r+0x109c>
 800cefc:	1183410e 	bge	r2,r6,800dc04 <_dtoa_r+0x1008>
 800cf00:	d9c00317 	ldw	r7,12(sp)
 800cf04:	00800104 	movi	r2,4
 800cf08:	38827c26 	beq	r7,r2,800d8fc <_dtoa_r+0xd00>
 800cf0c:	00800144 	movi	r2,5
 800cf10:	3884c41e 	bne	r7,r2,800e224 <_dtoa_r+0x1628>
 800cf14:	00800044 	movi	r2,1
 800cf18:	d8800b15 	stw	r2,44(sp)
 800cf1c:	d8c00517 	ldw	r3,20(sp)
 800cf20:	d9002217 	ldw	r4,136(sp)
 800cf24:	1907883a 	add	r3,r3,r4
 800cf28:	19800044 	addi	r6,r3,1
 800cf2c:	d8c00c15 	stw	r3,48(sp)
 800cf30:	d9800615 	stw	r6,24(sp)
 800cf34:	0183a40e 	bge	zero,r6,800ddc8 <_dtoa_r+0x11cc>
 800cf38:	d9800617 	ldw	r6,24(sp)
 800cf3c:	3021883a 	mov	r16,r6
 800cf40:	e0001115 	stw	zero,68(fp)
 800cf44:	008005c4 	movi	r2,23
 800cf48:	1184c92e 	bgeu	r2,r6,800e270 <_dtoa_r+0x1674>
 800cf4c:	00c00044 	movi	r3,1
 800cf50:	00800104 	movi	r2,4
 800cf54:	1085883a 	add	r2,r2,r2
 800cf58:	11000504 	addi	r4,r2,20
 800cf5c:	180b883a 	mov	r5,r3
 800cf60:	18c00044 	addi	r3,r3,1
 800cf64:	313ffb2e 	bgeu	r6,r4,800cf54 <__alt_data_end+0xf800cf54>
 800cf68:	e1401115 	stw	r5,68(fp)
 800cf6c:	e009883a 	mov	r4,fp
 800cf70:	800fe780 	call	800fe78 <_Balloc>
 800cf74:	d8800715 	stw	r2,28(sp)
 800cf78:	e0801015 	stw	r2,64(fp)
 800cf7c:	00800384 	movi	r2,14
 800cf80:	1400f736 	bltu	r2,r16,800d360 <_dtoa_r+0x764>
 800cf84:	8800f626 	beq	r17,zero,800d360 <_dtoa_r+0x764>
 800cf88:	d9c00517 	ldw	r7,20(sp)
 800cf8c:	01c39a0e 	bge	zero,r7,800ddf8 <_dtoa_r+0x11fc>
 800cf90:	388003cc 	andi	r2,r7,15
 800cf94:	100490fa 	slli	r2,r2,3
 800cf98:	382bd13a 	srai	r21,r7,4
 800cf9c:	00c200b4 	movhi	r3,2050
 800cfa0:	18c02d04 	addi	r3,r3,180
 800cfa4:	1885883a 	add	r2,r3,r2
 800cfa8:	a8c0040c 	andi	r3,r21,16
 800cfac:	12400017 	ldw	r9,0(r2)
 800cfb0:	12000117 	ldw	r8,4(r2)
 800cfb4:	18037926 	beq	r3,zero,800dd9c <_dtoa_r+0x11a0>
 800cfb8:	008200b4 	movhi	r2,2050
 800cfbc:	10802304 	addi	r2,r2,140
 800cfc0:	11800817 	ldw	r6,32(r2)
 800cfc4:	11c00917 	ldw	r7,36(r2)
 800cfc8:	9009883a 	mov	r4,r18
 800cfcc:	980b883a 	mov	r5,r19
 800cfd0:	da001715 	stw	r8,92(sp)
 800cfd4:	da401615 	stw	r9,88(sp)
 800cfd8:	801a4440 	call	801a444 <__divdf3>
 800cfdc:	da001717 	ldw	r8,92(sp)
 800cfe0:	da401617 	ldw	r9,88(sp)
 800cfe4:	ad4003cc 	andi	r21,r21,15
 800cfe8:	040000c4 	movi	r16,3
 800cfec:	1023883a 	mov	r17,r2
 800cff0:	1829883a 	mov	r20,r3
 800cff4:	a8001126 	beq	r21,zero,800d03c <_dtoa_r+0x440>
 800cff8:	05c200b4 	movhi	r23,2050
 800cffc:	bdc02304 	addi	r23,r23,140
 800d000:	4805883a 	mov	r2,r9
 800d004:	4007883a 	mov	r3,r8
 800d008:	a980004c 	andi	r6,r21,1
 800d00c:	1009883a 	mov	r4,r2
 800d010:	a82bd07a 	srai	r21,r21,1
 800d014:	180b883a 	mov	r5,r3
 800d018:	30000426 	beq	r6,zero,800d02c <_dtoa_r+0x430>
 800d01c:	b9800017 	ldw	r6,0(r23)
 800d020:	b9c00117 	ldw	r7,4(r23)
 800d024:	84000044 	addi	r16,r16,1
 800d028:	801af840 	call	801af84 <__muldf3>
 800d02c:	bdc00204 	addi	r23,r23,8
 800d030:	a83ff51e 	bne	r21,zero,800d008 <__alt_data_end+0xf800d008>
 800d034:	1013883a 	mov	r9,r2
 800d038:	1811883a 	mov	r8,r3
 800d03c:	480d883a 	mov	r6,r9
 800d040:	400f883a 	mov	r7,r8
 800d044:	8809883a 	mov	r4,r17
 800d048:	a00b883a 	mov	r5,r20
 800d04c:	801a4440 	call	801a444 <__divdf3>
 800d050:	d8800f15 	stw	r2,60(sp)
 800d054:	d8c01015 	stw	r3,64(sp)
 800d058:	d8c00e17 	ldw	r3,56(sp)
 800d05c:	18000626 	beq	r3,zero,800d078 <_dtoa_r+0x47c>
 800d060:	d9000f17 	ldw	r4,60(sp)
 800d064:	d9401017 	ldw	r5,64(sp)
 800d068:	000d883a 	mov	r6,zero
 800d06c:	01cffc34 	movhi	r7,16368
 800d070:	801ae900 	call	801ae90 <__ledf2>
 800d074:	10040b16 	blt	r2,zero,800e0a4 <_dtoa_r+0x14a8>
 800d078:	8009883a 	mov	r4,r16
 800d07c:	801c0180 	call	801c018 <__floatsidf>
 800d080:	d9800f17 	ldw	r6,60(sp)
 800d084:	d9c01017 	ldw	r7,64(sp)
 800d088:	1009883a 	mov	r4,r2
 800d08c:	180b883a 	mov	r5,r3
 800d090:	801af840 	call	801af84 <__muldf3>
 800d094:	000d883a 	mov	r6,zero
 800d098:	01d00734 	movhi	r7,16412
 800d09c:	1009883a 	mov	r4,r2
 800d0a0:	180b883a 	mov	r5,r3
 800d0a4:	8019b980 	call	8019b98 <__adddf3>
 800d0a8:	1021883a 	mov	r16,r2
 800d0ac:	d8800617 	ldw	r2,24(sp)
 800d0b0:	047f3034 	movhi	r17,64704
 800d0b4:	1c63883a 	add	r17,r3,r17
 800d0b8:	10031826 	beq	r2,zero,800dd1c <_dtoa_r+0x1120>
 800d0bc:	d8c00517 	ldw	r3,20(sp)
 800d0c0:	db000617 	ldw	r12,24(sp)
 800d0c4:	d8c01315 	stw	r3,76(sp)
 800d0c8:	d9000b17 	ldw	r4,44(sp)
 800d0cc:	20038f26 	beq	r4,zero,800df0c <_dtoa_r+0x1310>
 800d0d0:	60bfffc4 	addi	r2,r12,-1
 800d0d4:	100490fa 	slli	r2,r2,3
 800d0d8:	00c200b4 	movhi	r3,2050
 800d0dc:	18c02d04 	addi	r3,r3,180
 800d0e0:	1885883a 	add	r2,r3,r2
 800d0e4:	11800017 	ldw	r6,0(r2)
 800d0e8:	11c00117 	ldw	r7,4(r2)
 800d0ec:	d8800717 	ldw	r2,28(sp)
 800d0f0:	0009883a 	mov	r4,zero
 800d0f4:	014ff834 	movhi	r5,16352
 800d0f8:	db001615 	stw	r12,88(sp)
 800d0fc:	15c00044 	addi	r23,r2,1
 800d100:	801a4440 	call	801a444 <__divdf3>
 800d104:	800d883a 	mov	r6,r16
 800d108:	880f883a 	mov	r7,r17
 800d10c:	1009883a 	mov	r4,r2
 800d110:	180b883a 	mov	r5,r3
 800d114:	801b69c0 	call	801b69c <__subdf3>
 800d118:	d9401017 	ldw	r5,64(sp)
 800d11c:	d9000f17 	ldw	r4,60(sp)
 800d120:	102b883a 	mov	r21,r2
 800d124:	d8c01215 	stw	r3,72(sp)
 800d128:	801bf980 	call	801bf98 <__fixdfsi>
 800d12c:	1009883a 	mov	r4,r2
 800d130:	1029883a 	mov	r20,r2
 800d134:	801c0180 	call	801c018 <__floatsidf>
 800d138:	d9000f17 	ldw	r4,60(sp)
 800d13c:	d9401017 	ldw	r5,64(sp)
 800d140:	100d883a 	mov	r6,r2
 800d144:	180f883a 	mov	r7,r3
 800d148:	801b69c0 	call	801b69c <__subdf3>
 800d14c:	1823883a 	mov	r17,r3
 800d150:	d8c00717 	ldw	r3,28(sp)
 800d154:	d9401217 	ldw	r5,72(sp)
 800d158:	a2000c04 	addi	r8,r20,48
 800d15c:	1021883a 	mov	r16,r2
 800d160:	1a000005 	stb	r8,0(r3)
 800d164:	800d883a 	mov	r6,r16
 800d168:	880f883a 	mov	r7,r17
 800d16c:	a809883a 	mov	r4,r21
 800d170:	4029883a 	mov	r20,r8
 800d174:	801adb40 	call	801adb4 <__gedf2>
 800d178:	00841d16 	blt	zero,r2,800e1f0 <_dtoa_r+0x15f4>
 800d17c:	800d883a 	mov	r6,r16
 800d180:	880f883a 	mov	r7,r17
 800d184:	0009883a 	mov	r4,zero
 800d188:	014ffc34 	movhi	r5,16368
 800d18c:	801b69c0 	call	801b69c <__subdf3>
 800d190:	d9401217 	ldw	r5,72(sp)
 800d194:	100d883a 	mov	r6,r2
 800d198:	180f883a 	mov	r7,r3
 800d19c:	a809883a 	mov	r4,r21
 800d1a0:	801adb40 	call	801adb4 <__gedf2>
 800d1a4:	db001617 	ldw	r12,88(sp)
 800d1a8:	00840e16 	blt	zero,r2,800e1e4 <_dtoa_r+0x15e8>
 800d1ac:	00800044 	movi	r2,1
 800d1b0:	13006b0e 	bge	r2,r12,800d360 <_dtoa_r+0x764>
 800d1b4:	d9000717 	ldw	r4,28(sp)
 800d1b8:	dd800f15 	stw	r22,60(sp)
 800d1bc:	dcc01015 	stw	r19,64(sp)
 800d1c0:	2319883a 	add	r12,r4,r12
 800d1c4:	dcc01217 	ldw	r19,72(sp)
 800d1c8:	602d883a 	mov	r22,r12
 800d1cc:	dc801215 	stw	r18,72(sp)
 800d1d0:	b825883a 	mov	r18,r23
 800d1d4:	00000906 	br	800d1fc <_dtoa_r+0x600>
 800d1d8:	801b69c0 	call	801b69c <__subdf3>
 800d1dc:	a80d883a 	mov	r6,r21
 800d1e0:	980f883a 	mov	r7,r19
 800d1e4:	1009883a 	mov	r4,r2
 800d1e8:	180b883a 	mov	r5,r3
 800d1ec:	801ae900 	call	801ae90 <__ledf2>
 800d1f0:	1003e816 	blt	r2,zero,800e194 <_dtoa_r+0x1598>
 800d1f4:	b825883a 	mov	r18,r23
 800d1f8:	bd83e926 	beq	r23,r22,800e1a0 <_dtoa_r+0x15a4>
 800d1fc:	a809883a 	mov	r4,r21
 800d200:	980b883a 	mov	r5,r19
 800d204:	000d883a 	mov	r6,zero
 800d208:	01d00934 	movhi	r7,16420
 800d20c:	801af840 	call	801af84 <__muldf3>
 800d210:	000d883a 	mov	r6,zero
 800d214:	01d00934 	movhi	r7,16420
 800d218:	8009883a 	mov	r4,r16
 800d21c:	880b883a 	mov	r5,r17
 800d220:	102b883a 	mov	r21,r2
 800d224:	1827883a 	mov	r19,r3
 800d228:	801af840 	call	801af84 <__muldf3>
 800d22c:	180b883a 	mov	r5,r3
 800d230:	1009883a 	mov	r4,r2
 800d234:	1821883a 	mov	r16,r3
 800d238:	1023883a 	mov	r17,r2
 800d23c:	801bf980 	call	801bf98 <__fixdfsi>
 800d240:	1009883a 	mov	r4,r2
 800d244:	1029883a 	mov	r20,r2
 800d248:	801c0180 	call	801c018 <__floatsidf>
 800d24c:	8809883a 	mov	r4,r17
 800d250:	800b883a 	mov	r5,r16
 800d254:	100d883a 	mov	r6,r2
 800d258:	180f883a 	mov	r7,r3
 800d25c:	801b69c0 	call	801b69c <__subdf3>
 800d260:	a5000c04 	addi	r20,r20,48
 800d264:	a80d883a 	mov	r6,r21
 800d268:	980f883a 	mov	r7,r19
 800d26c:	1009883a 	mov	r4,r2
 800d270:	180b883a 	mov	r5,r3
 800d274:	95000005 	stb	r20,0(r18)
 800d278:	1021883a 	mov	r16,r2
 800d27c:	1823883a 	mov	r17,r3
 800d280:	801ae900 	call	801ae90 <__ledf2>
 800d284:	bdc00044 	addi	r23,r23,1
 800d288:	800d883a 	mov	r6,r16
 800d28c:	880f883a 	mov	r7,r17
 800d290:	0009883a 	mov	r4,zero
 800d294:	014ffc34 	movhi	r5,16368
 800d298:	103fcf0e 	bge	r2,zero,800d1d8 <__alt_data_end+0xf800d1d8>
 800d29c:	d8c01317 	ldw	r3,76(sp)
 800d2a0:	d8c00515 	stw	r3,20(sp)
 800d2a4:	d9400917 	ldw	r5,36(sp)
 800d2a8:	e009883a 	mov	r4,fp
 800d2ac:	800ff200 	call	800ff20 <_Bfree>
 800d2b0:	d9000517 	ldw	r4,20(sp)
 800d2b4:	d9802317 	ldw	r6,140(sp)
 800d2b8:	d9c02517 	ldw	r7,148(sp)
 800d2bc:	b8000005 	stb	zero,0(r23)
 800d2c0:	20800044 	addi	r2,r4,1
 800d2c4:	30800015 	stw	r2,0(r6)
 800d2c8:	3802aa26 	beq	r7,zero,800dd74 <_dtoa_r+0x1178>
 800d2cc:	3dc00015 	stw	r23,0(r7)
 800d2d0:	d8800717 	ldw	r2,28(sp)
 800d2d4:	003e7906 	br	800ccbc <__alt_data_end+0xf800ccbc>
 800d2d8:	00800434 	movhi	r2,16
 800d2dc:	10bfffc4 	addi	r2,r2,-1
 800d2e0:	88a2703a 	and	r17,r17,r2
 800d2e4:	883e851e 	bne	r17,zero,800ccfc <__alt_data_end+0xf800ccfc>
 800d2e8:	008200b4 	movhi	r2,2050
 800d2ec:	10800e04 	addi	r2,r2,56
 800d2f0:	003e8406 	br	800cd04 <__alt_data_end+0xf800cd04>
 800d2f4:	10c00204 	addi	r3,r2,8
 800d2f8:	003e8706 	br	800cd18 <__alt_data_end+0xf800cd18>
 800d2fc:	01400434 	movhi	r5,16
 800d300:	297fffc4 	addi	r5,r5,-1
 800d304:	994a703a 	and	r5,r19,r5
 800d308:	9009883a 	mov	r4,r18
 800d30c:	843f0044 	addi	r16,r16,-1023
 800d310:	294ffc34 	orhi	r5,r5,16368
 800d314:	dd800217 	ldw	r22,8(sp)
 800d318:	d8001115 	stw	zero,68(sp)
 800d31c:	003ea506 	br	800cdb4 <__alt_data_end+0xf800cdb4>
 800d320:	008200b4 	movhi	r2,2050
 800d324:	10bf4a04 	addi	r2,r2,-728
 800d328:	003e6406 	br	800ccbc <__alt_data_end+0xf800ccbc>
 800d32c:	e0001115 	stw	zero,68(fp)
 800d330:	000b883a 	mov	r5,zero
 800d334:	e009883a 	mov	r4,fp
 800d338:	800fe780 	call	800fe78 <_Balloc>
 800d33c:	01bfffc4 	movi	r6,-1
 800d340:	01c00044 	movi	r7,1
 800d344:	d8800715 	stw	r2,28(sp)
 800d348:	d9800c15 	stw	r6,48(sp)
 800d34c:	e0801015 	stw	r2,64(fp)
 800d350:	d8000315 	stw	zero,12(sp)
 800d354:	d9c00b15 	stw	r7,44(sp)
 800d358:	d9800615 	stw	r6,24(sp)
 800d35c:	d8002215 	stw	zero,136(sp)
 800d360:	d8800117 	ldw	r2,4(sp)
 800d364:	10008916 	blt	r2,zero,800d58c <_dtoa_r+0x990>
 800d368:	d9000517 	ldw	r4,20(sp)
 800d36c:	00c00384 	movi	r3,14
 800d370:	19008616 	blt	r3,r4,800d58c <_dtoa_r+0x990>
 800d374:	200490fa 	slli	r2,r4,3
 800d378:	00c200b4 	movhi	r3,2050
 800d37c:	d9802217 	ldw	r6,136(sp)
 800d380:	18c02d04 	addi	r3,r3,180
 800d384:	1885883a 	add	r2,r3,r2
 800d388:	14000017 	ldw	r16,0(r2)
 800d38c:	14400117 	ldw	r17,4(r2)
 800d390:	30016316 	blt	r6,zero,800d920 <_dtoa_r+0xd24>
 800d394:	800d883a 	mov	r6,r16
 800d398:	880f883a 	mov	r7,r17
 800d39c:	9009883a 	mov	r4,r18
 800d3a0:	980b883a 	mov	r5,r19
 800d3a4:	801a4440 	call	801a444 <__divdf3>
 800d3a8:	180b883a 	mov	r5,r3
 800d3ac:	1009883a 	mov	r4,r2
 800d3b0:	801bf980 	call	801bf98 <__fixdfsi>
 800d3b4:	1009883a 	mov	r4,r2
 800d3b8:	102b883a 	mov	r21,r2
 800d3bc:	801c0180 	call	801c018 <__floatsidf>
 800d3c0:	800d883a 	mov	r6,r16
 800d3c4:	880f883a 	mov	r7,r17
 800d3c8:	1009883a 	mov	r4,r2
 800d3cc:	180b883a 	mov	r5,r3
 800d3d0:	801af840 	call	801af84 <__muldf3>
 800d3d4:	100d883a 	mov	r6,r2
 800d3d8:	180f883a 	mov	r7,r3
 800d3dc:	9009883a 	mov	r4,r18
 800d3e0:	980b883a 	mov	r5,r19
 800d3e4:	801b69c0 	call	801b69c <__subdf3>
 800d3e8:	d9c00717 	ldw	r7,28(sp)
 800d3ec:	1009883a 	mov	r4,r2
 800d3f0:	a8800c04 	addi	r2,r21,48
 800d3f4:	38800005 	stb	r2,0(r7)
 800d3f8:	3dc00044 	addi	r23,r7,1
 800d3fc:	d9c00617 	ldw	r7,24(sp)
 800d400:	01800044 	movi	r6,1
 800d404:	180b883a 	mov	r5,r3
 800d408:	2005883a 	mov	r2,r4
 800d40c:	39803826 	beq	r7,r6,800d4f0 <_dtoa_r+0x8f4>
 800d410:	000d883a 	mov	r6,zero
 800d414:	01d00934 	movhi	r7,16420
 800d418:	801af840 	call	801af84 <__muldf3>
 800d41c:	000d883a 	mov	r6,zero
 800d420:	000f883a 	mov	r7,zero
 800d424:	1009883a 	mov	r4,r2
 800d428:	180b883a 	mov	r5,r3
 800d42c:	1025883a 	mov	r18,r2
 800d430:	1827883a 	mov	r19,r3
 800d434:	801ad2c0 	call	801ad2c <__eqdf2>
 800d438:	103f9a26 	beq	r2,zero,800d2a4 <__alt_data_end+0xf800d2a4>
 800d43c:	d9c00617 	ldw	r7,24(sp)
 800d440:	d8c00717 	ldw	r3,28(sp)
 800d444:	b829883a 	mov	r20,r23
 800d448:	38bfffc4 	addi	r2,r7,-1
 800d44c:	18ad883a 	add	r22,r3,r2
 800d450:	00000a06 	br	800d47c <_dtoa_r+0x880>
 800d454:	801af840 	call	801af84 <__muldf3>
 800d458:	000d883a 	mov	r6,zero
 800d45c:	000f883a 	mov	r7,zero
 800d460:	1009883a 	mov	r4,r2
 800d464:	180b883a 	mov	r5,r3
 800d468:	1025883a 	mov	r18,r2
 800d46c:	1827883a 	mov	r19,r3
 800d470:	b829883a 	mov	r20,r23
 800d474:	801ad2c0 	call	801ad2c <__eqdf2>
 800d478:	103f8a26 	beq	r2,zero,800d2a4 <__alt_data_end+0xf800d2a4>
 800d47c:	800d883a 	mov	r6,r16
 800d480:	880f883a 	mov	r7,r17
 800d484:	9009883a 	mov	r4,r18
 800d488:	980b883a 	mov	r5,r19
 800d48c:	801a4440 	call	801a444 <__divdf3>
 800d490:	180b883a 	mov	r5,r3
 800d494:	1009883a 	mov	r4,r2
 800d498:	801bf980 	call	801bf98 <__fixdfsi>
 800d49c:	1009883a 	mov	r4,r2
 800d4a0:	102b883a 	mov	r21,r2
 800d4a4:	801c0180 	call	801c018 <__floatsidf>
 800d4a8:	800d883a 	mov	r6,r16
 800d4ac:	880f883a 	mov	r7,r17
 800d4b0:	1009883a 	mov	r4,r2
 800d4b4:	180b883a 	mov	r5,r3
 800d4b8:	801af840 	call	801af84 <__muldf3>
 800d4bc:	100d883a 	mov	r6,r2
 800d4c0:	180f883a 	mov	r7,r3
 800d4c4:	9009883a 	mov	r4,r18
 800d4c8:	980b883a 	mov	r5,r19
 800d4cc:	801b69c0 	call	801b69c <__subdf3>
 800d4d0:	aa000c04 	addi	r8,r21,48
 800d4d4:	a2000005 	stb	r8,0(r20)
 800d4d8:	000d883a 	mov	r6,zero
 800d4dc:	01d00934 	movhi	r7,16420
 800d4e0:	1009883a 	mov	r4,r2
 800d4e4:	180b883a 	mov	r5,r3
 800d4e8:	a5c00044 	addi	r23,r20,1
 800d4ec:	b53fd91e 	bne	r22,r20,800d454 <__alt_data_end+0xf800d454>
 800d4f0:	100d883a 	mov	r6,r2
 800d4f4:	180f883a 	mov	r7,r3
 800d4f8:	1009883a 	mov	r4,r2
 800d4fc:	180b883a 	mov	r5,r3
 800d500:	8019b980 	call	8019b98 <__adddf3>
 800d504:	100d883a 	mov	r6,r2
 800d508:	180f883a 	mov	r7,r3
 800d50c:	8009883a 	mov	r4,r16
 800d510:	880b883a 	mov	r5,r17
 800d514:	1027883a 	mov	r19,r2
 800d518:	1825883a 	mov	r18,r3
 800d51c:	801ae900 	call	801ae90 <__ledf2>
 800d520:	10000816 	blt	r2,zero,800d544 <_dtoa_r+0x948>
 800d524:	980d883a 	mov	r6,r19
 800d528:	900f883a 	mov	r7,r18
 800d52c:	8009883a 	mov	r4,r16
 800d530:	880b883a 	mov	r5,r17
 800d534:	801ad2c0 	call	801ad2c <__eqdf2>
 800d538:	103f5a1e 	bne	r2,zero,800d2a4 <__alt_data_end+0xf800d2a4>
 800d53c:	ad40004c 	andi	r21,r21,1
 800d540:	a83f5826 	beq	r21,zero,800d2a4 <__alt_data_end+0xf800d2a4>
 800d544:	bd3fffc3 	ldbu	r20,-1(r23)
 800d548:	b8bfffc4 	addi	r2,r23,-1
 800d54c:	1007883a 	mov	r3,r2
 800d550:	01400e44 	movi	r5,57
 800d554:	d9800717 	ldw	r6,28(sp)
 800d558:	00000506 	br	800d570 <_dtoa_r+0x974>
 800d55c:	18ffffc4 	addi	r3,r3,-1
 800d560:	11824726 	beq	r2,r6,800de80 <_dtoa_r+0x1284>
 800d564:	1d000003 	ldbu	r20,0(r3)
 800d568:	102f883a 	mov	r23,r2
 800d56c:	10bfffc4 	addi	r2,r2,-1
 800d570:	a1003fcc 	andi	r4,r20,255
 800d574:	2100201c 	xori	r4,r4,128
 800d578:	213fe004 	addi	r4,r4,-128
 800d57c:	217ff726 	beq	r4,r5,800d55c <__alt_data_end+0xf800d55c>
 800d580:	a2000044 	addi	r8,r20,1
 800d584:	12000005 	stb	r8,0(r2)
 800d588:	003f4606 	br	800d2a4 <__alt_data_end+0xf800d2a4>
 800d58c:	d9000b17 	ldw	r4,44(sp)
 800d590:	2000c826 	beq	r4,zero,800d8b4 <_dtoa_r+0xcb8>
 800d594:	d9800317 	ldw	r6,12(sp)
 800d598:	00c00044 	movi	r3,1
 800d59c:	1980f90e 	bge	r3,r6,800d984 <_dtoa_r+0xd88>
 800d5a0:	d8800617 	ldw	r2,24(sp)
 800d5a4:	d8c00a17 	ldw	r3,40(sp)
 800d5a8:	157fffc4 	addi	r21,r2,-1
 800d5ac:	1d41f316 	blt	r3,r21,800dd7c <_dtoa_r+0x1180>
 800d5b0:	1d6bc83a 	sub	r21,r3,r21
 800d5b4:	d9c00617 	ldw	r7,24(sp)
 800d5b8:	3802aa16 	blt	r7,zero,800e064 <_dtoa_r+0x1468>
 800d5bc:	dd000817 	ldw	r20,32(sp)
 800d5c0:	d8800617 	ldw	r2,24(sp)
 800d5c4:	d8c00817 	ldw	r3,32(sp)
 800d5c8:	01400044 	movi	r5,1
 800d5cc:	e009883a 	mov	r4,fp
 800d5d0:	1887883a 	add	r3,r3,r2
 800d5d4:	d8c00815 	stw	r3,32(sp)
 800d5d8:	b0ad883a 	add	r22,r22,r2
 800d5dc:	80102840 	call	8010284 <__i2b>
 800d5e0:	1023883a 	mov	r17,r2
 800d5e4:	a0000826 	beq	r20,zero,800d608 <_dtoa_r+0xa0c>
 800d5e8:	0580070e 	bge	zero,r22,800d608 <_dtoa_r+0xa0c>
 800d5ec:	a005883a 	mov	r2,r20
 800d5f0:	b500b916 	blt	r22,r20,800d8d8 <_dtoa_r+0xcdc>
 800d5f4:	d9000817 	ldw	r4,32(sp)
 800d5f8:	a0a9c83a 	sub	r20,r20,r2
 800d5fc:	b0adc83a 	sub	r22,r22,r2
 800d600:	2089c83a 	sub	r4,r4,r2
 800d604:	d9000815 	stw	r4,32(sp)
 800d608:	d9800a17 	ldw	r6,40(sp)
 800d60c:	0181810e 	bge	zero,r6,800dc14 <_dtoa_r+0x1018>
 800d610:	d9c00b17 	ldw	r7,44(sp)
 800d614:	3800b326 	beq	r7,zero,800d8e4 <_dtoa_r+0xce8>
 800d618:	a800b226 	beq	r21,zero,800d8e4 <_dtoa_r+0xce8>
 800d61c:	880b883a 	mov	r5,r17
 800d620:	a80d883a 	mov	r6,r21
 800d624:	e009883a 	mov	r4,fp
 800d628:	80104b80 	call	80104b8 <__pow5mult>
 800d62c:	d9800917 	ldw	r6,36(sp)
 800d630:	100b883a 	mov	r5,r2
 800d634:	e009883a 	mov	r4,fp
 800d638:	1023883a 	mov	r17,r2
 800d63c:	80102c00 	call	80102c0 <__multiply>
 800d640:	1021883a 	mov	r16,r2
 800d644:	d8800a17 	ldw	r2,40(sp)
 800d648:	d9400917 	ldw	r5,36(sp)
 800d64c:	e009883a 	mov	r4,fp
 800d650:	1545c83a 	sub	r2,r2,r21
 800d654:	d8800a15 	stw	r2,40(sp)
 800d658:	800ff200 	call	800ff20 <_Bfree>
 800d65c:	d8c00a17 	ldw	r3,40(sp)
 800d660:	18009f1e 	bne	r3,zero,800d8e0 <_dtoa_r+0xce4>
 800d664:	05c00044 	movi	r23,1
 800d668:	e009883a 	mov	r4,fp
 800d66c:	b80b883a 	mov	r5,r23
 800d670:	80102840 	call	8010284 <__i2b>
 800d674:	d9000d17 	ldw	r4,52(sp)
 800d678:	102b883a 	mov	r21,r2
 800d67c:	2000ce26 	beq	r4,zero,800d9b8 <_dtoa_r+0xdbc>
 800d680:	200d883a 	mov	r6,r4
 800d684:	100b883a 	mov	r5,r2
 800d688:	e009883a 	mov	r4,fp
 800d68c:	80104b80 	call	80104b8 <__pow5mult>
 800d690:	d9800317 	ldw	r6,12(sp)
 800d694:	102b883a 	mov	r21,r2
 800d698:	b981810e 	bge	r23,r6,800dca0 <_dtoa_r+0x10a4>
 800d69c:	0027883a 	mov	r19,zero
 800d6a0:	a8800417 	ldw	r2,16(r21)
 800d6a4:	05c00804 	movi	r23,32
 800d6a8:	10800104 	addi	r2,r2,4
 800d6ac:	1085883a 	add	r2,r2,r2
 800d6b0:	1085883a 	add	r2,r2,r2
 800d6b4:	a885883a 	add	r2,r21,r2
 800d6b8:	11000017 	ldw	r4,0(r2)
 800d6bc:	801016c0 	call	801016c <__hi0bits>
 800d6c0:	b885c83a 	sub	r2,r23,r2
 800d6c4:	1585883a 	add	r2,r2,r22
 800d6c8:	108007cc 	andi	r2,r2,31
 800d6cc:	1000b326 	beq	r2,zero,800d99c <_dtoa_r+0xda0>
 800d6d0:	00c00804 	movi	r3,32
 800d6d4:	1887c83a 	sub	r3,r3,r2
 800d6d8:	01000104 	movi	r4,4
 800d6dc:	20c2cd0e 	bge	r4,r3,800e214 <_dtoa_r+0x1618>
 800d6e0:	00c00704 	movi	r3,28
 800d6e4:	1885c83a 	sub	r2,r3,r2
 800d6e8:	d8c00817 	ldw	r3,32(sp)
 800d6ec:	a0a9883a 	add	r20,r20,r2
 800d6f0:	b0ad883a 	add	r22,r22,r2
 800d6f4:	1887883a 	add	r3,r3,r2
 800d6f8:	d8c00815 	stw	r3,32(sp)
 800d6fc:	d9800817 	ldw	r6,32(sp)
 800d700:	0180040e 	bge	zero,r6,800d714 <_dtoa_r+0xb18>
 800d704:	800b883a 	mov	r5,r16
 800d708:	e009883a 	mov	r4,fp
 800d70c:	80105f80 	call	80105f8 <__lshift>
 800d710:	1021883a 	mov	r16,r2
 800d714:	0580050e 	bge	zero,r22,800d72c <_dtoa_r+0xb30>
 800d718:	a80b883a 	mov	r5,r21
 800d71c:	b00d883a 	mov	r6,r22
 800d720:	e009883a 	mov	r4,fp
 800d724:	80105f80 	call	80105f8 <__lshift>
 800d728:	102b883a 	mov	r21,r2
 800d72c:	d9c00e17 	ldw	r7,56(sp)
 800d730:	3801211e 	bne	r7,zero,800dbb8 <_dtoa_r+0xfbc>
 800d734:	d9800617 	ldw	r6,24(sp)
 800d738:	0181380e 	bge	zero,r6,800dc1c <_dtoa_r+0x1020>
 800d73c:	d8c00b17 	ldw	r3,44(sp)
 800d740:	1800ab1e 	bne	r3,zero,800d9f0 <_dtoa_r+0xdf4>
 800d744:	dc800717 	ldw	r18,28(sp)
 800d748:	dcc00617 	ldw	r19,24(sp)
 800d74c:	9029883a 	mov	r20,r18
 800d750:	00000206 	br	800d75c <_dtoa_r+0xb60>
 800d754:	800ff480 	call	800ff48 <__multadd>
 800d758:	1021883a 	mov	r16,r2
 800d75c:	a80b883a 	mov	r5,r21
 800d760:	8009883a 	mov	r4,r16
 800d764:	800c9fc0 	call	800c9fc <quorem>
 800d768:	10800c04 	addi	r2,r2,48
 800d76c:	90800005 	stb	r2,0(r18)
 800d770:	94800044 	addi	r18,r18,1
 800d774:	9507c83a 	sub	r3,r18,r20
 800d778:	000f883a 	mov	r7,zero
 800d77c:	01800284 	movi	r6,10
 800d780:	800b883a 	mov	r5,r16
 800d784:	e009883a 	mov	r4,fp
 800d788:	1cfff216 	blt	r3,r19,800d754 <__alt_data_end+0xf800d754>
 800d78c:	1011883a 	mov	r8,r2
 800d790:	d8800617 	ldw	r2,24(sp)
 800d794:	0082370e 	bge	zero,r2,800e074 <_dtoa_r+0x1478>
 800d798:	d9000717 	ldw	r4,28(sp)
 800d79c:	0025883a 	mov	r18,zero
 800d7a0:	20af883a 	add	r23,r4,r2
 800d7a4:	01800044 	movi	r6,1
 800d7a8:	800b883a 	mov	r5,r16
 800d7ac:	e009883a 	mov	r4,fp
 800d7b0:	da001715 	stw	r8,92(sp)
 800d7b4:	80105f80 	call	80105f8 <__lshift>
 800d7b8:	a80b883a 	mov	r5,r21
 800d7bc:	1009883a 	mov	r4,r2
 800d7c0:	d8800915 	stw	r2,36(sp)
 800d7c4:	80107400 	call	8010740 <__mcmp>
 800d7c8:	da001717 	ldw	r8,92(sp)
 800d7cc:	0081800e 	bge	zero,r2,800ddd0 <_dtoa_r+0x11d4>
 800d7d0:	b93fffc3 	ldbu	r4,-1(r23)
 800d7d4:	b8bfffc4 	addi	r2,r23,-1
 800d7d8:	1007883a 	mov	r3,r2
 800d7dc:	01800e44 	movi	r6,57
 800d7e0:	d9c00717 	ldw	r7,28(sp)
 800d7e4:	00000506 	br	800d7fc <_dtoa_r+0xc00>
 800d7e8:	18ffffc4 	addi	r3,r3,-1
 800d7ec:	11c12326 	beq	r2,r7,800dc7c <_dtoa_r+0x1080>
 800d7f0:	19000003 	ldbu	r4,0(r3)
 800d7f4:	102f883a 	mov	r23,r2
 800d7f8:	10bfffc4 	addi	r2,r2,-1
 800d7fc:	21403fcc 	andi	r5,r4,255
 800d800:	2940201c 	xori	r5,r5,128
 800d804:	297fe004 	addi	r5,r5,-128
 800d808:	29bff726 	beq	r5,r6,800d7e8 <__alt_data_end+0xf800d7e8>
 800d80c:	21000044 	addi	r4,r4,1
 800d810:	11000005 	stb	r4,0(r2)
 800d814:	a80b883a 	mov	r5,r21
 800d818:	e009883a 	mov	r4,fp
 800d81c:	800ff200 	call	800ff20 <_Bfree>
 800d820:	883ea026 	beq	r17,zero,800d2a4 <__alt_data_end+0xf800d2a4>
 800d824:	90000426 	beq	r18,zero,800d838 <_dtoa_r+0xc3c>
 800d828:	94400326 	beq	r18,r17,800d838 <_dtoa_r+0xc3c>
 800d82c:	900b883a 	mov	r5,r18
 800d830:	e009883a 	mov	r4,fp
 800d834:	800ff200 	call	800ff20 <_Bfree>
 800d838:	880b883a 	mov	r5,r17
 800d83c:	e009883a 	mov	r4,fp
 800d840:	800ff200 	call	800ff20 <_Bfree>
 800d844:	003e9706 	br	800d2a4 <__alt_data_end+0xf800d2a4>
 800d848:	01800044 	movi	r6,1
 800d84c:	d9800e15 	stw	r6,56(sp)
 800d850:	003d9606 	br	800ceac <__alt_data_end+0xf800ceac>
 800d854:	d8800817 	ldw	r2,32(sp)
 800d858:	d8c00517 	ldw	r3,20(sp)
 800d85c:	d8000d15 	stw	zero,52(sp)
 800d860:	10c5c83a 	sub	r2,r2,r3
 800d864:	00c9c83a 	sub	r4,zero,r3
 800d868:	d8800815 	stw	r2,32(sp)
 800d86c:	d9000a15 	stw	r4,40(sp)
 800d870:	003d9706 	br	800ced0 <__alt_data_end+0xf800ced0>
 800d874:	05adc83a 	sub	r22,zero,r22
 800d878:	dd800815 	stw	r22,32(sp)
 800d87c:	002d883a 	mov	r22,zero
 800d880:	003d8e06 	br	800cebc <__alt_data_end+0xf800cebc>
 800d884:	d9000517 	ldw	r4,20(sp)
 800d888:	801c0180 	call	801c018 <__floatsidf>
 800d88c:	100d883a 	mov	r6,r2
 800d890:	180f883a 	mov	r7,r3
 800d894:	a009883a 	mov	r4,r20
 800d898:	880b883a 	mov	r5,r17
 800d89c:	801ad2c0 	call	801ad2c <__eqdf2>
 800d8a0:	103d7126 	beq	r2,zero,800ce68 <__alt_data_end+0xf800ce68>
 800d8a4:	d9c00517 	ldw	r7,20(sp)
 800d8a8:	39ffffc4 	addi	r7,r7,-1
 800d8ac:	d9c00515 	stw	r7,20(sp)
 800d8b0:	003d6d06 	br	800ce68 <__alt_data_end+0xf800ce68>
 800d8b4:	dd400a17 	ldw	r21,40(sp)
 800d8b8:	dd000817 	ldw	r20,32(sp)
 800d8bc:	0023883a 	mov	r17,zero
 800d8c0:	003f4806 	br	800d5e4 <__alt_data_end+0xf800d5e4>
 800d8c4:	10e3c83a 	sub	r17,r2,r3
 800d8c8:	9448983a 	sll	r4,r18,r17
 800d8cc:	003d3206 	br	800cd98 <__alt_data_end+0xf800cd98>
 800d8d0:	d8000e15 	stw	zero,56(sp)
 800d8d4:	003d7506 	br	800ceac <__alt_data_end+0xf800ceac>
 800d8d8:	b005883a 	mov	r2,r22
 800d8dc:	003f4506 	br	800d5f4 <__alt_data_end+0xf800d5f4>
 800d8e0:	dc000915 	stw	r16,36(sp)
 800d8e4:	d9800a17 	ldw	r6,40(sp)
 800d8e8:	d9400917 	ldw	r5,36(sp)
 800d8ec:	e009883a 	mov	r4,fp
 800d8f0:	80104b80 	call	80104b8 <__pow5mult>
 800d8f4:	1021883a 	mov	r16,r2
 800d8f8:	003f5a06 	br	800d664 <__alt_data_end+0xf800d664>
 800d8fc:	01c00044 	movi	r7,1
 800d900:	d9c00b15 	stw	r7,44(sp)
 800d904:	d8802217 	ldw	r2,136(sp)
 800d908:	0081280e 	bge	zero,r2,800ddac <_dtoa_r+0x11b0>
 800d90c:	100d883a 	mov	r6,r2
 800d910:	1021883a 	mov	r16,r2
 800d914:	d8800c15 	stw	r2,48(sp)
 800d918:	d8800615 	stw	r2,24(sp)
 800d91c:	003d8806 	br	800cf40 <__alt_data_end+0xf800cf40>
 800d920:	d8800617 	ldw	r2,24(sp)
 800d924:	00be9b16 	blt	zero,r2,800d394 <__alt_data_end+0xf800d394>
 800d928:	10010f1e 	bne	r2,zero,800dd68 <_dtoa_r+0x116c>
 800d92c:	880b883a 	mov	r5,r17
 800d930:	000d883a 	mov	r6,zero
 800d934:	01d00534 	movhi	r7,16404
 800d938:	8009883a 	mov	r4,r16
 800d93c:	801af840 	call	801af84 <__muldf3>
 800d940:	900d883a 	mov	r6,r18
 800d944:	980f883a 	mov	r7,r19
 800d948:	1009883a 	mov	r4,r2
 800d94c:	180b883a 	mov	r5,r3
 800d950:	801adb40 	call	801adb4 <__gedf2>
 800d954:	002b883a 	mov	r21,zero
 800d958:	0023883a 	mov	r17,zero
 800d95c:	1000bf16 	blt	r2,zero,800dc5c <_dtoa_r+0x1060>
 800d960:	d9802217 	ldw	r6,136(sp)
 800d964:	ddc00717 	ldw	r23,28(sp)
 800d968:	018c303a 	nor	r6,zero,r6
 800d96c:	d9800515 	stw	r6,20(sp)
 800d970:	a80b883a 	mov	r5,r21
 800d974:	e009883a 	mov	r4,fp
 800d978:	800ff200 	call	800ff20 <_Bfree>
 800d97c:	883e4926 	beq	r17,zero,800d2a4 <__alt_data_end+0xf800d2a4>
 800d980:	003fad06 	br	800d838 <__alt_data_end+0xf800d838>
 800d984:	d9c01117 	ldw	r7,68(sp)
 800d988:	3801bc26 	beq	r7,zero,800e07c <_dtoa_r+0x1480>
 800d98c:	10810cc4 	addi	r2,r2,1075
 800d990:	dd400a17 	ldw	r21,40(sp)
 800d994:	dd000817 	ldw	r20,32(sp)
 800d998:	003f0a06 	br	800d5c4 <__alt_data_end+0xf800d5c4>
 800d99c:	00800704 	movi	r2,28
 800d9a0:	d9000817 	ldw	r4,32(sp)
 800d9a4:	a0a9883a 	add	r20,r20,r2
 800d9a8:	b0ad883a 	add	r22,r22,r2
 800d9ac:	2089883a 	add	r4,r4,r2
 800d9b0:	d9000815 	stw	r4,32(sp)
 800d9b4:	003f5106 	br	800d6fc <__alt_data_end+0xf800d6fc>
 800d9b8:	d8c00317 	ldw	r3,12(sp)
 800d9bc:	b8c1fc0e 	bge	r23,r3,800e1b0 <_dtoa_r+0x15b4>
 800d9c0:	0027883a 	mov	r19,zero
 800d9c4:	b805883a 	mov	r2,r23
 800d9c8:	003f3e06 	br	800d6c4 <__alt_data_end+0xf800d6c4>
 800d9cc:	880b883a 	mov	r5,r17
 800d9d0:	e009883a 	mov	r4,fp
 800d9d4:	000f883a 	mov	r7,zero
 800d9d8:	01800284 	movi	r6,10
 800d9dc:	800ff480 	call	800ff48 <__multadd>
 800d9e0:	d9000c17 	ldw	r4,48(sp)
 800d9e4:	1023883a 	mov	r17,r2
 800d9e8:	0102040e 	bge	zero,r4,800e1fc <_dtoa_r+0x1600>
 800d9ec:	d9000615 	stw	r4,24(sp)
 800d9f0:	0500050e 	bge	zero,r20,800da08 <_dtoa_r+0xe0c>
 800d9f4:	880b883a 	mov	r5,r17
 800d9f8:	a00d883a 	mov	r6,r20
 800d9fc:	e009883a 	mov	r4,fp
 800da00:	80105f80 	call	80105f8 <__lshift>
 800da04:	1023883a 	mov	r17,r2
 800da08:	9801241e 	bne	r19,zero,800de9c <_dtoa_r+0x12a0>
 800da0c:	8829883a 	mov	r20,r17
 800da10:	d9000617 	ldw	r4,24(sp)
 800da14:	dcc00717 	ldw	r19,28(sp)
 800da18:	9480004c 	andi	r18,r18,1
 800da1c:	20bfffc4 	addi	r2,r4,-1
 800da20:	9885883a 	add	r2,r19,r2
 800da24:	d8800415 	stw	r2,16(sp)
 800da28:	dc800615 	stw	r18,24(sp)
 800da2c:	a80b883a 	mov	r5,r21
 800da30:	8009883a 	mov	r4,r16
 800da34:	800c9fc0 	call	800c9fc <quorem>
 800da38:	880b883a 	mov	r5,r17
 800da3c:	8009883a 	mov	r4,r16
 800da40:	102f883a 	mov	r23,r2
 800da44:	80107400 	call	8010740 <__mcmp>
 800da48:	a80b883a 	mov	r5,r21
 800da4c:	a00d883a 	mov	r6,r20
 800da50:	e009883a 	mov	r4,fp
 800da54:	102d883a 	mov	r22,r2
 800da58:	80107a00 	call	80107a0 <__mdiff>
 800da5c:	1007883a 	mov	r3,r2
 800da60:	10800317 	ldw	r2,12(r2)
 800da64:	bc800c04 	addi	r18,r23,48
 800da68:	180b883a 	mov	r5,r3
 800da6c:	10004e1e 	bne	r2,zero,800dba8 <_dtoa_r+0xfac>
 800da70:	8009883a 	mov	r4,r16
 800da74:	d8c01615 	stw	r3,88(sp)
 800da78:	80107400 	call	8010740 <__mcmp>
 800da7c:	d8c01617 	ldw	r3,88(sp)
 800da80:	e009883a 	mov	r4,fp
 800da84:	d8801615 	stw	r2,88(sp)
 800da88:	180b883a 	mov	r5,r3
 800da8c:	800ff200 	call	800ff20 <_Bfree>
 800da90:	d8801617 	ldw	r2,88(sp)
 800da94:	1000041e 	bne	r2,zero,800daa8 <_dtoa_r+0xeac>
 800da98:	d9800317 	ldw	r6,12(sp)
 800da9c:	3000021e 	bne	r6,zero,800daa8 <_dtoa_r+0xeac>
 800daa0:	d8c00617 	ldw	r3,24(sp)
 800daa4:	18003726 	beq	r3,zero,800db84 <_dtoa_r+0xf88>
 800daa8:	b0002016 	blt	r22,zero,800db2c <_dtoa_r+0xf30>
 800daac:	b000041e 	bne	r22,zero,800dac0 <_dtoa_r+0xec4>
 800dab0:	d9000317 	ldw	r4,12(sp)
 800dab4:	2000021e 	bne	r4,zero,800dac0 <_dtoa_r+0xec4>
 800dab8:	d8c00617 	ldw	r3,24(sp)
 800dabc:	18001b26 	beq	r3,zero,800db2c <_dtoa_r+0xf30>
 800dac0:	00810716 	blt	zero,r2,800dee0 <_dtoa_r+0x12e4>
 800dac4:	d8c00417 	ldw	r3,16(sp)
 800dac8:	9d800044 	addi	r22,r19,1
 800dacc:	9c800005 	stb	r18,0(r19)
 800dad0:	b02f883a 	mov	r23,r22
 800dad4:	98c10626 	beq	r19,r3,800def0 <_dtoa_r+0x12f4>
 800dad8:	800b883a 	mov	r5,r16
 800dadc:	000f883a 	mov	r7,zero
 800dae0:	01800284 	movi	r6,10
 800dae4:	e009883a 	mov	r4,fp
 800dae8:	800ff480 	call	800ff48 <__multadd>
 800daec:	1021883a 	mov	r16,r2
 800daf0:	000f883a 	mov	r7,zero
 800daf4:	01800284 	movi	r6,10
 800daf8:	880b883a 	mov	r5,r17
 800dafc:	e009883a 	mov	r4,fp
 800db00:	8d002526 	beq	r17,r20,800db98 <_dtoa_r+0xf9c>
 800db04:	800ff480 	call	800ff48 <__multadd>
 800db08:	a00b883a 	mov	r5,r20
 800db0c:	000f883a 	mov	r7,zero
 800db10:	01800284 	movi	r6,10
 800db14:	e009883a 	mov	r4,fp
 800db18:	1023883a 	mov	r17,r2
 800db1c:	800ff480 	call	800ff48 <__multadd>
 800db20:	1029883a 	mov	r20,r2
 800db24:	b027883a 	mov	r19,r22
 800db28:	003fc006 	br	800da2c <__alt_data_end+0xf800da2c>
 800db2c:	9011883a 	mov	r8,r18
 800db30:	00800e0e 	bge	zero,r2,800db6c <_dtoa_r+0xf70>
 800db34:	800b883a 	mov	r5,r16
 800db38:	01800044 	movi	r6,1
 800db3c:	e009883a 	mov	r4,fp
 800db40:	da001715 	stw	r8,92(sp)
 800db44:	80105f80 	call	80105f8 <__lshift>
 800db48:	a80b883a 	mov	r5,r21
 800db4c:	1009883a 	mov	r4,r2
 800db50:	1021883a 	mov	r16,r2
 800db54:	80107400 	call	8010740 <__mcmp>
 800db58:	da001717 	ldw	r8,92(sp)
 800db5c:	0081960e 	bge	zero,r2,800e1b8 <_dtoa_r+0x15bc>
 800db60:	00800e44 	movi	r2,57
 800db64:	40817026 	beq	r8,r2,800e128 <_dtoa_r+0x152c>
 800db68:	ba000c44 	addi	r8,r23,49
 800db6c:	8825883a 	mov	r18,r17
 800db70:	9dc00044 	addi	r23,r19,1
 800db74:	9a000005 	stb	r8,0(r19)
 800db78:	a023883a 	mov	r17,r20
 800db7c:	dc000915 	stw	r16,36(sp)
 800db80:	003f2406 	br	800d814 <__alt_data_end+0xf800d814>
 800db84:	00800e44 	movi	r2,57
 800db88:	9011883a 	mov	r8,r18
 800db8c:	90816626 	beq	r18,r2,800e128 <_dtoa_r+0x152c>
 800db90:	05bff516 	blt	zero,r22,800db68 <__alt_data_end+0xf800db68>
 800db94:	003ff506 	br	800db6c <__alt_data_end+0xf800db6c>
 800db98:	800ff480 	call	800ff48 <__multadd>
 800db9c:	1023883a 	mov	r17,r2
 800dba0:	1029883a 	mov	r20,r2
 800dba4:	003fdf06 	br	800db24 <__alt_data_end+0xf800db24>
 800dba8:	e009883a 	mov	r4,fp
 800dbac:	800ff200 	call	800ff20 <_Bfree>
 800dbb0:	00800044 	movi	r2,1
 800dbb4:	003fbc06 	br	800daa8 <__alt_data_end+0xf800daa8>
 800dbb8:	a80b883a 	mov	r5,r21
 800dbbc:	8009883a 	mov	r4,r16
 800dbc0:	80107400 	call	8010740 <__mcmp>
 800dbc4:	103edb0e 	bge	r2,zero,800d734 <__alt_data_end+0xf800d734>
 800dbc8:	800b883a 	mov	r5,r16
 800dbcc:	000f883a 	mov	r7,zero
 800dbd0:	01800284 	movi	r6,10
 800dbd4:	e009883a 	mov	r4,fp
 800dbd8:	800ff480 	call	800ff48 <__multadd>
 800dbdc:	1021883a 	mov	r16,r2
 800dbe0:	d8800517 	ldw	r2,20(sp)
 800dbe4:	d8c00b17 	ldw	r3,44(sp)
 800dbe8:	10bfffc4 	addi	r2,r2,-1
 800dbec:	d8800515 	stw	r2,20(sp)
 800dbf0:	183f761e 	bne	r3,zero,800d9cc <__alt_data_end+0xf800d9cc>
 800dbf4:	d9000c17 	ldw	r4,48(sp)
 800dbf8:	0101730e 	bge	zero,r4,800e1c8 <_dtoa_r+0x15cc>
 800dbfc:	d9000615 	stw	r4,24(sp)
 800dc00:	003ed006 	br	800d744 <__alt_data_end+0xf800d744>
 800dc04:	00800084 	movi	r2,2
 800dc08:	3081861e 	bne	r6,r2,800e224 <_dtoa_r+0x1628>
 800dc0c:	d8000b15 	stw	zero,44(sp)
 800dc10:	003f3c06 	br	800d904 <__alt_data_end+0xf800d904>
 800dc14:	dc000917 	ldw	r16,36(sp)
 800dc18:	003e9206 	br	800d664 <__alt_data_end+0xf800d664>
 800dc1c:	d9c00317 	ldw	r7,12(sp)
 800dc20:	00800084 	movi	r2,2
 800dc24:	11fec50e 	bge	r2,r7,800d73c <__alt_data_end+0xf800d73c>
 800dc28:	d9000617 	ldw	r4,24(sp)
 800dc2c:	20013c1e 	bne	r4,zero,800e120 <_dtoa_r+0x1524>
 800dc30:	a80b883a 	mov	r5,r21
 800dc34:	000f883a 	mov	r7,zero
 800dc38:	01800144 	movi	r6,5
 800dc3c:	e009883a 	mov	r4,fp
 800dc40:	800ff480 	call	800ff48 <__multadd>
 800dc44:	100b883a 	mov	r5,r2
 800dc48:	8009883a 	mov	r4,r16
 800dc4c:	102b883a 	mov	r21,r2
 800dc50:	80107400 	call	8010740 <__mcmp>
 800dc54:	dc000915 	stw	r16,36(sp)
 800dc58:	00bf410e 	bge	zero,r2,800d960 <__alt_data_end+0xf800d960>
 800dc5c:	d9c00717 	ldw	r7,28(sp)
 800dc60:	00800c44 	movi	r2,49
 800dc64:	38800005 	stb	r2,0(r7)
 800dc68:	d8800517 	ldw	r2,20(sp)
 800dc6c:	3dc00044 	addi	r23,r7,1
 800dc70:	10800044 	addi	r2,r2,1
 800dc74:	d8800515 	stw	r2,20(sp)
 800dc78:	003f3d06 	br	800d970 <__alt_data_end+0xf800d970>
 800dc7c:	d9800517 	ldw	r6,20(sp)
 800dc80:	d9c00717 	ldw	r7,28(sp)
 800dc84:	00800c44 	movi	r2,49
 800dc88:	31800044 	addi	r6,r6,1
 800dc8c:	d9800515 	stw	r6,20(sp)
 800dc90:	38800005 	stb	r2,0(r7)
 800dc94:	003edf06 	br	800d814 <__alt_data_end+0xf800d814>
 800dc98:	d8000b15 	stw	zero,44(sp)
 800dc9c:	003c9f06 	br	800cf1c <__alt_data_end+0xf800cf1c>
 800dca0:	903e7e1e 	bne	r18,zero,800d69c <__alt_data_end+0xf800d69c>
 800dca4:	00800434 	movhi	r2,16
 800dca8:	10bfffc4 	addi	r2,r2,-1
 800dcac:	9884703a 	and	r2,r19,r2
 800dcb0:	1000ea1e 	bne	r2,zero,800e05c <_dtoa_r+0x1460>
 800dcb4:	9cdffc2c 	andhi	r19,r19,32752
 800dcb8:	9800e826 	beq	r19,zero,800e05c <_dtoa_r+0x1460>
 800dcbc:	d9c00817 	ldw	r7,32(sp)
 800dcc0:	b5800044 	addi	r22,r22,1
 800dcc4:	04c00044 	movi	r19,1
 800dcc8:	39c00044 	addi	r7,r7,1
 800dccc:	d9c00815 	stw	r7,32(sp)
 800dcd0:	d8800d17 	ldw	r2,52(sp)
 800dcd4:	103e721e 	bne	r2,zero,800d6a0 <__alt_data_end+0xf800d6a0>
 800dcd8:	00800044 	movi	r2,1
 800dcdc:	003e7906 	br	800d6c4 <__alt_data_end+0xf800d6c4>
 800dce0:	8009883a 	mov	r4,r16
 800dce4:	801c0180 	call	801c018 <__floatsidf>
 800dce8:	d9800f17 	ldw	r6,60(sp)
 800dcec:	d9c01017 	ldw	r7,64(sp)
 800dcf0:	1009883a 	mov	r4,r2
 800dcf4:	180b883a 	mov	r5,r3
 800dcf8:	801af840 	call	801af84 <__muldf3>
 800dcfc:	000d883a 	mov	r6,zero
 800dd00:	01d00734 	movhi	r7,16412
 800dd04:	1009883a 	mov	r4,r2
 800dd08:	180b883a 	mov	r5,r3
 800dd0c:	8019b980 	call	8019b98 <__adddf3>
 800dd10:	047f3034 	movhi	r17,64704
 800dd14:	1021883a 	mov	r16,r2
 800dd18:	1c63883a 	add	r17,r3,r17
 800dd1c:	d9000f17 	ldw	r4,60(sp)
 800dd20:	d9401017 	ldw	r5,64(sp)
 800dd24:	000d883a 	mov	r6,zero
 800dd28:	01d00534 	movhi	r7,16404
 800dd2c:	801b69c0 	call	801b69c <__subdf3>
 800dd30:	800d883a 	mov	r6,r16
 800dd34:	880f883a 	mov	r7,r17
 800dd38:	1009883a 	mov	r4,r2
 800dd3c:	180b883a 	mov	r5,r3
 800dd40:	102b883a 	mov	r21,r2
 800dd44:	1829883a 	mov	r20,r3
 800dd48:	801adb40 	call	801adb4 <__gedf2>
 800dd4c:	00806c16 	blt	zero,r2,800df00 <_dtoa_r+0x1304>
 800dd50:	89e0003c 	xorhi	r7,r17,32768
 800dd54:	800d883a 	mov	r6,r16
 800dd58:	a809883a 	mov	r4,r21
 800dd5c:	a00b883a 	mov	r5,r20
 800dd60:	801ae900 	call	801ae90 <__ledf2>
 800dd64:	103d7e0e 	bge	r2,zero,800d360 <__alt_data_end+0xf800d360>
 800dd68:	002b883a 	mov	r21,zero
 800dd6c:	0023883a 	mov	r17,zero
 800dd70:	003efb06 	br	800d960 <__alt_data_end+0xf800d960>
 800dd74:	d8800717 	ldw	r2,28(sp)
 800dd78:	003bd006 	br	800ccbc <__alt_data_end+0xf800ccbc>
 800dd7c:	d9000a17 	ldw	r4,40(sp)
 800dd80:	d9800d17 	ldw	r6,52(sp)
 800dd84:	dd400a15 	stw	r21,40(sp)
 800dd88:	a905c83a 	sub	r2,r21,r4
 800dd8c:	308d883a 	add	r6,r6,r2
 800dd90:	d9800d15 	stw	r6,52(sp)
 800dd94:	002b883a 	mov	r21,zero
 800dd98:	003e0606 	br	800d5b4 <__alt_data_end+0xf800d5b4>
 800dd9c:	9023883a 	mov	r17,r18
 800dda0:	9829883a 	mov	r20,r19
 800dda4:	04000084 	movi	r16,2
 800dda8:	003c9206 	br	800cff4 <__alt_data_end+0xf800cff4>
 800ddac:	04000044 	movi	r16,1
 800ddb0:	dc000c15 	stw	r16,48(sp)
 800ddb4:	dc000615 	stw	r16,24(sp)
 800ddb8:	dc002215 	stw	r16,136(sp)
 800ddbc:	e0001115 	stw	zero,68(fp)
 800ddc0:	000b883a 	mov	r5,zero
 800ddc4:	003c6906 	br	800cf6c <__alt_data_end+0xf800cf6c>
 800ddc8:	3021883a 	mov	r16,r6
 800ddcc:	003ffb06 	br	800ddbc <__alt_data_end+0xf800ddbc>
 800ddd0:	1000021e 	bne	r2,zero,800dddc <_dtoa_r+0x11e0>
 800ddd4:	4200004c 	andi	r8,r8,1
 800ddd8:	403e7d1e 	bne	r8,zero,800d7d0 <__alt_data_end+0xf800d7d0>
 800dddc:	01000c04 	movi	r4,48
 800dde0:	00000106 	br	800dde8 <_dtoa_r+0x11ec>
 800dde4:	102f883a 	mov	r23,r2
 800dde8:	b8bfffc4 	addi	r2,r23,-1
 800ddec:	10c00007 	ldb	r3,0(r2)
 800ddf0:	193ffc26 	beq	r3,r4,800dde4 <__alt_data_end+0xf800dde4>
 800ddf4:	003e8706 	br	800d814 <__alt_data_end+0xf800d814>
 800ddf8:	d8800517 	ldw	r2,20(sp)
 800ddfc:	00a3c83a 	sub	r17,zero,r2
 800de00:	8800a426 	beq	r17,zero,800e094 <_dtoa_r+0x1498>
 800de04:	888003cc 	andi	r2,r17,15
 800de08:	100490fa 	slli	r2,r2,3
 800de0c:	00c200b4 	movhi	r3,2050
 800de10:	18c02d04 	addi	r3,r3,180
 800de14:	1885883a 	add	r2,r3,r2
 800de18:	11800017 	ldw	r6,0(r2)
 800de1c:	11c00117 	ldw	r7,4(r2)
 800de20:	9009883a 	mov	r4,r18
 800de24:	980b883a 	mov	r5,r19
 800de28:	8823d13a 	srai	r17,r17,4
 800de2c:	801af840 	call	801af84 <__muldf3>
 800de30:	d8800f15 	stw	r2,60(sp)
 800de34:	d8c01015 	stw	r3,64(sp)
 800de38:	8800e826 	beq	r17,zero,800e1dc <_dtoa_r+0x15e0>
 800de3c:	050200b4 	movhi	r20,2050
 800de40:	a5002304 	addi	r20,r20,140
 800de44:	04000084 	movi	r16,2
 800de48:	8980004c 	andi	r6,r17,1
 800de4c:	1009883a 	mov	r4,r2
 800de50:	8823d07a 	srai	r17,r17,1
 800de54:	180b883a 	mov	r5,r3
 800de58:	30000426 	beq	r6,zero,800de6c <_dtoa_r+0x1270>
 800de5c:	a1800017 	ldw	r6,0(r20)
 800de60:	a1c00117 	ldw	r7,4(r20)
 800de64:	84000044 	addi	r16,r16,1
 800de68:	801af840 	call	801af84 <__muldf3>
 800de6c:	a5000204 	addi	r20,r20,8
 800de70:	883ff51e 	bne	r17,zero,800de48 <__alt_data_end+0xf800de48>
 800de74:	d8800f15 	stw	r2,60(sp)
 800de78:	d8c01015 	stw	r3,64(sp)
 800de7c:	003c7606 	br	800d058 <__alt_data_end+0xf800d058>
 800de80:	00c00c04 	movi	r3,48
 800de84:	10c00005 	stb	r3,0(r2)
 800de88:	d8c00517 	ldw	r3,20(sp)
 800de8c:	bd3fffc3 	ldbu	r20,-1(r23)
 800de90:	18c00044 	addi	r3,r3,1
 800de94:	d8c00515 	stw	r3,20(sp)
 800de98:	003db906 	br	800d580 <__alt_data_end+0xf800d580>
 800de9c:	89400117 	ldw	r5,4(r17)
 800dea0:	e009883a 	mov	r4,fp
 800dea4:	800fe780 	call	800fe78 <_Balloc>
 800dea8:	89800417 	ldw	r6,16(r17)
 800deac:	89400304 	addi	r5,r17,12
 800deb0:	11000304 	addi	r4,r2,12
 800deb4:	31800084 	addi	r6,r6,2
 800deb8:	318d883a 	add	r6,r6,r6
 800debc:	318d883a 	add	r6,r6,r6
 800dec0:	1027883a 	mov	r19,r2
 800dec4:	800fbd40 	call	800fbd4 <memcpy>
 800dec8:	01800044 	movi	r6,1
 800decc:	980b883a 	mov	r5,r19
 800ded0:	e009883a 	mov	r4,fp
 800ded4:	80105f80 	call	80105f8 <__lshift>
 800ded8:	1029883a 	mov	r20,r2
 800dedc:	003ecc06 	br	800da10 <__alt_data_end+0xf800da10>
 800dee0:	00800e44 	movi	r2,57
 800dee4:	90809026 	beq	r18,r2,800e128 <_dtoa_r+0x152c>
 800dee8:	92000044 	addi	r8,r18,1
 800deec:	003f1f06 	br	800db6c <__alt_data_end+0xf800db6c>
 800def0:	9011883a 	mov	r8,r18
 800def4:	8825883a 	mov	r18,r17
 800def8:	a023883a 	mov	r17,r20
 800defc:	003e2906 	br	800d7a4 <__alt_data_end+0xf800d7a4>
 800df00:	002b883a 	mov	r21,zero
 800df04:	0023883a 	mov	r17,zero
 800df08:	003f5406 	br	800dc5c <__alt_data_end+0xf800dc5c>
 800df0c:	61bfffc4 	addi	r6,r12,-1
 800df10:	300490fa 	slli	r2,r6,3
 800df14:	00c200b4 	movhi	r3,2050
 800df18:	18c02d04 	addi	r3,r3,180
 800df1c:	1885883a 	add	r2,r3,r2
 800df20:	11000017 	ldw	r4,0(r2)
 800df24:	11400117 	ldw	r5,4(r2)
 800df28:	d8800717 	ldw	r2,28(sp)
 800df2c:	880f883a 	mov	r7,r17
 800df30:	d9801215 	stw	r6,72(sp)
 800df34:	800d883a 	mov	r6,r16
 800df38:	db001615 	stw	r12,88(sp)
 800df3c:	15c00044 	addi	r23,r2,1
 800df40:	801af840 	call	801af84 <__muldf3>
 800df44:	d9401017 	ldw	r5,64(sp)
 800df48:	d9000f17 	ldw	r4,60(sp)
 800df4c:	d8c01515 	stw	r3,84(sp)
 800df50:	d8801415 	stw	r2,80(sp)
 800df54:	801bf980 	call	801bf98 <__fixdfsi>
 800df58:	1009883a 	mov	r4,r2
 800df5c:	1021883a 	mov	r16,r2
 800df60:	801c0180 	call	801c018 <__floatsidf>
 800df64:	d9000f17 	ldw	r4,60(sp)
 800df68:	d9401017 	ldw	r5,64(sp)
 800df6c:	100d883a 	mov	r6,r2
 800df70:	180f883a 	mov	r7,r3
 800df74:	801b69c0 	call	801b69c <__subdf3>
 800df78:	1829883a 	mov	r20,r3
 800df7c:	d8c00717 	ldw	r3,28(sp)
 800df80:	84000c04 	addi	r16,r16,48
 800df84:	1023883a 	mov	r17,r2
 800df88:	1c000005 	stb	r16,0(r3)
 800df8c:	db001617 	ldw	r12,88(sp)
 800df90:	00800044 	movi	r2,1
 800df94:	60802226 	beq	r12,r2,800e020 <_dtoa_r+0x1424>
 800df98:	d9c00717 	ldw	r7,28(sp)
 800df9c:	8805883a 	mov	r2,r17
 800dfa0:	b82b883a 	mov	r21,r23
 800dfa4:	3b19883a 	add	r12,r7,r12
 800dfa8:	6023883a 	mov	r17,r12
 800dfac:	a007883a 	mov	r3,r20
 800dfb0:	dc800f15 	stw	r18,60(sp)
 800dfb4:	000d883a 	mov	r6,zero
 800dfb8:	01d00934 	movhi	r7,16420
 800dfbc:	1009883a 	mov	r4,r2
 800dfc0:	180b883a 	mov	r5,r3
 800dfc4:	801af840 	call	801af84 <__muldf3>
 800dfc8:	180b883a 	mov	r5,r3
 800dfcc:	1009883a 	mov	r4,r2
 800dfd0:	1829883a 	mov	r20,r3
 800dfd4:	1025883a 	mov	r18,r2
 800dfd8:	801bf980 	call	801bf98 <__fixdfsi>
 800dfdc:	1009883a 	mov	r4,r2
 800dfe0:	1021883a 	mov	r16,r2
 800dfe4:	801c0180 	call	801c018 <__floatsidf>
 800dfe8:	100d883a 	mov	r6,r2
 800dfec:	180f883a 	mov	r7,r3
 800dff0:	9009883a 	mov	r4,r18
 800dff4:	a00b883a 	mov	r5,r20
 800dff8:	84000c04 	addi	r16,r16,48
 800dffc:	801b69c0 	call	801b69c <__subdf3>
 800e000:	ad400044 	addi	r21,r21,1
 800e004:	ac3fffc5 	stb	r16,-1(r21)
 800e008:	ac7fea1e 	bne	r21,r17,800dfb4 <__alt_data_end+0xf800dfb4>
 800e00c:	1023883a 	mov	r17,r2
 800e010:	d8801217 	ldw	r2,72(sp)
 800e014:	dc800f17 	ldw	r18,60(sp)
 800e018:	1829883a 	mov	r20,r3
 800e01c:	b8af883a 	add	r23,r23,r2
 800e020:	d9001417 	ldw	r4,80(sp)
 800e024:	d9401517 	ldw	r5,84(sp)
 800e028:	000d883a 	mov	r6,zero
 800e02c:	01cff834 	movhi	r7,16352
 800e030:	8019b980 	call	8019b98 <__adddf3>
 800e034:	880d883a 	mov	r6,r17
 800e038:	a00f883a 	mov	r7,r20
 800e03c:	1009883a 	mov	r4,r2
 800e040:	180b883a 	mov	r5,r3
 800e044:	801ae900 	call	801ae90 <__ledf2>
 800e048:	10003e0e 	bge	r2,zero,800e144 <_dtoa_r+0x1548>
 800e04c:	d9001317 	ldw	r4,76(sp)
 800e050:	bd3fffc3 	ldbu	r20,-1(r23)
 800e054:	d9000515 	stw	r4,20(sp)
 800e058:	003d3b06 	br	800d548 <__alt_data_end+0xf800d548>
 800e05c:	0027883a 	mov	r19,zero
 800e060:	003f1b06 	br	800dcd0 <__alt_data_end+0xf800dcd0>
 800e064:	d8800817 	ldw	r2,32(sp)
 800e068:	11e9c83a 	sub	r20,r2,r7
 800e06c:	0005883a 	mov	r2,zero
 800e070:	003d5406 	br	800d5c4 <__alt_data_end+0xf800d5c4>
 800e074:	00800044 	movi	r2,1
 800e078:	003dc706 	br	800d798 <__alt_data_end+0xf800d798>
 800e07c:	d8c00217 	ldw	r3,8(sp)
 800e080:	00800d84 	movi	r2,54
 800e084:	dd400a17 	ldw	r21,40(sp)
 800e088:	10c5c83a 	sub	r2,r2,r3
 800e08c:	dd000817 	ldw	r20,32(sp)
 800e090:	003d4c06 	br	800d5c4 <__alt_data_end+0xf800d5c4>
 800e094:	dc800f15 	stw	r18,60(sp)
 800e098:	dcc01015 	stw	r19,64(sp)
 800e09c:	04000084 	movi	r16,2
 800e0a0:	003bed06 	br	800d058 <__alt_data_end+0xf800d058>
 800e0a4:	d9000617 	ldw	r4,24(sp)
 800e0a8:	203f0d26 	beq	r4,zero,800dce0 <__alt_data_end+0xf800dce0>
 800e0ac:	d9800c17 	ldw	r6,48(sp)
 800e0b0:	01bcab0e 	bge	zero,r6,800d360 <__alt_data_end+0xf800d360>
 800e0b4:	d9401017 	ldw	r5,64(sp)
 800e0b8:	d9000f17 	ldw	r4,60(sp)
 800e0bc:	000d883a 	mov	r6,zero
 800e0c0:	01d00934 	movhi	r7,16420
 800e0c4:	801af840 	call	801af84 <__muldf3>
 800e0c8:	81000044 	addi	r4,r16,1
 800e0cc:	d8800f15 	stw	r2,60(sp)
 800e0d0:	d8c01015 	stw	r3,64(sp)
 800e0d4:	801c0180 	call	801c018 <__floatsidf>
 800e0d8:	d9800f17 	ldw	r6,60(sp)
 800e0dc:	d9c01017 	ldw	r7,64(sp)
 800e0e0:	1009883a 	mov	r4,r2
 800e0e4:	180b883a 	mov	r5,r3
 800e0e8:	801af840 	call	801af84 <__muldf3>
 800e0ec:	01d00734 	movhi	r7,16412
 800e0f0:	000d883a 	mov	r6,zero
 800e0f4:	1009883a 	mov	r4,r2
 800e0f8:	180b883a 	mov	r5,r3
 800e0fc:	8019b980 	call	8019b98 <__adddf3>
 800e100:	d9c00517 	ldw	r7,20(sp)
 800e104:	047f3034 	movhi	r17,64704
 800e108:	1021883a 	mov	r16,r2
 800e10c:	39ffffc4 	addi	r7,r7,-1
 800e110:	d9c01315 	stw	r7,76(sp)
 800e114:	1c63883a 	add	r17,r3,r17
 800e118:	db000c17 	ldw	r12,48(sp)
 800e11c:	003bea06 	br	800d0c8 <__alt_data_end+0xf800d0c8>
 800e120:	dc000915 	stw	r16,36(sp)
 800e124:	003e0e06 	br	800d960 <__alt_data_end+0xf800d960>
 800e128:	01000e44 	movi	r4,57
 800e12c:	8825883a 	mov	r18,r17
 800e130:	9dc00044 	addi	r23,r19,1
 800e134:	99000005 	stb	r4,0(r19)
 800e138:	a023883a 	mov	r17,r20
 800e13c:	dc000915 	stw	r16,36(sp)
 800e140:	003da406 	br	800d7d4 <__alt_data_end+0xf800d7d4>
 800e144:	d9801417 	ldw	r6,80(sp)
 800e148:	d9c01517 	ldw	r7,84(sp)
 800e14c:	0009883a 	mov	r4,zero
 800e150:	014ff834 	movhi	r5,16352
 800e154:	801b69c0 	call	801b69c <__subdf3>
 800e158:	880d883a 	mov	r6,r17
 800e15c:	a00f883a 	mov	r7,r20
 800e160:	1009883a 	mov	r4,r2
 800e164:	180b883a 	mov	r5,r3
 800e168:	801adb40 	call	801adb4 <__gedf2>
 800e16c:	00bc7c0e 	bge	zero,r2,800d360 <__alt_data_end+0xf800d360>
 800e170:	01000c04 	movi	r4,48
 800e174:	00000106 	br	800e17c <_dtoa_r+0x1580>
 800e178:	102f883a 	mov	r23,r2
 800e17c:	b8bfffc4 	addi	r2,r23,-1
 800e180:	10c00007 	ldb	r3,0(r2)
 800e184:	193ffc26 	beq	r3,r4,800e178 <__alt_data_end+0xf800e178>
 800e188:	d9801317 	ldw	r6,76(sp)
 800e18c:	d9800515 	stw	r6,20(sp)
 800e190:	003c4406 	br	800d2a4 <__alt_data_end+0xf800d2a4>
 800e194:	d9801317 	ldw	r6,76(sp)
 800e198:	d9800515 	stw	r6,20(sp)
 800e19c:	003cea06 	br	800d548 <__alt_data_end+0xf800d548>
 800e1a0:	dd800f17 	ldw	r22,60(sp)
 800e1a4:	dcc01017 	ldw	r19,64(sp)
 800e1a8:	dc801217 	ldw	r18,72(sp)
 800e1ac:	003c6c06 	br	800d360 <__alt_data_end+0xf800d360>
 800e1b0:	903e031e 	bne	r18,zero,800d9c0 <__alt_data_end+0xf800d9c0>
 800e1b4:	003ebb06 	br	800dca4 <__alt_data_end+0xf800dca4>
 800e1b8:	103e6c1e 	bne	r2,zero,800db6c <__alt_data_end+0xf800db6c>
 800e1bc:	4080004c 	andi	r2,r8,1
 800e1c0:	103e6a26 	beq	r2,zero,800db6c <__alt_data_end+0xf800db6c>
 800e1c4:	003e6606 	br	800db60 <__alt_data_end+0xf800db60>
 800e1c8:	d8c00317 	ldw	r3,12(sp)
 800e1cc:	00800084 	movi	r2,2
 800e1d0:	10c02916 	blt	r2,r3,800e278 <_dtoa_r+0x167c>
 800e1d4:	d9000c17 	ldw	r4,48(sp)
 800e1d8:	003e8806 	br	800dbfc <__alt_data_end+0xf800dbfc>
 800e1dc:	04000084 	movi	r16,2
 800e1e0:	003b9d06 	br	800d058 <__alt_data_end+0xf800d058>
 800e1e4:	d9001317 	ldw	r4,76(sp)
 800e1e8:	d9000515 	stw	r4,20(sp)
 800e1ec:	003cd606 	br	800d548 <__alt_data_end+0xf800d548>
 800e1f0:	d8801317 	ldw	r2,76(sp)
 800e1f4:	d8800515 	stw	r2,20(sp)
 800e1f8:	003c2a06 	br	800d2a4 <__alt_data_end+0xf800d2a4>
 800e1fc:	d9800317 	ldw	r6,12(sp)
 800e200:	00800084 	movi	r2,2
 800e204:	11801516 	blt	r2,r6,800e25c <_dtoa_r+0x1660>
 800e208:	d9c00c17 	ldw	r7,48(sp)
 800e20c:	d9c00615 	stw	r7,24(sp)
 800e210:	003df706 	br	800d9f0 <__alt_data_end+0xf800d9f0>
 800e214:	193d3926 	beq	r3,r4,800d6fc <__alt_data_end+0xf800d6fc>
 800e218:	00c00f04 	movi	r3,60
 800e21c:	1885c83a 	sub	r2,r3,r2
 800e220:	003ddf06 	br	800d9a0 <__alt_data_end+0xf800d9a0>
 800e224:	e009883a 	mov	r4,fp
 800e228:	e0001115 	stw	zero,68(fp)
 800e22c:	000b883a 	mov	r5,zero
 800e230:	800fe780 	call	800fe78 <_Balloc>
 800e234:	d8800715 	stw	r2,28(sp)
 800e238:	d8c00717 	ldw	r3,28(sp)
 800e23c:	00bfffc4 	movi	r2,-1
 800e240:	01000044 	movi	r4,1
 800e244:	d8800c15 	stw	r2,48(sp)
 800e248:	e0c01015 	stw	r3,64(fp)
 800e24c:	d9000b15 	stw	r4,44(sp)
 800e250:	d8800615 	stw	r2,24(sp)
 800e254:	d8002215 	stw	zero,136(sp)
 800e258:	003c4106 	br	800d360 <__alt_data_end+0xf800d360>
 800e25c:	d8c00c17 	ldw	r3,48(sp)
 800e260:	d8c00615 	stw	r3,24(sp)
 800e264:	003e7006 	br	800dc28 <__alt_data_end+0xf800dc28>
 800e268:	04400044 	movi	r17,1
 800e26c:	003b2006 	br	800cef0 <__alt_data_end+0xf800cef0>
 800e270:	000b883a 	mov	r5,zero
 800e274:	003b3d06 	br	800cf6c <__alt_data_end+0xf800cf6c>
 800e278:	d8800c17 	ldw	r2,48(sp)
 800e27c:	d8800615 	stw	r2,24(sp)
 800e280:	003e6906 	br	800dc28 <__alt_data_end+0xf800dc28>

0800e284 <__sflush_r>:
 800e284:	2880030b 	ldhu	r2,12(r5)
 800e288:	defffb04 	addi	sp,sp,-20
 800e28c:	dcc00315 	stw	r19,12(sp)
 800e290:	dc400115 	stw	r17,4(sp)
 800e294:	dfc00415 	stw	ra,16(sp)
 800e298:	dc800215 	stw	r18,8(sp)
 800e29c:	dc000015 	stw	r16,0(sp)
 800e2a0:	10c0020c 	andi	r3,r2,8
 800e2a4:	2823883a 	mov	r17,r5
 800e2a8:	2027883a 	mov	r19,r4
 800e2ac:	1800311e 	bne	r3,zero,800e374 <__sflush_r+0xf0>
 800e2b0:	28c00117 	ldw	r3,4(r5)
 800e2b4:	10820014 	ori	r2,r2,2048
 800e2b8:	2880030d 	sth	r2,12(r5)
 800e2bc:	00c04b0e 	bge	zero,r3,800e3ec <__sflush_r+0x168>
 800e2c0:	8a000a17 	ldw	r8,40(r17)
 800e2c4:	40002326 	beq	r8,zero,800e354 <__sflush_r+0xd0>
 800e2c8:	9c000017 	ldw	r16,0(r19)
 800e2cc:	10c4000c 	andi	r3,r2,4096
 800e2d0:	98000015 	stw	zero,0(r19)
 800e2d4:	18004826 	beq	r3,zero,800e3f8 <__sflush_r+0x174>
 800e2d8:	89801417 	ldw	r6,80(r17)
 800e2dc:	10c0010c 	andi	r3,r2,4
 800e2e0:	18000626 	beq	r3,zero,800e2fc <__sflush_r+0x78>
 800e2e4:	88c00117 	ldw	r3,4(r17)
 800e2e8:	88800c17 	ldw	r2,48(r17)
 800e2ec:	30cdc83a 	sub	r6,r6,r3
 800e2f0:	10000226 	beq	r2,zero,800e2fc <__sflush_r+0x78>
 800e2f4:	88800f17 	ldw	r2,60(r17)
 800e2f8:	308dc83a 	sub	r6,r6,r2
 800e2fc:	89400717 	ldw	r5,28(r17)
 800e300:	000f883a 	mov	r7,zero
 800e304:	9809883a 	mov	r4,r19
 800e308:	403ee83a 	callr	r8
 800e30c:	00ffffc4 	movi	r3,-1
 800e310:	10c04426 	beq	r2,r3,800e424 <__sflush_r+0x1a0>
 800e314:	88c0030b 	ldhu	r3,12(r17)
 800e318:	89000417 	ldw	r4,16(r17)
 800e31c:	88000115 	stw	zero,4(r17)
 800e320:	197dffcc 	andi	r5,r3,63487
 800e324:	8940030d 	sth	r5,12(r17)
 800e328:	89000015 	stw	r4,0(r17)
 800e32c:	18c4000c 	andi	r3,r3,4096
 800e330:	18002c1e 	bne	r3,zero,800e3e4 <__sflush_r+0x160>
 800e334:	89400c17 	ldw	r5,48(r17)
 800e338:	9c000015 	stw	r16,0(r19)
 800e33c:	28000526 	beq	r5,zero,800e354 <__sflush_r+0xd0>
 800e340:	88801004 	addi	r2,r17,64
 800e344:	28800226 	beq	r5,r2,800e350 <__sflush_r+0xcc>
 800e348:	9809883a 	mov	r4,r19
 800e34c:	800ec500 	call	800ec50 <_free_r>
 800e350:	88000c15 	stw	zero,48(r17)
 800e354:	0005883a 	mov	r2,zero
 800e358:	dfc00417 	ldw	ra,16(sp)
 800e35c:	dcc00317 	ldw	r19,12(sp)
 800e360:	dc800217 	ldw	r18,8(sp)
 800e364:	dc400117 	ldw	r17,4(sp)
 800e368:	dc000017 	ldw	r16,0(sp)
 800e36c:	dec00504 	addi	sp,sp,20
 800e370:	f800283a 	ret
 800e374:	2c800417 	ldw	r18,16(r5)
 800e378:	903ff626 	beq	r18,zero,800e354 <__alt_data_end+0xf800e354>
 800e37c:	2c000017 	ldw	r16,0(r5)
 800e380:	108000cc 	andi	r2,r2,3
 800e384:	2c800015 	stw	r18,0(r5)
 800e388:	84a1c83a 	sub	r16,r16,r18
 800e38c:	1000131e 	bne	r2,zero,800e3dc <__sflush_r+0x158>
 800e390:	28800517 	ldw	r2,20(r5)
 800e394:	88800215 	stw	r2,8(r17)
 800e398:	04000316 	blt	zero,r16,800e3a8 <__sflush_r+0x124>
 800e39c:	003fed06 	br	800e354 <__alt_data_end+0xf800e354>
 800e3a0:	90a5883a 	add	r18,r18,r2
 800e3a4:	043feb0e 	bge	zero,r16,800e354 <__alt_data_end+0xf800e354>
 800e3a8:	88800917 	ldw	r2,36(r17)
 800e3ac:	89400717 	ldw	r5,28(r17)
 800e3b0:	800f883a 	mov	r7,r16
 800e3b4:	900d883a 	mov	r6,r18
 800e3b8:	9809883a 	mov	r4,r19
 800e3bc:	103ee83a 	callr	r2
 800e3c0:	80a1c83a 	sub	r16,r16,r2
 800e3c4:	00bff616 	blt	zero,r2,800e3a0 <__alt_data_end+0xf800e3a0>
 800e3c8:	88c0030b 	ldhu	r3,12(r17)
 800e3cc:	00bfffc4 	movi	r2,-1
 800e3d0:	18c01014 	ori	r3,r3,64
 800e3d4:	88c0030d 	sth	r3,12(r17)
 800e3d8:	003fdf06 	br	800e358 <__alt_data_end+0xf800e358>
 800e3dc:	0005883a 	mov	r2,zero
 800e3e0:	003fec06 	br	800e394 <__alt_data_end+0xf800e394>
 800e3e4:	88801415 	stw	r2,80(r17)
 800e3e8:	003fd206 	br	800e334 <__alt_data_end+0xf800e334>
 800e3ec:	28c00f17 	ldw	r3,60(r5)
 800e3f0:	00ffb316 	blt	zero,r3,800e2c0 <__alt_data_end+0xf800e2c0>
 800e3f4:	003fd706 	br	800e354 <__alt_data_end+0xf800e354>
 800e3f8:	89400717 	ldw	r5,28(r17)
 800e3fc:	000d883a 	mov	r6,zero
 800e400:	01c00044 	movi	r7,1
 800e404:	9809883a 	mov	r4,r19
 800e408:	403ee83a 	callr	r8
 800e40c:	100d883a 	mov	r6,r2
 800e410:	00bfffc4 	movi	r2,-1
 800e414:	30801426 	beq	r6,r2,800e468 <__sflush_r+0x1e4>
 800e418:	8880030b 	ldhu	r2,12(r17)
 800e41c:	8a000a17 	ldw	r8,40(r17)
 800e420:	003fae06 	br	800e2dc <__alt_data_end+0xf800e2dc>
 800e424:	98c00017 	ldw	r3,0(r19)
 800e428:	183fba26 	beq	r3,zero,800e314 <__alt_data_end+0xf800e314>
 800e42c:	01000744 	movi	r4,29
 800e430:	19000626 	beq	r3,r4,800e44c <__sflush_r+0x1c8>
 800e434:	01000584 	movi	r4,22
 800e438:	19000426 	beq	r3,r4,800e44c <__sflush_r+0x1c8>
 800e43c:	88c0030b 	ldhu	r3,12(r17)
 800e440:	18c01014 	ori	r3,r3,64
 800e444:	88c0030d 	sth	r3,12(r17)
 800e448:	003fc306 	br	800e358 <__alt_data_end+0xf800e358>
 800e44c:	8880030b 	ldhu	r2,12(r17)
 800e450:	88c00417 	ldw	r3,16(r17)
 800e454:	88000115 	stw	zero,4(r17)
 800e458:	10bdffcc 	andi	r2,r2,63487
 800e45c:	8880030d 	sth	r2,12(r17)
 800e460:	88c00015 	stw	r3,0(r17)
 800e464:	003fb306 	br	800e334 <__alt_data_end+0xf800e334>
 800e468:	98800017 	ldw	r2,0(r19)
 800e46c:	103fea26 	beq	r2,zero,800e418 <__alt_data_end+0xf800e418>
 800e470:	00c00744 	movi	r3,29
 800e474:	10c00226 	beq	r2,r3,800e480 <__sflush_r+0x1fc>
 800e478:	00c00584 	movi	r3,22
 800e47c:	10c0031e 	bne	r2,r3,800e48c <__sflush_r+0x208>
 800e480:	9c000015 	stw	r16,0(r19)
 800e484:	0005883a 	mov	r2,zero
 800e488:	003fb306 	br	800e358 <__alt_data_end+0xf800e358>
 800e48c:	88c0030b 	ldhu	r3,12(r17)
 800e490:	3005883a 	mov	r2,r6
 800e494:	18c01014 	ori	r3,r3,64
 800e498:	88c0030d 	sth	r3,12(r17)
 800e49c:	003fae06 	br	800e358 <__alt_data_end+0xf800e358>

0800e4a0 <_fflush_r>:
 800e4a0:	defffd04 	addi	sp,sp,-12
 800e4a4:	dc000115 	stw	r16,4(sp)
 800e4a8:	dfc00215 	stw	ra,8(sp)
 800e4ac:	2021883a 	mov	r16,r4
 800e4b0:	20000226 	beq	r4,zero,800e4bc <_fflush_r+0x1c>
 800e4b4:	20800e17 	ldw	r2,56(r4)
 800e4b8:	10000c26 	beq	r2,zero,800e4ec <_fflush_r+0x4c>
 800e4bc:	2880030f 	ldh	r2,12(r5)
 800e4c0:	1000051e 	bne	r2,zero,800e4d8 <_fflush_r+0x38>
 800e4c4:	0005883a 	mov	r2,zero
 800e4c8:	dfc00217 	ldw	ra,8(sp)
 800e4cc:	dc000117 	ldw	r16,4(sp)
 800e4d0:	dec00304 	addi	sp,sp,12
 800e4d4:	f800283a 	ret
 800e4d8:	8009883a 	mov	r4,r16
 800e4dc:	dfc00217 	ldw	ra,8(sp)
 800e4e0:	dc000117 	ldw	r16,4(sp)
 800e4e4:	dec00304 	addi	sp,sp,12
 800e4e8:	800e2841 	jmpi	800e284 <__sflush_r>
 800e4ec:	d9400015 	stw	r5,0(sp)
 800e4f0:	800e87c0 	call	800e87c <__sinit>
 800e4f4:	d9400017 	ldw	r5,0(sp)
 800e4f8:	003ff006 	br	800e4bc <__alt_data_end+0xf800e4bc>

0800e4fc <fflush>:
 800e4fc:	20000526 	beq	r4,zero,800e514 <fflush+0x18>
 800e500:	008200b4 	movhi	r2,2050
 800e504:	10881404 	addi	r2,r2,8272
 800e508:	200b883a 	mov	r5,r4
 800e50c:	11000017 	ldw	r4,0(r2)
 800e510:	800e4a01 	jmpi	800e4a0 <_fflush_r>
 800e514:	008200b4 	movhi	r2,2050
 800e518:	10881304 	addi	r2,r2,8268
 800e51c:	11000017 	ldw	r4,0(r2)
 800e520:	01420074 	movhi	r5,2049
 800e524:	29792804 	addi	r5,r5,-7008
 800e528:	800f4e01 	jmpi	800f4e0 <_fwalk_reent>

0800e52c <__fp_unlock>:
 800e52c:	0005883a 	mov	r2,zero
 800e530:	f800283a 	ret

0800e534 <_cleanup_r>:
 800e534:	01420074 	movhi	r5,2049
 800e538:	295eb004 	addi	r5,r5,31424
 800e53c:	800f4e01 	jmpi	800f4e0 <_fwalk_reent>

0800e540 <__sinit.part.1>:
 800e540:	defff704 	addi	sp,sp,-36
 800e544:	00c20074 	movhi	r3,2049
 800e548:	dfc00815 	stw	ra,32(sp)
 800e54c:	ddc00715 	stw	r23,28(sp)
 800e550:	dd800615 	stw	r22,24(sp)
 800e554:	dd400515 	stw	r21,20(sp)
 800e558:	dd000415 	stw	r20,16(sp)
 800e55c:	dcc00315 	stw	r19,12(sp)
 800e560:	dc800215 	stw	r18,8(sp)
 800e564:	dc400115 	stw	r17,4(sp)
 800e568:	dc000015 	stw	r16,0(sp)
 800e56c:	18f94d04 	addi	r3,r3,-6860
 800e570:	24000117 	ldw	r16,4(r4)
 800e574:	20c00f15 	stw	r3,60(r4)
 800e578:	2080bb04 	addi	r2,r4,748
 800e57c:	00c000c4 	movi	r3,3
 800e580:	20c0b915 	stw	r3,740(r4)
 800e584:	2080ba15 	stw	r2,744(r4)
 800e588:	2000b815 	stw	zero,736(r4)
 800e58c:	05c00204 	movi	r23,8
 800e590:	00800104 	movi	r2,4
 800e594:	2025883a 	mov	r18,r4
 800e598:	b80d883a 	mov	r6,r23
 800e59c:	81001704 	addi	r4,r16,92
 800e5a0:	000b883a 	mov	r5,zero
 800e5a4:	80000015 	stw	zero,0(r16)
 800e5a8:	80000115 	stw	zero,4(r16)
 800e5ac:	80000215 	stw	zero,8(r16)
 800e5b0:	8080030d 	sth	r2,12(r16)
 800e5b4:	80001915 	stw	zero,100(r16)
 800e5b8:	8000038d 	sth	zero,14(r16)
 800e5bc:	80000415 	stw	zero,16(r16)
 800e5c0:	80000515 	stw	zero,20(r16)
 800e5c4:	80000615 	stw	zero,24(r16)
 800e5c8:	80047e00 	call	80047e0 <memset>
 800e5cc:	05820034 	movhi	r22,2048
 800e5d0:	94400217 	ldw	r17,8(r18)
 800e5d4:	05420034 	movhi	r21,2048
 800e5d8:	05020034 	movhi	r20,2048
 800e5dc:	04c20034 	movhi	r19,2048
 800e5e0:	b593f104 	addi	r22,r22,20420
 800e5e4:	ad540804 	addi	r21,r21,20512
 800e5e8:	a5142704 	addi	r20,r20,20636
 800e5ec:	9cd43e04 	addi	r19,r19,20728
 800e5f0:	85800815 	stw	r22,32(r16)
 800e5f4:	85400915 	stw	r21,36(r16)
 800e5f8:	85000a15 	stw	r20,40(r16)
 800e5fc:	84c00b15 	stw	r19,44(r16)
 800e600:	84000715 	stw	r16,28(r16)
 800e604:	00800284 	movi	r2,10
 800e608:	8880030d 	sth	r2,12(r17)
 800e60c:	00800044 	movi	r2,1
 800e610:	b80d883a 	mov	r6,r23
 800e614:	89001704 	addi	r4,r17,92
 800e618:	000b883a 	mov	r5,zero
 800e61c:	88000015 	stw	zero,0(r17)
 800e620:	88000115 	stw	zero,4(r17)
 800e624:	88000215 	stw	zero,8(r17)
 800e628:	88001915 	stw	zero,100(r17)
 800e62c:	8880038d 	sth	r2,14(r17)
 800e630:	88000415 	stw	zero,16(r17)
 800e634:	88000515 	stw	zero,20(r17)
 800e638:	88000615 	stw	zero,24(r17)
 800e63c:	80047e00 	call	80047e0 <memset>
 800e640:	94000317 	ldw	r16,12(r18)
 800e644:	00800484 	movi	r2,18
 800e648:	8c400715 	stw	r17,28(r17)
 800e64c:	8d800815 	stw	r22,32(r17)
 800e650:	8d400915 	stw	r21,36(r17)
 800e654:	8d000a15 	stw	r20,40(r17)
 800e658:	8cc00b15 	stw	r19,44(r17)
 800e65c:	8080030d 	sth	r2,12(r16)
 800e660:	00800084 	movi	r2,2
 800e664:	80000015 	stw	zero,0(r16)
 800e668:	80000115 	stw	zero,4(r16)
 800e66c:	80000215 	stw	zero,8(r16)
 800e670:	80001915 	stw	zero,100(r16)
 800e674:	8080038d 	sth	r2,14(r16)
 800e678:	80000415 	stw	zero,16(r16)
 800e67c:	80000515 	stw	zero,20(r16)
 800e680:	80000615 	stw	zero,24(r16)
 800e684:	b80d883a 	mov	r6,r23
 800e688:	000b883a 	mov	r5,zero
 800e68c:	81001704 	addi	r4,r16,92
 800e690:	80047e00 	call	80047e0 <memset>
 800e694:	00800044 	movi	r2,1
 800e698:	84000715 	stw	r16,28(r16)
 800e69c:	85800815 	stw	r22,32(r16)
 800e6a0:	85400915 	stw	r21,36(r16)
 800e6a4:	85000a15 	stw	r20,40(r16)
 800e6a8:	84c00b15 	stw	r19,44(r16)
 800e6ac:	90800e15 	stw	r2,56(r18)
 800e6b0:	dfc00817 	ldw	ra,32(sp)
 800e6b4:	ddc00717 	ldw	r23,28(sp)
 800e6b8:	dd800617 	ldw	r22,24(sp)
 800e6bc:	dd400517 	ldw	r21,20(sp)
 800e6c0:	dd000417 	ldw	r20,16(sp)
 800e6c4:	dcc00317 	ldw	r19,12(sp)
 800e6c8:	dc800217 	ldw	r18,8(sp)
 800e6cc:	dc400117 	ldw	r17,4(sp)
 800e6d0:	dc000017 	ldw	r16,0(sp)
 800e6d4:	dec00904 	addi	sp,sp,36
 800e6d8:	f800283a 	ret

0800e6dc <__fp_lock>:
 800e6dc:	0005883a 	mov	r2,zero
 800e6e0:	f800283a 	ret

0800e6e4 <__sfmoreglue>:
 800e6e4:	defffc04 	addi	sp,sp,-16
 800e6e8:	dc400115 	stw	r17,4(sp)
 800e6ec:	2c7fffc4 	addi	r17,r5,-1
 800e6f0:	8c401a24 	muli	r17,r17,104
 800e6f4:	dc800215 	stw	r18,8(sp)
 800e6f8:	2825883a 	mov	r18,r5
 800e6fc:	89401d04 	addi	r5,r17,116
 800e700:	dc000015 	stw	r16,0(sp)
 800e704:	dfc00315 	stw	ra,12(sp)
 800e708:	8003fd40 	call	8003fd4 <_malloc_r>
 800e70c:	1021883a 	mov	r16,r2
 800e710:	10000726 	beq	r2,zero,800e730 <__sfmoreglue+0x4c>
 800e714:	11000304 	addi	r4,r2,12
 800e718:	10000015 	stw	zero,0(r2)
 800e71c:	14800115 	stw	r18,4(r2)
 800e720:	11000215 	stw	r4,8(r2)
 800e724:	89801a04 	addi	r6,r17,104
 800e728:	000b883a 	mov	r5,zero
 800e72c:	80047e00 	call	80047e0 <memset>
 800e730:	8005883a 	mov	r2,r16
 800e734:	dfc00317 	ldw	ra,12(sp)
 800e738:	dc800217 	ldw	r18,8(sp)
 800e73c:	dc400117 	ldw	r17,4(sp)
 800e740:	dc000017 	ldw	r16,0(sp)
 800e744:	dec00404 	addi	sp,sp,16
 800e748:	f800283a 	ret

0800e74c <__sfp>:
 800e74c:	defffb04 	addi	sp,sp,-20
 800e750:	dc000015 	stw	r16,0(sp)
 800e754:	040200b4 	movhi	r16,2050
 800e758:	84081304 	addi	r16,r16,8268
 800e75c:	dcc00315 	stw	r19,12(sp)
 800e760:	2027883a 	mov	r19,r4
 800e764:	81000017 	ldw	r4,0(r16)
 800e768:	dfc00415 	stw	ra,16(sp)
 800e76c:	dc800215 	stw	r18,8(sp)
 800e770:	20800e17 	ldw	r2,56(r4)
 800e774:	dc400115 	stw	r17,4(sp)
 800e778:	1000021e 	bne	r2,zero,800e784 <__sfp+0x38>
 800e77c:	800e5400 	call	800e540 <__sinit.part.1>
 800e780:	81000017 	ldw	r4,0(r16)
 800e784:	2480b804 	addi	r18,r4,736
 800e788:	047fffc4 	movi	r17,-1
 800e78c:	91000117 	ldw	r4,4(r18)
 800e790:	94000217 	ldw	r16,8(r18)
 800e794:	213fffc4 	addi	r4,r4,-1
 800e798:	20000a16 	blt	r4,zero,800e7c4 <__sfp+0x78>
 800e79c:	8080030f 	ldh	r2,12(r16)
 800e7a0:	10000c26 	beq	r2,zero,800e7d4 <__sfp+0x88>
 800e7a4:	80c01d04 	addi	r3,r16,116
 800e7a8:	00000206 	br	800e7b4 <__sfp+0x68>
 800e7ac:	18bfe60f 	ldh	r2,-104(r3)
 800e7b0:	10000826 	beq	r2,zero,800e7d4 <__sfp+0x88>
 800e7b4:	213fffc4 	addi	r4,r4,-1
 800e7b8:	1c3ffd04 	addi	r16,r3,-12
 800e7bc:	18c01a04 	addi	r3,r3,104
 800e7c0:	247ffa1e 	bne	r4,r17,800e7ac <__alt_data_end+0xf800e7ac>
 800e7c4:	90800017 	ldw	r2,0(r18)
 800e7c8:	10001d26 	beq	r2,zero,800e840 <__sfp+0xf4>
 800e7cc:	1025883a 	mov	r18,r2
 800e7d0:	003fee06 	br	800e78c <__alt_data_end+0xf800e78c>
 800e7d4:	00bfffc4 	movi	r2,-1
 800e7d8:	8080038d 	sth	r2,14(r16)
 800e7dc:	00800044 	movi	r2,1
 800e7e0:	8080030d 	sth	r2,12(r16)
 800e7e4:	80001915 	stw	zero,100(r16)
 800e7e8:	80000015 	stw	zero,0(r16)
 800e7ec:	80000215 	stw	zero,8(r16)
 800e7f0:	80000115 	stw	zero,4(r16)
 800e7f4:	80000415 	stw	zero,16(r16)
 800e7f8:	80000515 	stw	zero,20(r16)
 800e7fc:	80000615 	stw	zero,24(r16)
 800e800:	01800204 	movi	r6,8
 800e804:	000b883a 	mov	r5,zero
 800e808:	81001704 	addi	r4,r16,92
 800e80c:	80047e00 	call	80047e0 <memset>
 800e810:	8005883a 	mov	r2,r16
 800e814:	80000c15 	stw	zero,48(r16)
 800e818:	80000d15 	stw	zero,52(r16)
 800e81c:	80001115 	stw	zero,68(r16)
 800e820:	80001215 	stw	zero,72(r16)
 800e824:	dfc00417 	ldw	ra,16(sp)
 800e828:	dcc00317 	ldw	r19,12(sp)
 800e82c:	dc800217 	ldw	r18,8(sp)
 800e830:	dc400117 	ldw	r17,4(sp)
 800e834:	dc000017 	ldw	r16,0(sp)
 800e838:	dec00504 	addi	sp,sp,20
 800e83c:	f800283a 	ret
 800e840:	01400104 	movi	r5,4
 800e844:	9809883a 	mov	r4,r19
 800e848:	800e6e40 	call	800e6e4 <__sfmoreglue>
 800e84c:	90800015 	stw	r2,0(r18)
 800e850:	103fde1e 	bne	r2,zero,800e7cc <__alt_data_end+0xf800e7cc>
 800e854:	00800304 	movi	r2,12
 800e858:	98800015 	stw	r2,0(r19)
 800e85c:	0005883a 	mov	r2,zero
 800e860:	003ff006 	br	800e824 <__alt_data_end+0xf800e824>

0800e864 <_cleanup>:
 800e864:	008200b4 	movhi	r2,2050
 800e868:	10881304 	addi	r2,r2,8268
 800e86c:	11000017 	ldw	r4,0(r2)
 800e870:	01420074 	movhi	r5,2049
 800e874:	295eb004 	addi	r5,r5,31424
 800e878:	800f4e01 	jmpi	800f4e0 <_fwalk_reent>

0800e87c <__sinit>:
 800e87c:	20800e17 	ldw	r2,56(r4)
 800e880:	10000126 	beq	r2,zero,800e888 <__sinit+0xc>
 800e884:	f800283a 	ret
 800e888:	800e5401 	jmpi	800e540 <__sinit.part.1>

0800e88c <__sfp_lock_acquire>:
 800e88c:	f800283a 	ret

0800e890 <__sfp_lock_release>:
 800e890:	f800283a 	ret

0800e894 <__sinit_lock_acquire>:
 800e894:	f800283a 	ret

0800e898 <__sinit_lock_release>:
 800e898:	f800283a 	ret

0800e89c <__fp_lock_all>:
 800e89c:	008200b4 	movhi	r2,2050
 800e8a0:	10881404 	addi	r2,r2,8272
 800e8a4:	11000017 	ldw	r4,0(r2)
 800e8a8:	01420074 	movhi	r5,2049
 800e8ac:	2979b704 	addi	r5,r5,-6436
 800e8b0:	800f41c1 	jmpi	800f41c <_fwalk>

0800e8b4 <__fp_unlock_all>:
 800e8b4:	008200b4 	movhi	r2,2050
 800e8b8:	10881404 	addi	r2,r2,8272
 800e8bc:	11000017 	ldw	r4,0(r2)
 800e8c0:	01420074 	movhi	r5,2049
 800e8c4:	29794b04 	addi	r5,r5,-6868
 800e8c8:	800f41c1 	jmpi	800f41c <_fwalk>

0800e8cc <_fread_r>:
 800e8cc:	defff404 	addi	sp,sp,-48
 800e8d0:	dd800815 	stw	r22,32(sp)
 800e8d4:	39ad383a 	mul	r22,r7,r6
 800e8d8:	dc000215 	stw	r16,8(sp)
 800e8dc:	dfc00b15 	stw	ra,44(sp)
 800e8e0:	df000a15 	stw	fp,40(sp)
 800e8e4:	ddc00915 	stw	r23,36(sp)
 800e8e8:	dd400715 	stw	r21,28(sp)
 800e8ec:	dd000615 	stw	r20,24(sp)
 800e8f0:	dcc00515 	stw	r19,20(sp)
 800e8f4:	dc800415 	stw	r18,16(sp)
 800e8f8:	dc400315 	stw	r17,12(sp)
 800e8fc:	dc000c17 	ldw	r16,48(sp)
 800e900:	b0003b26 	beq	r22,zero,800e9f0 <_fread_r+0x124>
 800e904:	302f883a 	mov	r23,r6
 800e908:	382b883a 	mov	r21,r7
 800e90c:	2029883a 	mov	r20,r4
 800e910:	2827883a 	mov	r19,r5
 800e914:	20000226 	beq	r4,zero,800e920 <_fread_r+0x54>
 800e918:	20800e17 	ldw	r2,56(r4)
 800e91c:	10006e26 	beq	r2,zero,800ead8 <_fread_r+0x20c>
 800e920:	8080030b 	ldhu	r2,12(r16)
 800e924:	10c8000c 	andi	r3,r2,8192
 800e928:	1800061e 	bne	r3,zero,800e944 <_fread_r+0x78>
 800e92c:	81001917 	ldw	r4,100(r16)
 800e930:	00f7ffc4 	movi	r3,-8193
 800e934:	10880014 	ori	r2,r2,8192
 800e938:	20c6703a 	and	r3,r4,r3
 800e93c:	8080030d 	sth	r2,12(r16)
 800e940:	80c01915 	stw	r3,100(r16)
 800e944:	84400117 	ldw	r17,4(r16)
 800e948:	88005f16 	blt	r17,zero,800eac8 <_fread_r+0x1fc>
 800e94c:	8809883a 	mov	r4,r17
 800e950:	1080008c 	andi	r2,r2,2
 800e954:	1000281e 	bne	r2,zero,800e9f8 <_fread_r+0x12c>
 800e958:	b025883a 	mov	r18,r22
 800e95c:	00000b06 	br	800e98c <_fread_r+0xc0>
 800e960:	800fbd40 	call	800fbd4 <memcpy>
 800e964:	80800017 	ldw	r2,0(r16)
 800e968:	9c67883a 	add	r19,r19,r17
 800e96c:	9465c83a 	sub	r18,r18,r17
 800e970:	1463883a 	add	r17,r2,r17
 800e974:	800b883a 	mov	r5,r16
 800e978:	a009883a 	mov	r4,r20
 800e97c:	84400015 	stw	r17,0(r16)
 800e980:	80114540 	call	8011454 <__srefill_r>
 800e984:	10004c1e 	bne	r2,zero,800eab8 <_fread_r+0x1ec>
 800e988:	84400117 	ldw	r17,4(r16)
 800e98c:	880d883a 	mov	r6,r17
 800e990:	9809883a 	mov	r4,r19
 800e994:	81400017 	ldw	r5,0(r16)
 800e998:	8cbff136 	bltu	r17,r18,800e960 <__alt_data_end+0xf800e960>
 800e99c:	900d883a 	mov	r6,r18
 800e9a0:	800fbd40 	call	800fbd4 <memcpy>
 800e9a4:	80c00117 	ldw	r3,4(r16)
 800e9a8:	81000017 	ldw	r4,0(r16)
 800e9ac:	a805883a 	mov	r2,r21
 800e9b0:	1c87c83a 	sub	r3,r3,r18
 800e9b4:	24a5883a 	add	r18,r4,r18
 800e9b8:	80c00115 	stw	r3,4(r16)
 800e9bc:	84800015 	stw	r18,0(r16)
 800e9c0:	dfc00b17 	ldw	ra,44(sp)
 800e9c4:	df000a17 	ldw	fp,40(sp)
 800e9c8:	ddc00917 	ldw	r23,36(sp)
 800e9cc:	dd800817 	ldw	r22,32(sp)
 800e9d0:	dd400717 	ldw	r21,28(sp)
 800e9d4:	dd000617 	ldw	r20,24(sp)
 800e9d8:	dcc00517 	ldw	r19,20(sp)
 800e9dc:	dc800417 	ldw	r18,16(sp)
 800e9e0:	dc400317 	ldw	r17,12(sp)
 800e9e4:	dc000217 	ldw	r16,8(sp)
 800e9e8:	dec00c04 	addi	sp,sp,48
 800e9ec:	f800283a 	ret
 800e9f0:	0005883a 	mov	r2,zero
 800e9f4:	003ff206 	br	800e9c0 <__alt_data_end+0xf800e9c0>
 800e9f8:	b007883a 	mov	r3,r22
 800e9fc:	2580012e 	bgeu	r4,r22,800ea04 <_fread_r+0x138>
 800ea00:	2007883a 	mov	r3,r4
 800ea04:	81400017 	ldw	r5,0(r16)
 800ea08:	180d883a 	mov	r6,r3
 800ea0c:	9809883a 	mov	r4,r19
 800ea10:	d8c00115 	stw	r3,4(sp)
 800ea14:	800fbd40 	call	800fbd4 <memcpy>
 800ea18:	d8c00117 	ldw	r3,4(sp)
 800ea1c:	84400017 	ldw	r17,0(r16)
 800ea20:	80800117 	ldw	r2,4(r16)
 800ea24:	81400c17 	ldw	r5,48(r16)
 800ea28:	88e3883a 	add	r17,r17,r3
 800ea2c:	10c5c83a 	sub	r2,r2,r3
 800ea30:	84400015 	stw	r17,0(r16)
 800ea34:	80800115 	stw	r2,4(r16)
 800ea38:	b0e5c83a 	sub	r18,r22,r3
 800ea3c:	28002b26 	beq	r5,zero,800eaec <_fread_r+0x220>
 800ea40:	90002b26 	beq	r18,zero,800eaf0 <_fread_r+0x224>
 800ea44:	80801004 	addi	r2,r16,64
 800ea48:	28800526 	beq	r5,r2,800ea60 <_fread_r+0x194>
 800ea4c:	a009883a 	mov	r4,r20
 800ea50:	d8c00115 	stw	r3,4(sp)
 800ea54:	800ec500 	call	800ec50 <_free_r>
 800ea58:	d8c00117 	ldw	r3,4(sp)
 800ea5c:	84400017 	ldw	r17,0(r16)
 800ea60:	80000c15 	stw	zero,48(r16)
 800ea64:	80800517 	ldw	r2,20(r16)
 800ea68:	87000417 	ldw	fp,16(r16)
 800ea6c:	98e7883a 	add	r19,r19,r3
 800ea70:	d8800015 	stw	r2,0(sp)
 800ea74:	00000106 	br	800ea7c <_fread_r+0x1b0>
 800ea78:	90001d26 	beq	r18,zero,800eaf0 <_fread_r+0x224>
 800ea7c:	84c00415 	stw	r19,16(r16)
 800ea80:	84800515 	stw	r18,20(r16)
 800ea84:	84c00015 	stw	r19,0(r16)
 800ea88:	a009883a 	mov	r4,r20
 800ea8c:	800b883a 	mov	r5,r16
 800ea90:	80114540 	call	8011454 <__srefill_r>
 800ea94:	d9000017 	ldw	r4,0(sp)
 800ea98:	80c00117 	ldw	r3,4(r16)
 800ea9c:	87000415 	stw	fp,16(r16)
 800eaa0:	81000515 	stw	r4,20(r16)
 800eaa4:	84400015 	stw	r17,0(r16)
 800eaa8:	80000115 	stw	zero,4(r16)
 800eaac:	90e5c83a 	sub	r18,r18,r3
 800eab0:	98e7883a 	add	r19,r19,r3
 800eab4:	103ff026 	beq	r2,zero,800ea78 <__alt_data_end+0xf800ea78>
 800eab8:	b80b883a 	mov	r5,r23
 800eabc:	b489c83a 	sub	r4,r22,r18
 800eac0:	80039b80 	call	80039b8 <__udivsi3>
 800eac4:	003fbe06 	br	800e9c0 <__alt_data_end+0xf800e9c0>
 800eac8:	80000115 	stw	zero,4(r16)
 800eacc:	0009883a 	mov	r4,zero
 800ead0:	0023883a 	mov	r17,zero
 800ead4:	003f9e06 	br	800e950 <__alt_data_end+0xf800e950>
 800ead8:	800e87c0 	call	800e87c <__sinit>
 800eadc:	8080030b 	ldhu	r2,12(r16)
 800eae0:	10c8000c 	andi	r3,r2,8192
 800eae4:	183f971e 	bne	r3,zero,800e944 <__alt_data_end+0xf800e944>
 800eae8:	003f9006 	br	800e92c <__alt_data_end+0xf800e92c>
 800eaec:	903fdd1e 	bne	r18,zero,800ea64 <__alt_data_end+0xf800ea64>
 800eaf0:	a805883a 	mov	r2,r21
 800eaf4:	003fb206 	br	800e9c0 <__alt_data_end+0xf800e9c0>

0800eaf8 <fread>:
 800eaf8:	defffe04 	addi	sp,sp,-8
 800eafc:	008200b4 	movhi	r2,2050
 800eb00:	d9c00015 	stw	r7,0(sp)
 800eb04:	10881404 	addi	r2,r2,8272
 800eb08:	300f883a 	mov	r7,r6
 800eb0c:	280d883a 	mov	r6,r5
 800eb10:	200b883a 	mov	r5,r4
 800eb14:	11000017 	ldw	r4,0(r2)
 800eb18:	dfc00115 	stw	ra,4(sp)
 800eb1c:	800e8cc0 	call	800e8cc <_fread_r>
 800eb20:	dfc00117 	ldw	ra,4(sp)
 800eb24:	dec00204 	addi	sp,sp,8
 800eb28:	f800283a 	ret

0800eb2c <_malloc_trim_r>:
 800eb2c:	defffb04 	addi	sp,sp,-20
 800eb30:	dcc00315 	stw	r19,12(sp)
 800eb34:	04c200b4 	movhi	r19,2050
 800eb38:	dc800215 	stw	r18,8(sp)
 800eb3c:	dc400115 	stw	r17,4(sp)
 800eb40:	dc000015 	stw	r16,0(sp)
 800eb44:	dfc00415 	stw	ra,16(sp)
 800eb48:	2821883a 	mov	r16,r5
 800eb4c:	9cc12104 	addi	r19,r19,1156
 800eb50:	2025883a 	mov	r18,r4
 800eb54:	801cc400 	call	801cc40 <__malloc_lock>
 800eb58:	98800217 	ldw	r2,8(r19)
 800eb5c:	14400117 	ldw	r17,4(r2)
 800eb60:	00bfff04 	movi	r2,-4
 800eb64:	88a2703a 	and	r17,r17,r2
 800eb68:	8c21c83a 	sub	r16,r17,r16
 800eb6c:	8403fbc4 	addi	r16,r16,4079
 800eb70:	8020d33a 	srli	r16,r16,12
 800eb74:	0083ffc4 	movi	r2,4095
 800eb78:	843fffc4 	addi	r16,r16,-1
 800eb7c:	8020933a 	slli	r16,r16,12
 800eb80:	1400060e 	bge	r2,r16,800eb9c <_malloc_trim_r+0x70>
 800eb84:	000b883a 	mov	r5,zero
 800eb88:	9009883a 	mov	r4,r18
 800eb8c:	8004a480 	call	8004a48 <_sbrk_r>
 800eb90:	98c00217 	ldw	r3,8(r19)
 800eb94:	1c47883a 	add	r3,r3,r17
 800eb98:	10c00a26 	beq	r2,r3,800ebc4 <_malloc_trim_r+0x98>
 800eb9c:	9009883a 	mov	r4,r18
 800eba0:	801cc640 	call	801cc64 <__malloc_unlock>
 800eba4:	0005883a 	mov	r2,zero
 800eba8:	dfc00417 	ldw	ra,16(sp)
 800ebac:	dcc00317 	ldw	r19,12(sp)
 800ebb0:	dc800217 	ldw	r18,8(sp)
 800ebb4:	dc400117 	ldw	r17,4(sp)
 800ebb8:	dc000017 	ldw	r16,0(sp)
 800ebbc:	dec00504 	addi	sp,sp,20
 800ebc0:	f800283a 	ret
 800ebc4:	040bc83a 	sub	r5,zero,r16
 800ebc8:	9009883a 	mov	r4,r18
 800ebcc:	8004a480 	call	8004a48 <_sbrk_r>
 800ebd0:	00ffffc4 	movi	r3,-1
 800ebd4:	10c00d26 	beq	r2,r3,800ec0c <_malloc_trim_r+0xe0>
 800ebd8:	00c200b4 	movhi	r3,2050
 800ebdc:	18cf3804 	addi	r3,r3,15584
 800ebe0:	18800017 	ldw	r2,0(r3)
 800ebe4:	99000217 	ldw	r4,8(r19)
 800ebe8:	8c23c83a 	sub	r17,r17,r16
 800ebec:	8c400054 	ori	r17,r17,1
 800ebf0:	1421c83a 	sub	r16,r2,r16
 800ebf4:	24400115 	stw	r17,4(r4)
 800ebf8:	9009883a 	mov	r4,r18
 800ebfc:	1c000015 	stw	r16,0(r3)
 800ec00:	801cc640 	call	801cc64 <__malloc_unlock>
 800ec04:	00800044 	movi	r2,1
 800ec08:	003fe706 	br	800eba8 <__alt_data_end+0xf800eba8>
 800ec0c:	000b883a 	mov	r5,zero
 800ec10:	9009883a 	mov	r4,r18
 800ec14:	8004a480 	call	8004a48 <_sbrk_r>
 800ec18:	99000217 	ldw	r4,8(r19)
 800ec1c:	014003c4 	movi	r5,15
 800ec20:	1107c83a 	sub	r3,r2,r4
 800ec24:	28ffdd0e 	bge	r5,r3,800eb9c <__alt_data_end+0xf800eb9c>
 800ec28:	014200b4 	movhi	r5,2050
 800ec2c:	29481004 	addi	r5,r5,8256
 800ec30:	29400017 	ldw	r5,0(r5)
 800ec34:	18c00054 	ori	r3,r3,1
 800ec38:	20c00115 	stw	r3,4(r4)
 800ec3c:	00c200b4 	movhi	r3,2050
 800ec40:	1145c83a 	sub	r2,r2,r5
 800ec44:	18cf3804 	addi	r3,r3,15584
 800ec48:	18800015 	stw	r2,0(r3)
 800ec4c:	003fd306 	br	800eb9c <__alt_data_end+0xf800eb9c>

0800ec50 <_free_r>:
 800ec50:	28004126 	beq	r5,zero,800ed58 <_free_r+0x108>
 800ec54:	defffd04 	addi	sp,sp,-12
 800ec58:	dc400115 	stw	r17,4(sp)
 800ec5c:	dc000015 	stw	r16,0(sp)
 800ec60:	2023883a 	mov	r17,r4
 800ec64:	2821883a 	mov	r16,r5
 800ec68:	dfc00215 	stw	ra,8(sp)
 800ec6c:	801cc400 	call	801cc40 <__malloc_lock>
 800ec70:	81ffff17 	ldw	r7,-4(r16)
 800ec74:	00bfff84 	movi	r2,-2
 800ec78:	010200b4 	movhi	r4,2050
 800ec7c:	81bffe04 	addi	r6,r16,-8
 800ec80:	3884703a 	and	r2,r7,r2
 800ec84:	21012104 	addi	r4,r4,1156
 800ec88:	308b883a 	add	r5,r6,r2
 800ec8c:	2a400117 	ldw	r9,4(r5)
 800ec90:	22000217 	ldw	r8,8(r4)
 800ec94:	00ffff04 	movi	r3,-4
 800ec98:	48c6703a 	and	r3,r9,r3
 800ec9c:	2a005726 	beq	r5,r8,800edfc <_free_r+0x1ac>
 800eca0:	28c00115 	stw	r3,4(r5)
 800eca4:	39c0004c 	andi	r7,r7,1
 800eca8:	3800091e 	bne	r7,zero,800ecd0 <_free_r+0x80>
 800ecac:	823ffe17 	ldw	r8,-8(r16)
 800ecb0:	22400204 	addi	r9,r4,8
 800ecb4:	320dc83a 	sub	r6,r6,r8
 800ecb8:	31c00217 	ldw	r7,8(r6)
 800ecbc:	1205883a 	add	r2,r2,r8
 800ecc0:	3a406526 	beq	r7,r9,800ee58 <_free_r+0x208>
 800ecc4:	32000317 	ldw	r8,12(r6)
 800ecc8:	3a000315 	stw	r8,12(r7)
 800eccc:	41c00215 	stw	r7,8(r8)
 800ecd0:	28cf883a 	add	r7,r5,r3
 800ecd4:	39c00117 	ldw	r7,4(r7)
 800ecd8:	39c0004c 	andi	r7,r7,1
 800ecdc:	38003a26 	beq	r7,zero,800edc8 <_free_r+0x178>
 800ece0:	10c00054 	ori	r3,r2,1
 800ece4:	30c00115 	stw	r3,4(r6)
 800ece8:	3087883a 	add	r3,r6,r2
 800ecec:	18800015 	stw	r2,0(r3)
 800ecf0:	00c07fc4 	movi	r3,511
 800ecf4:	18801936 	bltu	r3,r2,800ed5c <_free_r+0x10c>
 800ecf8:	1004d0fa 	srli	r2,r2,3
 800ecfc:	01c00044 	movi	r7,1
 800ed00:	21400117 	ldw	r5,4(r4)
 800ed04:	10c00044 	addi	r3,r2,1
 800ed08:	18c7883a 	add	r3,r3,r3
 800ed0c:	1005d0ba 	srai	r2,r2,2
 800ed10:	18c7883a 	add	r3,r3,r3
 800ed14:	18c7883a 	add	r3,r3,r3
 800ed18:	1907883a 	add	r3,r3,r4
 800ed1c:	3884983a 	sll	r2,r7,r2
 800ed20:	19c00017 	ldw	r7,0(r3)
 800ed24:	1a3ffe04 	addi	r8,r3,-8
 800ed28:	1144b03a 	or	r2,r2,r5
 800ed2c:	32000315 	stw	r8,12(r6)
 800ed30:	31c00215 	stw	r7,8(r6)
 800ed34:	20800115 	stw	r2,4(r4)
 800ed38:	19800015 	stw	r6,0(r3)
 800ed3c:	39800315 	stw	r6,12(r7)
 800ed40:	8809883a 	mov	r4,r17
 800ed44:	dfc00217 	ldw	ra,8(sp)
 800ed48:	dc400117 	ldw	r17,4(sp)
 800ed4c:	dc000017 	ldw	r16,0(sp)
 800ed50:	dec00304 	addi	sp,sp,12
 800ed54:	801cc641 	jmpi	801cc64 <__malloc_unlock>
 800ed58:	f800283a 	ret
 800ed5c:	100ad27a 	srli	r5,r2,9
 800ed60:	00c00104 	movi	r3,4
 800ed64:	19404a36 	bltu	r3,r5,800ee90 <_free_r+0x240>
 800ed68:	100ad1ba 	srli	r5,r2,6
 800ed6c:	28c00e44 	addi	r3,r5,57
 800ed70:	18c7883a 	add	r3,r3,r3
 800ed74:	29400e04 	addi	r5,r5,56
 800ed78:	18c7883a 	add	r3,r3,r3
 800ed7c:	18c7883a 	add	r3,r3,r3
 800ed80:	1909883a 	add	r4,r3,r4
 800ed84:	20c00017 	ldw	r3,0(r4)
 800ed88:	01c200b4 	movhi	r7,2050
 800ed8c:	213ffe04 	addi	r4,r4,-8
 800ed90:	39c12104 	addi	r7,r7,1156
 800ed94:	20c04426 	beq	r4,r3,800eea8 <_free_r+0x258>
 800ed98:	01ffff04 	movi	r7,-4
 800ed9c:	19400117 	ldw	r5,4(r3)
 800eda0:	29ca703a 	and	r5,r5,r7
 800eda4:	1140022e 	bgeu	r2,r5,800edb0 <_free_r+0x160>
 800eda8:	18c00217 	ldw	r3,8(r3)
 800edac:	20fffb1e 	bne	r4,r3,800ed9c <__alt_data_end+0xf800ed9c>
 800edb0:	19000317 	ldw	r4,12(r3)
 800edb4:	31000315 	stw	r4,12(r6)
 800edb8:	30c00215 	stw	r3,8(r6)
 800edbc:	21800215 	stw	r6,8(r4)
 800edc0:	19800315 	stw	r6,12(r3)
 800edc4:	003fde06 	br	800ed40 <__alt_data_end+0xf800ed40>
 800edc8:	29c00217 	ldw	r7,8(r5)
 800edcc:	10c5883a 	add	r2,r2,r3
 800edd0:	00c200b4 	movhi	r3,2050
 800edd4:	18c12304 	addi	r3,r3,1164
 800edd8:	38c03b26 	beq	r7,r3,800eec8 <_free_r+0x278>
 800eddc:	2a000317 	ldw	r8,12(r5)
 800ede0:	11400054 	ori	r5,r2,1
 800ede4:	3087883a 	add	r3,r6,r2
 800ede8:	3a000315 	stw	r8,12(r7)
 800edec:	41c00215 	stw	r7,8(r8)
 800edf0:	31400115 	stw	r5,4(r6)
 800edf4:	18800015 	stw	r2,0(r3)
 800edf8:	003fbd06 	br	800ecf0 <__alt_data_end+0xf800ecf0>
 800edfc:	39c0004c 	andi	r7,r7,1
 800ee00:	10c5883a 	add	r2,r2,r3
 800ee04:	3800071e 	bne	r7,zero,800ee24 <_free_r+0x1d4>
 800ee08:	81fffe17 	ldw	r7,-8(r16)
 800ee0c:	31cdc83a 	sub	r6,r6,r7
 800ee10:	30c00317 	ldw	r3,12(r6)
 800ee14:	31400217 	ldw	r5,8(r6)
 800ee18:	11c5883a 	add	r2,r2,r7
 800ee1c:	28c00315 	stw	r3,12(r5)
 800ee20:	19400215 	stw	r5,8(r3)
 800ee24:	10c00054 	ori	r3,r2,1
 800ee28:	30c00115 	stw	r3,4(r6)
 800ee2c:	00c200b4 	movhi	r3,2050
 800ee30:	18c81104 	addi	r3,r3,8260
 800ee34:	18c00017 	ldw	r3,0(r3)
 800ee38:	21800215 	stw	r6,8(r4)
 800ee3c:	10ffc036 	bltu	r2,r3,800ed40 <__alt_data_end+0xf800ed40>
 800ee40:	008200b4 	movhi	r2,2050
 800ee44:	108f2804 	addi	r2,r2,15520
 800ee48:	11400017 	ldw	r5,0(r2)
 800ee4c:	8809883a 	mov	r4,r17
 800ee50:	800eb2c0 	call	800eb2c <_malloc_trim_r>
 800ee54:	003fba06 	br	800ed40 <__alt_data_end+0xf800ed40>
 800ee58:	28c9883a 	add	r4,r5,r3
 800ee5c:	21000117 	ldw	r4,4(r4)
 800ee60:	2100004c 	andi	r4,r4,1
 800ee64:	2000391e 	bne	r4,zero,800ef4c <_free_r+0x2fc>
 800ee68:	29c00217 	ldw	r7,8(r5)
 800ee6c:	29000317 	ldw	r4,12(r5)
 800ee70:	1885883a 	add	r2,r3,r2
 800ee74:	10c00054 	ori	r3,r2,1
 800ee78:	39000315 	stw	r4,12(r7)
 800ee7c:	21c00215 	stw	r7,8(r4)
 800ee80:	30c00115 	stw	r3,4(r6)
 800ee84:	308d883a 	add	r6,r6,r2
 800ee88:	30800015 	stw	r2,0(r6)
 800ee8c:	003fac06 	br	800ed40 <__alt_data_end+0xf800ed40>
 800ee90:	00c00504 	movi	r3,20
 800ee94:	19401536 	bltu	r3,r5,800eeec <_free_r+0x29c>
 800ee98:	28c01704 	addi	r3,r5,92
 800ee9c:	18c7883a 	add	r3,r3,r3
 800eea0:	294016c4 	addi	r5,r5,91
 800eea4:	003fb406 	br	800ed78 <__alt_data_end+0xf800ed78>
 800eea8:	280bd0ba 	srai	r5,r5,2
 800eeac:	00c00044 	movi	r3,1
 800eeb0:	38800117 	ldw	r2,4(r7)
 800eeb4:	194a983a 	sll	r5,r3,r5
 800eeb8:	2007883a 	mov	r3,r4
 800eebc:	2884b03a 	or	r2,r5,r2
 800eec0:	38800115 	stw	r2,4(r7)
 800eec4:	003fbb06 	br	800edb4 <__alt_data_end+0xf800edb4>
 800eec8:	21800515 	stw	r6,20(r4)
 800eecc:	21800415 	stw	r6,16(r4)
 800eed0:	10c00054 	ori	r3,r2,1
 800eed4:	31c00315 	stw	r7,12(r6)
 800eed8:	31c00215 	stw	r7,8(r6)
 800eedc:	30c00115 	stw	r3,4(r6)
 800eee0:	308d883a 	add	r6,r6,r2
 800eee4:	30800015 	stw	r2,0(r6)
 800eee8:	003f9506 	br	800ed40 <__alt_data_end+0xf800ed40>
 800eeec:	00c01504 	movi	r3,84
 800eef0:	19400536 	bltu	r3,r5,800ef08 <_free_r+0x2b8>
 800eef4:	100ad33a 	srli	r5,r2,12
 800eef8:	28c01bc4 	addi	r3,r5,111
 800eefc:	18c7883a 	add	r3,r3,r3
 800ef00:	29401b84 	addi	r5,r5,110
 800ef04:	003f9c06 	br	800ed78 <__alt_data_end+0xf800ed78>
 800ef08:	00c05504 	movi	r3,340
 800ef0c:	19400536 	bltu	r3,r5,800ef24 <_free_r+0x2d4>
 800ef10:	100ad3fa 	srli	r5,r2,15
 800ef14:	28c01e04 	addi	r3,r5,120
 800ef18:	18c7883a 	add	r3,r3,r3
 800ef1c:	29401dc4 	addi	r5,r5,119
 800ef20:	003f9506 	br	800ed78 <__alt_data_end+0xf800ed78>
 800ef24:	00c15504 	movi	r3,1364
 800ef28:	19400536 	bltu	r3,r5,800ef40 <_free_r+0x2f0>
 800ef2c:	100ad4ba 	srli	r5,r2,18
 800ef30:	28c01f44 	addi	r3,r5,125
 800ef34:	18c7883a 	add	r3,r3,r3
 800ef38:	29401f04 	addi	r5,r5,124
 800ef3c:	003f8e06 	br	800ed78 <__alt_data_end+0xf800ed78>
 800ef40:	00c03f84 	movi	r3,254
 800ef44:	01401f84 	movi	r5,126
 800ef48:	003f8b06 	br	800ed78 <__alt_data_end+0xf800ed78>
 800ef4c:	10c00054 	ori	r3,r2,1
 800ef50:	30c00115 	stw	r3,4(r6)
 800ef54:	308d883a 	add	r6,r6,r2
 800ef58:	30800015 	stw	r2,0(r6)
 800ef5c:	003f7806 	br	800ed40 <__alt_data_end+0xf800ed40>

0800ef60 <__sfvwrite_r>:
 800ef60:	30800217 	ldw	r2,8(r6)
 800ef64:	10006726 	beq	r2,zero,800f104 <__sfvwrite_r+0x1a4>
 800ef68:	28c0030b 	ldhu	r3,12(r5)
 800ef6c:	defff404 	addi	sp,sp,-48
 800ef70:	dd400715 	stw	r21,28(sp)
 800ef74:	dd000615 	stw	r20,24(sp)
 800ef78:	dc000215 	stw	r16,8(sp)
 800ef7c:	dfc00b15 	stw	ra,44(sp)
 800ef80:	df000a15 	stw	fp,40(sp)
 800ef84:	ddc00915 	stw	r23,36(sp)
 800ef88:	dd800815 	stw	r22,32(sp)
 800ef8c:	dcc00515 	stw	r19,20(sp)
 800ef90:	dc800415 	stw	r18,16(sp)
 800ef94:	dc400315 	stw	r17,12(sp)
 800ef98:	1880020c 	andi	r2,r3,8
 800ef9c:	2821883a 	mov	r16,r5
 800efa0:	202b883a 	mov	r21,r4
 800efa4:	3029883a 	mov	r20,r6
 800efa8:	10002726 	beq	r2,zero,800f048 <__sfvwrite_r+0xe8>
 800efac:	28800417 	ldw	r2,16(r5)
 800efb0:	10002526 	beq	r2,zero,800f048 <__sfvwrite_r+0xe8>
 800efb4:	1880008c 	andi	r2,r3,2
 800efb8:	a4400017 	ldw	r17,0(r20)
 800efbc:	10002a26 	beq	r2,zero,800f068 <__sfvwrite_r+0x108>
 800efc0:	05a00034 	movhi	r22,32768
 800efc4:	0027883a 	mov	r19,zero
 800efc8:	0025883a 	mov	r18,zero
 800efcc:	b5bf0004 	addi	r22,r22,-1024
 800efd0:	980d883a 	mov	r6,r19
 800efd4:	a809883a 	mov	r4,r21
 800efd8:	90004626 	beq	r18,zero,800f0f4 <__sfvwrite_r+0x194>
 800efdc:	900f883a 	mov	r7,r18
 800efe0:	b480022e 	bgeu	r22,r18,800efec <__sfvwrite_r+0x8c>
 800efe4:	01e00034 	movhi	r7,32768
 800efe8:	39ff0004 	addi	r7,r7,-1024
 800efec:	80800917 	ldw	r2,36(r16)
 800eff0:	81400717 	ldw	r5,28(r16)
 800eff4:	103ee83a 	callr	r2
 800eff8:	0080570e 	bge	zero,r2,800f158 <__sfvwrite_r+0x1f8>
 800effc:	a0c00217 	ldw	r3,8(r20)
 800f000:	98a7883a 	add	r19,r19,r2
 800f004:	90a5c83a 	sub	r18,r18,r2
 800f008:	1885c83a 	sub	r2,r3,r2
 800f00c:	a0800215 	stw	r2,8(r20)
 800f010:	103fef1e 	bne	r2,zero,800efd0 <__alt_data_end+0xf800efd0>
 800f014:	0005883a 	mov	r2,zero
 800f018:	dfc00b17 	ldw	ra,44(sp)
 800f01c:	df000a17 	ldw	fp,40(sp)
 800f020:	ddc00917 	ldw	r23,36(sp)
 800f024:	dd800817 	ldw	r22,32(sp)
 800f028:	dd400717 	ldw	r21,28(sp)
 800f02c:	dd000617 	ldw	r20,24(sp)
 800f030:	dcc00517 	ldw	r19,20(sp)
 800f034:	dc800417 	ldw	r18,16(sp)
 800f038:	dc400317 	ldw	r17,12(sp)
 800f03c:	dc000217 	ldw	r16,8(sp)
 800f040:	dec00c04 	addi	sp,sp,48
 800f044:	f800283a 	ret
 800f048:	800b883a 	mov	r5,r16
 800f04c:	a809883a 	mov	r4,r21
 800f050:	800c8540 	call	800c854 <__swsetup_r>
 800f054:	1000eb1e 	bne	r2,zero,800f404 <__sfvwrite_r+0x4a4>
 800f058:	80c0030b 	ldhu	r3,12(r16)
 800f05c:	a4400017 	ldw	r17,0(r20)
 800f060:	1880008c 	andi	r2,r3,2
 800f064:	103fd61e 	bne	r2,zero,800efc0 <__alt_data_end+0xf800efc0>
 800f068:	1880004c 	andi	r2,r3,1
 800f06c:	10003f1e 	bne	r2,zero,800f16c <__sfvwrite_r+0x20c>
 800f070:	0039883a 	mov	fp,zero
 800f074:	0025883a 	mov	r18,zero
 800f078:	90001a26 	beq	r18,zero,800f0e4 <__sfvwrite_r+0x184>
 800f07c:	1880800c 	andi	r2,r3,512
 800f080:	84c00217 	ldw	r19,8(r16)
 800f084:	10002126 	beq	r2,zero,800f10c <__sfvwrite_r+0x1ac>
 800f088:	982f883a 	mov	r23,r19
 800f08c:	94c09336 	bltu	r18,r19,800f2dc <__sfvwrite_r+0x37c>
 800f090:	1881200c 	andi	r2,r3,1152
 800f094:	10009e1e 	bne	r2,zero,800f310 <__sfvwrite_r+0x3b0>
 800f098:	81000017 	ldw	r4,0(r16)
 800f09c:	b80d883a 	mov	r6,r23
 800f0a0:	e00b883a 	mov	r5,fp
 800f0a4:	800fd1c0 	call	800fd1c <memmove>
 800f0a8:	80c00217 	ldw	r3,8(r16)
 800f0ac:	81000017 	ldw	r4,0(r16)
 800f0b0:	9005883a 	mov	r2,r18
 800f0b4:	1ce7c83a 	sub	r19,r3,r19
 800f0b8:	25cf883a 	add	r7,r4,r23
 800f0bc:	84c00215 	stw	r19,8(r16)
 800f0c0:	81c00015 	stw	r7,0(r16)
 800f0c4:	a0c00217 	ldw	r3,8(r20)
 800f0c8:	e0b9883a 	add	fp,fp,r2
 800f0cc:	90a5c83a 	sub	r18,r18,r2
 800f0d0:	18a7c83a 	sub	r19,r3,r2
 800f0d4:	a4c00215 	stw	r19,8(r20)
 800f0d8:	983fce26 	beq	r19,zero,800f014 <__alt_data_end+0xf800f014>
 800f0dc:	80c0030b 	ldhu	r3,12(r16)
 800f0e0:	903fe61e 	bne	r18,zero,800f07c <__alt_data_end+0xf800f07c>
 800f0e4:	8f000017 	ldw	fp,0(r17)
 800f0e8:	8c800117 	ldw	r18,4(r17)
 800f0ec:	8c400204 	addi	r17,r17,8
 800f0f0:	003fe106 	br	800f078 <__alt_data_end+0xf800f078>
 800f0f4:	8cc00017 	ldw	r19,0(r17)
 800f0f8:	8c800117 	ldw	r18,4(r17)
 800f0fc:	8c400204 	addi	r17,r17,8
 800f100:	003fb306 	br	800efd0 <__alt_data_end+0xf800efd0>
 800f104:	0005883a 	mov	r2,zero
 800f108:	f800283a 	ret
 800f10c:	81000017 	ldw	r4,0(r16)
 800f110:	80800417 	ldw	r2,16(r16)
 800f114:	11005736 	bltu	r2,r4,800f274 <__sfvwrite_r+0x314>
 800f118:	85c00517 	ldw	r23,20(r16)
 800f11c:	95c05536 	bltu	r18,r23,800f274 <__sfvwrite_r+0x314>
 800f120:	00a00034 	movhi	r2,32768
 800f124:	10bfffc4 	addi	r2,r2,-1
 800f128:	9009883a 	mov	r4,r18
 800f12c:	1480012e 	bgeu	r2,r18,800f134 <__sfvwrite_r+0x1d4>
 800f130:	1009883a 	mov	r4,r2
 800f134:	b80b883a 	mov	r5,r23
 800f138:	80038c00 	call	80038c0 <__divsi3>
 800f13c:	15cf383a 	mul	r7,r2,r23
 800f140:	81400717 	ldw	r5,28(r16)
 800f144:	80800917 	ldw	r2,36(r16)
 800f148:	e00d883a 	mov	r6,fp
 800f14c:	a809883a 	mov	r4,r21
 800f150:	103ee83a 	callr	r2
 800f154:	00bfdb16 	blt	zero,r2,800f0c4 <__alt_data_end+0xf800f0c4>
 800f158:	8080030b 	ldhu	r2,12(r16)
 800f15c:	10801014 	ori	r2,r2,64
 800f160:	8080030d 	sth	r2,12(r16)
 800f164:	00bfffc4 	movi	r2,-1
 800f168:	003fab06 	br	800f018 <__alt_data_end+0xf800f018>
 800f16c:	0027883a 	mov	r19,zero
 800f170:	0011883a 	mov	r8,zero
 800f174:	0039883a 	mov	fp,zero
 800f178:	0025883a 	mov	r18,zero
 800f17c:	90001f26 	beq	r18,zero,800f1fc <__sfvwrite_r+0x29c>
 800f180:	40005a26 	beq	r8,zero,800f2ec <__sfvwrite_r+0x38c>
 800f184:	982d883a 	mov	r22,r19
 800f188:	94c0012e 	bgeu	r18,r19,800f190 <__sfvwrite_r+0x230>
 800f18c:	902d883a 	mov	r22,r18
 800f190:	81000017 	ldw	r4,0(r16)
 800f194:	80800417 	ldw	r2,16(r16)
 800f198:	b02f883a 	mov	r23,r22
 800f19c:	81c00517 	ldw	r7,20(r16)
 800f1a0:	1100032e 	bgeu	r2,r4,800f1b0 <__sfvwrite_r+0x250>
 800f1a4:	80c00217 	ldw	r3,8(r16)
 800f1a8:	38c7883a 	add	r3,r7,r3
 800f1ac:	1d801816 	blt	r3,r22,800f210 <__sfvwrite_r+0x2b0>
 800f1b0:	b1c03e16 	blt	r22,r7,800f2ac <__sfvwrite_r+0x34c>
 800f1b4:	80800917 	ldw	r2,36(r16)
 800f1b8:	81400717 	ldw	r5,28(r16)
 800f1bc:	e00d883a 	mov	r6,fp
 800f1c0:	da000115 	stw	r8,4(sp)
 800f1c4:	a809883a 	mov	r4,r21
 800f1c8:	103ee83a 	callr	r2
 800f1cc:	102f883a 	mov	r23,r2
 800f1d0:	da000117 	ldw	r8,4(sp)
 800f1d4:	00bfe00e 	bge	zero,r2,800f158 <__alt_data_end+0xf800f158>
 800f1d8:	9de7c83a 	sub	r19,r19,r23
 800f1dc:	98001f26 	beq	r19,zero,800f25c <__sfvwrite_r+0x2fc>
 800f1e0:	a0800217 	ldw	r2,8(r20)
 800f1e4:	e5f9883a 	add	fp,fp,r23
 800f1e8:	95e5c83a 	sub	r18,r18,r23
 800f1ec:	15efc83a 	sub	r23,r2,r23
 800f1f0:	a5c00215 	stw	r23,8(r20)
 800f1f4:	b83f8726 	beq	r23,zero,800f014 <__alt_data_end+0xf800f014>
 800f1f8:	903fe11e 	bne	r18,zero,800f180 <__alt_data_end+0xf800f180>
 800f1fc:	8f000017 	ldw	fp,0(r17)
 800f200:	8c800117 	ldw	r18,4(r17)
 800f204:	0011883a 	mov	r8,zero
 800f208:	8c400204 	addi	r17,r17,8
 800f20c:	003fdb06 	br	800f17c <__alt_data_end+0xf800f17c>
 800f210:	180d883a 	mov	r6,r3
 800f214:	e00b883a 	mov	r5,fp
 800f218:	da000115 	stw	r8,4(sp)
 800f21c:	d8c00015 	stw	r3,0(sp)
 800f220:	800fd1c0 	call	800fd1c <memmove>
 800f224:	d8c00017 	ldw	r3,0(sp)
 800f228:	80800017 	ldw	r2,0(r16)
 800f22c:	800b883a 	mov	r5,r16
 800f230:	a809883a 	mov	r4,r21
 800f234:	10c5883a 	add	r2,r2,r3
 800f238:	80800015 	stw	r2,0(r16)
 800f23c:	d8c00015 	stw	r3,0(sp)
 800f240:	800e4a00 	call	800e4a0 <_fflush_r>
 800f244:	d8c00017 	ldw	r3,0(sp)
 800f248:	da000117 	ldw	r8,4(sp)
 800f24c:	103fc21e 	bne	r2,zero,800f158 <__alt_data_end+0xf800f158>
 800f250:	182f883a 	mov	r23,r3
 800f254:	9de7c83a 	sub	r19,r19,r23
 800f258:	983fe11e 	bne	r19,zero,800f1e0 <__alt_data_end+0xf800f1e0>
 800f25c:	800b883a 	mov	r5,r16
 800f260:	a809883a 	mov	r4,r21
 800f264:	800e4a00 	call	800e4a0 <_fflush_r>
 800f268:	103fbb1e 	bne	r2,zero,800f158 <__alt_data_end+0xf800f158>
 800f26c:	0011883a 	mov	r8,zero
 800f270:	003fdb06 	br	800f1e0 <__alt_data_end+0xf800f1e0>
 800f274:	94c0012e 	bgeu	r18,r19,800f27c <__sfvwrite_r+0x31c>
 800f278:	9027883a 	mov	r19,r18
 800f27c:	980d883a 	mov	r6,r19
 800f280:	e00b883a 	mov	r5,fp
 800f284:	800fd1c0 	call	800fd1c <memmove>
 800f288:	80800217 	ldw	r2,8(r16)
 800f28c:	80c00017 	ldw	r3,0(r16)
 800f290:	14c5c83a 	sub	r2,r2,r19
 800f294:	1cc7883a 	add	r3,r3,r19
 800f298:	80800215 	stw	r2,8(r16)
 800f29c:	80c00015 	stw	r3,0(r16)
 800f2a0:	10004326 	beq	r2,zero,800f3b0 <__sfvwrite_r+0x450>
 800f2a4:	9805883a 	mov	r2,r19
 800f2a8:	003f8606 	br	800f0c4 <__alt_data_end+0xf800f0c4>
 800f2ac:	b00d883a 	mov	r6,r22
 800f2b0:	e00b883a 	mov	r5,fp
 800f2b4:	da000115 	stw	r8,4(sp)
 800f2b8:	800fd1c0 	call	800fd1c <memmove>
 800f2bc:	80800217 	ldw	r2,8(r16)
 800f2c0:	80c00017 	ldw	r3,0(r16)
 800f2c4:	da000117 	ldw	r8,4(sp)
 800f2c8:	1585c83a 	sub	r2,r2,r22
 800f2cc:	1dad883a 	add	r22,r3,r22
 800f2d0:	80800215 	stw	r2,8(r16)
 800f2d4:	85800015 	stw	r22,0(r16)
 800f2d8:	003fbf06 	br	800f1d8 <__alt_data_end+0xf800f1d8>
 800f2dc:	81000017 	ldw	r4,0(r16)
 800f2e0:	9027883a 	mov	r19,r18
 800f2e4:	902f883a 	mov	r23,r18
 800f2e8:	003f6c06 	br	800f09c <__alt_data_end+0xf800f09c>
 800f2ec:	900d883a 	mov	r6,r18
 800f2f0:	01400284 	movi	r5,10
 800f2f4:	e009883a 	mov	r4,fp
 800f2f8:	800faf00 	call	800faf0 <memchr>
 800f2fc:	10003e26 	beq	r2,zero,800f3f8 <__sfvwrite_r+0x498>
 800f300:	10800044 	addi	r2,r2,1
 800f304:	1727c83a 	sub	r19,r2,fp
 800f308:	02000044 	movi	r8,1
 800f30c:	003f9d06 	br	800f184 <__alt_data_end+0xf800f184>
 800f310:	80800517 	ldw	r2,20(r16)
 800f314:	81400417 	ldw	r5,16(r16)
 800f318:	81c00017 	ldw	r7,0(r16)
 800f31c:	10a7883a 	add	r19,r2,r2
 800f320:	9885883a 	add	r2,r19,r2
 800f324:	1026d7fa 	srli	r19,r2,31
 800f328:	396dc83a 	sub	r22,r7,r5
 800f32c:	b1000044 	addi	r4,r22,1
 800f330:	9885883a 	add	r2,r19,r2
 800f334:	1027d07a 	srai	r19,r2,1
 800f338:	2485883a 	add	r2,r4,r18
 800f33c:	980d883a 	mov	r6,r19
 800f340:	9880022e 	bgeu	r19,r2,800f34c <__sfvwrite_r+0x3ec>
 800f344:	1027883a 	mov	r19,r2
 800f348:	100d883a 	mov	r6,r2
 800f34c:	18c1000c 	andi	r3,r3,1024
 800f350:	18001c26 	beq	r3,zero,800f3c4 <__sfvwrite_r+0x464>
 800f354:	300b883a 	mov	r5,r6
 800f358:	a809883a 	mov	r4,r21
 800f35c:	8003fd40 	call	8003fd4 <_malloc_r>
 800f360:	102f883a 	mov	r23,r2
 800f364:	10002926 	beq	r2,zero,800f40c <__sfvwrite_r+0x4ac>
 800f368:	81400417 	ldw	r5,16(r16)
 800f36c:	b00d883a 	mov	r6,r22
 800f370:	1009883a 	mov	r4,r2
 800f374:	800fbd40 	call	800fbd4 <memcpy>
 800f378:	8080030b 	ldhu	r2,12(r16)
 800f37c:	00fedfc4 	movi	r3,-1153
 800f380:	10c4703a 	and	r2,r2,r3
 800f384:	10802014 	ori	r2,r2,128
 800f388:	8080030d 	sth	r2,12(r16)
 800f38c:	bd89883a 	add	r4,r23,r22
 800f390:	9d8fc83a 	sub	r7,r19,r22
 800f394:	85c00415 	stw	r23,16(r16)
 800f398:	84c00515 	stw	r19,20(r16)
 800f39c:	81000015 	stw	r4,0(r16)
 800f3a0:	9027883a 	mov	r19,r18
 800f3a4:	81c00215 	stw	r7,8(r16)
 800f3a8:	902f883a 	mov	r23,r18
 800f3ac:	003f3b06 	br	800f09c <__alt_data_end+0xf800f09c>
 800f3b0:	800b883a 	mov	r5,r16
 800f3b4:	a809883a 	mov	r4,r21
 800f3b8:	800e4a00 	call	800e4a0 <_fflush_r>
 800f3bc:	103fb926 	beq	r2,zero,800f2a4 <__alt_data_end+0xf800f2a4>
 800f3c0:	003f6506 	br	800f158 <__alt_data_end+0xf800f158>
 800f3c4:	a809883a 	mov	r4,r21
 800f3c8:	8010ed40 	call	8010ed4 <_realloc_r>
 800f3cc:	102f883a 	mov	r23,r2
 800f3d0:	103fee1e 	bne	r2,zero,800f38c <__alt_data_end+0xf800f38c>
 800f3d4:	81400417 	ldw	r5,16(r16)
 800f3d8:	a809883a 	mov	r4,r21
 800f3dc:	800ec500 	call	800ec50 <_free_r>
 800f3e0:	8080030b 	ldhu	r2,12(r16)
 800f3e4:	00ffdfc4 	movi	r3,-129
 800f3e8:	1884703a 	and	r2,r3,r2
 800f3ec:	00c00304 	movi	r3,12
 800f3f0:	a8c00015 	stw	r3,0(r21)
 800f3f4:	003f5906 	br	800f15c <__alt_data_end+0xf800f15c>
 800f3f8:	94c00044 	addi	r19,r18,1
 800f3fc:	02000044 	movi	r8,1
 800f400:	003f6006 	br	800f184 <__alt_data_end+0xf800f184>
 800f404:	00bfffc4 	movi	r2,-1
 800f408:	003f0306 	br	800f018 <__alt_data_end+0xf800f018>
 800f40c:	00800304 	movi	r2,12
 800f410:	a8800015 	stw	r2,0(r21)
 800f414:	8080030b 	ldhu	r2,12(r16)
 800f418:	003f5006 	br	800f15c <__alt_data_end+0xf800f15c>

0800f41c <_fwalk>:
 800f41c:	defff704 	addi	sp,sp,-36
 800f420:	dd000415 	stw	r20,16(sp)
 800f424:	dfc00815 	stw	ra,32(sp)
 800f428:	ddc00715 	stw	r23,28(sp)
 800f42c:	dd800615 	stw	r22,24(sp)
 800f430:	dd400515 	stw	r21,20(sp)
 800f434:	dcc00315 	stw	r19,12(sp)
 800f438:	dc800215 	stw	r18,8(sp)
 800f43c:	dc400115 	stw	r17,4(sp)
 800f440:	dc000015 	stw	r16,0(sp)
 800f444:	2500b804 	addi	r20,r4,736
 800f448:	a0002326 	beq	r20,zero,800f4d8 <_fwalk+0xbc>
 800f44c:	282b883a 	mov	r21,r5
 800f450:	002f883a 	mov	r23,zero
 800f454:	05800044 	movi	r22,1
 800f458:	04ffffc4 	movi	r19,-1
 800f45c:	a4400117 	ldw	r17,4(r20)
 800f460:	a4800217 	ldw	r18,8(r20)
 800f464:	8c7fffc4 	addi	r17,r17,-1
 800f468:	88000d16 	blt	r17,zero,800f4a0 <_fwalk+0x84>
 800f46c:	94000304 	addi	r16,r18,12
 800f470:	94800384 	addi	r18,r18,14
 800f474:	8080000b 	ldhu	r2,0(r16)
 800f478:	8c7fffc4 	addi	r17,r17,-1
 800f47c:	813ffd04 	addi	r4,r16,-12
 800f480:	b080042e 	bgeu	r22,r2,800f494 <_fwalk+0x78>
 800f484:	9080000f 	ldh	r2,0(r18)
 800f488:	14c00226 	beq	r2,r19,800f494 <_fwalk+0x78>
 800f48c:	a83ee83a 	callr	r21
 800f490:	b8aeb03a 	or	r23,r23,r2
 800f494:	84001a04 	addi	r16,r16,104
 800f498:	94801a04 	addi	r18,r18,104
 800f49c:	8cfff51e 	bne	r17,r19,800f474 <__alt_data_end+0xf800f474>
 800f4a0:	a5000017 	ldw	r20,0(r20)
 800f4a4:	a03fed1e 	bne	r20,zero,800f45c <__alt_data_end+0xf800f45c>
 800f4a8:	b805883a 	mov	r2,r23
 800f4ac:	dfc00817 	ldw	ra,32(sp)
 800f4b0:	ddc00717 	ldw	r23,28(sp)
 800f4b4:	dd800617 	ldw	r22,24(sp)
 800f4b8:	dd400517 	ldw	r21,20(sp)
 800f4bc:	dd000417 	ldw	r20,16(sp)
 800f4c0:	dcc00317 	ldw	r19,12(sp)
 800f4c4:	dc800217 	ldw	r18,8(sp)
 800f4c8:	dc400117 	ldw	r17,4(sp)
 800f4cc:	dc000017 	ldw	r16,0(sp)
 800f4d0:	dec00904 	addi	sp,sp,36
 800f4d4:	f800283a 	ret
 800f4d8:	002f883a 	mov	r23,zero
 800f4dc:	003ff206 	br	800f4a8 <__alt_data_end+0xf800f4a8>

0800f4e0 <_fwalk_reent>:
 800f4e0:	defff704 	addi	sp,sp,-36
 800f4e4:	dd000415 	stw	r20,16(sp)
 800f4e8:	dfc00815 	stw	ra,32(sp)
 800f4ec:	ddc00715 	stw	r23,28(sp)
 800f4f0:	dd800615 	stw	r22,24(sp)
 800f4f4:	dd400515 	stw	r21,20(sp)
 800f4f8:	dcc00315 	stw	r19,12(sp)
 800f4fc:	dc800215 	stw	r18,8(sp)
 800f500:	dc400115 	stw	r17,4(sp)
 800f504:	dc000015 	stw	r16,0(sp)
 800f508:	2500b804 	addi	r20,r4,736
 800f50c:	a0002326 	beq	r20,zero,800f59c <_fwalk_reent+0xbc>
 800f510:	282b883a 	mov	r21,r5
 800f514:	2027883a 	mov	r19,r4
 800f518:	002f883a 	mov	r23,zero
 800f51c:	05800044 	movi	r22,1
 800f520:	04bfffc4 	movi	r18,-1
 800f524:	a4400117 	ldw	r17,4(r20)
 800f528:	a4000217 	ldw	r16,8(r20)
 800f52c:	8c7fffc4 	addi	r17,r17,-1
 800f530:	88000c16 	blt	r17,zero,800f564 <_fwalk_reent+0x84>
 800f534:	84000304 	addi	r16,r16,12
 800f538:	8080000b 	ldhu	r2,0(r16)
 800f53c:	8c7fffc4 	addi	r17,r17,-1
 800f540:	817ffd04 	addi	r5,r16,-12
 800f544:	b080052e 	bgeu	r22,r2,800f55c <_fwalk_reent+0x7c>
 800f548:	8080008f 	ldh	r2,2(r16)
 800f54c:	9809883a 	mov	r4,r19
 800f550:	14800226 	beq	r2,r18,800f55c <_fwalk_reent+0x7c>
 800f554:	a83ee83a 	callr	r21
 800f558:	b8aeb03a 	or	r23,r23,r2
 800f55c:	84001a04 	addi	r16,r16,104
 800f560:	8cbff51e 	bne	r17,r18,800f538 <__alt_data_end+0xf800f538>
 800f564:	a5000017 	ldw	r20,0(r20)
 800f568:	a03fee1e 	bne	r20,zero,800f524 <__alt_data_end+0xf800f524>
 800f56c:	b805883a 	mov	r2,r23
 800f570:	dfc00817 	ldw	ra,32(sp)
 800f574:	ddc00717 	ldw	r23,28(sp)
 800f578:	dd800617 	ldw	r22,24(sp)
 800f57c:	dd400517 	ldw	r21,20(sp)
 800f580:	dd000417 	ldw	r20,16(sp)
 800f584:	dcc00317 	ldw	r19,12(sp)
 800f588:	dc800217 	ldw	r18,8(sp)
 800f58c:	dc400117 	ldw	r17,4(sp)
 800f590:	dc000017 	ldw	r16,0(sp)
 800f594:	dec00904 	addi	sp,sp,36
 800f598:	f800283a 	ret
 800f59c:	002f883a 	mov	r23,zero
 800f5a0:	003ff206 	br	800f56c <__alt_data_end+0xf800f56c>

0800f5a4 <iswspace>:
 800f5a4:	00803fc4 	movi	r2,255
 800f5a8:	11000836 	bltu	r2,r4,800f5cc <iswspace+0x28>
 800f5ac:	008200b4 	movhi	r2,2050
 800f5b0:	10881204 	addi	r2,r2,8264
 800f5b4:	10800017 	ldw	r2,0(r2)
 800f5b8:	1109883a 	add	r4,r2,r4
 800f5bc:	20800043 	ldbu	r2,1(r4)
 800f5c0:	1080020c 	andi	r2,r2,8
 800f5c4:	10803fcc 	andi	r2,r2,255
 800f5c8:	f800283a 	ret
 800f5cc:	0005883a 	mov	r2,zero
 800f5d0:	f800283a 	ret

0800f5d4 <_setlocale_r>:
 800f5d4:	30001b26 	beq	r6,zero,800f644 <_setlocale_r+0x70>
 800f5d8:	014200b4 	movhi	r5,2050
 800f5dc:	defffe04 	addi	sp,sp,-8
 800f5e0:	29401304 	addi	r5,r5,76
 800f5e4:	3009883a 	mov	r4,r6
 800f5e8:	dc000015 	stw	r16,0(sp)
 800f5ec:	dfc00115 	stw	ra,4(sp)
 800f5f0:	3021883a 	mov	r16,r6
 800f5f4:	80051000 	call	8005100 <strcmp>
 800f5f8:	1000061e 	bne	r2,zero,800f614 <_setlocale_r+0x40>
 800f5fc:	008200b4 	movhi	r2,2050
 800f600:	10801204 	addi	r2,r2,72
 800f604:	dfc00117 	ldw	ra,4(sp)
 800f608:	dc000017 	ldw	r16,0(sp)
 800f60c:	dec00204 	addi	sp,sp,8
 800f610:	f800283a 	ret
 800f614:	014200b4 	movhi	r5,2050
 800f618:	29401204 	addi	r5,r5,72
 800f61c:	8009883a 	mov	r4,r16
 800f620:	80051000 	call	8005100 <strcmp>
 800f624:	103ff526 	beq	r2,zero,800f5fc <__alt_data_end+0xf800f5fc>
 800f628:	014200b4 	movhi	r5,2050
 800f62c:	297f4204 	addi	r5,r5,-760
 800f630:	8009883a 	mov	r4,r16
 800f634:	80051000 	call	8005100 <strcmp>
 800f638:	103ff026 	beq	r2,zero,800f5fc <__alt_data_end+0xf800f5fc>
 800f63c:	0005883a 	mov	r2,zero
 800f640:	003ff006 	br	800f604 <__alt_data_end+0xf800f604>
 800f644:	008200b4 	movhi	r2,2050
 800f648:	10801204 	addi	r2,r2,72
 800f64c:	f800283a 	ret

0800f650 <__locale_charset>:
 800f650:	008200b4 	movhi	r2,2050
 800f654:	10833404 	addi	r2,r2,3280
 800f658:	f800283a 	ret

0800f65c <__locale_mb_cur_max>:
 800f65c:	008200b4 	movhi	r2,2050
 800f660:	10881504 	addi	r2,r2,8276
 800f664:	10800017 	ldw	r2,0(r2)
 800f668:	f800283a 	ret

0800f66c <__locale_msgcharset>:
 800f66c:	008200b4 	movhi	r2,2050
 800f670:	10832c04 	addi	r2,r2,3248
 800f674:	f800283a 	ret

0800f678 <__locale_cjk_lang>:
 800f678:	0005883a 	mov	r2,zero
 800f67c:	f800283a 	ret

0800f680 <_localeconv_r>:
 800f680:	008200b4 	movhi	r2,2050
 800f684:	10833c04 	addi	r2,r2,3312
 800f688:	f800283a 	ret

0800f68c <setlocale>:
 800f68c:	008200b4 	movhi	r2,2050
 800f690:	10881404 	addi	r2,r2,8272
 800f694:	280d883a 	mov	r6,r5
 800f698:	200b883a 	mov	r5,r4
 800f69c:	11000017 	ldw	r4,0(r2)
 800f6a0:	800f5d41 	jmpi	800f5d4 <_setlocale_r>

0800f6a4 <localeconv>:
 800f6a4:	008200b4 	movhi	r2,2050
 800f6a8:	10833c04 	addi	r2,r2,3312
 800f6ac:	f800283a 	ret

0800f6b0 <_lseek_r>:
 800f6b0:	defffd04 	addi	sp,sp,-12
 800f6b4:	2805883a 	mov	r2,r5
 800f6b8:	dc000015 	stw	r16,0(sp)
 800f6bc:	040200b4 	movhi	r16,2050
 800f6c0:	dc400115 	stw	r17,4(sp)
 800f6c4:	300b883a 	mov	r5,r6
 800f6c8:	840f2904 	addi	r16,r16,15524
 800f6cc:	2023883a 	mov	r17,r4
 800f6d0:	380d883a 	mov	r6,r7
 800f6d4:	1009883a 	mov	r4,r2
 800f6d8:	dfc00215 	stw	ra,8(sp)
 800f6dc:	80000015 	stw	zero,0(r16)
 800f6e0:	801caf00 	call	801caf0 <lseek>
 800f6e4:	00ffffc4 	movi	r3,-1
 800f6e8:	10c00526 	beq	r2,r3,800f700 <_lseek_r+0x50>
 800f6ec:	dfc00217 	ldw	ra,8(sp)
 800f6f0:	dc400117 	ldw	r17,4(sp)
 800f6f4:	dc000017 	ldw	r16,0(sp)
 800f6f8:	dec00304 	addi	sp,sp,12
 800f6fc:	f800283a 	ret
 800f700:	80c00017 	ldw	r3,0(r16)
 800f704:	183ff926 	beq	r3,zero,800f6ec <__alt_data_end+0xf800f6ec>
 800f708:	88c00015 	stw	r3,0(r17)
 800f70c:	003ff706 	br	800f6ec <__alt_data_end+0xf800f6ec>

0800f710 <__smakebuf_r>:
 800f710:	2880030b 	ldhu	r2,12(r5)
 800f714:	10c0008c 	andi	r3,r2,2
 800f718:	1800411e 	bne	r3,zero,800f820 <__smakebuf_r+0x110>
 800f71c:	deffec04 	addi	sp,sp,-80
 800f720:	dc000f15 	stw	r16,60(sp)
 800f724:	2821883a 	mov	r16,r5
 800f728:	2940038f 	ldh	r5,14(r5)
 800f72c:	dc401015 	stw	r17,64(sp)
 800f730:	dfc01315 	stw	ra,76(sp)
 800f734:	dcc01215 	stw	r19,72(sp)
 800f738:	dc801115 	stw	r18,68(sp)
 800f73c:	2023883a 	mov	r17,r4
 800f740:	28001c16 	blt	r5,zero,800f7b4 <__smakebuf_r+0xa4>
 800f744:	d80d883a 	mov	r6,sp
 800f748:	8017dcc0 	call	8017dcc <_fstat_r>
 800f74c:	10001816 	blt	r2,zero,800f7b0 <__smakebuf_r+0xa0>
 800f750:	d8800117 	ldw	r2,4(sp)
 800f754:	00e00014 	movui	r3,32768
 800f758:	10bc000c 	andi	r2,r2,61440
 800f75c:	14c80020 	cmpeqi	r19,r2,8192
 800f760:	10c03726 	beq	r2,r3,800f840 <__smakebuf_r+0x130>
 800f764:	80c0030b 	ldhu	r3,12(r16)
 800f768:	18c20014 	ori	r3,r3,2048
 800f76c:	80c0030d 	sth	r3,12(r16)
 800f770:	00c80004 	movi	r3,8192
 800f774:	10c0521e 	bne	r2,r3,800f8c0 <__smakebuf_r+0x1b0>
 800f778:	8140038f 	ldh	r5,14(r16)
 800f77c:	8809883a 	mov	r4,r17
 800f780:	80189b40 	call	80189b4 <_isatty_r>
 800f784:	10004c26 	beq	r2,zero,800f8b8 <__smakebuf_r+0x1a8>
 800f788:	8080030b 	ldhu	r2,12(r16)
 800f78c:	80c010c4 	addi	r3,r16,67
 800f790:	80c00015 	stw	r3,0(r16)
 800f794:	10800054 	ori	r2,r2,1
 800f798:	8080030d 	sth	r2,12(r16)
 800f79c:	00800044 	movi	r2,1
 800f7a0:	80c00415 	stw	r3,16(r16)
 800f7a4:	80800515 	stw	r2,20(r16)
 800f7a8:	04810004 	movi	r18,1024
 800f7ac:	00000706 	br	800f7cc <__smakebuf_r+0xbc>
 800f7b0:	8080030b 	ldhu	r2,12(r16)
 800f7b4:	10c0200c 	andi	r3,r2,128
 800f7b8:	18001f1e 	bne	r3,zero,800f838 <__smakebuf_r+0x128>
 800f7bc:	04810004 	movi	r18,1024
 800f7c0:	10820014 	ori	r2,r2,2048
 800f7c4:	8080030d 	sth	r2,12(r16)
 800f7c8:	0027883a 	mov	r19,zero
 800f7cc:	900b883a 	mov	r5,r18
 800f7d0:	8809883a 	mov	r4,r17
 800f7d4:	8003fd40 	call	8003fd4 <_malloc_r>
 800f7d8:	10002c26 	beq	r2,zero,800f88c <__smakebuf_r+0x17c>
 800f7dc:	80c0030b 	ldhu	r3,12(r16)
 800f7e0:	01020074 	movhi	r4,2049
 800f7e4:	21394d04 	addi	r4,r4,-6860
 800f7e8:	89000f15 	stw	r4,60(r17)
 800f7ec:	18c02014 	ori	r3,r3,128
 800f7f0:	80c0030d 	sth	r3,12(r16)
 800f7f4:	80800015 	stw	r2,0(r16)
 800f7f8:	80800415 	stw	r2,16(r16)
 800f7fc:	84800515 	stw	r18,20(r16)
 800f800:	98001a1e 	bne	r19,zero,800f86c <__smakebuf_r+0x15c>
 800f804:	dfc01317 	ldw	ra,76(sp)
 800f808:	dcc01217 	ldw	r19,72(sp)
 800f80c:	dc801117 	ldw	r18,68(sp)
 800f810:	dc401017 	ldw	r17,64(sp)
 800f814:	dc000f17 	ldw	r16,60(sp)
 800f818:	dec01404 	addi	sp,sp,80
 800f81c:	f800283a 	ret
 800f820:	288010c4 	addi	r2,r5,67
 800f824:	28800015 	stw	r2,0(r5)
 800f828:	28800415 	stw	r2,16(r5)
 800f82c:	00800044 	movi	r2,1
 800f830:	28800515 	stw	r2,20(r5)
 800f834:	f800283a 	ret
 800f838:	04801004 	movi	r18,64
 800f83c:	003fe006 	br	800f7c0 <__alt_data_end+0xf800f7c0>
 800f840:	81000a17 	ldw	r4,40(r16)
 800f844:	00c20034 	movhi	r3,2048
 800f848:	18d42704 	addi	r3,r3,20636
 800f84c:	20ffc51e 	bne	r4,r3,800f764 <__alt_data_end+0xf800f764>
 800f850:	8080030b 	ldhu	r2,12(r16)
 800f854:	04810004 	movi	r18,1024
 800f858:	84801315 	stw	r18,76(r16)
 800f85c:	1484b03a 	or	r2,r2,r18
 800f860:	8080030d 	sth	r2,12(r16)
 800f864:	0027883a 	mov	r19,zero
 800f868:	003fd806 	br	800f7cc <__alt_data_end+0xf800f7cc>
 800f86c:	8140038f 	ldh	r5,14(r16)
 800f870:	8809883a 	mov	r4,r17
 800f874:	80189b40 	call	80189b4 <_isatty_r>
 800f878:	103fe226 	beq	r2,zero,800f804 <__alt_data_end+0xf800f804>
 800f87c:	8080030b 	ldhu	r2,12(r16)
 800f880:	10800054 	ori	r2,r2,1
 800f884:	8080030d 	sth	r2,12(r16)
 800f888:	003fde06 	br	800f804 <__alt_data_end+0xf800f804>
 800f88c:	8080030b 	ldhu	r2,12(r16)
 800f890:	10c0800c 	andi	r3,r2,512
 800f894:	183fdb1e 	bne	r3,zero,800f804 <__alt_data_end+0xf800f804>
 800f898:	10800094 	ori	r2,r2,2
 800f89c:	80c010c4 	addi	r3,r16,67
 800f8a0:	8080030d 	sth	r2,12(r16)
 800f8a4:	00800044 	movi	r2,1
 800f8a8:	80c00015 	stw	r3,0(r16)
 800f8ac:	80c00415 	stw	r3,16(r16)
 800f8b0:	80800515 	stw	r2,20(r16)
 800f8b4:	003fd306 	br	800f804 <__alt_data_end+0xf800f804>
 800f8b8:	04810004 	movi	r18,1024
 800f8bc:	003fc306 	br	800f7cc <__alt_data_end+0xf800f7cc>
 800f8c0:	0027883a 	mov	r19,zero
 800f8c4:	04810004 	movi	r18,1024
 800f8c8:	003fc006 	br	800f7cc <__alt_data_end+0xf800f7cc>

0800f8cc <_mbrtowc_r>:
 800f8cc:	defff704 	addi	sp,sp,-36
 800f8d0:	008200b4 	movhi	r2,2050
 800f8d4:	dc800715 	stw	r18,28(sp)
 800f8d8:	dc400615 	stw	r17,24(sp)
 800f8dc:	dc000515 	stw	r16,20(sp)
 800f8e0:	10881604 	addi	r2,r2,8280
 800f8e4:	dfc00815 	stw	ra,32(sp)
 800f8e8:	2021883a 	mov	r16,r4
 800f8ec:	dc400917 	ldw	r17,36(sp)
 800f8f0:	14800017 	ldw	r18,0(r2)
 800f8f4:	30001626 	beq	r6,zero,800f950 <_mbrtowc_r+0x84>
 800f8f8:	d9400215 	stw	r5,8(sp)
 800f8fc:	d9800315 	stw	r6,12(sp)
 800f900:	d9c00415 	stw	r7,16(sp)
 800f904:	800f6500 	call	800f650 <__locale_charset>
 800f908:	d9c00417 	ldw	r7,16(sp)
 800f90c:	d9800317 	ldw	r6,12(sp)
 800f910:	d9400217 	ldw	r5,8(sp)
 800f914:	d8800015 	stw	r2,0(sp)
 800f918:	dc400115 	stw	r17,4(sp)
 800f91c:	8009883a 	mov	r4,r16
 800f920:	903ee83a 	callr	r18
 800f924:	00ffffc4 	movi	r3,-1
 800f928:	10c0031e 	bne	r2,r3,800f938 <_mbrtowc_r+0x6c>
 800f92c:	88000015 	stw	zero,0(r17)
 800f930:	00c02284 	movi	r3,138
 800f934:	80c00015 	stw	r3,0(r16)
 800f938:	dfc00817 	ldw	ra,32(sp)
 800f93c:	dc800717 	ldw	r18,28(sp)
 800f940:	dc400617 	ldw	r17,24(sp)
 800f944:	dc000517 	ldw	r16,20(sp)
 800f948:	dec00904 	addi	sp,sp,36
 800f94c:	f800283a 	ret
 800f950:	800f6500 	call	800f650 <__locale_charset>
 800f954:	018200b4 	movhi	r6,2050
 800f958:	31bf4204 	addi	r6,r6,-760
 800f95c:	dc400115 	stw	r17,4(sp)
 800f960:	d8800015 	stw	r2,0(sp)
 800f964:	01c00044 	movi	r7,1
 800f968:	000b883a 	mov	r5,zero
 800f96c:	8009883a 	mov	r4,r16
 800f970:	903ee83a 	callr	r18
 800f974:	003feb06 	br	800f924 <__alt_data_end+0xf800f924>

0800f978 <mbrtowc>:
 800f978:	defff704 	addi	sp,sp,-36
 800f97c:	008200b4 	movhi	r2,2050
 800f980:	dc800415 	stw	r18,16(sp)
 800f984:	dc400315 	stw	r17,12(sp)
 800f988:	10881404 	addi	r2,r2,8272
 800f98c:	dfc00815 	stw	ra,32(sp)
 800f990:	dd400715 	stw	r21,28(sp)
 800f994:	dd000615 	stw	r20,24(sp)
 800f998:	dcc00515 	stw	r19,20(sp)
 800f99c:	dc000215 	stw	r16,8(sp)
 800f9a0:	3825883a 	mov	r18,r7
 800f9a4:	14400017 	ldw	r17,0(r2)
 800f9a8:	28001c26 	beq	r5,zero,800fa1c <mbrtowc+0xa4>
 800f9ac:	008200b4 	movhi	r2,2050
 800f9b0:	10881604 	addi	r2,r2,8280
 800f9b4:	15400017 	ldw	r21,0(r2)
 800f9b8:	2821883a 	mov	r16,r5
 800f9bc:	2027883a 	mov	r19,r4
 800f9c0:	3029883a 	mov	r20,r6
 800f9c4:	800f6500 	call	800f650 <__locale_charset>
 800f9c8:	d8800015 	stw	r2,0(sp)
 800f9cc:	dc800115 	stw	r18,4(sp)
 800f9d0:	a00f883a 	mov	r7,r20
 800f9d4:	800d883a 	mov	r6,r16
 800f9d8:	980b883a 	mov	r5,r19
 800f9dc:	8809883a 	mov	r4,r17
 800f9e0:	a83ee83a 	callr	r21
 800f9e4:	00ffffc4 	movi	r3,-1
 800f9e8:	10c0031e 	bne	r2,r3,800f9f8 <mbrtowc+0x80>
 800f9ec:	90000015 	stw	zero,0(r18)
 800f9f0:	00c02284 	movi	r3,138
 800f9f4:	88c00015 	stw	r3,0(r17)
 800f9f8:	dfc00817 	ldw	ra,32(sp)
 800f9fc:	dd400717 	ldw	r21,28(sp)
 800fa00:	dd000617 	ldw	r20,24(sp)
 800fa04:	dcc00517 	ldw	r19,20(sp)
 800fa08:	dc800417 	ldw	r18,16(sp)
 800fa0c:	dc400317 	ldw	r17,12(sp)
 800fa10:	dc000217 	ldw	r16,8(sp)
 800fa14:	dec00904 	addi	sp,sp,36
 800fa18:	f800283a 	ret
 800fa1c:	008200b4 	movhi	r2,2050
 800fa20:	10881604 	addi	r2,r2,8280
 800fa24:	14000017 	ldw	r16,0(r2)
 800fa28:	800f6500 	call	800f650 <__locale_charset>
 800fa2c:	018200b4 	movhi	r6,2050
 800fa30:	31bf4204 	addi	r6,r6,-760
 800fa34:	dc800115 	stw	r18,4(sp)
 800fa38:	d8800015 	stw	r2,0(sp)
 800fa3c:	01c00044 	movi	r7,1
 800fa40:	000b883a 	mov	r5,zero
 800fa44:	8809883a 	mov	r4,r17
 800fa48:	803ee83a 	callr	r16
 800fa4c:	003fe506 	br	800f9e4 <__alt_data_end+0xf800f9e4>

0800fa50 <__ascii_mbtowc>:
 800fa50:	deffff04 	addi	sp,sp,-4
 800fa54:	28000826 	beq	r5,zero,800fa78 <__ascii_mbtowc+0x28>
 800fa58:	30000926 	beq	r6,zero,800fa80 <__ascii_mbtowc+0x30>
 800fa5c:	38000b26 	beq	r7,zero,800fa8c <__ascii_mbtowc+0x3c>
 800fa60:	30800003 	ldbu	r2,0(r6)
 800fa64:	28800015 	stw	r2,0(r5)
 800fa68:	30800003 	ldbu	r2,0(r6)
 800fa6c:	1004c03a 	cmpne	r2,r2,zero
 800fa70:	dec00104 	addi	sp,sp,4
 800fa74:	f800283a 	ret
 800fa78:	d80b883a 	mov	r5,sp
 800fa7c:	303ff71e 	bne	r6,zero,800fa5c <__alt_data_end+0xf800fa5c>
 800fa80:	0005883a 	mov	r2,zero
 800fa84:	dec00104 	addi	sp,sp,4
 800fa88:	f800283a 	ret
 800fa8c:	00bfff84 	movi	r2,-2
 800fa90:	003ff706 	br	800fa70 <__alt_data_end+0xf800fa70>

0800fa94 <_mbtowc_r>:
 800fa94:	008200b4 	movhi	r2,2050
 800fa98:	defff804 	addi	sp,sp,-32
 800fa9c:	10881604 	addi	r2,r2,8280
 800faa0:	dfc00715 	stw	ra,28(sp)
 800faa4:	dc000615 	stw	r16,24(sp)
 800faa8:	14000017 	ldw	r16,0(r2)
 800faac:	d9000215 	stw	r4,8(sp)
 800fab0:	d9400315 	stw	r5,12(sp)
 800fab4:	d9800415 	stw	r6,16(sp)
 800fab8:	d9c00515 	stw	r7,20(sp)
 800fabc:	800f6500 	call	800f650 <__locale_charset>
 800fac0:	d8800015 	stw	r2,0(sp)
 800fac4:	d8800817 	ldw	r2,32(sp)
 800fac8:	d9c00517 	ldw	r7,20(sp)
 800facc:	d9800417 	ldw	r6,16(sp)
 800fad0:	d9400317 	ldw	r5,12(sp)
 800fad4:	d9000217 	ldw	r4,8(sp)
 800fad8:	d8800115 	stw	r2,4(sp)
 800fadc:	803ee83a 	callr	r16
 800fae0:	dfc00717 	ldw	ra,28(sp)
 800fae4:	dc000617 	ldw	r16,24(sp)
 800fae8:	dec00804 	addi	sp,sp,32
 800faec:	f800283a 	ret

0800faf0 <memchr>:
 800faf0:	208000cc 	andi	r2,r4,3
 800faf4:	280f883a 	mov	r7,r5
 800faf8:	10003426 	beq	r2,zero,800fbcc <memchr+0xdc>
 800fafc:	30bfffc4 	addi	r2,r6,-1
 800fb00:	30001a26 	beq	r6,zero,800fb6c <memchr+0x7c>
 800fb04:	20c00003 	ldbu	r3,0(r4)
 800fb08:	29803fcc 	andi	r6,r5,255
 800fb0c:	30c0051e 	bne	r6,r3,800fb24 <memchr+0x34>
 800fb10:	00001806 	br	800fb74 <memchr+0x84>
 800fb14:	10001526 	beq	r2,zero,800fb6c <memchr+0x7c>
 800fb18:	20c00003 	ldbu	r3,0(r4)
 800fb1c:	10bfffc4 	addi	r2,r2,-1
 800fb20:	30c01426 	beq	r6,r3,800fb74 <memchr+0x84>
 800fb24:	21000044 	addi	r4,r4,1
 800fb28:	20c000cc 	andi	r3,r4,3
 800fb2c:	183ff91e 	bne	r3,zero,800fb14 <__alt_data_end+0xf800fb14>
 800fb30:	020000c4 	movi	r8,3
 800fb34:	40801136 	bltu	r8,r2,800fb7c <memchr+0x8c>
 800fb38:	10000c26 	beq	r2,zero,800fb6c <memchr+0x7c>
 800fb3c:	20c00003 	ldbu	r3,0(r4)
 800fb40:	29403fcc 	andi	r5,r5,255
 800fb44:	28c00b26 	beq	r5,r3,800fb74 <memchr+0x84>
 800fb48:	20c00044 	addi	r3,r4,1
 800fb4c:	39803fcc 	andi	r6,r7,255
 800fb50:	2089883a 	add	r4,r4,r2
 800fb54:	00000306 	br	800fb64 <memchr+0x74>
 800fb58:	18c00044 	addi	r3,r3,1
 800fb5c:	197fffc3 	ldbu	r5,-1(r3)
 800fb60:	31400526 	beq	r6,r5,800fb78 <memchr+0x88>
 800fb64:	1805883a 	mov	r2,r3
 800fb68:	20fffb1e 	bne	r4,r3,800fb58 <__alt_data_end+0xf800fb58>
 800fb6c:	0005883a 	mov	r2,zero
 800fb70:	f800283a 	ret
 800fb74:	2005883a 	mov	r2,r4
 800fb78:	f800283a 	ret
 800fb7c:	28c03fcc 	andi	r3,r5,255
 800fb80:	1812923a 	slli	r9,r3,8
 800fb84:	02ffbff4 	movhi	r11,65279
 800fb88:	02a02074 	movhi	r10,32897
 800fb8c:	48d2b03a 	or	r9,r9,r3
 800fb90:	4806943a 	slli	r3,r9,16
 800fb94:	5affbfc4 	addi	r11,r11,-257
 800fb98:	52a02004 	addi	r10,r10,-32640
 800fb9c:	48d2b03a 	or	r9,r9,r3
 800fba0:	20c00017 	ldw	r3,0(r4)
 800fba4:	48c6f03a 	xor	r3,r9,r3
 800fba8:	1acd883a 	add	r6,r3,r11
 800fbac:	00c6303a 	nor	r3,zero,r3
 800fbb0:	30c6703a 	and	r3,r6,r3
 800fbb4:	1a86703a 	and	r3,r3,r10
 800fbb8:	183fe01e 	bne	r3,zero,800fb3c <__alt_data_end+0xf800fb3c>
 800fbbc:	10bfff04 	addi	r2,r2,-4
 800fbc0:	21000104 	addi	r4,r4,4
 800fbc4:	40bff636 	bltu	r8,r2,800fba0 <__alt_data_end+0xf800fba0>
 800fbc8:	003fdb06 	br	800fb38 <__alt_data_end+0xf800fb38>
 800fbcc:	3005883a 	mov	r2,r6
 800fbd0:	003fd706 	br	800fb30 <__alt_data_end+0xf800fb30>

0800fbd4 <memcpy>:
 800fbd4:	defffd04 	addi	sp,sp,-12
 800fbd8:	dfc00215 	stw	ra,8(sp)
 800fbdc:	dc400115 	stw	r17,4(sp)
 800fbe0:	dc000015 	stw	r16,0(sp)
 800fbe4:	00c003c4 	movi	r3,15
 800fbe8:	2005883a 	mov	r2,r4
 800fbec:	1980452e 	bgeu	r3,r6,800fd04 <memcpy+0x130>
 800fbf0:	2906b03a 	or	r3,r5,r4
 800fbf4:	18c000cc 	andi	r3,r3,3
 800fbf8:	1800441e 	bne	r3,zero,800fd0c <memcpy+0x138>
 800fbfc:	347ffc04 	addi	r17,r6,-16
 800fc00:	8822d13a 	srli	r17,r17,4
 800fc04:	28c00104 	addi	r3,r5,4
 800fc08:	23400104 	addi	r13,r4,4
 800fc0c:	8820913a 	slli	r16,r17,4
 800fc10:	2b000204 	addi	r12,r5,8
 800fc14:	22c00204 	addi	r11,r4,8
 800fc18:	84000504 	addi	r16,r16,20
 800fc1c:	2a800304 	addi	r10,r5,12
 800fc20:	22400304 	addi	r9,r4,12
 800fc24:	2c21883a 	add	r16,r5,r16
 800fc28:	2811883a 	mov	r8,r5
 800fc2c:	200f883a 	mov	r7,r4
 800fc30:	41000017 	ldw	r4,0(r8)
 800fc34:	1fc00017 	ldw	ra,0(r3)
 800fc38:	63c00017 	ldw	r15,0(r12)
 800fc3c:	39000015 	stw	r4,0(r7)
 800fc40:	53800017 	ldw	r14,0(r10)
 800fc44:	6fc00015 	stw	ra,0(r13)
 800fc48:	5bc00015 	stw	r15,0(r11)
 800fc4c:	4b800015 	stw	r14,0(r9)
 800fc50:	18c00404 	addi	r3,r3,16
 800fc54:	39c00404 	addi	r7,r7,16
 800fc58:	42000404 	addi	r8,r8,16
 800fc5c:	6b400404 	addi	r13,r13,16
 800fc60:	63000404 	addi	r12,r12,16
 800fc64:	5ac00404 	addi	r11,r11,16
 800fc68:	52800404 	addi	r10,r10,16
 800fc6c:	4a400404 	addi	r9,r9,16
 800fc70:	1c3fef1e 	bne	r3,r16,800fc30 <__alt_data_end+0xf800fc30>
 800fc74:	89c00044 	addi	r7,r17,1
 800fc78:	380e913a 	slli	r7,r7,4
 800fc7c:	310003cc 	andi	r4,r6,15
 800fc80:	02c000c4 	movi	r11,3
 800fc84:	11c7883a 	add	r3,r2,r7
 800fc88:	29cb883a 	add	r5,r5,r7
 800fc8c:	5900212e 	bgeu	r11,r4,800fd14 <memcpy+0x140>
 800fc90:	1813883a 	mov	r9,r3
 800fc94:	2811883a 	mov	r8,r5
 800fc98:	200f883a 	mov	r7,r4
 800fc9c:	42800017 	ldw	r10,0(r8)
 800fca0:	4a400104 	addi	r9,r9,4
 800fca4:	39ffff04 	addi	r7,r7,-4
 800fca8:	4abfff15 	stw	r10,-4(r9)
 800fcac:	42000104 	addi	r8,r8,4
 800fcb0:	59fffa36 	bltu	r11,r7,800fc9c <__alt_data_end+0xf800fc9c>
 800fcb4:	213fff04 	addi	r4,r4,-4
 800fcb8:	2008d0ba 	srli	r4,r4,2
 800fcbc:	318000cc 	andi	r6,r6,3
 800fcc0:	21000044 	addi	r4,r4,1
 800fcc4:	2109883a 	add	r4,r4,r4
 800fcc8:	2109883a 	add	r4,r4,r4
 800fccc:	1907883a 	add	r3,r3,r4
 800fcd0:	290b883a 	add	r5,r5,r4
 800fcd4:	30000626 	beq	r6,zero,800fcf0 <memcpy+0x11c>
 800fcd8:	198d883a 	add	r6,r3,r6
 800fcdc:	29c00003 	ldbu	r7,0(r5)
 800fce0:	18c00044 	addi	r3,r3,1
 800fce4:	29400044 	addi	r5,r5,1
 800fce8:	19ffffc5 	stb	r7,-1(r3)
 800fcec:	19bffb1e 	bne	r3,r6,800fcdc <__alt_data_end+0xf800fcdc>
 800fcf0:	dfc00217 	ldw	ra,8(sp)
 800fcf4:	dc400117 	ldw	r17,4(sp)
 800fcf8:	dc000017 	ldw	r16,0(sp)
 800fcfc:	dec00304 	addi	sp,sp,12
 800fd00:	f800283a 	ret
 800fd04:	2007883a 	mov	r3,r4
 800fd08:	003ff206 	br	800fcd4 <__alt_data_end+0xf800fcd4>
 800fd0c:	2007883a 	mov	r3,r4
 800fd10:	003ff106 	br	800fcd8 <__alt_data_end+0xf800fcd8>
 800fd14:	200d883a 	mov	r6,r4
 800fd18:	003fee06 	br	800fcd4 <__alt_data_end+0xf800fcd4>

0800fd1c <memmove>:
 800fd1c:	2005883a 	mov	r2,r4
 800fd20:	29000b2e 	bgeu	r5,r4,800fd50 <memmove+0x34>
 800fd24:	298f883a 	add	r7,r5,r6
 800fd28:	21c0092e 	bgeu	r4,r7,800fd50 <memmove+0x34>
 800fd2c:	2187883a 	add	r3,r4,r6
 800fd30:	198bc83a 	sub	r5,r3,r6
 800fd34:	30004826 	beq	r6,zero,800fe58 <memmove+0x13c>
 800fd38:	39ffffc4 	addi	r7,r7,-1
 800fd3c:	39000003 	ldbu	r4,0(r7)
 800fd40:	18ffffc4 	addi	r3,r3,-1
 800fd44:	19000005 	stb	r4,0(r3)
 800fd48:	28fffb1e 	bne	r5,r3,800fd38 <__alt_data_end+0xf800fd38>
 800fd4c:	f800283a 	ret
 800fd50:	00c003c4 	movi	r3,15
 800fd54:	1980412e 	bgeu	r3,r6,800fe5c <memmove+0x140>
 800fd58:	2886b03a 	or	r3,r5,r2
 800fd5c:	18c000cc 	andi	r3,r3,3
 800fd60:	1800401e 	bne	r3,zero,800fe64 <memmove+0x148>
 800fd64:	33fffc04 	addi	r15,r6,-16
 800fd68:	781ed13a 	srli	r15,r15,4
 800fd6c:	28c00104 	addi	r3,r5,4
 800fd70:	13400104 	addi	r13,r2,4
 800fd74:	781c913a 	slli	r14,r15,4
 800fd78:	2b000204 	addi	r12,r5,8
 800fd7c:	12c00204 	addi	r11,r2,8
 800fd80:	73800504 	addi	r14,r14,20
 800fd84:	2a800304 	addi	r10,r5,12
 800fd88:	12400304 	addi	r9,r2,12
 800fd8c:	2b9d883a 	add	r14,r5,r14
 800fd90:	2811883a 	mov	r8,r5
 800fd94:	100f883a 	mov	r7,r2
 800fd98:	41000017 	ldw	r4,0(r8)
 800fd9c:	39c00404 	addi	r7,r7,16
 800fda0:	18c00404 	addi	r3,r3,16
 800fda4:	393ffc15 	stw	r4,-16(r7)
 800fda8:	193ffc17 	ldw	r4,-16(r3)
 800fdac:	6b400404 	addi	r13,r13,16
 800fdb0:	5ac00404 	addi	r11,r11,16
 800fdb4:	693ffc15 	stw	r4,-16(r13)
 800fdb8:	61000017 	ldw	r4,0(r12)
 800fdbc:	4a400404 	addi	r9,r9,16
 800fdc0:	42000404 	addi	r8,r8,16
 800fdc4:	593ffc15 	stw	r4,-16(r11)
 800fdc8:	51000017 	ldw	r4,0(r10)
 800fdcc:	63000404 	addi	r12,r12,16
 800fdd0:	52800404 	addi	r10,r10,16
 800fdd4:	493ffc15 	stw	r4,-16(r9)
 800fdd8:	1bbfef1e 	bne	r3,r14,800fd98 <__alt_data_end+0xf800fd98>
 800fddc:	79000044 	addi	r4,r15,1
 800fde0:	2008913a 	slli	r4,r4,4
 800fde4:	328003cc 	andi	r10,r6,15
 800fde8:	02c000c4 	movi	r11,3
 800fdec:	1107883a 	add	r3,r2,r4
 800fdf0:	290b883a 	add	r5,r5,r4
 800fdf4:	5a801e2e 	bgeu	r11,r10,800fe70 <memmove+0x154>
 800fdf8:	1813883a 	mov	r9,r3
 800fdfc:	2811883a 	mov	r8,r5
 800fe00:	500f883a 	mov	r7,r10
 800fe04:	41000017 	ldw	r4,0(r8)
 800fe08:	4a400104 	addi	r9,r9,4
 800fe0c:	39ffff04 	addi	r7,r7,-4
 800fe10:	493fff15 	stw	r4,-4(r9)
 800fe14:	42000104 	addi	r8,r8,4
 800fe18:	59fffa36 	bltu	r11,r7,800fe04 <__alt_data_end+0xf800fe04>
 800fe1c:	513fff04 	addi	r4,r10,-4
 800fe20:	2008d0ba 	srli	r4,r4,2
 800fe24:	318000cc 	andi	r6,r6,3
 800fe28:	21000044 	addi	r4,r4,1
 800fe2c:	2109883a 	add	r4,r4,r4
 800fe30:	2109883a 	add	r4,r4,r4
 800fe34:	1907883a 	add	r3,r3,r4
 800fe38:	290b883a 	add	r5,r5,r4
 800fe3c:	30000b26 	beq	r6,zero,800fe6c <memmove+0x150>
 800fe40:	198d883a 	add	r6,r3,r6
 800fe44:	29c00003 	ldbu	r7,0(r5)
 800fe48:	18c00044 	addi	r3,r3,1
 800fe4c:	29400044 	addi	r5,r5,1
 800fe50:	19ffffc5 	stb	r7,-1(r3)
 800fe54:	19bffb1e 	bne	r3,r6,800fe44 <__alt_data_end+0xf800fe44>
 800fe58:	f800283a 	ret
 800fe5c:	1007883a 	mov	r3,r2
 800fe60:	003ff606 	br	800fe3c <__alt_data_end+0xf800fe3c>
 800fe64:	1007883a 	mov	r3,r2
 800fe68:	003ff506 	br	800fe40 <__alt_data_end+0xf800fe40>
 800fe6c:	f800283a 	ret
 800fe70:	500d883a 	mov	r6,r10
 800fe74:	003ff106 	br	800fe3c <__alt_data_end+0xf800fe3c>

0800fe78 <_Balloc>:
 800fe78:	20801317 	ldw	r2,76(r4)
 800fe7c:	defffc04 	addi	sp,sp,-16
 800fe80:	dc400115 	stw	r17,4(sp)
 800fe84:	dc000015 	stw	r16,0(sp)
 800fe88:	dfc00315 	stw	ra,12(sp)
 800fe8c:	dc800215 	stw	r18,8(sp)
 800fe90:	2023883a 	mov	r17,r4
 800fe94:	2821883a 	mov	r16,r5
 800fe98:	10000f26 	beq	r2,zero,800fed8 <_Balloc+0x60>
 800fe9c:	8407883a 	add	r3,r16,r16
 800fea0:	18c7883a 	add	r3,r3,r3
 800fea4:	10c7883a 	add	r3,r2,r3
 800fea8:	18800017 	ldw	r2,0(r3)
 800feac:	10001126 	beq	r2,zero,800fef4 <_Balloc+0x7c>
 800feb0:	11000017 	ldw	r4,0(r2)
 800feb4:	19000015 	stw	r4,0(r3)
 800feb8:	10000415 	stw	zero,16(r2)
 800febc:	10000315 	stw	zero,12(r2)
 800fec0:	dfc00317 	ldw	ra,12(sp)
 800fec4:	dc800217 	ldw	r18,8(sp)
 800fec8:	dc400117 	ldw	r17,4(sp)
 800fecc:	dc000017 	ldw	r16,0(sp)
 800fed0:	dec00404 	addi	sp,sp,16
 800fed4:	f800283a 	ret
 800fed8:	01800844 	movi	r6,33
 800fedc:	01400104 	movi	r5,4
 800fee0:	80179fc0 	call	80179fc <_calloc_r>
 800fee4:	88801315 	stw	r2,76(r17)
 800fee8:	103fec1e 	bne	r2,zero,800fe9c <__alt_data_end+0xf800fe9c>
 800feec:	0005883a 	mov	r2,zero
 800fef0:	003ff306 	br	800fec0 <__alt_data_end+0xf800fec0>
 800fef4:	01400044 	movi	r5,1
 800fef8:	2c24983a 	sll	r18,r5,r16
 800fefc:	8809883a 	mov	r4,r17
 800ff00:	91800144 	addi	r6,r18,5
 800ff04:	318d883a 	add	r6,r6,r6
 800ff08:	318d883a 	add	r6,r6,r6
 800ff0c:	80179fc0 	call	80179fc <_calloc_r>
 800ff10:	103ff626 	beq	r2,zero,800feec <__alt_data_end+0xf800feec>
 800ff14:	14000115 	stw	r16,4(r2)
 800ff18:	14800215 	stw	r18,8(r2)
 800ff1c:	003fe606 	br	800feb8 <__alt_data_end+0xf800feb8>

0800ff20 <_Bfree>:
 800ff20:	28000826 	beq	r5,zero,800ff44 <_Bfree+0x24>
 800ff24:	28c00117 	ldw	r3,4(r5)
 800ff28:	20801317 	ldw	r2,76(r4)
 800ff2c:	18c7883a 	add	r3,r3,r3
 800ff30:	18c7883a 	add	r3,r3,r3
 800ff34:	10c5883a 	add	r2,r2,r3
 800ff38:	10c00017 	ldw	r3,0(r2)
 800ff3c:	28c00015 	stw	r3,0(r5)
 800ff40:	11400015 	stw	r5,0(r2)
 800ff44:	f800283a 	ret

0800ff48 <__multadd>:
 800ff48:	defffa04 	addi	sp,sp,-24
 800ff4c:	dc800315 	stw	r18,12(sp)
 800ff50:	dc400215 	stw	r17,8(sp)
 800ff54:	dc000115 	stw	r16,4(sp)
 800ff58:	2823883a 	mov	r17,r5
 800ff5c:	2c000417 	ldw	r16,16(r5)
 800ff60:	dfc00515 	stw	ra,20(sp)
 800ff64:	dcc00415 	stw	r19,16(sp)
 800ff68:	2025883a 	mov	r18,r4
 800ff6c:	29400504 	addi	r5,r5,20
 800ff70:	0011883a 	mov	r8,zero
 800ff74:	28c00017 	ldw	r3,0(r5)
 800ff78:	29400104 	addi	r5,r5,4
 800ff7c:	42000044 	addi	r8,r8,1
 800ff80:	18bfffcc 	andi	r2,r3,65535
 800ff84:	1185383a 	mul	r2,r2,r6
 800ff88:	1806d43a 	srli	r3,r3,16
 800ff8c:	11cf883a 	add	r7,r2,r7
 800ff90:	3808d43a 	srli	r4,r7,16
 800ff94:	1987383a 	mul	r3,r3,r6
 800ff98:	38bfffcc 	andi	r2,r7,65535
 800ff9c:	1907883a 	add	r3,r3,r4
 800ffa0:	1808943a 	slli	r4,r3,16
 800ffa4:	180ed43a 	srli	r7,r3,16
 800ffa8:	2085883a 	add	r2,r4,r2
 800ffac:	28bfff15 	stw	r2,-4(r5)
 800ffb0:	443ff016 	blt	r8,r16,800ff74 <__alt_data_end+0xf800ff74>
 800ffb4:	38000926 	beq	r7,zero,800ffdc <__multadd+0x94>
 800ffb8:	88800217 	ldw	r2,8(r17)
 800ffbc:	80800f0e 	bge	r16,r2,800fffc <__multadd+0xb4>
 800ffc0:	80800144 	addi	r2,r16,5
 800ffc4:	1085883a 	add	r2,r2,r2
 800ffc8:	1085883a 	add	r2,r2,r2
 800ffcc:	8885883a 	add	r2,r17,r2
 800ffd0:	11c00015 	stw	r7,0(r2)
 800ffd4:	84000044 	addi	r16,r16,1
 800ffd8:	8c000415 	stw	r16,16(r17)
 800ffdc:	8805883a 	mov	r2,r17
 800ffe0:	dfc00517 	ldw	ra,20(sp)
 800ffe4:	dcc00417 	ldw	r19,16(sp)
 800ffe8:	dc800317 	ldw	r18,12(sp)
 800ffec:	dc400217 	ldw	r17,8(sp)
 800fff0:	dc000117 	ldw	r16,4(sp)
 800fff4:	dec00604 	addi	sp,sp,24
 800fff8:	f800283a 	ret
 800fffc:	89400117 	ldw	r5,4(r17)
 8010000:	9009883a 	mov	r4,r18
 8010004:	d9c00015 	stw	r7,0(sp)
 8010008:	29400044 	addi	r5,r5,1
 801000c:	800fe780 	call	800fe78 <_Balloc>
 8010010:	89800417 	ldw	r6,16(r17)
 8010014:	89400304 	addi	r5,r17,12
 8010018:	11000304 	addi	r4,r2,12
 801001c:	31800084 	addi	r6,r6,2
 8010020:	318d883a 	add	r6,r6,r6
 8010024:	318d883a 	add	r6,r6,r6
 8010028:	1027883a 	mov	r19,r2
 801002c:	800fbd40 	call	800fbd4 <memcpy>
 8010030:	d9c00017 	ldw	r7,0(sp)
 8010034:	88000a26 	beq	r17,zero,8010060 <__multadd+0x118>
 8010038:	88c00117 	ldw	r3,4(r17)
 801003c:	90801317 	ldw	r2,76(r18)
 8010040:	18c7883a 	add	r3,r3,r3
 8010044:	18c7883a 	add	r3,r3,r3
 8010048:	10c5883a 	add	r2,r2,r3
 801004c:	10c00017 	ldw	r3,0(r2)
 8010050:	88c00015 	stw	r3,0(r17)
 8010054:	14400015 	stw	r17,0(r2)
 8010058:	9823883a 	mov	r17,r19
 801005c:	003fd806 	br	800ffc0 <__alt_data_end+0xf800ffc0>
 8010060:	9823883a 	mov	r17,r19
 8010064:	003fd606 	br	800ffc0 <__alt_data_end+0xf800ffc0>

08010068 <__s2b>:
 8010068:	defff904 	addi	sp,sp,-28
 801006c:	dc400115 	stw	r17,4(sp)
 8010070:	dc000015 	stw	r16,0(sp)
 8010074:	2023883a 	mov	r17,r4
 8010078:	2821883a 	mov	r16,r5
 801007c:	39000204 	addi	r4,r7,8
 8010080:	01400244 	movi	r5,9
 8010084:	dcc00315 	stw	r19,12(sp)
 8010088:	dc800215 	stw	r18,8(sp)
 801008c:	dfc00615 	stw	ra,24(sp)
 8010090:	dd400515 	stw	r21,20(sp)
 8010094:	dd000415 	stw	r20,16(sp)
 8010098:	3825883a 	mov	r18,r7
 801009c:	3027883a 	mov	r19,r6
 80100a0:	80038c00 	call	80038c0 <__divsi3>
 80100a4:	00c00044 	movi	r3,1
 80100a8:	000b883a 	mov	r5,zero
 80100ac:	1880030e 	bge	r3,r2,80100bc <__s2b+0x54>
 80100b0:	18c7883a 	add	r3,r3,r3
 80100b4:	29400044 	addi	r5,r5,1
 80100b8:	18bffd16 	blt	r3,r2,80100b0 <__alt_data_end+0xf80100b0>
 80100bc:	8809883a 	mov	r4,r17
 80100c0:	800fe780 	call	800fe78 <_Balloc>
 80100c4:	d8c00717 	ldw	r3,28(sp)
 80100c8:	10c00515 	stw	r3,20(r2)
 80100cc:	00c00044 	movi	r3,1
 80100d0:	10c00415 	stw	r3,16(r2)
 80100d4:	00c00244 	movi	r3,9
 80100d8:	1cc0210e 	bge	r3,r19,8010160 <__s2b+0xf8>
 80100dc:	80eb883a 	add	r21,r16,r3
 80100e0:	a829883a 	mov	r20,r21
 80100e4:	84e1883a 	add	r16,r16,r19
 80100e8:	a1c00007 	ldb	r7,0(r20)
 80100ec:	01800284 	movi	r6,10
 80100f0:	a5000044 	addi	r20,r20,1
 80100f4:	100b883a 	mov	r5,r2
 80100f8:	39fff404 	addi	r7,r7,-48
 80100fc:	8809883a 	mov	r4,r17
 8010100:	800ff480 	call	800ff48 <__multadd>
 8010104:	a43ff81e 	bne	r20,r16,80100e8 <__alt_data_end+0xf80100e8>
 8010108:	ace1883a 	add	r16,r21,r19
 801010c:	843ffe04 	addi	r16,r16,-8
 8010110:	9c800a0e 	bge	r19,r18,801013c <__s2b+0xd4>
 8010114:	94e5c83a 	sub	r18,r18,r19
 8010118:	84a5883a 	add	r18,r16,r18
 801011c:	81c00007 	ldb	r7,0(r16)
 8010120:	01800284 	movi	r6,10
 8010124:	84000044 	addi	r16,r16,1
 8010128:	100b883a 	mov	r5,r2
 801012c:	39fff404 	addi	r7,r7,-48
 8010130:	8809883a 	mov	r4,r17
 8010134:	800ff480 	call	800ff48 <__multadd>
 8010138:	84bff81e 	bne	r16,r18,801011c <__alt_data_end+0xf801011c>
 801013c:	dfc00617 	ldw	ra,24(sp)
 8010140:	dd400517 	ldw	r21,20(sp)
 8010144:	dd000417 	ldw	r20,16(sp)
 8010148:	dcc00317 	ldw	r19,12(sp)
 801014c:	dc800217 	ldw	r18,8(sp)
 8010150:	dc400117 	ldw	r17,4(sp)
 8010154:	dc000017 	ldw	r16,0(sp)
 8010158:	dec00704 	addi	sp,sp,28
 801015c:	f800283a 	ret
 8010160:	84000284 	addi	r16,r16,10
 8010164:	1827883a 	mov	r19,r3
 8010168:	003fe906 	br	8010110 <__alt_data_end+0xf8010110>

0801016c <__hi0bits>:
 801016c:	20bfffec 	andhi	r2,r4,65535
 8010170:	1000141e 	bne	r2,zero,80101c4 <__hi0bits+0x58>
 8010174:	2008943a 	slli	r4,r4,16
 8010178:	00800404 	movi	r2,16
 801017c:	20ffc02c 	andhi	r3,r4,65280
 8010180:	1800021e 	bne	r3,zero,801018c <__hi0bits+0x20>
 8010184:	2008923a 	slli	r4,r4,8
 8010188:	10800204 	addi	r2,r2,8
 801018c:	20fc002c 	andhi	r3,r4,61440
 8010190:	1800021e 	bne	r3,zero,801019c <__hi0bits+0x30>
 8010194:	2008913a 	slli	r4,r4,4
 8010198:	10800104 	addi	r2,r2,4
 801019c:	20f0002c 	andhi	r3,r4,49152
 80101a0:	1800031e 	bne	r3,zero,80101b0 <__hi0bits+0x44>
 80101a4:	2109883a 	add	r4,r4,r4
 80101a8:	10800084 	addi	r2,r2,2
 80101ac:	2109883a 	add	r4,r4,r4
 80101b0:	20000316 	blt	r4,zero,80101c0 <__hi0bits+0x54>
 80101b4:	2110002c 	andhi	r4,r4,16384
 80101b8:	2000041e 	bne	r4,zero,80101cc <__hi0bits+0x60>
 80101bc:	00800804 	movi	r2,32
 80101c0:	f800283a 	ret
 80101c4:	0005883a 	mov	r2,zero
 80101c8:	003fec06 	br	801017c <__alt_data_end+0xf801017c>
 80101cc:	10800044 	addi	r2,r2,1
 80101d0:	f800283a 	ret

080101d4 <__lo0bits>:
 80101d4:	20c00017 	ldw	r3,0(r4)
 80101d8:	188001cc 	andi	r2,r3,7
 80101dc:	10000826 	beq	r2,zero,8010200 <__lo0bits+0x2c>
 80101e0:	1880004c 	andi	r2,r3,1
 80101e4:	1000211e 	bne	r2,zero,801026c <__lo0bits+0x98>
 80101e8:	1880008c 	andi	r2,r3,2
 80101ec:	1000211e 	bne	r2,zero,8010274 <__lo0bits+0xa0>
 80101f0:	1806d0ba 	srli	r3,r3,2
 80101f4:	00800084 	movi	r2,2
 80101f8:	20c00015 	stw	r3,0(r4)
 80101fc:	f800283a 	ret
 8010200:	18bfffcc 	andi	r2,r3,65535
 8010204:	10001326 	beq	r2,zero,8010254 <__lo0bits+0x80>
 8010208:	0005883a 	mov	r2,zero
 801020c:	19403fcc 	andi	r5,r3,255
 8010210:	2800021e 	bne	r5,zero,801021c <__lo0bits+0x48>
 8010214:	1806d23a 	srli	r3,r3,8
 8010218:	10800204 	addi	r2,r2,8
 801021c:	194003cc 	andi	r5,r3,15
 8010220:	2800021e 	bne	r5,zero,801022c <__lo0bits+0x58>
 8010224:	1806d13a 	srli	r3,r3,4
 8010228:	10800104 	addi	r2,r2,4
 801022c:	194000cc 	andi	r5,r3,3
 8010230:	2800021e 	bne	r5,zero,801023c <__lo0bits+0x68>
 8010234:	1806d0ba 	srli	r3,r3,2
 8010238:	10800084 	addi	r2,r2,2
 801023c:	1940004c 	andi	r5,r3,1
 8010240:	2800081e 	bne	r5,zero,8010264 <__lo0bits+0x90>
 8010244:	1806d07a 	srli	r3,r3,1
 8010248:	1800051e 	bne	r3,zero,8010260 <__lo0bits+0x8c>
 801024c:	00800804 	movi	r2,32
 8010250:	f800283a 	ret
 8010254:	1806d43a 	srli	r3,r3,16
 8010258:	00800404 	movi	r2,16
 801025c:	003feb06 	br	801020c <__alt_data_end+0xf801020c>
 8010260:	10800044 	addi	r2,r2,1
 8010264:	20c00015 	stw	r3,0(r4)
 8010268:	f800283a 	ret
 801026c:	0005883a 	mov	r2,zero
 8010270:	f800283a 	ret
 8010274:	1806d07a 	srli	r3,r3,1
 8010278:	00800044 	movi	r2,1
 801027c:	20c00015 	stw	r3,0(r4)
 8010280:	f800283a 	ret

08010284 <__i2b>:
 8010284:	defffd04 	addi	sp,sp,-12
 8010288:	dc000015 	stw	r16,0(sp)
 801028c:	04000044 	movi	r16,1
 8010290:	dc400115 	stw	r17,4(sp)
 8010294:	2823883a 	mov	r17,r5
 8010298:	800b883a 	mov	r5,r16
 801029c:	dfc00215 	stw	ra,8(sp)
 80102a0:	800fe780 	call	800fe78 <_Balloc>
 80102a4:	14400515 	stw	r17,20(r2)
 80102a8:	14000415 	stw	r16,16(r2)
 80102ac:	dfc00217 	ldw	ra,8(sp)
 80102b0:	dc400117 	ldw	r17,4(sp)
 80102b4:	dc000017 	ldw	r16,0(sp)
 80102b8:	dec00304 	addi	sp,sp,12
 80102bc:	f800283a 	ret

080102c0 <__multiply>:
 80102c0:	defffa04 	addi	sp,sp,-24
 80102c4:	dcc00315 	stw	r19,12(sp)
 80102c8:	dc800215 	stw	r18,8(sp)
 80102cc:	34c00417 	ldw	r19,16(r6)
 80102d0:	2c800417 	ldw	r18,16(r5)
 80102d4:	dd000415 	stw	r20,16(sp)
 80102d8:	dc400115 	stw	r17,4(sp)
 80102dc:	dfc00515 	stw	ra,20(sp)
 80102e0:	dc000015 	stw	r16,0(sp)
 80102e4:	2829883a 	mov	r20,r5
 80102e8:	3023883a 	mov	r17,r6
 80102ec:	94c0050e 	bge	r18,r19,8010304 <__multiply+0x44>
 80102f0:	9007883a 	mov	r3,r18
 80102f4:	3029883a 	mov	r20,r6
 80102f8:	9825883a 	mov	r18,r19
 80102fc:	2823883a 	mov	r17,r5
 8010300:	1827883a 	mov	r19,r3
 8010304:	a0800217 	ldw	r2,8(r20)
 8010308:	94e1883a 	add	r16,r18,r19
 801030c:	a1400117 	ldw	r5,4(r20)
 8010310:	1400010e 	bge	r2,r16,8010318 <__multiply+0x58>
 8010314:	29400044 	addi	r5,r5,1
 8010318:	800fe780 	call	800fe78 <_Balloc>
 801031c:	8415883a 	add	r10,r16,r16
 8010320:	12c00504 	addi	r11,r2,20
 8010324:	5295883a 	add	r10,r10,r10
 8010328:	5a95883a 	add	r10,r11,r10
 801032c:	5807883a 	mov	r3,r11
 8010330:	5a80032e 	bgeu	r11,r10,8010340 <__multiply+0x80>
 8010334:	18000015 	stw	zero,0(r3)
 8010338:	18c00104 	addi	r3,r3,4
 801033c:	1abffd36 	bltu	r3,r10,8010334 <__alt_data_end+0xf8010334>
 8010340:	9ce7883a 	add	r19,r19,r19
 8010344:	94a5883a 	add	r18,r18,r18
 8010348:	89800504 	addi	r6,r17,20
 801034c:	9ce7883a 	add	r19,r19,r19
 8010350:	a3400504 	addi	r13,r20,20
 8010354:	94a5883a 	add	r18,r18,r18
 8010358:	34d9883a 	add	r12,r6,r19
 801035c:	6c93883a 	add	r9,r13,r18
 8010360:	3300422e 	bgeu	r6,r12,801046c <__multiply+0x1ac>
 8010364:	37c00017 	ldw	ra,0(r6)
 8010368:	fbffffcc 	andi	r15,ra,65535
 801036c:	78001b26 	beq	r15,zero,80103dc <__multiply+0x11c>
 8010370:	5811883a 	mov	r8,r11
 8010374:	681d883a 	mov	r14,r13
 8010378:	000f883a 	mov	r7,zero
 801037c:	71000017 	ldw	r4,0(r14)
 8010380:	40c00017 	ldw	r3,0(r8)
 8010384:	73800104 	addi	r14,r14,4
 8010388:	217fffcc 	andi	r5,r4,65535
 801038c:	2bcb383a 	mul	r5,r5,r15
 8010390:	2008d43a 	srli	r4,r4,16
 8010394:	1c7fffcc 	andi	r17,r3,65535
 8010398:	2c4b883a 	add	r5,r5,r17
 801039c:	29cb883a 	add	r5,r5,r7
 80103a0:	23c9383a 	mul	r4,r4,r15
 80103a4:	1806d43a 	srli	r3,r3,16
 80103a8:	280ed43a 	srli	r7,r5,16
 80103ac:	297fffcc 	andi	r5,r5,65535
 80103b0:	20c7883a 	add	r3,r4,r3
 80103b4:	19c7883a 	add	r3,r3,r7
 80103b8:	1808943a 	slli	r4,r3,16
 80103bc:	4023883a 	mov	r17,r8
 80103c0:	180ed43a 	srli	r7,r3,16
 80103c4:	214ab03a 	or	r5,r4,r5
 80103c8:	41400015 	stw	r5,0(r8)
 80103cc:	42000104 	addi	r8,r8,4
 80103d0:	727fea36 	bltu	r14,r9,801037c <__alt_data_end+0xf801037c>
 80103d4:	89c00115 	stw	r7,4(r17)
 80103d8:	37c00017 	ldw	ra,0(r6)
 80103dc:	f83ed43a 	srli	ra,ra,16
 80103e0:	f8001f26 	beq	ra,zero,8010460 <__multiply+0x1a0>
 80103e4:	58c00017 	ldw	r3,0(r11)
 80103e8:	681d883a 	mov	r14,r13
 80103ec:	581f883a 	mov	r15,r11
 80103f0:	1811883a 	mov	r8,r3
 80103f4:	5825883a 	mov	r18,r11
 80103f8:	000f883a 	mov	r7,zero
 80103fc:	00000106 	br	8010404 <__multiply+0x144>
 8010400:	8825883a 	mov	r18,r17
 8010404:	7140000b 	ldhu	r5,0(r14)
 8010408:	4010d43a 	srli	r8,r8,16
 801040c:	193fffcc 	andi	r4,r3,65535
 8010410:	2fcb383a 	mul	r5,r5,ra
 8010414:	7bc00104 	addi	r15,r15,4
 8010418:	73800104 	addi	r14,r14,4
 801041c:	2a0b883a 	add	r5,r5,r8
 8010420:	29cb883a 	add	r5,r5,r7
 8010424:	2806943a 	slli	r3,r5,16
 8010428:	94400104 	addi	r17,r18,4
 801042c:	280ad43a 	srli	r5,r5,16
 8010430:	1908b03a 	or	r4,r3,r4
 8010434:	793fff15 	stw	r4,-4(r15)
 8010438:	70ffff17 	ldw	r3,-4(r14)
 801043c:	8a000017 	ldw	r8,0(r17)
 8010440:	1806d43a 	srli	r3,r3,16
 8010444:	413fffcc 	andi	r4,r8,65535
 8010448:	1fc7383a 	mul	r3,r3,ra
 801044c:	1907883a 	add	r3,r3,r4
 8010450:	1947883a 	add	r3,r3,r5
 8010454:	180ed43a 	srli	r7,r3,16
 8010458:	727fe936 	bltu	r14,r9,8010400 <__alt_data_end+0xf8010400>
 801045c:	90c00115 	stw	r3,4(r18)
 8010460:	31800104 	addi	r6,r6,4
 8010464:	5ac00104 	addi	r11,r11,4
 8010468:	333fbe36 	bltu	r6,r12,8010364 <__alt_data_end+0xf8010364>
 801046c:	0400090e 	bge	zero,r16,8010494 <__multiply+0x1d4>
 8010470:	50ffff17 	ldw	r3,-4(r10)
 8010474:	52bfff04 	addi	r10,r10,-4
 8010478:	18000326 	beq	r3,zero,8010488 <__multiply+0x1c8>
 801047c:	00000506 	br	8010494 <__multiply+0x1d4>
 8010480:	50c00017 	ldw	r3,0(r10)
 8010484:	1800031e 	bne	r3,zero,8010494 <__multiply+0x1d4>
 8010488:	843fffc4 	addi	r16,r16,-1
 801048c:	52bfff04 	addi	r10,r10,-4
 8010490:	803ffb1e 	bne	r16,zero,8010480 <__alt_data_end+0xf8010480>
 8010494:	14000415 	stw	r16,16(r2)
 8010498:	dfc00517 	ldw	ra,20(sp)
 801049c:	dd000417 	ldw	r20,16(sp)
 80104a0:	dcc00317 	ldw	r19,12(sp)
 80104a4:	dc800217 	ldw	r18,8(sp)
 80104a8:	dc400117 	ldw	r17,4(sp)
 80104ac:	dc000017 	ldw	r16,0(sp)
 80104b0:	dec00604 	addi	sp,sp,24
 80104b4:	f800283a 	ret

080104b8 <__pow5mult>:
 80104b8:	defffa04 	addi	sp,sp,-24
 80104bc:	dcc00315 	stw	r19,12(sp)
 80104c0:	dc000015 	stw	r16,0(sp)
 80104c4:	dfc00515 	stw	ra,20(sp)
 80104c8:	dd000415 	stw	r20,16(sp)
 80104cc:	dc800215 	stw	r18,8(sp)
 80104d0:	dc400115 	stw	r17,4(sp)
 80104d4:	308000cc 	andi	r2,r6,3
 80104d8:	3021883a 	mov	r16,r6
 80104dc:	2027883a 	mov	r19,r4
 80104e0:	10002f1e 	bne	r2,zero,80105a0 <__pow5mult+0xe8>
 80104e4:	2825883a 	mov	r18,r5
 80104e8:	8021d0ba 	srai	r16,r16,2
 80104ec:	80001a26 	beq	r16,zero,8010558 <__pow5mult+0xa0>
 80104f0:	9c401217 	ldw	r17,72(r19)
 80104f4:	8800061e 	bne	r17,zero,8010510 <__pow5mult+0x58>
 80104f8:	00003406 	br	80105cc <__pow5mult+0x114>
 80104fc:	8021d07a 	srai	r16,r16,1
 8010500:	80001526 	beq	r16,zero,8010558 <__pow5mult+0xa0>
 8010504:	88800017 	ldw	r2,0(r17)
 8010508:	10001c26 	beq	r2,zero,801057c <__pow5mult+0xc4>
 801050c:	1023883a 	mov	r17,r2
 8010510:	8080004c 	andi	r2,r16,1
 8010514:	103ff926 	beq	r2,zero,80104fc <__alt_data_end+0xf80104fc>
 8010518:	880d883a 	mov	r6,r17
 801051c:	900b883a 	mov	r5,r18
 8010520:	9809883a 	mov	r4,r19
 8010524:	80102c00 	call	80102c0 <__multiply>
 8010528:	90001b26 	beq	r18,zero,8010598 <__pow5mult+0xe0>
 801052c:	91000117 	ldw	r4,4(r18)
 8010530:	98c01317 	ldw	r3,76(r19)
 8010534:	8021d07a 	srai	r16,r16,1
 8010538:	2109883a 	add	r4,r4,r4
 801053c:	2109883a 	add	r4,r4,r4
 8010540:	1907883a 	add	r3,r3,r4
 8010544:	19000017 	ldw	r4,0(r3)
 8010548:	91000015 	stw	r4,0(r18)
 801054c:	1c800015 	stw	r18,0(r3)
 8010550:	1025883a 	mov	r18,r2
 8010554:	803feb1e 	bne	r16,zero,8010504 <__alt_data_end+0xf8010504>
 8010558:	9005883a 	mov	r2,r18
 801055c:	dfc00517 	ldw	ra,20(sp)
 8010560:	dd000417 	ldw	r20,16(sp)
 8010564:	dcc00317 	ldw	r19,12(sp)
 8010568:	dc800217 	ldw	r18,8(sp)
 801056c:	dc400117 	ldw	r17,4(sp)
 8010570:	dc000017 	ldw	r16,0(sp)
 8010574:	dec00604 	addi	sp,sp,24
 8010578:	f800283a 	ret
 801057c:	880d883a 	mov	r6,r17
 8010580:	880b883a 	mov	r5,r17
 8010584:	9809883a 	mov	r4,r19
 8010588:	80102c00 	call	80102c0 <__multiply>
 801058c:	88800015 	stw	r2,0(r17)
 8010590:	10000015 	stw	zero,0(r2)
 8010594:	003fdd06 	br	801050c <__alt_data_end+0xf801050c>
 8010598:	1025883a 	mov	r18,r2
 801059c:	003fd706 	br	80104fc <__alt_data_end+0xf80104fc>
 80105a0:	10bfffc4 	addi	r2,r2,-1
 80105a4:	1085883a 	add	r2,r2,r2
 80105a8:	00c200b4 	movhi	r3,2050
 80105ac:	18c01604 	addi	r3,r3,88
 80105b0:	1085883a 	add	r2,r2,r2
 80105b4:	1885883a 	add	r2,r3,r2
 80105b8:	11800017 	ldw	r6,0(r2)
 80105bc:	000f883a 	mov	r7,zero
 80105c0:	800ff480 	call	800ff48 <__multadd>
 80105c4:	1025883a 	mov	r18,r2
 80105c8:	003fc706 	br	80104e8 <__alt_data_end+0xf80104e8>
 80105cc:	05000044 	movi	r20,1
 80105d0:	a00b883a 	mov	r5,r20
 80105d4:	9809883a 	mov	r4,r19
 80105d8:	800fe780 	call	800fe78 <_Balloc>
 80105dc:	1023883a 	mov	r17,r2
 80105e0:	00809c44 	movi	r2,625
 80105e4:	88800515 	stw	r2,20(r17)
 80105e8:	8d000415 	stw	r20,16(r17)
 80105ec:	9c401215 	stw	r17,72(r19)
 80105f0:	88000015 	stw	zero,0(r17)
 80105f4:	003fc606 	br	8010510 <__alt_data_end+0xf8010510>

080105f8 <__lshift>:
 80105f8:	defff904 	addi	sp,sp,-28
 80105fc:	dd400515 	stw	r21,20(sp)
 8010600:	dcc00315 	stw	r19,12(sp)
 8010604:	302bd17a 	srai	r21,r6,5
 8010608:	2cc00417 	ldw	r19,16(r5)
 801060c:	28800217 	ldw	r2,8(r5)
 8010610:	dd000415 	stw	r20,16(sp)
 8010614:	ace7883a 	add	r19,r21,r19
 8010618:	dc800215 	stw	r18,8(sp)
 801061c:	dc400115 	stw	r17,4(sp)
 8010620:	dc000015 	stw	r16,0(sp)
 8010624:	dfc00615 	stw	ra,24(sp)
 8010628:	9c000044 	addi	r16,r19,1
 801062c:	2823883a 	mov	r17,r5
 8010630:	3029883a 	mov	r20,r6
 8010634:	2025883a 	mov	r18,r4
 8010638:	29400117 	ldw	r5,4(r5)
 801063c:	1400030e 	bge	r2,r16,801064c <__lshift+0x54>
 8010640:	1085883a 	add	r2,r2,r2
 8010644:	29400044 	addi	r5,r5,1
 8010648:	143ffd16 	blt	r2,r16,8010640 <__alt_data_end+0xf8010640>
 801064c:	9009883a 	mov	r4,r18
 8010650:	800fe780 	call	800fe78 <_Balloc>
 8010654:	10c00504 	addi	r3,r2,20
 8010658:	0540070e 	bge	zero,r21,8010678 <__lshift+0x80>
 801065c:	ad6b883a 	add	r21,r21,r21
 8010660:	ad6b883a 	add	r21,r21,r21
 8010664:	1809883a 	mov	r4,r3
 8010668:	1d47883a 	add	r3,r3,r21
 801066c:	20000015 	stw	zero,0(r4)
 8010670:	21000104 	addi	r4,r4,4
 8010674:	193ffd1e 	bne	r3,r4,801066c <__alt_data_end+0xf801066c>
 8010678:	8a000417 	ldw	r8,16(r17)
 801067c:	89000504 	addi	r4,r17,20
 8010680:	a18007cc 	andi	r6,r20,31
 8010684:	4211883a 	add	r8,r8,r8
 8010688:	4211883a 	add	r8,r8,r8
 801068c:	2211883a 	add	r8,r4,r8
 8010690:	30002326 	beq	r6,zero,8010720 <__lshift+0x128>
 8010694:	02400804 	movi	r9,32
 8010698:	4993c83a 	sub	r9,r9,r6
 801069c:	000b883a 	mov	r5,zero
 80106a0:	21c00017 	ldw	r7,0(r4)
 80106a4:	1815883a 	mov	r10,r3
 80106a8:	18c00104 	addi	r3,r3,4
 80106ac:	398e983a 	sll	r7,r7,r6
 80106b0:	21000104 	addi	r4,r4,4
 80106b4:	394ab03a 	or	r5,r7,r5
 80106b8:	197fff15 	stw	r5,-4(r3)
 80106bc:	217fff17 	ldw	r5,-4(r4)
 80106c0:	2a4ad83a 	srl	r5,r5,r9
 80106c4:	223ff636 	bltu	r4,r8,80106a0 <__alt_data_end+0xf80106a0>
 80106c8:	51400115 	stw	r5,4(r10)
 80106cc:	28001a1e 	bne	r5,zero,8010738 <__lshift+0x140>
 80106d0:	843fffc4 	addi	r16,r16,-1
 80106d4:	14000415 	stw	r16,16(r2)
 80106d8:	88000826 	beq	r17,zero,80106fc <__lshift+0x104>
 80106dc:	89000117 	ldw	r4,4(r17)
 80106e0:	90c01317 	ldw	r3,76(r18)
 80106e4:	2109883a 	add	r4,r4,r4
 80106e8:	2109883a 	add	r4,r4,r4
 80106ec:	1907883a 	add	r3,r3,r4
 80106f0:	19000017 	ldw	r4,0(r3)
 80106f4:	89000015 	stw	r4,0(r17)
 80106f8:	1c400015 	stw	r17,0(r3)
 80106fc:	dfc00617 	ldw	ra,24(sp)
 8010700:	dd400517 	ldw	r21,20(sp)
 8010704:	dd000417 	ldw	r20,16(sp)
 8010708:	dcc00317 	ldw	r19,12(sp)
 801070c:	dc800217 	ldw	r18,8(sp)
 8010710:	dc400117 	ldw	r17,4(sp)
 8010714:	dc000017 	ldw	r16,0(sp)
 8010718:	dec00704 	addi	sp,sp,28
 801071c:	f800283a 	ret
 8010720:	21400017 	ldw	r5,0(r4)
 8010724:	18c00104 	addi	r3,r3,4
 8010728:	21000104 	addi	r4,r4,4
 801072c:	197fff15 	stw	r5,-4(r3)
 8010730:	223ffb36 	bltu	r4,r8,8010720 <__alt_data_end+0xf8010720>
 8010734:	003fe606 	br	80106d0 <__alt_data_end+0xf80106d0>
 8010738:	9c000084 	addi	r16,r19,2
 801073c:	003fe406 	br	80106d0 <__alt_data_end+0xf80106d0>

08010740 <__mcmp>:
 8010740:	20800417 	ldw	r2,16(r4)
 8010744:	28c00417 	ldw	r3,16(r5)
 8010748:	10c5c83a 	sub	r2,r2,r3
 801074c:	1000111e 	bne	r2,zero,8010794 <__mcmp+0x54>
 8010750:	18c7883a 	add	r3,r3,r3
 8010754:	18c7883a 	add	r3,r3,r3
 8010758:	21000504 	addi	r4,r4,20
 801075c:	29400504 	addi	r5,r5,20
 8010760:	20c5883a 	add	r2,r4,r3
 8010764:	28cb883a 	add	r5,r5,r3
 8010768:	00000106 	br	8010770 <__mcmp+0x30>
 801076c:	20800a2e 	bgeu	r4,r2,8010798 <__mcmp+0x58>
 8010770:	10bfff04 	addi	r2,r2,-4
 8010774:	297fff04 	addi	r5,r5,-4
 8010778:	11800017 	ldw	r6,0(r2)
 801077c:	28c00017 	ldw	r3,0(r5)
 8010780:	30fffa26 	beq	r6,r3,801076c <__alt_data_end+0xf801076c>
 8010784:	30c00236 	bltu	r6,r3,8010790 <__mcmp+0x50>
 8010788:	00800044 	movi	r2,1
 801078c:	f800283a 	ret
 8010790:	00bfffc4 	movi	r2,-1
 8010794:	f800283a 	ret
 8010798:	0005883a 	mov	r2,zero
 801079c:	f800283a 	ret

080107a0 <__mdiff>:
 80107a0:	28c00417 	ldw	r3,16(r5)
 80107a4:	30800417 	ldw	r2,16(r6)
 80107a8:	defffa04 	addi	sp,sp,-24
 80107ac:	dcc00315 	stw	r19,12(sp)
 80107b0:	dc800215 	stw	r18,8(sp)
 80107b4:	dfc00515 	stw	ra,20(sp)
 80107b8:	dd000415 	stw	r20,16(sp)
 80107bc:	dc400115 	stw	r17,4(sp)
 80107c0:	dc000015 	stw	r16,0(sp)
 80107c4:	1887c83a 	sub	r3,r3,r2
 80107c8:	2825883a 	mov	r18,r5
 80107cc:	3027883a 	mov	r19,r6
 80107d0:	1800141e 	bne	r3,zero,8010824 <__mdiff+0x84>
 80107d4:	1085883a 	add	r2,r2,r2
 80107d8:	1085883a 	add	r2,r2,r2
 80107dc:	2a000504 	addi	r8,r5,20
 80107e0:	34000504 	addi	r16,r6,20
 80107e4:	4087883a 	add	r3,r8,r2
 80107e8:	8085883a 	add	r2,r16,r2
 80107ec:	00000106 	br	80107f4 <__mdiff+0x54>
 80107f0:	40c0592e 	bgeu	r8,r3,8010958 <__mdiff+0x1b8>
 80107f4:	18ffff04 	addi	r3,r3,-4
 80107f8:	10bfff04 	addi	r2,r2,-4
 80107fc:	19c00017 	ldw	r7,0(r3)
 8010800:	11400017 	ldw	r5,0(r2)
 8010804:	397ffa26 	beq	r7,r5,80107f0 <__alt_data_end+0xf80107f0>
 8010808:	3940592e 	bgeu	r7,r5,8010970 <__mdiff+0x1d0>
 801080c:	9005883a 	mov	r2,r18
 8010810:	4023883a 	mov	r17,r8
 8010814:	9825883a 	mov	r18,r19
 8010818:	05000044 	movi	r20,1
 801081c:	1027883a 	mov	r19,r2
 8010820:	00000406 	br	8010834 <__mdiff+0x94>
 8010824:	18005616 	blt	r3,zero,8010980 <__mdiff+0x1e0>
 8010828:	34400504 	addi	r17,r6,20
 801082c:	2c000504 	addi	r16,r5,20
 8010830:	0029883a 	mov	r20,zero
 8010834:	91400117 	ldw	r5,4(r18)
 8010838:	800fe780 	call	800fe78 <_Balloc>
 801083c:	92400417 	ldw	r9,16(r18)
 8010840:	9b000417 	ldw	r12,16(r19)
 8010844:	12c00504 	addi	r11,r2,20
 8010848:	4a51883a 	add	r8,r9,r9
 801084c:	6319883a 	add	r12,r12,r12
 8010850:	4211883a 	add	r8,r8,r8
 8010854:	6319883a 	add	r12,r12,r12
 8010858:	15000315 	stw	r20,12(r2)
 801085c:	8211883a 	add	r8,r16,r8
 8010860:	8b19883a 	add	r12,r17,r12
 8010864:	0007883a 	mov	r3,zero
 8010868:	81400017 	ldw	r5,0(r16)
 801086c:	89c00017 	ldw	r7,0(r17)
 8010870:	59800104 	addi	r6,r11,4
 8010874:	293fffcc 	andi	r4,r5,65535
 8010878:	20c7883a 	add	r3,r4,r3
 801087c:	393fffcc 	andi	r4,r7,65535
 8010880:	1909c83a 	sub	r4,r3,r4
 8010884:	280ad43a 	srli	r5,r5,16
 8010888:	380ed43a 	srli	r7,r7,16
 801088c:	2007d43a 	srai	r3,r4,16
 8010890:	213fffcc 	andi	r4,r4,65535
 8010894:	29cbc83a 	sub	r5,r5,r7
 8010898:	28c7883a 	add	r3,r5,r3
 801089c:	180a943a 	slli	r5,r3,16
 80108a0:	8c400104 	addi	r17,r17,4
 80108a4:	84000104 	addi	r16,r16,4
 80108a8:	2908b03a 	or	r4,r5,r4
 80108ac:	59000015 	stw	r4,0(r11)
 80108b0:	1807d43a 	srai	r3,r3,16
 80108b4:	3015883a 	mov	r10,r6
 80108b8:	3017883a 	mov	r11,r6
 80108bc:	8b3fea36 	bltu	r17,r12,8010868 <__alt_data_end+0xf8010868>
 80108c0:	8200162e 	bgeu	r16,r8,801091c <__mdiff+0x17c>
 80108c4:	8017883a 	mov	r11,r16
 80108c8:	59400017 	ldw	r5,0(r11)
 80108cc:	31800104 	addi	r6,r6,4
 80108d0:	5ac00104 	addi	r11,r11,4
 80108d4:	293fffcc 	andi	r4,r5,65535
 80108d8:	20c7883a 	add	r3,r4,r3
 80108dc:	280ed43a 	srli	r7,r5,16
 80108e0:	180bd43a 	srai	r5,r3,16
 80108e4:	193fffcc 	andi	r4,r3,65535
 80108e8:	3947883a 	add	r3,r7,r5
 80108ec:	180a943a 	slli	r5,r3,16
 80108f0:	1807d43a 	srai	r3,r3,16
 80108f4:	2908b03a 	or	r4,r5,r4
 80108f8:	313fff15 	stw	r4,-4(r6)
 80108fc:	5a3ff236 	bltu	r11,r8,80108c8 <__alt_data_end+0xf80108c8>
 8010900:	0406303a 	nor	r3,zero,r16
 8010904:	1a07883a 	add	r3,r3,r8
 8010908:	1806d0ba 	srli	r3,r3,2
 801090c:	18c00044 	addi	r3,r3,1
 8010910:	18c7883a 	add	r3,r3,r3
 8010914:	18c7883a 	add	r3,r3,r3
 8010918:	50d5883a 	add	r10,r10,r3
 801091c:	50ffff04 	addi	r3,r10,-4
 8010920:	2000041e 	bne	r4,zero,8010934 <__mdiff+0x194>
 8010924:	18ffff04 	addi	r3,r3,-4
 8010928:	19000017 	ldw	r4,0(r3)
 801092c:	4a7fffc4 	addi	r9,r9,-1
 8010930:	203ffc26 	beq	r4,zero,8010924 <__alt_data_end+0xf8010924>
 8010934:	12400415 	stw	r9,16(r2)
 8010938:	dfc00517 	ldw	ra,20(sp)
 801093c:	dd000417 	ldw	r20,16(sp)
 8010940:	dcc00317 	ldw	r19,12(sp)
 8010944:	dc800217 	ldw	r18,8(sp)
 8010948:	dc400117 	ldw	r17,4(sp)
 801094c:	dc000017 	ldw	r16,0(sp)
 8010950:	dec00604 	addi	sp,sp,24
 8010954:	f800283a 	ret
 8010958:	000b883a 	mov	r5,zero
 801095c:	800fe780 	call	800fe78 <_Balloc>
 8010960:	00c00044 	movi	r3,1
 8010964:	10c00415 	stw	r3,16(r2)
 8010968:	10000515 	stw	zero,20(r2)
 801096c:	003ff206 	br	8010938 <__alt_data_end+0xf8010938>
 8010970:	8023883a 	mov	r17,r16
 8010974:	0029883a 	mov	r20,zero
 8010978:	4021883a 	mov	r16,r8
 801097c:	003fad06 	br	8010834 <__alt_data_end+0xf8010834>
 8010980:	9005883a 	mov	r2,r18
 8010984:	94400504 	addi	r17,r18,20
 8010988:	9c000504 	addi	r16,r19,20
 801098c:	9825883a 	mov	r18,r19
 8010990:	05000044 	movi	r20,1
 8010994:	1027883a 	mov	r19,r2
 8010998:	003fa606 	br	8010834 <__alt_data_end+0xf8010834>

0801099c <__ulp>:
 801099c:	295ffc2c 	andhi	r5,r5,32752
 80109a0:	00bf3034 	movhi	r2,64704
 80109a4:	2887883a 	add	r3,r5,r2
 80109a8:	00c0020e 	bge	zero,r3,80109b4 <__ulp+0x18>
 80109ac:	0005883a 	mov	r2,zero
 80109b0:	f800283a 	ret
 80109b4:	00c7c83a 	sub	r3,zero,r3
 80109b8:	1807d53a 	srai	r3,r3,20
 80109bc:	008004c4 	movi	r2,19
 80109c0:	10c00b0e 	bge	r2,r3,80109f0 <__ulp+0x54>
 80109c4:	18bffb04 	addi	r2,r3,-20
 80109c8:	01000784 	movi	r4,30
 80109cc:	0007883a 	mov	r3,zero
 80109d0:	20800516 	blt	r4,r2,80109e8 <__ulp+0x4c>
 80109d4:	010007c4 	movi	r4,31
 80109d8:	2089c83a 	sub	r4,r4,r2
 80109dc:	00800044 	movi	r2,1
 80109e0:	1104983a 	sll	r2,r2,r4
 80109e4:	f800283a 	ret
 80109e8:	00800044 	movi	r2,1
 80109ec:	f800283a 	ret
 80109f0:	01400234 	movhi	r5,8
 80109f4:	28c7d83a 	sra	r3,r5,r3
 80109f8:	0005883a 	mov	r2,zero
 80109fc:	f800283a 	ret

08010a00 <__b2d>:
 8010a00:	defffa04 	addi	sp,sp,-24
 8010a04:	dc000015 	stw	r16,0(sp)
 8010a08:	24000417 	ldw	r16,16(r4)
 8010a0c:	dc400115 	stw	r17,4(sp)
 8010a10:	24400504 	addi	r17,r4,20
 8010a14:	8421883a 	add	r16,r16,r16
 8010a18:	8421883a 	add	r16,r16,r16
 8010a1c:	8c21883a 	add	r16,r17,r16
 8010a20:	dc800215 	stw	r18,8(sp)
 8010a24:	84bfff17 	ldw	r18,-4(r16)
 8010a28:	dd000415 	stw	r20,16(sp)
 8010a2c:	dcc00315 	stw	r19,12(sp)
 8010a30:	9009883a 	mov	r4,r18
 8010a34:	2829883a 	mov	r20,r5
 8010a38:	dfc00515 	stw	ra,20(sp)
 8010a3c:	801016c0 	call	801016c <__hi0bits>
 8010a40:	00c00804 	movi	r3,32
 8010a44:	1889c83a 	sub	r4,r3,r2
 8010a48:	a1000015 	stw	r4,0(r20)
 8010a4c:	01000284 	movi	r4,10
 8010a50:	84ffff04 	addi	r19,r16,-4
 8010a54:	20801216 	blt	r4,r2,8010aa0 <__b2d+0xa0>
 8010a58:	018002c4 	movi	r6,11
 8010a5c:	308dc83a 	sub	r6,r6,r2
 8010a60:	9186d83a 	srl	r3,r18,r6
 8010a64:	18cffc34 	orhi	r3,r3,16368
 8010a68:	8cc0212e 	bgeu	r17,r19,8010af0 <__b2d+0xf0>
 8010a6c:	813ffe17 	ldw	r4,-8(r16)
 8010a70:	218cd83a 	srl	r6,r4,r6
 8010a74:	10800544 	addi	r2,r2,21
 8010a78:	9084983a 	sll	r2,r18,r2
 8010a7c:	1184b03a 	or	r2,r2,r6
 8010a80:	dfc00517 	ldw	ra,20(sp)
 8010a84:	dd000417 	ldw	r20,16(sp)
 8010a88:	dcc00317 	ldw	r19,12(sp)
 8010a8c:	dc800217 	ldw	r18,8(sp)
 8010a90:	dc400117 	ldw	r17,4(sp)
 8010a94:	dc000017 	ldw	r16,0(sp)
 8010a98:	dec00604 	addi	sp,sp,24
 8010a9c:	f800283a 	ret
 8010aa0:	8cc00f2e 	bgeu	r17,r19,8010ae0 <__b2d+0xe0>
 8010aa4:	117ffd44 	addi	r5,r2,-11
 8010aa8:	80bffe17 	ldw	r2,-8(r16)
 8010aac:	28000e26 	beq	r5,zero,8010ae8 <__b2d+0xe8>
 8010ab0:	1949c83a 	sub	r4,r3,r5
 8010ab4:	9164983a 	sll	r18,r18,r5
 8010ab8:	1106d83a 	srl	r3,r2,r4
 8010abc:	81bffe04 	addi	r6,r16,-8
 8010ac0:	948ffc34 	orhi	r18,r18,16368
 8010ac4:	90c6b03a 	or	r3,r18,r3
 8010ac8:	89800e2e 	bgeu	r17,r6,8010b04 <__b2d+0x104>
 8010acc:	81bffd17 	ldw	r6,-12(r16)
 8010ad0:	1144983a 	sll	r2,r2,r5
 8010ad4:	310ad83a 	srl	r5,r6,r4
 8010ad8:	2884b03a 	or	r2,r5,r2
 8010adc:	003fe806 	br	8010a80 <__alt_data_end+0xf8010a80>
 8010ae0:	10bffd44 	addi	r2,r2,-11
 8010ae4:	1000041e 	bne	r2,zero,8010af8 <__b2d+0xf8>
 8010ae8:	90cffc34 	orhi	r3,r18,16368
 8010aec:	003fe406 	br	8010a80 <__alt_data_end+0xf8010a80>
 8010af0:	000d883a 	mov	r6,zero
 8010af4:	003fdf06 	br	8010a74 <__alt_data_end+0xf8010a74>
 8010af8:	90a4983a 	sll	r18,r18,r2
 8010afc:	0005883a 	mov	r2,zero
 8010b00:	003ff906 	br	8010ae8 <__alt_data_end+0xf8010ae8>
 8010b04:	1144983a 	sll	r2,r2,r5
 8010b08:	003fdd06 	br	8010a80 <__alt_data_end+0xf8010a80>

08010b0c <__d2b>:
 8010b0c:	defff804 	addi	sp,sp,-32
 8010b10:	dc000215 	stw	r16,8(sp)
 8010b14:	3021883a 	mov	r16,r6
 8010b18:	dc400315 	stw	r17,12(sp)
 8010b1c:	8022907a 	slli	r17,r16,1
 8010b20:	dd000615 	stw	r20,24(sp)
 8010b24:	2829883a 	mov	r20,r5
 8010b28:	01400044 	movi	r5,1
 8010b2c:	dcc00515 	stw	r19,20(sp)
 8010b30:	dc800415 	stw	r18,16(sp)
 8010b34:	dfc00715 	stw	ra,28(sp)
 8010b38:	3825883a 	mov	r18,r7
 8010b3c:	8822d57a 	srli	r17,r17,21
 8010b40:	800fe780 	call	800fe78 <_Balloc>
 8010b44:	1027883a 	mov	r19,r2
 8010b48:	00800434 	movhi	r2,16
 8010b4c:	10bfffc4 	addi	r2,r2,-1
 8010b50:	808c703a 	and	r6,r16,r2
 8010b54:	88000126 	beq	r17,zero,8010b5c <__d2b+0x50>
 8010b58:	31800434 	orhi	r6,r6,16
 8010b5c:	d9800015 	stw	r6,0(sp)
 8010b60:	a0002426 	beq	r20,zero,8010bf4 <__d2b+0xe8>
 8010b64:	d9000104 	addi	r4,sp,4
 8010b68:	dd000115 	stw	r20,4(sp)
 8010b6c:	80101d40 	call	80101d4 <__lo0bits>
 8010b70:	d8c00017 	ldw	r3,0(sp)
 8010b74:	10002f1e 	bne	r2,zero,8010c34 <__d2b+0x128>
 8010b78:	d9000117 	ldw	r4,4(sp)
 8010b7c:	99000515 	stw	r4,20(r19)
 8010b80:	1821003a 	cmpeq	r16,r3,zero
 8010b84:	01000084 	movi	r4,2
 8010b88:	2421c83a 	sub	r16,r4,r16
 8010b8c:	98c00615 	stw	r3,24(r19)
 8010b90:	9c000415 	stw	r16,16(r19)
 8010b94:	88001f1e 	bne	r17,zero,8010c14 <__d2b+0x108>
 8010b98:	10bef384 	addi	r2,r2,-1074
 8010b9c:	90800015 	stw	r2,0(r18)
 8010ba0:	00900034 	movhi	r2,16384
 8010ba4:	10bfffc4 	addi	r2,r2,-1
 8010ba8:	8085883a 	add	r2,r16,r2
 8010bac:	1085883a 	add	r2,r2,r2
 8010bb0:	1085883a 	add	r2,r2,r2
 8010bb4:	9885883a 	add	r2,r19,r2
 8010bb8:	11000517 	ldw	r4,20(r2)
 8010bbc:	8020917a 	slli	r16,r16,5
 8010bc0:	801016c0 	call	801016c <__hi0bits>
 8010bc4:	d8c00817 	ldw	r3,32(sp)
 8010bc8:	8085c83a 	sub	r2,r16,r2
 8010bcc:	18800015 	stw	r2,0(r3)
 8010bd0:	9805883a 	mov	r2,r19
 8010bd4:	dfc00717 	ldw	ra,28(sp)
 8010bd8:	dd000617 	ldw	r20,24(sp)
 8010bdc:	dcc00517 	ldw	r19,20(sp)
 8010be0:	dc800417 	ldw	r18,16(sp)
 8010be4:	dc400317 	ldw	r17,12(sp)
 8010be8:	dc000217 	ldw	r16,8(sp)
 8010bec:	dec00804 	addi	sp,sp,32
 8010bf0:	f800283a 	ret
 8010bf4:	d809883a 	mov	r4,sp
 8010bf8:	80101d40 	call	80101d4 <__lo0bits>
 8010bfc:	d8c00017 	ldw	r3,0(sp)
 8010c00:	04000044 	movi	r16,1
 8010c04:	9c000415 	stw	r16,16(r19)
 8010c08:	98c00515 	stw	r3,20(r19)
 8010c0c:	10800804 	addi	r2,r2,32
 8010c10:	883fe126 	beq	r17,zero,8010b98 <__alt_data_end+0xf8010b98>
 8010c14:	00c00d44 	movi	r3,53
 8010c18:	8c7ef344 	addi	r17,r17,-1075
 8010c1c:	88a3883a 	add	r17,r17,r2
 8010c20:	1885c83a 	sub	r2,r3,r2
 8010c24:	d8c00817 	ldw	r3,32(sp)
 8010c28:	94400015 	stw	r17,0(r18)
 8010c2c:	18800015 	stw	r2,0(r3)
 8010c30:	003fe706 	br	8010bd0 <__alt_data_end+0xf8010bd0>
 8010c34:	01000804 	movi	r4,32
 8010c38:	2089c83a 	sub	r4,r4,r2
 8010c3c:	1908983a 	sll	r4,r3,r4
 8010c40:	d9400117 	ldw	r5,4(sp)
 8010c44:	1886d83a 	srl	r3,r3,r2
 8010c48:	2148b03a 	or	r4,r4,r5
 8010c4c:	99000515 	stw	r4,20(r19)
 8010c50:	d8c00015 	stw	r3,0(sp)
 8010c54:	003fca06 	br	8010b80 <__alt_data_end+0xf8010b80>

08010c58 <__ratio>:
 8010c58:	defff904 	addi	sp,sp,-28
 8010c5c:	dc400315 	stw	r17,12(sp)
 8010c60:	2823883a 	mov	r17,r5
 8010c64:	d9400104 	addi	r5,sp,4
 8010c68:	dfc00615 	stw	ra,24(sp)
 8010c6c:	dcc00515 	stw	r19,20(sp)
 8010c70:	dc800415 	stw	r18,16(sp)
 8010c74:	2027883a 	mov	r19,r4
 8010c78:	dc000215 	stw	r16,8(sp)
 8010c7c:	8010a000 	call	8010a00 <__b2d>
 8010c80:	d80b883a 	mov	r5,sp
 8010c84:	8809883a 	mov	r4,r17
 8010c88:	1025883a 	mov	r18,r2
 8010c8c:	1821883a 	mov	r16,r3
 8010c90:	8010a000 	call	8010a00 <__b2d>
 8010c94:	8a000417 	ldw	r8,16(r17)
 8010c98:	99000417 	ldw	r4,16(r19)
 8010c9c:	d9400117 	ldw	r5,4(sp)
 8010ca0:	2209c83a 	sub	r4,r4,r8
 8010ca4:	2010917a 	slli	r8,r4,5
 8010ca8:	d9000017 	ldw	r4,0(sp)
 8010cac:	2909c83a 	sub	r4,r5,r4
 8010cb0:	4109883a 	add	r4,r8,r4
 8010cb4:	01000e0e 	bge	zero,r4,8010cf0 <__ratio+0x98>
 8010cb8:	2008953a 	slli	r4,r4,20
 8010cbc:	2421883a 	add	r16,r4,r16
 8010cc0:	100d883a 	mov	r6,r2
 8010cc4:	180f883a 	mov	r7,r3
 8010cc8:	9009883a 	mov	r4,r18
 8010ccc:	800b883a 	mov	r5,r16
 8010cd0:	801a4440 	call	801a444 <__divdf3>
 8010cd4:	dfc00617 	ldw	ra,24(sp)
 8010cd8:	dcc00517 	ldw	r19,20(sp)
 8010cdc:	dc800417 	ldw	r18,16(sp)
 8010ce0:	dc400317 	ldw	r17,12(sp)
 8010ce4:	dc000217 	ldw	r16,8(sp)
 8010ce8:	dec00704 	addi	sp,sp,28
 8010cec:	f800283a 	ret
 8010cf0:	2008953a 	slli	r4,r4,20
 8010cf4:	1907c83a 	sub	r3,r3,r4
 8010cf8:	003ff106 	br	8010cc0 <__alt_data_end+0xf8010cc0>

08010cfc <_mprec_log10>:
 8010cfc:	defffe04 	addi	sp,sp,-8
 8010d00:	dc000015 	stw	r16,0(sp)
 8010d04:	dfc00115 	stw	ra,4(sp)
 8010d08:	008005c4 	movi	r2,23
 8010d0c:	2021883a 	mov	r16,r4
 8010d10:	11000d0e 	bge	r2,r4,8010d48 <_mprec_log10+0x4c>
 8010d14:	0005883a 	mov	r2,zero
 8010d18:	00cffc34 	movhi	r3,16368
 8010d1c:	843fffc4 	addi	r16,r16,-1
 8010d20:	000d883a 	mov	r6,zero
 8010d24:	01d00934 	movhi	r7,16420
 8010d28:	1009883a 	mov	r4,r2
 8010d2c:	180b883a 	mov	r5,r3
 8010d30:	801af840 	call	801af84 <__muldf3>
 8010d34:	803ff91e 	bne	r16,zero,8010d1c <__alt_data_end+0xf8010d1c>
 8010d38:	dfc00117 	ldw	ra,4(sp)
 8010d3c:	dc000017 	ldw	r16,0(sp)
 8010d40:	dec00204 	addi	sp,sp,8
 8010d44:	f800283a 	ret
 8010d48:	202090fa 	slli	r16,r4,3
 8010d4c:	008200b4 	movhi	r2,2050
 8010d50:	10802d04 	addi	r2,r2,180
 8010d54:	1421883a 	add	r16,r2,r16
 8010d58:	80800017 	ldw	r2,0(r16)
 8010d5c:	80c00117 	ldw	r3,4(r16)
 8010d60:	dfc00117 	ldw	ra,4(sp)
 8010d64:	dc000017 	ldw	r16,0(sp)
 8010d68:	dec00204 	addi	sp,sp,8
 8010d6c:	f800283a 	ret

08010d70 <__copybits>:
 8010d70:	297fffc4 	addi	r5,r5,-1
 8010d74:	280fd17a 	srai	r7,r5,5
 8010d78:	30c00417 	ldw	r3,16(r6)
 8010d7c:	30800504 	addi	r2,r6,20
 8010d80:	39c00044 	addi	r7,r7,1
 8010d84:	18c7883a 	add	r3,r3,r3
 8010d88:	39cf883a 	add	r7,r7,r7
 8010d8c:	18c7883a 	add	r3,r3,r3
 8010d90:	39cf883a 	add	r7,r7,r7
 8010d94:	10c7883a 	add	r3,r2,r3
 8010d98:	21cf883a 	add	r7,r4,r7
 8010d9c:	10c00d2e 	bgeu	r2,r3,8010dd4 <__copybits+0x64>
 8010da0:	200b883a 	mov	r5,r4
 8010da4:	12000017 	ldw	r8,0(r2)
 8010da8:	29400104 	addi	r5,r5,4
 8010dac:	10800104 	addi	r2,r2,4
 8010db0:	2a3fff15 	stw	r8,-4(r5)
 8010db4:	10fffb36 	bltu	r2,r3,8010da4 <__alt_data_end+0xf8010da4>
 8010db8:	1985c83a 	sub	r2,r3,r6
 8010dbc:	10bffac4 	addi	r2,r2,-21
 8010dc0:	1004d0ba 	srli	r2,r2,2
 8010dc4:	10800044 	addi	r2,r2,1
 8010dc8:	1085883a 	add	r2,r2,r2
 8010dcc:	1085883a 	add	r2,r2,r2
 8010dd0:	2089883a 	add	r4,r4,r2
 8010dd4:	21c0032e 	bgeu	r4,r7,8010de4 <__copybits+0x74>
 8010dd8:	20000015 	stw	zero,0(r4)
 8010ddc:	21000104 	addi	r4,r4,4
 8010de0:	21fffd36 	bltu	r4,r7,8010dd8 <__alt_data_end+0xf8010dd8>
 8010de4:	f800283a 	ret

08010de8 <__any_on>:
 8010de8:	20c00417 	ldw	r3,16(r4)
 8010dec:	2805d17a 	srai	r2,r5,5
 8010df0:	21000504 	addi	r4,r4,20
 8010df4:	18800d0e 	bge	r3,r2,8010e2c <__any_on+0x44>
 8010df8:	18c7883a 	add	r3,r3,r3
 8010dfc:	18c7883a 	add	r3,r3,r3
 8010e00:	20c7883a 	add	r3,r4,r3
 8010e04:	20c0192e 	bgeu	r4,r3,8010e6c <__any_on+0x84>
 8010e08:	18bfff17 	ldw	r2,-4(r3)
 8010e0c:	18ffff04 	addi	r3,r3,-4
 8010e10:	1000041e 	bne	r2,zero,8010e24 <__any_on+0x3c>
 8010e14:	20c0142e 	bgeu	r4,r3,8010e68 <__any_on+0x80>
 8010e18:	18ffff04 	addi	r3,r3,-4
 8010e1c:	19400017 	ldw	r5,0(r3)
 8010e20:	283ffc26 	beq	r5,zero,8010e14 <__alt_data_end+0xf8010e14>
 8010e24:	00800044 	movi	r2,1
 8010e28:	f800283a 	ret
 8010e2c:	10c00a0e 	bge	r2,r3,8010e58 <__any_on+0x70>
 8010e30:	1085883a 	add	r2,r2,r2
 8010e34:	1085883a 	add	r2,r2,r2
 8010e38:	294007cc 	andi	r5,r5,31
 8010e3c:	2087883a 	add	r3,r4,r2
 8010e40:	283ff026 	beq	r5,zero,8010e04 <__alt_data_end+0xf8010e04>
 8010e44:	19800017 	ldw	r6,0(r3)
 8010e48:	3144d83a 	srl	r2,r6,r5
 8010e4c:	114a983a 	sll	r5,r2,r5
 8010e50:	317ff41e 	bne	r6,r5,8010e24 <__alt_data_end+0xf8010e24>
 8010e54:	003feb06 	br	8010e04 <__alt_data_end+0xf8010e04>
 8010e58:	1085883a 	add	r2,r2,r2
 8010e5c:	1085883a 	add	r2,r2,r2
 8010e60:	2087883a 	add	r3,r4,r2
 8010e64:	003fe706 	br	8010e04 <__alt_data_end+0xf8010e04>
 8010e68:	f800283a 	ret
 8010e6c:	0005883a 	mov	r2,zero
 8010e70:	f800283a 	ret

08010e74 <_read_r>:
 8010e74:	defffd04 	addi	sp,sp,-12
 8010e78:	2805883a 	mov	r2,r5
 8010e7c:	dc000015 	stw	r16,0(sp)
 8010e80:	040200b4 	movhi	r16,2050
 8010e84:	dc400115 	stw	r17,4(sp)
 8010e88:	300b883a 	mov	r5,r6
 8010e8c:	840f2904 	addi	r16,r16,15524
 8010e90:	2023883a 	mov	r17,r4
 8010e94:	380d883a 	mov	r6,r7
 8010e98:	1009883a 	mov	r4,r2
 8010e9c:	dfc00215 	stw	ra,8(sp)
 8010ea0:	80000015 	stw	zero,0(r16)
 8010ea4:	801cf180 	call	801cf18 <read>
 8010ea8:	00ffffc4 	movi	r3,-1
 8010eac:	10c00526 	beq	r2,r3,8010ec4 <_read_r+0x50>
 8010eb0:	dfc00217 	ldw	ra,8(sp)
 8010eb4:	dc400117 	ldw	r17,4(sp)
 8010eb8:	dc000017 	ldw	r16,0(sp)
 8010ebc:	dec00304 	addi	sp,sp,12
 8010ec0:	f800283a 	ret
 8010ec4:	80c00017 	ldw	r3,0(r16)
 8010ec8:	183ff926 	beq	r3,zero,8010eb0 <__alt_data_end+0xf8010eb0>
 8010ecc:	88c00015 	stw	r3,0(r17)
 8010ed0:	003ff706 	br	8010eb0 <__alt_data_end+0xf8010eb0>

08010ed4 <_realloc_r>:
 8010ed4:	defff604 	addi	sp,sp,-40
 8010ed8:	dc800215 	stw	r18,8(sp)
 8010edc:	dfc00915 	stw	ra,36(sp)
 8010ee0:	df000815 	stw	fp,32(sp)
 8010ee4:	ddc00715 	stw	r23,28(sp)
 8010ee8:	dd800615 	stw	r22,24(sp)
 8010eec:	dd400515 	stw	r21,20(sp)
 8010ef0:	dd000415 	stw	r20,16(sp)
 8010ef4:	dcc00315 	stw	r19,12(sp)
 8010ef8:	dc400115 	stw	r17,4(sp)
 8010efc:	dc000015 	stw	r16,0(sp)
 8010f00:	3025883a 	mov	r18,r6
 8010f04:	2800b726 	beq	r5,zero,80111e4 <_realloc_r+0x310>
 8010f08:	282b883a 	mov	r21,r5
 8010f0c:	2029883a 	mov	r20,r4
 8010f10:	801cc400 	call	801cc40 <__malloc_lock>
 8010f14:	a8bfff17 	ldw	r2,-4(r21)
 8010f18:	043fff04 	movi	r16,-4
 8010f1c:	90c002c4 	addi	r3,r18,11
 8010f20:	01000584 	movi	r4,22
 8010f24:	acfffe04 	addi	r19,r21,-8
 8010f28:	1420703a 	and	r16,r2,r16
 8010f2c:	20c0332e 	bgeu	r4,r3,8010ffc <_realloc_r+0x128>
 8010f30:	047ffe04 	movi	r17,-8
 8010f34:	1c62703a 	and	r17,r3,r17
 8010f38:	8807883a 	mov	r3,r17
 8010f3c:	88005816 	blt	r17,zero,80110a0 <_realloc_r+0x1cc>
 8010f40:	8c805736 	bltu	r17,r18,80110a0 <_realloc_r+0x1cc>
 8010f44:	80c0300e 	bge	r16,r3,8011008 <_realloc_r+0x134>
 8010f48:	070200b4 	movhi	fp,2050
 8010f4c:	e7012104 	addi	fp,fp,1156
 8010f50:	e1c00217 	ldw	r7,8(fp)
 8010f54:	9c09883a 	add	r4,r19,r16
 8010f58:	22000117 	ldw	r8,4(r4)
 8010f5c:	21c06326 	beq	r4,r7,80110ec <_realloc_r+0x218>
 8010f60:	017fff84 	movi	r5,-2
 8010f64:	414a703a 	and	r5,r8,r5
 8010f68:	214b883a 	add	r5,r4,r5
 8010f6c:	29800117 	ldw	r6,4(r5)
 8010f70:	3180004c 	andi	r6,r6,1
 8010f74:	30003f26 	beq	r6,zero,8011074 <_realloc_r+0x1a0>
 8010f78:	1080004c 	andi	r2,r2,1
 8010f7c:	10008326 	beq	r2,zero,801118c <_realloc_r+0x2b8>
 8010f80:	900b883a 	mov	r5,r18
 8010f84:	a009883a 	mov	r4,r20
 8010f88:	8003fd40 	call	8003fd4 <_malloc_r>
 8010f8c:	1025883a 	mov	r18,r2
 8010f90:	10011e26 	beq	r2,zero,801140c <_realloc_r+0x538>
 8010f94:	a93fff17 	ldw	r4,-4(r21)
 8010f98:	10fffe04 	addi	r3,r2,-8
 8010f9c:	00bfff84 	movi	r2,-2
 8010fa0:	2084703a 	and	r2,r4,r2
 8010fa4:	9885883a 	add	r2,r19,r2
 8010fa8:	1880ee26 	beq	r3,r2,8011364 <_realloc_r+0x490>
 8010fac:	81bfff04 	addi	r6,r16,-4
 8010fb0:	00800904 	movi	r2,36
 8010fb4:	1180b836 	bltu	r2,r6,8011298 <_realloc_r+0x3c4>
 8010fb8:	00c004c4 	movi	r3,19
 8010fbc:	19809636 	bltu	r3,r6,8011218 <_realloc_r+0x344>
 8010fc0:	9005883a 	mov	r2,r18
 8010fc4:	a807883a 	mov	r3,r21
 8010fc8:	19000017 	ldw	r4,0(r3)
 8010fcc:	11000015 	stw	r4,0(r2)
 8010fd0:	19000117 	ldw	r4,4(r3)
 8010fd4:	11000115 	stw	r4,4(r2)
 8010fd8:	18c00217 	ldw	r3,8(r3)
 8010fdc:	10c00215 	stw	r3,8(r2)
 8010fe0:	a80b883a 	mov	r5,r21
 8010fe4:	a009883a 	mov	r4,r20
 8010fe8:	800ec500 	call	800ec50 <_free_r>
 8010fec:	a009883a 	mov	r4,r20
 8010ff0:	801cc640 	call	801cc64 <__malloc_unlock>
 8010ff4:	9005883a 	mov	r2,r18
 8010ff8:	00001206 	br	8011044 <_realloc_r+0x170>
 8010ffc:	00c00404 	movi	r3,16
 8011000:	1823883a 	mov	r17,r3
 8011004:	003fce06 	br	8010f40 <__alt_data_end+0xf8010f40>
 8011008:	a825883a 	mov	r18,r21
 801100c:	8445c83a 	sub	r2,r16,r17
 8011010:	00c003c4 	movi	r3,15
 8011014:	18802636 	bltu	r3,r2,80110b0 <_realloc_r+0x1dc>
 8011018:	99800117 	ldw	r6,4(r19)
 801101c:	9c07883a 	add	r3,r19,r16
 8011020:	3180004c 	andi	r6,r6,1
 8011024:	3420b03a 	or	r16,r6,r16
 8011028:	9c000115 	stw	r16,4(r19)
 801102c:	18800117 	ldw	r2,4(r3)
 8011030:	10800054 	ori	r2,r2,1
 8011034:	18800115 	stw	r2,4(r3)
 8011038:	a009883a 	mov	r4,r20
 801103c:	801cc640 	call	801cc64 <__malloc_unlock>
 8011040:	9005883a 	mov	r2,r18
 8011044:	dfc00917 	ldw	ra,36(sp)
 8011048:	df000817 	ldw	fp,32(sp)
 801104c:	ddc00717 	ldw	r23,28(sp)
 8011050:	dd800617 	ldw	r22,24(sp)
 8011054:	dd400517 	ldw	r21,20(sp)
 8011058:	dd000417 	ldw	r20,16(sp)
 801105c:	dcc00317 	ldw	r19,12(sp)
 8011060:	dc800217 	ldw	r18,8(sp)
 8011064:	dc400117 	ldw	r17,4(sp)
 8011068:	dc000017 	ldw	r16,0(sp)
 801106c:	dec00a04 	addi	sp,sp,40
 8011070:	f800283a 	ret
 8011074:	017fff04 	movi	r5,-4
 8011078:	414a703a 	and	r5,r8,r5
 801107c:	814d883a 	add	r6,r16,r5
 8011080:	30c01f16 	blt	r6,r3,8011100 <_realloc_r+0x22c>
 8011084:	20800317 	ldw	r2,12(r4)
 8011088:	20c00217 	ldw	r3,8(r4)
 801108c:	a825883a 	mov	r18,r21
 8011090:	3021883a 	mov	r16,r6
 8011094:	18800315 	stw	r2,12(r3)
 8011098:	10c00215 	stw	r3,8(r2)
 801109c:	003fdb06 	br	801100c <__alt_data_end+0xf801100c>
 80110a0:	00800304 	movi	r2,12
 80110a4:	a0800015 	stw	r2,0(r20)
 80110a8:	0005883a 	mov	r2,zero
 80110ac:	003fe506 	br	8011044 <__alt_data_end+0xf8011044>
 80110b0:	98c00117 	ldw	r3,4(r19)
 80110b4:	9c4b883a 	add	r5,r19,r17
 80110b8:	11000054 	ori	r4,r2,1
 80110bc:	18c0004c 	andi	r3,r3,1
 80110c0:	1c62b03a 	or	r17,r3,r17
 80110c4:	9c400115 	stw	r17,4(r19)
 80110c8:	29000115 	stw	r4,4(r5)
 80110cc:	2885883a 	add	r2,r5,r2
 80110d0:	10c00117 	ldw	r3,4(r2)
 80110d4:	29400204 	addi	r5,r5,8
 80110d8:	a009883a 	mov	r4,r20
 80110dc:	18c00054 	ori	r3,r3,1
 80110e0:	10c00115 	stw	r3,4(r2)
 80110e4:	800ec500 	call	800ec50 <_free_r>
 80110e8:	003fd306 	br	8011038 <__alt_data_end+0xf8011038>
 80110ec:	017fff04 	movi	r5,-4
 80110f0:	414a703a 	and	r5,r8,r5
 80110f4:	89800404 	addi	r6,r17,16
 80110f8:	8151883a 	add	r8,r16,r5
 80110fc:	4180590e 	bge	r8,r6,8011264 <_realloc_r+0x390>
 8011100:	1080004c 	andi	r2,r2,1
 8011104:	103f9e1e 	bne	r2,zero,8010f80 <__alt_data_end+0xf8010f80>
 8011108:	adbffe17 	ldw	r22,-8(r21)
 801110c:	00bfff04 	movi	r2,-4
 8011110:	9dadc83a 	sub	r22,r19,r22
 8011114:	b1800117 	ldw	r6,4(r22)
 8011118:	3084703a 	and	r2,r6,r2
 801111c:	20002026 	beq	r4,zero,80111a0 <_realloc_r+0x2cc>
 8011120:	80af883a 	add	r23,r16,r2
 8011124:	b96f883a 	add	r23,r23,r5
 8011128:	21c05f26 	beq	r4,r7,80112a8 <_realloc_r+0x3d4>
 801112c:	b8c01c16 	blt	r23,r3,80111a0 <_realloc_r+0x2cc>
 8011130:	20800317 	ldw	r2,12(r4)
 8011134:	20c00217 	ldw	r3,8(r4)
 8011138:	81bfff04 	addi	r6,r16,-4
 801113c:	01000904 	movi	r4,36
 8011140:	18800315 	stw	r2,12(r3)
 8011144:	10c00215 	stw	r3,8(r2)
 8011148:	b0c00217 	ldw	r3,8(r22)
 801114c:	b0800317 	ldw	r2,12(r22)
 8011150:	b4800204 	addi	r18,r22,8
 8011154:	18800315 	stw	r2,12(r3)
 8011158:	10c00215 	stw	r3,8(r2)
 801115c:	21801b36 	bltu	r4,r6,80111cc <_realloc_r+0x2f8>
 8011160:	008004c4 	movi	r2,19
 8011164:	1180352e 	bgeu	r2,r6,801123c <_realloc_r+0x368>
 8011168:	a8800017 	ldw	r2,0(r21)
 801116c:	b0800215 	stw	r2,8(r22)
 8011170:	a8800117 	ldw	r2,4(r21)
 8011174:	b0800315 	stw	r2,12(r22)
 8011178:	008006c4 	movi	r2,27
 801117c:	11807f36 	bltu	r2,r6,801137c <_realloc_r+0x4a8>
 8011180:	b0800404 	addi	r2,r22,16
 8011184:	ad400204 	addi	r21,r21,8
 8011188:	00002d06 	br	8011240 <_realloc_r+0x36c>
 801118c:	adbffe17 	ldw	r22,-8(r21)
 8011190:	00bfff04 	movi	r2,-4
 8011194:	9dadc83a 	sub	r22,r19,r22
 8011198:	b1000117 	ldw	r4,4(r22)
 801119c:	2084703a 	and	r2,r4,r2
 80111a0:	b03f7726 	beq	r22,zero,8010f80 <__alt_data_end+0xf8010f80>
 80111a4:	80af883a 	add	r23,r16,r2
 80111a8:	b8ff7516 	blt	r23,r3,8010f80 <__alt_data_end+0xf8010f80>
 80111ac:	b0800317 	ldw	r2,12(r22)
 80111b0:	b0c00217 	ldw	r3,8(r22)
 80111b4:	81bfff04 	addi	r6,r16,-4
 80111b8:	01000904 	movi	r4,36
 80111bc:	18800315 	stw	r2,12(r3)
 80111c0:	10c00215 	stw	r3,8(r2)
 80111c4:	b4800204 	addi	r18,r22,8
 80111c8:	21bfe52e 	bgeu	r4,r6,8011160 <__alt_data_end+0xf8011160>
 80111cc:	a80b883a 	mov	r5,r21
 80111d0:	9009883a 	mov	r4,r18
 80111d4:	800fd1c0 	call	800fd1c <memmove>
 80111d8:	b821883a 	mov	r16,r23
 80111dc:	b027883a 	mov	r19,r22
 80111e0:	003f8a06 	br	801100c <__alt_data_end+0xf801100c>
 80111e4:	300b883a 	mov	r5,r6
 80111e8:	dfc00917 	ldw	ra,36(sp)
 80111ec:	df000817 	ldw	fp,32(sp)
 80111f0:	ddc00717 	ldw	r23,28(sp)
 80111f4:	dd800617 	ldw	r22,24(sp)
 80111f8:	dd400517 	ldw	r21,20(sp)
 80111fc:	dd000417 	ldw	r20,16(sp)
 8011200:	dcc00317 	ldw	r19,12(sp)
 8011204:	dc800217 	ldw	r18,8(sp)
 8011208:	dc400117 	ldw	r17,4(sp)
 801120c:	dc000017 	ldw	r16,0(sp)
 8011210:	dec00a04 	addi	sp,sp,40
 8011214:	8003fd41 	jmpi	8003fd4 <_malloc_r>
 8011218:	a8c00017 	ldw	r3,0(r21)
 801121c:	90c00015 	stw	r3,0(r18)
 8011220:	a8c00117 	ldw	r3,4(r21)
 8011224:	90c00115 	stw	r3,4(r18)
 8011228:	00c006c4 	movi	r3,27
 801122c:	19804536 	bltu	r3,r6,8011344 <_realloc_r+0x470>
 8011230:	90800204 	addi	r2,r18,8
 8011234:	a8c00204 	addi	r3,r21,8
 8011238:	003f6306 	br	8010fc8 <__alt_data_end+0xf8010fc8>
 801123c:	9005883a 	mov	r2,r18
 8011240:	a8c00017 	ldw	r3,0(r21)
 8011244:	b821883a 	mov	r16,r23
 8011248:	b027883a 	mov	r19,r22
 801124c:	10c00015 	stw	r3,0(r2)
 8011250:	a8c00117 	ldw	r3,4(r21)
 8011254:	10c00115 	stw	r3,4(r2)
 8011258:	a8c00217 	ldw	r3,8(r21)
 801125c:	10c00215 	stw	r3,8(r2)
 8011260:	003f6a06 	br	801100c <__alt_data_end+0xf801100c>
 8011264:	9c67883a 	add	r19,r19,r17
 8011268:	4445c83a 	sub	r2,r8,r17
 801126c:	e4c00215 	stw	r19,8(fp)
 8011270:	10800054 	ori	r2,r2,1
 8011274:	98800115 	stw	r2,4(r19)
 8011278:	a8bfff17 	ldw	r2,-4(r21)
 801127c:	a009883a 	mov	r4,r20
 8011280:	1080004c 	andi	r2,r2,1
 8011284:	1462b03a 	or	r17,r2,r17
 8011288:	ac7fff15 	stw	r17,-4(r21)
 801128c:	801cc640 	call	801cc64 <__malloc_unlock>
 8011290:	a805883a 	mov	r2,r21
 8011294:	003f6b06 	br	8011044 <__alt_data_end+0xf8011044>
 8011298:	a80b883a 	mov	r5,r21
 801129c:	9009883a 	mov	r4,r18
 80112a0:	800fd1c0 	call	800fd1c <memmove>
 80112a4:	003f4e06 	br	8010fe0 <__alt_data_end+0xf8010fe0>
 80112a8:	89000404 	addi	r4,r17,16
 80112ac:	b93fbc16 	blt	r23,r4,80111a0 <__alt_data_end+0xf80111a0>
 80112b0:	b0800317 	ldw	r2,12(r22)
 80112b4:	b0c00217 	ldw	r3,8(r22)
 80112b8:	81bfff04 	addi	r6,r16,-4
 80112bc:	01000904 	movi	r4,36
 80112c0:	18800315 	stw	r2,12(r3)
 80112c4:	10c00215 	stw	r3,8(r2)
 80112c8:	b4800204 	addi	r18,r22,8
 80112cc:	21804336 	bltu	r4,r6,80113dc <_realloc_r+0x508>
 80112d0:	008004c4 	movi	r2,19
 80112d4:	11803f2e 	bgeu	r2,r6,80113d4 <_realloc_r+0x500>
 80112d8:	a8800017 	ldw	r2,0(r21)
 80112dc:	b0800215 	stw	r2,8(r22)
 80112e0:	a8800117 	ldw	r2,4(r21)
 80112e4:	b0800315 	stw	r2,12(r22)
 80112e8:	008006c4 	movi	r2,27
 80112ec:	11803f36 	bltu	r2,r6,80113ec <_realloc_r+0x518>
 80112f0:	b0800404 	addi	r2,r22,16
 80112f4:	ad400204 	addi	r21,r21,8
 80112f8:	a8c00017 	ldw	r3,0(r21)
 80112fc:	10c00015 	stw	r3,0(r2)
 8011300:	a8c00117 	ldw	r3,4(r21)
 8011304:	10c00115 	stw	r3,4(r2)
 8011308:	a8c00217 	ldw	r3,8(r21)
 801130c:	10c00215 	stw	r3,8(r2)
 8011310:	b447883a 	add	r3,r22,r17
 8011314:	bc45c83a 	sub	r2,r23,r17
 8011318:	e0c00215 	stw	r3,8(fp)
 801131c:	10800054 	ori	r2,r2,1
 8011320:	18800115 	stw	r2,4(r3)
 8011324:	b0800117 	ldw	r2,4(r22)
 8011328:	a009883a 	mov	r4,r20
 801132c:	1080004c 	andi	r2,r2,1
 8011330:	1462b03a 	or	r17,r2,r17
 8011334:	b4400115 	stw	r17,4(r22)
 8011338:	801cc640 	call	801cc64 <__malloc_unlock>
 801133c:	9005883a 	mov	r2,r18
 8011340:	003f4006 	br	8011044 <__alt_data_end+0xf8011044>
 8011344:	a8c00217 	ldw	r3,8(r21)
 8011348:	90c00215 	stw	r3,8(r18)
 801134c:	a8c00317 	ldw	r3,12(r21)
 8011350:	90c00315 	stw	r3,12(r18)
 8011354:	30801126 	beq	r6,r2,801139c <_realloc_r+0x4c8>
 8011358:	90800404 	addi	r2,r18,16
 801135c:	a8c00404 	addi	r3,r21,16
 8011360:	003f1906 	br	8010fc8 <__alt_data_end+0xf8010fc8>
 8011364:	90ffff17 	ldw	r3,-4(r18)
 8011368:	00bfff04 	movi	r2,-4
 801136c:	a825883a 	mov	r18,r21
 8011370:	1884703a 	and	r2,r3,r2
 8011374:	80a1883a 	add	r16,r16,r2
 8011378:	003f2406 	br	801100c <__alt_data_end+0xf801100c>
 801137c:	a8800217 	ldw	r2,8(r21)
 8011380:	b0800415 	stw	r2,16(r22)
 8011384:	a8800317 	ldw	r2,12(r21)
 8011388:	b0800515 	stw	r2,20(r22)
 801138c:	31000a26 	beq	r6,r4,80113b8 <_realloc_r+0x4e4>
 8011390:	b0800604 	addi	r2,r22,24
 8011394:	ad400404 	addi	r21,r21,16
 8011398:	003fa906 	br	8011240 <__alt_data_end+0xf8011240>
 801139c:	a9000417 	ldw	r4,16(r21)
 80113a0:	90800604 	addi	r2,r18,24
 80113a4:	a8c00604 	addi	r3,r21,24
 80113a8:	91000415 	stw	r4,16(r18)
 80113ac:	a9000517 	ldw	r4,20(r21)
 80113b0:	91000515 	stw	r4,20(r18)
 80113b4:	003f0406 	br	8010fc8 <__alt_data_end+0xf8010fc8>
 80113b8:	a8c00417 	ldw	r3,16(r21)
 80113bc:	ad400604 	addi	r21,r21,24
 80113c0:	b0800804 	addi	r2,r22,32
 80113c4:	b0c00615 	stw	r3,24(r22)
 80113c8:	a8ffff17 	ldw	r3,-4(r21)
 80113cc:	b0c00715 	stw	r3,28(r22)
 80113d0:	003f9b06 	br	8011240 <__alt_data_end+0xf8011240>
 80113d4:	9005883a 	mov	r2,r18
 80113d8:	003fc706 	br	80112f8 <__alt_data_end+0xf80112f8>
 80113dc:	a80b883a 	mov	r5,r21
 80113e0:	9009883a 	mov	r4,r18
 80113e4:	800fd1c0 	call	800fd1c <memmove>
 80113e8:	003fc906 	br	8011310 <__alt_data_end+0xf8011310>
 80113ec:	a8800217 	ldw	r2,8(r21)
 80113f0:	b0800415 	stw	r2,16(r22)
 80113f4:	a8800317 	ldw	r2,12(r21)
 80113f8:	b0800515 	stw	r2,20(r22)
 80113fc:	31000726 	beq	r6,r4,801141c <_realloc_r+0x548>
 8011400:	b0800604 	addi	r2,r22,24
 8011404:	ad400404 	addi	r21,r21,16
 8011408:	003fbb06 	br	80112f8 <__alt_data_end+0xf80112f8>
 801140c:	a009883a 	mov	r4,r20
 8011410:	801cc640 	call	801cc64 <__malloc_unlock>
 8011414:	0005883a 	mov	r2,zero
 8011418:	003f0a06 	br	8011044 <__alt_data_end+0xf8011044>
 801141c:	a8c00417 	ldw	r3,16(r21)
 8011420:	ad400604 	addi	r21,r21,24
 8011424:	b0800804 	addi	r2,r22,32
 8011428:	b0c00615 	stw	r3,24(r22)
 801142c:	a8ffff17 	ldw	r3,-4(r21)
 8011430:	b0c00715 	stw	r3,28(r22)
 8011434:	003fb006 	br	80112f8 <__alt_data_end+0xf80112f8>

08011438 <lflush>:
 8011438:	2080030b 	ldhu	r2,12(r4)
 801143c:	00c00244 	movi	r3,9
 8011440:	1080024c 	andi	r2,r2,9
 8011444:	10c00226 	beq	r2,r3,8011450 <lflush+0x18>
 8011448:	0005883a 	mov	r2,zero
 801144c:	f800283a 	ret
 8011450:	800e4fc1 	jmpi	800e4fc <fflush>

08011454 <__srefill_r>:
 8011454:	defffc04 	addi	sp,sp,-16
 8011458:	dc400115 	stw	r17,4(sp)
 801145c:	dc000015 	stw	r16,0(sp)
 8011460:	dfc00315 	stw	ra,12(sp)
 8011464:	dc800215 	stw	r18,8(sp)
 8011468:	2023883a 	mov	r17,r4
 801146c:	2821883a 	mov	r16,r5
 8011470:	20000226 	beq	r4,zero,801147c <__srefill_r+0x28>
 8011474:	20800e17 	ldw	r2,56(r4)
 8011478:	10003c26 	beq	r2,zero,801156c <__srefill_r+0x118>
 801147c:	80c0030b 	ldhu	r3,12(r16)
 8011480:	1908000c 	andi	r4,r3,8192
 8011484:	1805883a 	mov	r2,r3
 8011488:	2000071e 	bne	r4,zero,80114a8 <__srefill_r+0x54>
 801148c:	81001917 	ldw	r4,100(r16)
 8011490:	18880014 	ori	r2,r3,8192
 8011494:	00f7ffc4 	movi	r3,-8193
 8011498:	20c8703a 	and	r4,r4,r3
 801149c:	8080030d 	sth	r2,12(r16)
 80114a0:	1007883a 	mov	r3,r2
 80114a4:	81001915 	stw	r4,100(r16)
 80114a8:	80000115 	stw	zero,4(r16)
 80114ac:	1100080c 	andi	r4,r2,32
 80114b0:	2000571e 	bne	r4,zero,8011610 <__srefill_r+0x1bc>
 80114b4:	1100010c 	andi	r4,r2,4
 80114b8:	20001f26 	beq	r4,zero,8011538 <__srefill_r+0xe4>
 80114bc:	81400c17 	ldw	r5,48(r16)
 80114c0:	28000826 	beq	r5,zero,80114e4 <__srefill_r+0x90>
 80114c4:	80801004 	addi	r2,r16,64
 80114c8:	28800226 	beq	r5,r2,80114d4 <__srefill_r+0x80>
 80114cc:	8809883a 	mov	r4,r17
 80114d0:	800ec500 	call	800ec50 <_free_r>
 80114d4:	80800f17 	ldw	r2,60(r16)
 80114d8:	80000c15 	stw	zero,48(r16)
 80114dc:	80800115 	stw	r2,4(r16)
 80114e0:	1000391e 	bne	r2,zero,80115c8 <__srefill_r+0x174>
 80114e4:	80800417 	ldw	r2,16(r16)
 80114e8:	10004b26 	beq	r2,zero,8011618 <__srefill_r+0x1c4>
 80114ec:	8480030b 	ldhu	r18,12(r16)
 80114f0:	908000cc 	andi	r2,r18,3
 80114f4:	10001f1e 	bne	r2,zero,8011574 <__srefill_r+0x120>
 80114f8:	81800417 	ldw	r6,16(r16)
 80114fc:	80800817 	ldw	r2,32(r16)
 8011500:	81c00517 	ldw	r7,20(r16)
 8011504:	81400717 	ldw	r5,28(r16)
 8011508:	81800015 	stw	r6,0(r16)
 801150c:	8809883a 	mov	r4,r17
 8011510:	103ee83a 	callr	r2
 8011514:	80800115 	stw	r2,4(r16)
 8011518:	00800e0e 	bge	zero,r2,8011554 <__srefill_r+0x100>
 801151c:	0005883a 	mov	r2,zero
 8011520:	dfc00317 	ldw	ra,12(sp)
 8011524:	dc800217 	ldw	r18,8(sp)
 8011528:	dc400117 	ldw	r17,4(sp)
 801152c:	dc000017 	ldw	r16,0(sp)
 8011530:	dec00404 	addi	sp,sp,16
 8011534:	f800283a 	ret
 8011538:	1100040c 	andi	r4,r2,16
 801153c:	20003026 	beq	r4,zero,8011600 <__srefill_r+0x1ac>
 8011540:	1080020c 	andi	r2,r2,8
 8011544:	1000241e 	bne	r2,zero,80115d8 <__srefill_r+0x184>
 8011548:	18c00114 	ori	r3,r3,4
 801154c:	80c0030d 	sth	r3,12(r16)
 8011550:	003fe406 	br	80114e4 <__alt_data_end+0xf80114e4>
 8011554:	80c0030b 	ldhu	r3,12(r16)
 8011558:	1000161e 	bne	r2,zero,80115b4 <__srefill_r+0x160>
 801155c:	18c00814 	ori	r3,r3,32
 8011560:	00bfffc4 	movi	r2,-1
 8011564:	80c0030d 	sth	r3,12(r16)
 8011568:	003fed06 	br	8011520 <__alt_data_end+0xf8011520>
 801156c:	800e87c0 	call	800e87c <__sinit>
 8011570:	003fc206 	br	801147c <__alt_data_end+0xf801147c>
 8011574:	008200b4 	movhi	r2,2050
 8011578:	10881304 	addi	r2,r2,8268
 801157c:	11000017 	ldw	r4,0(r2)
 8011580:	01420074 	movhi	r5,2049
 8011584:	00800044 	movi	r2,1
 8011588:	29450e04 	addi	r5,r5,5176
 801158c:	8080030d 	sth	r2,12(r16)
 8011590:	800f41c0 	call	800f41c <_fwalk>
 8011594:	00800244 	movi	r2,9
 8011598:	8480030d 	sth	r18,12(r16)
 801159c:	9480024c 	andi	r18,r18,9
 80115a0:	90bfd51e 	bne	r18,r2,80114f8 <__alt_data_end+0xf80114f8>
 80115a4:	800b883a 	mov	r5,r16
 80115a8:	8809883a 	mov	r4,r17
 80115ac:	800e2840 	call	800e284 <__sflush_r>
 80115b0:	003fd106 	br	80114f8 <__alt_data_end+0xf80114f8>
 80115b4:	18c01014 	ori	r3,r3,64
 80115b8:	80000115 	stw	zero,4(r16)
 80115bc:	00bfffc4 	movi	r2,-1
 80115c0:	80c0030d 	sth	r3,12(r16)
 80115c4:	003fd606 	br	8011520 <__alt_data_end+0xf8011520>
 80115c8:	80c00e17 	ldw	r3,56(r16)
 80115cc:	0005883a 	mov	r2,zero
 80115d0:	80c00015 	stw	r3,0(r16)
 80115d4:	003fd206 	br	8011520 <__alt_data_end+0xf8011520>
 80115d8:	800b883a 	mov	r5,r16
 80115dc:	8809883a 	mov	r4,r17
 80115e0:	800e4a00 	call	800e4a0 <_fflush_r>
 80115e4:	10000a1e 	bne	r2,zero,8011610 <__srefill_r+0x1bc>
 80115e8:	8080030b 	ldhu	r2,12(r16)
 80115ec:	00fffdc4 	movi	r3,-9
 80115f0:	80000215 	stw	zero,8(r16)
 80115f4:	1886703a 	and	r3,r3,r2
 80115f8:	80000615 	stw	zero,24(r16)
 80115fc:	003fd206 	br	8011548 <__alt_data_end+0xf8011548>
 8011600:	00800244 	movi	r2,9
 8011604:	88800015 	stw	r2,0(r17)
 8011608:	18c01014 	ori	r3,r3,64
 801160c:	80c0030d 	sth	r3,12(r16)
 8011610:	00bfffc4 	movi	r2,-1
 8011614:	003fc206 	br	8011520 <__alt_data_end+0xf8011520>
 8011618:	800b883a 	mov	r5,r16
 801161c:	8809883a 	mov	r4,r17
 8011620:	800f7100 	call	800f710 <__smakebuf_r>
 8011624:	003fb106 	br	80114ec <__alt_data_end+0xf80114ec>

08011628 <__fpclassifyd>:
 8011628:	00a00034 	movhi	r2,32768
 801162c:	10bfffc4 	addi	r2,r2,-1
 8011630:	2884703a 	and	r2,r5,r2
 8011634:	10000726 	beq	r2,zero,8011654 <__fpclassifyd+0x2c>
 8011638:	00fffc34 	movhi	r3,65520
 801163c:	019ff834 	movhi	r6,32736
 8011640:	28c7883a 	add	r3,r5,r3
 8011644:	31bfffc4 	addi	r6,r6,-1
 8011648:	30c00536 	bltu	r6,r3,8011660 <__fpclassifyd+0x38>
 801164c:	00800104 	movi	r2,4
 8011650:	f800283a 	ret
 8011654:	2000021e 	bne	r4,zero,8011660 <__fpclassifyd+0x38>
 8011658:	00800084 	movi	r2,2
 801165c:	f800283a 	ret
 8011660:	00dffc34 	movhi	r3,32752
 8011664:	019ff834 	movhi	r6,32736
 8011668:	28cb883a 	add	r5,r5,r3
 801166c:	31bfffc4 	addi	r6,r6,-1
 8011670:	317ff62e 	bgeu	r6,r5,801164c <__alt_data_end+0xf801164c>
 8011674:	01400434 	movhi	r5,16
 8011678:	297fffc4 	addi	r5,r5,-1
 801167c:	28800236 	bltu	r5,r2,8011688 <__fpclassifyd+0x60>
 8011680:	008000c4 	movi	r2,3
 8011684:	f800283a 	ret
 8011688:	10c00226 	beq	r2,r3,8011694 <__fpclassifyd+0x6c>
 801168c:	0005883a 	mov	r2,zero
 8011690:	f800283a 	ret
 8011694:	2005003a 	cmpeq	r2,r4,zero
 8011698:	f800283a 	ret

0801169c <__sccl>:
 801169c:	2a000003 	ldbu	r8,0(r5)
 80116a0:	00801784 	movi	r2,94
 80116a4:	40802a26 	beq	r8,r2,8011750 <__sccl+0xb4>
 80116a8:	29400044 	addi	r5,r5,1
 80116ac:	000f883a 	mov	r7,zero
 80116b0:	0013883a 	mov	r9,zero
 80116b4:	2007883a 	mov	r3,r4
 80116b8:	21804004 	addi	r6,r4,256
 80116bc:	19c00005 	stb	r7,0(r3)
 80116c0:	18c00044 	addi	r3,r3,1
 80116c4:	19bffd1e 	bne	r3,r6,80116bc <__alt_data_end+0xf80116bc>
 80116c8:	40001126 	beq	r8,zero,8011710 <__sccl+0x74>
 80116cc:	00800044 	movi	r2,1
 80116d0:	124fc83a 	sub	r7,r2,r9
 80116d4:	02800b44 	movi	r10,45
 80116d8:	02c01744 	movi	r11,93
 80116dc:	2205883a 	add	r2,r4,r8
 80116e0:	11c00005 	stb	r7,0(r2)
 80116e4:	28800044 	addi	r2,r5,1
 80116e8:	28c00003 	ldbu	r3,0(r5)
 80116ec:	1a800a26 	beq	r3,r10,8011718 <__sccl+0x7c>
 80116f0:	1ac00426 	beq	r3,r11,8011704 <__sccl+0x68>
 80116f4:	18000426 	beq	r3,zero,8011708 <__sccl+0x6c>
 80116f8:	1811883a 	mov	r8,r3
 80116fc:	100b883a 	mov	r5,r2
 8011700:	003ff606 	br	80116dc <__alt_data_end+0xf80116dc>
 8011704:	f800283a 	ret
 8011708:	2805883a 	mov	r2,r5
 801170c:	f800283a 	ret
 8011710:	28bfffc4 	addi	r2,r5,-1
 8011714:	f800283a 	ret
 8011718:	12400003 	ldbu	r9,0(r2)
 801171c:	4ac01126 	beq	r9,r11,8011764 <__sccl+0xc8>
 8011720:	4a001016 	blt	r9,r8,8011764 <__sccl+0xc8>
 8011724:	41800044 	addi	r6,r8,1
 8011728:	29400084 	addi	r5,r5,2
 801172c:	2187883a 	add	r3,r4,r6
 8011730:	00000106 	br	8011738 <__sccl+0x9c>
 8011734:	31800044 	addi	r6,r6,1
 8011738:	19c00005 	stb	r7,0(r3)
 801173c:	3011883a 	mov	r8,r6
 8011740:	18c00044 	addi	r3,r3,1
 8011744:	327ffb16 	blt	r6,r9,8011734 <__alt_data_end+0xf8011734>
 8011748:	10800084 	addi	r2,r2,2
 801174c:	003fe606 	br	80116e8 <__alt_data_end+0xf80116e8>
 8011750:	2a000043 	ldbu	r8,1(r5)
 8011754:	01c00044 	movi	r7,1
 8011758:	29400084 	addi	r5,r5,2
 801175c:	02400044 	movi	r9,1
 8011760:	003fd406 	br	80116b4 <__alt_data_end+0xf80116b4>
 8011764:	5011883a 	mov	r8,r10
 8011768:	003fe406 	br	80116fc <__alt_data_end+0xf80116fc>

0801176c <nanf>:
 801176c:	009ff034 	movhi	r2,32704
 8011770:	f800283a 	ret

08011774 <sulp>:
 8011774:	defffd04 	addi	sp,sp,-12
 8011778:	dc400115 	stw	r17,4(sp)
 801177c:	3023883a 	mov	r17,r6
 8011780:	dc000015 	stw	r16,0(sp)
 8011784:	dfc00215 	stw	ra,8(sp)
 8011788:	2821883a 	mov	r16,r5
 801178c:	801099c0 	call	801099c <__ulp>
 8011790:	88000c26 	beq	r17,zero,80117c4 <sulp+0x50>
 8011794:	841ffc2c 	andhi	r16,r16,32752
 8011798:	8020d53a 	srli	r16,r16,20
 801179c:	01c01ac4 	movi	r7,107
 80117a0:	3c21c83a 	sub	r16,r7,r16
 80117a4:	0400070e 	bge	zero,r16,80117c4 <sulp+0x50>
 80117a8:	8020953a 	slli	r16,r16,20
 80117ac:	01cffc34 	movhi	r7,16368
 80117b0:	000d883a 	mov	r6,zero
 80117b4:	81cf883a 	add	r7,r16,r7
 80117b8:	1009883a 	mov	r4,r2
 80117bc:	180b883a 	mov	r5,r3
 80117c0:	801af840 	call	801af84 <__muldf3>
 80117c4:	dfc00217 	ldw	ra,8(sp)
 80117c8:	dc400117 	ldw	r17,4(sp)
 80117cc:	dc000017 	ldw	r16,0(sp)
 80117d0:	dec00304 	addi	sp,sp,12
 80117d4:	f800283a 	ret

080117d8 <_strtod_r>:
 80117d8:	deffe204 	addi	sp,sp,-120
 80117dc:	ddc01b15 	stw	r23,108(sp)
 80117e0:	dd001815 	stw	r20,96(sp)
 80117e4:	dc801615 	stw	r18,88(sp)
 80117e8:	dc401515 	stw	r17,84(sp)
 80117ec:	dc001415 	stw	r16,80(sp)
 80117f0:	d9400615 	stw	r5,24(sp)
 80117f4:	dfc01d15 	stw	ra,116(sp)
 80117f8:	df001c15 	stw	fp,112(sp)
 80117fc:	dd801a15 	stw	r22,104(sp)
 8011800:	dd401915 	stw	r21,100(sp)
 8011804:	dcc01715 	stw	r19,92(sp)
 8011808:	2021883a 	mov	r16,r4
 801180c:	d8000515 	stw	zero,20(sp)
 8011810:	2809883a 	mov	r4,r5
 8011814:	20800003 	ldbu	r2,0(r4)
 8011818:	01c20074 	movhi	r7,2049
 801181c:	282f883a 	mov	r23,r5
 8011820:	10c03fcc 	andi	r3,r2,255
 8011824:	01400b44 	movi	r5,45
 8011828:	39c61304 	addi	r7,r7,6220
 801182c:	3029883a 	mov	r20,r6
 8011830:	0025883a 	mov	r18,zero
 8011834:	0023883a 	mov	r17,zero
 8011838:	28c0ba36 	bltu	r5,r3,8011b24 <_strtod_r+0x34c>
 801183c:	180690ba 	slli	r3,r3,2
 8011840:	19c7883a 	add	r3,r3,r7
 8011844:	18c00017 	ldw	r3,0(r3)
 8011848:	1800683a 	jmp	r3
 801184c:	0801190c 	andi	zero,at,1124
 8011850:	08011b24 	muli	zero,at,1132
 8011854:	08011b24 	muli	zero,at,1132
 8011858:	08011b24 	muli	zero,at,1132
 801185c:	08011b24 	muli	zero,at,1132
 8011860:	08011b24 	muli	zero,at,1132
 8011864:	08011b24 	muli	zero,at,1132
 8011868:	08011b24 	muli	zero,at,1132
 801186c:	08011b24 	muli	zero,at,1132
 8011870:	08011b10 	cmplti	zero,at,1132
 8011874:	08011b10 	cmplti	zero,at,1132
 8011878:	08011b10 	cmplti	zero,at,1132
 801187c:	08011b10 	cmplti	zero,at,1132
 8011880:	08011b10 	cmplti	zero,at,1132
 8011884:	08011b24 	muli	zero,at,1132
 8011888:	08011b24 	muli	zero,at,1132
 801188c:	08011b24 	muli	zero,at,1132
 8011890:	08011b24 	muli	zero,at,1132
 8011894:	08011b24 	muli	zero,at,1132
 8011898:	08011b24 	muli	zero,at,1132
 801189c:	08011b24 	muli	zero,at,1132
 80118a0:	08011b24 	muli	zero,at,1132
 80118a4:	08011b24 	muli	zero,at,1132
 80118a8:	08011b24 	muli	zero,at,1132
 80118ac:	08011b24 	muli	zero,at,1132
 80118b0:	08011b24 	muli	zero,at,1132
 80118b4:	08011b24 	muli	zero,at,1132
 80118b8:	08011b24 	muli	zero,at,1132
 80118bc:	08011b24 	muli	zero,at,1132
 80118c0:	08011b24 	muli	zero,at,1132
 80118c4:	08011b24 	muli	zero,at,1132
 80118c8:	08011b24 	muli	zero,at,1132
 80118cc:	08011b10 	cmplti	zero,at,1132
 80118d0:	08011b24 	muli	zero,at,1132
 80118d4:	08011b24 	muli	zero,at,1132
 80118d8:	08011b24 	muli	zero,at,1132
 80118dc:	08011b24 	muli	zero,at,1132
 80118e0:	08011b24 	muli	zero,at,1132
 80118e4:	08011b24 	muli	zero,at,1132
 80118e8:	08011b24 	muli	zero,at,1132
 80118ec:	08011b24 	muli	zero,at,1132
 80118f0:	08011b24 	muli	zero,at,1132
 80118f4:	08011b24 	muli	zero,at,1132
 80118f8:	08011964 	muli	zero,at,1125
 80118fc:	08011b24 	muli	zero,at,1132
 8011900:	08011b04 	addi	zero,at,1132
 8011904:	00801244 	movi	r2,73
 8011908:	88843526 	beq	r17,r2,80129e0 <_strtod_r+0x1208>
 801190c:	002b883a 	mov	r21,zero
 8011910:	002d883a 	mov	r22,zero
 8011914:	a0000526 	beq	r20,zero,801192c <_strtod_r+0x154>
 8011918:	d8000715 	stw	zero,28(sp)
 801191c:	a5c00015 	stw	r23,0(r20)
 8011920:	d9000717 	ldw	r4,28(sp)
 8011924:	20000126 	beq	r4,zero,801192c <_strtod_r+0x154>
 8011928:	b5a0003c 	xorhi	r22,r22,32768
 801192c:	a805883a 	mov	r2,r21
 8011930:	b007883a 	mov	r3,r22
 8011934:	dfc01d17 	ldw	ra,116(sp)
 8011938:	df001c17 	ldw	fp,112(sp)
 801193c:	ddc01b17 	ldw	r23,108(sp)
 8011940:	dd801a17 	ldw	r22,104(sp)
 8011944:	dd401917 	ldw	r21,100(sp)
 8011948:	dd001817 	ldw	r20,96(sp)
 801194c:	dcc01717 	ldw	r19,92(sp)
 8011950:	dc801617 	ldw	r18,88(sp)
 8011954:	dc401517 	ldw	r17,84(sp)
 8011958:	dc001417 	ldw	r16,80(sp)
 801195c:	dec01e04 	addi	sp,sp,120
 8011960:	f800283a 	ret
 8011964:	d8000715 	stw	zero,28(sp)
 8011968:	24c00044 	addi	r19,r4,1
 801196c:	dcc00615 	stw	r19,24(sp)
 8011970:	20800043 	ldbu	r2,1(r4)
 8011974:	10c03fcc 	andi	r3,r2,255
 8011978:	18c0201c 	xori	r3,r3,128
 801197c:	18ffe004 	addi	r3,r3,-128
 8011980:	183fe226 	beq	r3,zero,801190c <__alt_data_end+0xf801190c>
 8011984:	11403fcc 	andi	r5,r2,255
 8011988:	2940201c 	xori	r5,r5,128
 801198c:	297fe004 	addi	r5,r5,-128
 8011990:	00c00c04 	movi	r3,48
 8011994:	28c0e526 	beq	r5,r3,8011d2c <_strtod_r+0x554>
 8011998:	dcc00815 	stw	r19,32(sp)
 801199c:	0025883a 	mov	r18,zero
 80119a0:	10fff404 	addi	r3,r2,-48
 80119a4:	18c03fcc 	andi	r3,r3,255
 80119a8:	01000244 	movi	r4,9
 80119ac:	20c37536 	bltu	r4,r3,8012784 <_strtod_r+0xfac>
 80119b0:	dd400817 	ldw	r21,32(sp)
 80119b4:	0027883a 	mov	r19,zero
 80119b8:	0039883a 	mov	fp,zero
 80119bc:	002d883a 	mov	r22,zero
 80119c0:	01400204 	movi	r5,8
 80119c4:	2d805a16 	blt	r5,r22,8011b30 <_strtod_r+0x358>
 80119c8:	e70002a4 	muli	fp,fp,10
 80119cc:	10c03fcc 	andi	r3,r2,255
 80119d0:	18c0201c 	xori	r3,r3,128
 80119d4:	18ffe004 	addi	r3,r3,-128
 80119d8:	e0f9883a 	add	fp,fp,r3
 80119dc:	e73ff404 	addi	fp,fp,-48
 80119e0:	ad400044 	addi	r21,r21,1
 80119e4:	dd400615 	stw	r21,24(sp)
 80119e8:	a8800003 	ldbu	r2,0(r21)
 80119ec:	b5800044 	addi	r22,r22,1
 80119f0:	10fff404 	addi	r3,r2,-48
 80119f4:	18c03fcc 	andi	r3,r3,255
 80119f8:	20fff22e 	bgeu	r4,r3,80119c4 <__alt_data_end+0xf80119c4>
 80119fc:	14403fcc 	andi	r17,r2,255
 8011a00:	8c40201c 	xori	r17,r17,128
 8011a04:	8c7fe004 	addi	r17,r17,-128
 8011a08:	8009883a 	mov	r4,r16
 8011a0c:	800f6800 	call	800f680 <_localeconv_r>
 8011a10:	11400017 	ldw	r5,0(r2)
 8011a14:	8009883a 	mov	r4,r16
 8011a18:	d9401315 	stw	r5,76(sp)
 8011a1c:	800f6800 	call	800f680 <_localeconv_r>
 8011a20:	11000017 	ldw	r4,0(r2)
 8011a24:	800526c0 	call	800526c <strlen>
 8011a28:	d9401317 	ldw	r5,76(sp)
 8011a2c:	100d883a 	mov	r6,r2
 8011a30:	a809883a 	mov	r4,r21
 8011a34:	8018a080 	call	8018a08 <strncmp>
 8011a38:	1000ce26 	beq	r2,zero,8011d74 <_strtod_r+0x59c>
 8011a3c:	b013883a 	mov	r9,r22
 8011a40:	000b883a 	mov	r5,zero
 8011a44:	0015883a 	mov	r10,zero
 8011a48:	0017883a 	mov	r11,zero
 8011a4c:	00801944 	movi	r2,101
 8011a50:	88807826 	beq	r17,r2,8011c34 <_strtod_r+0x45c>
 8011a54:	00801144 	movi	r2,69
 8011a58:	88807626 	beq	r17,r2,8011c34 <_strtod_r+0x45c>
 8011a5c:	002b883a 	mov	r21,zero
 8011a60:	48003d1e 	bne	r9,zero,8011b58 <_strtod_r+0x380>
 8011a64:	2800391e 	bne	r5,zero,8011b4c <_strtod_r+0x374>
 8011a68:	9000381e 	bne	r18,zero,8011b4c <_strtod_r+0x374>
 8011a6c:	583fa71e 	bne	r11,zero,801190c <__alt_data_end+0xf801190c>
 8011a70:	00801384 	movi	r2,78
 8011a74:	88800526 	beq	r17,r2,8011a8c <_strtod_r+0x2b4>
 8011a78:	147fa20e 	bge	r2,r17,8011904 <__alt_data_end+0xf8011904>
 8011a7c:	00801a44 	movi	r2,105
 8011a80:	8883d726 	beq	r17,r2,80129e0 <_strtod_r+0x1208>
 8011a84:	00801b84 	movi	r2,110
 8011a88:	88bfa01e 	bne	r17,r2,801190c <__alt_data_end+0xf801190c>
 8011a8c:	014200b4 	movhi	r5,2050
 8011a90:	d9000617 	ldw	r4,24(sp)
 8011a94:	29406204 	addi	r5,r5,392
 8011a98:	01c00644 	movi	r7,25
 8011a9c:	00000b06 	br	8011acc <_strtod_r+0x2f4>
 8011aa0:	21000044 	addi	r4,r4,1
 8011aa4:	20800003 	ldbu	r2,0(r4)
 8011aa8:	10ffefc4 	addi	r3,r2,-65
 8011aac:	10803fcc 	andi	r2,r2,255
 8011ab0:	1080201c 	xori	r2,r2,128
 8011ab4:	18c03fcc 	andi	r3,r3,255
 8011ab8:	10bfe004 	addi	r2,r2,-128
 8011abc:	38c00136 	bltu	r7,r3,8011ac4 <_strtod_r+0x2ec>
 8011ac0:	10800804 	addi	r2,r2,32
 8011ac4:	29400044 	addi	r5,r5,1
 8011ac8:	11bf901e 	bne	r2,r6,801190c <__alt_data_end+0xf801190c>
 8011acc:	29800007 	ldb	r6,0(r5)
 8011ad0:	303ff31e 	bne	r6,zero,8011aa0 <__alt_data_end+0xf8011aa0>
 8011ad4:	20800044 	addi	r2,r4,1
 8011ad8:	d8800615 	stw	r2,24(sp)
 8011adc:	20c00047 	ldb	r3,1(r4)
 8011ae0:	00800a04 	movi	r2,40
 8011ae4:	18849d26 	beq	r3,r2,8012d5c <_strtod_r+0x1584>
 8011ae8:	047ffe34 	movhi	r17,65528
 8011aec:	0025883a 	mov	r18,zero
 8011af0:	902b883a 	mov	r21,r18
 8011af4:	882d883a 	mov	r22,r17
 8011af8:	a03f8926 	beq	r20,zero,8011920 <__alt_data_end+0xf8011920>
 8011afc:	ddc00617 	ldw	r23,24(sp)
 8011b00:	003f8606 	br	801191c <__alt_data_end+0xf801191c>
 8011b04:	00800044 	movi	r2,1
 8011b08:	d8800715 	stw	r2,28(sp)
 8011b0c:	003f9606 	br	8011968 <__alt_data_end+0xf8011968>
 8011b10:	21000044 	addi	r4,r4,1
 8011b14:	d9000615 	stw	r4,24(sp)
 8011b18:	20800003 	ldbu	r2,0(r4)
 8011b1c:	10c03fcc 	andi	r3,r2,255
 8011b20:	28ff462e 	bgeu	r5,r3,801183c <__alt_data_end+0xf801183c>
 8011b24:	2027883a 	mov	r19,r4
 8011b28:	d8000715 	stw	zero,28(sp)
 8011b2c:	003f9506 	br	8011984 <__alt_data_end+0xf8011984>
 8011b30:	9cc002a4 	muli	r19,r19,10
 8011b34:	10803fcc 	andi	r2,r2,255
 8011b38:	1080201c 	xori	r2,r2,128
 8011b3c:	10bfe004 	addi	r2,r2,-128
 8011b40:	9885883a 	add	r2,r19,r2
 8011b44:	14fff404 	addi	r19,r2,-48
 8011b48:	003fa506 	br	80119e0 <__alt_data_end+0xf80119e0>
 8011b4c:	002b883a 	mov	r21,zero
 8011b50:	002d883a 	mov	r22,zero
 8011b54:	003fe806 	br	8011af8 <__alt_data_end+0xf8011af8>
 8011b58:	aaabc83a 	sub	r21,r21,r10
 8011b5c:	b000011e 	bne	r22,zero,8011b64 <_strtod_r+0x38c>
 8011b60:	482d883a 	mov	r22,r9
 8011b64:	00800404 	movi	r2,16
 8011b68:	482f883a 	mov	r23,r9
 8011b6c:	1240010e 	bge	r2,r9,8011b74 <_strtod_r+0x39c>
 8011b70:	102f883a 	mov	r23,r2
 8011b74:	e009883a 	mov	r4,fp
 8011b78:	da401315 	stw	r9,76(sp)
 8011b7c:	801c0f40 	call	801c0f4 <__floatunsidf>
 8011b80:	1025883a 	mov	r18,r2
 8011b84:	00800244 	movi	r2,9
 8011b88:	1823883a 	mov	r17,r3
 8011b8c:	da401317 	ldw	r9,76(sp)
 8011b90:	15c0160e 	bge	r2,r23,8011bec <_strtod_r+0x414>
 8011b94:	b8bffdc4 	addi	r2,r23,-9
 8011b98:	100490fa 	slli	r2,r2,3
 8011b9c:	180b883a 	mov	r5,r3
 8011ba0:	00c200b4 	movhi	r3,2050
 8011ba4:	18c02d04 	addi	r3,r3,180
 8011ba8:	1885883a 	add	r2,r3,r2
 8011bac:	11800017 	ldw	r6,0(r2)
 8011bb0:	11c00117 	ldw	r7,4(r2)
 8011bb4:	9009883a 	mov	r4,r18
 8011bb8:	801af840 	call	801af84 <__muldf3>
 8011bbc:	9809883a 	mov	r4,r19
 8011bc0:	1025883a 	mov	r18,r2
 8011bc4:	1823883a 	mov	r17,r3
 8011bc8:	801c0f40 	call	801c0f4 <__floatunsidf>
 8011bcc:	9009883a 	mov	r4,r18
 8011bd0:	880b883a 	mov	r5,r17
 8011bd4:	100d883a 	mov	r6,r2
 8011bd8:	180f883a 	mov	r7,r3
 8011bdc:	8019b980 	call	8019b98 <__adddf3>
 8011be0:	da401317 	ldw	r9,76(sp)
 8011be4:	1025883a 	mov	r18,r2
 8011be8:	1823883a 	mov	r17,r3
 8011bec:	008003c4 	movi	r2,15
 8011bf0:	12407b16 	blt	r2,r9,8011de0 <_strtod_r+0x608>
 8011bf4:	a83fbe26 	beq	r21,zero,8011af0 <__alt_data_end+0xf8011af0>
 8011bf8:	0543670e 	bge	zero,r21,8012998 <_strtod_r+0x11c0>
 8011bfc:	00c00584 	movi	r3,22
 8011c00:	1d42e816 	blt	r3,r21,80127a4 <_strtod_r+0xfcc>
 8011c04:	a82a90fa 	slli	r21,r21,3
 8011c08:	008200b4 	movhi	r2,2050
 8011c0c:	10802d04 	addi	r2,r2,180
 8011c10:	1545883a 	add	r2,r2,r21
 8011c14:	11000017 	ldw	r4,0(r2)
 8011c18:	11400117 	ldw	r5,4(r2)
 8011c1c:	900d883a 	mov	r6,r18
 8011c20:	880f883a 	mov	r7,r17
 8011c24:	801af840 	call	801af84 <__muldf3>
 8011c28:	102b883a 	mov	r21,r2
 8011c2c:	182d883a 	mov	r22,r3
 8011c30:	003fb106 	br	8011af8 <__alt_data_end+0xf8011af8>
 8011c34:	4801b526 	beq	r9,zero,801230c <_strtod_r+0xb34>
 8011c38:	ddc00617 	ldw	r23,24(sp)
 8011c3c:	00c00ac4 	movi	r3,43
 8011c40:	b8800044 	addi	r2,r23,1
 8011c44:	d8800615 	stw	r2,24(sp)
 8011c48:	b8800047 	ldb	r2,1(r23)
 8011c4c:	10c1e926 	beq	r2,r3,80123f4 <_strtod_r+0xc1c>
 8011c50:	00c00b44 	movi	r3,45
 8011c54:	10c1ec26 	beq	r2,r3,8012408 <_strtod_r+0xc30>
 8011c58:	1023883a 	mov	r17,r2
 8011c5c:	0019883a 	mov	r12,zero
 8011c60:	88bff404 	addi	r2,r17,-48
 8011c64:	00c00244 	movi	r3,9
 8011c68:	1881b736 	bltu	r3,r2,8012348 <_strtod_r+0xb70>
 8011c6c:	00800c04 	movi	r2,48
 8011c70:	8880071e 	bne	r17,r2,8011c90 <_strtod_r+0x4b8>
 8011c74:	d8800617 	ldw	r2,24(sp)
 8011c78:	8807883a 	mov	r3,r17
 8011c7c:	10800044 	addi	r2,r2,1
 8011c80:	d8800615 	stw	r2,24(sp)
 8011c84:	14400007 	ldb	r17,0(r2)
 8011c88:	10800044 	addi	r2,r2,1
 8011c8c:	88fffc26 	beq	r17,r3,8011c80 <__alt_data_end+0xf8011c80>
 8011c90:	88bff3c4 	addi	r2,r17,-49
 8011c94:	00c00204 	movi	r3,8
 8011c98:	18bf7036 	bltu	r3,r2,8011a5c <__alt_data_end+0xf8011a5c>
 8011c9c:	db800617 	ldw	r14,24(sp)
 8011ca0:	88bff404 	addi	r2,r17,-48
 8011ca4:	03400244 	movi	r13,9
 8011ca8:	71c00044 	addi	r7,r14,1
 8011cac:	d9c00615 	stw	r7,24(sp)
 8011cb0:	74400043 	ldbu	r17,1(r14)
 8011cb4:	88fff404 	addi	r3,r17,-48
 8011cb8:	8c403fcc 	andi	r17,r17,255
 8011cbc:	8c40201c 	xori	r17,r17,128
 8011cc0:	18c03fcc 	andi	r3,r3,255
 8011cc4:	8c7fe004 	addi	r17,r17,-128
 8011cc8:	68c00e36 	bltu	r13,r3,8011d04 <_strtod_r+0x52c>
 8011ccc:	71000084 	addi	r4,r14,2
 8011cd0:	d9000615 	stw	r4,24(sp)
 8011cd4:	108002a4 	muli	r2,r2,10
 8011cd8:	21800003 	ldbu	r6,0(r4)
 8011cdc:	200f883a 	mov	r7,r4
 8011ce0:	1463883a 	add	r17,r2,r17
 8011ce4:	30fff404 	addi	r3,r6,-48
 8011ce8:	88bff404 	addi	r2,r17,-48
 8011cec:	34403fcc 	andi	r17,r6,255
 8011cf0:	8c40201c 	xori	r17,r17,128
 8011cf4:	18c03fcc 	andi	r3,r3,255
 8011cf8:	8c7fe004 	addi	r17,r17,-128
 8011cfc:	21000044 	addi	r4,r4,1
 8011d00:	68fff32e 	bgeu	r13,r3,8011cd0 <__alt_data_end+0xf8011cd0>
 8011d04:	3b8fc83a 	sub	r7,r7,r14
 8011d08:	00c00204 	movi	r3,8
 8011d0c:	19c29716 	blt	r3,r7,801276c <_strtod_r+0xf94>
 8011d10:	102b883a 	mov	r21,r2
 8011d14:	009387c4 	movi	r2,19999
 8011d18:	1540010e 	bge	r2,r21,8011d20 <_strtod_r+0x548>
 8011d1c:	102b883a 	mov	r21,r2
 8011d20:	603f4f26 	beq	r12,zero,8011a60 <__alt_data_end+0xf8011a60>
 8011d24:	056bc83a 	sub	r21,zero,r21
 8011d28:	003f4d06 	br	8011a60 <__alt_data_end+0xf8011a60>
 8011d2c:	98800047 	ldb	r2,1(r19)
 8011d30:	00c01604 	movi	r3,88
 8011d34:	10c1de26 	beq	r2,r3,80124b0 <_strtod_r+0xcd8>
 8011d38:	00c01e04 	movi	r3,120
 8011d3c:	10c1dc26 	beq	r2,r3,80124b0 <_strtod_r+0xcd8>
 8011d40:	98c00044 	addi	r3,r19,1
 8011d44:	1827883a 	mov	r19,r3
 8011d48:	d8c00615 	stw	r3,24(sp)
 8011d4c:	18c00044 	addi	r3,r3,1
 8011d50:	18bfffc3 	ldbu	r2,-1(r3)
 8011d54:	11003fcc 	andi	r4,r2,255
 8011d58:	2100201c 	xori	r4,r4,128
 8011d5c:	213fe004 	addi	r4,r4,-128
 8011d60:	217ff826 	beq	r4,r5,8011d44 <__alt_data_end+0xf8011d44>
 8011d64:	203f7926 	beq	r4,zero,8011b4c <__alt_data_end+0xf8011b4c>
 8011d68:	dcc00815 	stw	r19,32(sp)
 8011d6c:	04800044 	movi	r18,1
 8011d70:	003f0b06 	br	80119a0 <__alt_data_end+0xf80119a0>
 8011d74:	8009883a 	mov	r4,r16
 8011d78:	800f6800 	call	800f680 <_localeconv_r>
 8011d7c:	11000017 	ldw	r4,0(r2)
 8011d80:	800526c0 	call	800526c <strlen>
 8011d84:	d8c00617 	ldw	r3,24(sp)
 8011d88:	1885883a 	add	r2,r3,r2
 8011d8c:	d8800615 	stw	r2,24(sp)
 8011d90:	14400007 	ldb	r17,0(r2)
 8011d94:	b001881e 	bne	r22,zero,80123b8 <_strtod_r+0xbe0>
 8011d98:	00c00c04 	movi	r3,48
 8011d9c:	88c3391e 	bne	r17,r3,8012a84 <_strtod_r+0x12ac>
 8011da0:	10c00044 	addi	r3,r2,1
 8011da4:	8809883a 	mov	r4,r17
 8011da8:	d8c00615 	stw	r3,24(sp)
 8011dac:	1c400007 	ldb	r17,0(r3)
 8011db0:	188bc83a 	sub	r5,r3,r2
 8011db4:	18c00044 	addi	r3,r3,1
 8011db8:	893ffb26 	beq	r17,r4,8011da8 <__alt_data_end+0xf8011da8>
 8011dbc:	88bff3c4 	addi	r2,r17,-49
 8011dc0:	00c00204 	movi	r3,8
 8011dc4:	1882e72e 	bgeu	r3,r2,8012964 <_strtod_r+0x118c>
 8011dc8:	00801944 	movi	r2,101
 8011dcc:	88814d26 	beq	r17,r2,8012304 <_strtod_r+0xb2c>
 8011dd0:	0013883a 	mov	r9,zero
 8011dd4:	0015883a 	mov	r10,zero
 8011dd8:	02c00044 	movi	r11,1
 8011ddc:	003f1d06 	br	8011a54 <__alt_data_end+0xf8011a54>
 8011de0:	4defc83a 	sub	r23,r9,r23
 8011de4:	bd6f883a 	add	r23,r23,r21
 8011de8:	05c21e0e 	bge	zero,r23,8012664 <_strtod_r+0xe8c>
 8011dec:	b88003cc 	andi	r2,r23,15
 8011df0:	10000d26 	beq	r2,zero,8011e28 <_strtod_r+0x650>
 8011df4:	100490fa 	slli	r2,r2,3
 8011df8:	00c200b4 	movhi	r3,2050
 8011dfc:	18c02d04 	addi	r3,r3,180
 8011e00:	1885883a 	add	r2,r3,r2
 8011e04:	11000017 	ldw	r4,0(r2)
 8011e08:	11400117 	ldw	r5,4(r2)
 8011e0c:	900d883a 	mov	r6,r18
 8011e10:	880f883a 	mov	r7,r17
 8011e14:	da401315 	stw	r9,76(sp)
 8011e18:	801af840 	call	801af84 <__muldf3>
 8011e1c:	da401317 	ldw	r9,76(sp)
 8011e20:	1025883a 	mov	r18,r2
 8011e24:	1823883a 	mov	r17,r3
 8011e28:	023ffc04 	movi	r8,-16
 8011e2c:	ba10703a 	and	r8,r23,r8
 8011e30:	40003c26 	beq	r8,zero,8011f24 <_strtod_r+0x74c>
 8011e34:	00804d04 	movi	r2,308
 8011e38:	1201cd16 	blt	r2,r8,8012570 <_strtod_r+0xd98>
 8011e3c:	4011d13a 	srai	r8,r8,4
 8011e40:	03000044 	movi	r12,1
 8011e44:	62037c0e 	bge	r12,r8,8012c38 <_strtod_r+0x1460>
 8011e48:	010200b4 	movhi	r4,2050
 8011e4c:	21002304 	addi	r4,r4,140
 8011e50:	2015883a 	mov	r10,r4
 8011e54:	0027883a 	mov	r19,zero
 8011e58:	d9000915 	stw	r4,36(sp)
 8011e5c:	9005883a 	mov	r2,r18
 8011e60:	8807883a 	mov	r3,r17
 8011e64:	dc000c15 	stw	r16,48(sp)
 8011e68:	dc800e15 	stw	r18,56(sp)
 8011e6c:	9821883a 	mov	r16,r19
 8011e70:	0009883a 	mov	r4,zero
 8011e74:	8827883a 	mov	r19,r17
 8011e78:	602f883a 	mov	r23,r12
 8011e7c:	da400a15 	stw	r9,40(sp)
 8011e80:	5025883a 	mov	r18,r10
 8011e84:	4023883a 	mov	r17,r8
 8011e88:	8980004c 	andi	r6,r17,1
 8011e8c:	30000626 	beq	r6,zero,8011ea8 <_strtod_r+0x6d0>
 8011e90:	91800017 	ldw	r6,0(r18)
 8011e94:	91c00117 	ldw	r7,4(r18)
 8011e98:	1009883a 	mov	r4,r2
 8011e9c:	180b883a 	mov	r5,r3
 8011ea0:	801af840 	call	801af84 <__muldf3>
 8011ea4:	01000044 	movi	r4,1
 8011ea8:	8823d07a 	srai	r17,r17,1
 8011eac:	84000044 	addi	r16,r16,1
 8011eb0:	94800204 	addi	r18,r18,8
 8011eb4:	8dfff41e 	bne	r17,r23,8011e88 <__alt_data_end+0xf8011e88>
 8011eb8:	21003fcc 	andi	r4,r4,255
 8011ebc:	9823883a 	mov	r17,r19
 8011ec0:	da400a17 	ldw	r9,40(sp)
 8011ec4:	8027883a 	mov	r19,r16
 8011ec8:	dc800e17 	ldw	r18,56(sp)
 8011ecc:	dc000c17 	ldw	r16,48(sp)
 8011ed0:	2003b11e 	bne	r4,zero,8012d98 <_strtod_r+0x15c0>
 8011ed4:	981690fa 	slli	r11,r19,3
 8011ed8:	d8800917 	ldw	r2,36(sp)
 8011edc:	01ff2c34 	movhi	r7,64688
 8011ee0:	900d883a 	mov	r6,r18
 8011ee4:	12ef883a 	add	r23,r2,r11
 8011ee8:	b9000017 	ldw	r4,0(r23)
 8011eec:	b9400117 	ldw	r5,4(r23)
 8011ef0:	89cf883a 	add	r7,r17,r7
 8011ef4:	da401315 	stw	r9,76(sp)
 8011ef8:	801af840 	call	801af84 <__muldf3>
 8011efc:	1025883a 	mov	r18,r2
 8011f00:	011f2834 	movhi	r4,31904
 8011f04:	189ffc2c 	andhi	r2,r3,32752
 8011f08:	da401317 	ldw	r9,76(sp)
 8011f0c:	20819836 	bltu	r4,r2,8012570 <_strtod_r+0xd98>
 8011f10:	011f2434 	movhi	r4,31888
 8011f14:	2083382e 	bgeu	r4,r2,8012bf8 <_strtod_r+0x1420>
 8011f18:	045ffc34 	movhi	r17,32752
 8011f1c:	8c7fffc4 	addi	r17,r17,-1
 8011f20:	04bfffc4 	movi	r18,-1
 8011f24:	d8000915 	stw	zero,36(sp)
 8011f28:	d9400817 	ldw	r5,32(sp)
 8011f2c:	df000015 	stw	fp,0(sp)
 8011f30:	480f883a 	mov	r7,r9
 8011f34:	b00d883a 	mov	r6,r22
 8011f38:	8009883a 	mov	r4,r16
 8011f3c:	80100680 	call	8010068 <__s2b>
 8011f40:	d8800815 	stw	r2,32(sp)
 8011f44:	10018a26 	beq	r2,zero,8012570 <_strtod_r+0xd98>
 8011f48:	a807d7fa 	srai	r3,r21,31
 8011f4c:	0545c83a 	sub	r2,zero,r21
 8011f50:	dd400a15 	stw	r21,40(sp)
 8011f54:	1886703a 	and	r3,r3,r2
 8011f58:	d8c00c15 	stw	r3,48(sp)
 8011f5c:	a8013516 	blt	r21,zero,8012434 <_strtod_r+0xc5c>
 8011f60:	d9400817 	ldw	r5,32(sp)
 8011f64:	0011883a 	mov	r8,zero
 8011f68:	0027883a 	mov	r19,zero
 8011f6c:	29400304 	addi	r5,r5,12
 8011f70:	d9400f15 	stw	r5,60(sp)
 8011f74:	402b883a 	mov	r21,r8
 8011f78:	dd001215 	stw	r20,72(sp)
 8011f7c:	d8800817 	ldw	r2,32(sp)
 8011f80:	8009883a 	mov	r4,r16
 8011f84:	11400117 	ldw	r5,4(r2)
 8011f88:	800fe780 	call	800fe78 <_Balloc>
 8011f8c:	1029883a 	mov	r20,r2
 8011f90:	10012d26 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 8011f94:	d8c00817 	ldw	r3,32(sp)
 8011f98:	d9400f17 	ldw	r5,60(sp)
 8011f9c:	11000304 	addi	r4,r2,12
 8011fa0:	19800417 	ldw	r6,16(r3)
 8011fa4:	31800084 	addi	r6,r6,2
 8011fa8:	318d883a 	add	r6,r6,r6
 8011fac:	318d883a 	add	r6,r6,r6
 8011fb0:	800fbd40 	call	800fbd4 <memcpy>
 8011fb4:	d9000204 	addi	r4,sp,8
 8011fb8:	d9000015 	stw	r4,0(sp)
 8011fbc:	d9c00404 	addi	r7,sp,16
 8011fc0:	900b883a 	mov	r5,r18
 8011fc4:	880d883a 	mov	r6,r17
 8011fc8:	8009883a 	mov	r4,r16
 8011fcc:	8010b0c0 	call	8010b0c <__d2b>
 8011fd0:	d8800515 	stw	r2,20(sp)
 8011fd4:	dc801115 	stw	r18,68(sp)
 8011fd8:	dc401015 	stw	r17,64(sp)
 8011fdc:	10027c26 	beq	r2,zero,80129d0 <_strtod_r+0x11f8>
 8011fe0:	01400044 	movi	r5,1
 8011fe4:	8009883a 	mov	r4,r16
 8011fe8:	80102840 	call	8010284 <__i2b>
 8011fec:	1027883a 	mov	r19,r2
 8011ff0:	10011526 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 8011ff4:	d8800417 	ldw	r2,16(sp)
 8011ff8:	1000c816 	blt	r2,zero,801231c <_strtod_r+0xb44>
 8011ffc:	d9400c17 	ldw	r5,48(sp)
 8012000:	d9000a17 	ldw	r4,40(sp)
 8012004:	28ad883a 	add	r22,r5,r2
 8012008:	d9400917 	ldw	r5,36(sp)
 801200c:	df000217 	ldw	fp,8(sp)
 8012010:	05ff0084 	movi	r23,-1022
 8012014:	1147c83a 	sub	r3,r2,r5
 8012018:	1f07883a 	add	r3,r3,fp
 801201c:	00800d84 	movi	r2,54
 8012020:	18ffffc4 	addi	r3,r3,-1
 8012024:	1739c83a 	sub	fp,r2,fp
 8012028:	1dc0a50e 	bge	r3,r23,80122c0 <_strtod_r+0xae8>
 801202c:	b8efc83a 	sub	r23,r23,r3
 8012030:	008007c4 	movi	r2,31
 8012034:	e5f9c83a 	sub	fp,fp,r23
 8012038:	15c0bc16 	blt	r2,r23,801232c <_strtod_r+0xb54>
 801203c:	00800044 	movi	r2,1
 8012040:	15c4983a 	sll	r2,r2,r23
 8012044:	d8000b15 	stw	zero,44(sp)
 8012048:	d8800d15 	stw	r2,52(sp)
 801204c:	2707883a 	add	r3,r4,fp
 8012050:	d9000917 	ldw	r4,36(sp)
 8012054:	b739883a 	add	fp,r22,fp
 8012058:	20ef883a 	add	r23,r4,r3
 801205c:	b009883a 	mov	r4,r22
 8012060:	e580010e 	bge	fp,r22,8012068 <_strtod_r+0x890>
 8012064:	e009883a 	mov	r4,fp
 8012068:	b805883a 	mov	r2,r23
 801206c:	25c0010e 	bge	r4,r23,8012074 <_strtod_r+0x89c>
 8012070:	2005883a 	mov	r2,r4
 8012074:	0080030e 	bge	zero,r2,8012084 <_strtod_r+0x8ac>
 8012078:	e0b9c83a 	sub	fp,fp,r2
 801207c:	b8afc83a 	sub	r23,r23,r2
 8012080:	b0adc83a 	sub	r22,r22,r2
 8012084:	d9400c17 	ldw	r5,48(sp)
 8012088:	28001126 	beq	r5,zero,80120d0 <_strtod_r+0x8f8>
 801208c:	280d883a 	mov	r6,r5
 8012090:	8009883a 	mov	r4,r16
 8012094:	980b883a 	mov	r5,r19
 8012098:	80104b80 	call	80104b8 <__pow5mult>
 801209c:	1027883a 	mov	r19,r2
 80120a0:	1000e926 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 80120a4:	d9800517 	ldw	r6,20(sp)
 80120a8:	100b883a 	mov	r5,r2
 80120ac:	8009883a 	mov	r4,r16
 80120b0:	80102c00 	call	80102c0 <__multiply>
 80120b4:	1000e426 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 80120b8:	d9400517 	ldw	r5,20(sp)
 80120bc:	8009883a 	mov	r4,r16
 80120c0:	d8801315 	stw	r2,76(sp)
 80120c4:	800ff200 	call	800ff20 <_Bfree>
 80120c8:	d8801317 	ldw	r2,76(sp)
 80120cc:	d8800515 	stw	r2,20(sp)
 80120d0:	0700060e 	bge	zero,fp,80120ec <_strtod_r+0x914>
 80120d4:	d9400517 	ldw	r5,20(sp)
 80120d8:	e00d883a 	mov	r6,fp
 80120dc:	8009883a 	mov	r4,r16
 80120e0:	80105f80 	call	80105f8 <__lshift>
 80120e4:	d8800515 	stw	r2,20(sp)
 80120e8:	10023926 	beq	r2,zero,80129d0 <_strtod_r+0x11f8>
 80120ec:	d8800a17 	ldw	r2,40(sp)
 80120f0:	10000626 	beq	r2,zero,801210c <_strtod_r+0x934>
 80120f4:	d9800a17 	ldw	r6,40(sp)
 80120f8:	a00b883a 	mov	r5,r20
 80120fc:	8009883a 	mov	r4,r16
 8012100:	80104b80 	call	80104b8 <__pow5mult>
 8012104:	1029883a 	mov	r20,r2
 8012108:	1000cf26 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 801210c:	05c0060e 	bge	zero,r23,8012128 <_strtod_r+0x950>
 8012110:	a00b883a 	mov	r5,r20
 8012114:	b80d883a 	mov	r6,r23
 8012118:	8009883a 	mov	r4,r16
 801211c:	80105f80 	call	80105f8 <__lshift>
 8012120:	1029883a 	mov	r20,r2
 8012124:	1000c826 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 8012128:	0580060e 	bge	zero,r22,8012144 <_strtod_r+0x96c>
 801212c:	980b883a 	mov	r5,r19
 8012130:	b00d883a 	mov	r6,r22
 8012134:	8009883a 	mov	r4,r16
 8012138:	80105f80 	call	80105f8 <__lshift>
 801213c:	1027883a 	mov	r19,r2
 8012140:	1000c126 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 8012144:	d9400517 	ldw	r5,20(sp)
 8012148:	a00d883a 	mov	r6,r20
 801214c:	8009883a 	mov	r4,r16
 8012150:	80107a00 	call	80107a0 <__mdiff>
 8012154:	102b883a 	mov	r21,r2
 8012158:	1000bb26 	beq	r2,zero,8012448 <_strtod_r+0xc70>
 801215c:	10c00317 	ldw	r3,12(r2)
 8012160:	980b883a 	mov	r5,r19
 8012164:	10000315 	stw	zero,12(r2)
 8012168:	1009883a 	mov	r4,r2
 801216c:	d8c00e15 	stw	r3,56(sp)
 8012170:	80107400 	call	8010740 <__mcmp>
 8012174:	10027616 	blt	r2,zero,8012b50 <_strtod_r+0x1378>
 8012178:	10024426 	beq	r2,zero,8012a8c <_strtod_r+0x12b4>
 801217c:	980b883a 	mov	r5,r19
 8012180:	a809883a 	mov	r4,r21
 8012184:	8010c580 	call	8010c58 <__ratio>
 8012188:	000d883a 	mov	r6,zero
 801218c:	01d00034 	movhi	r7,16384
 8012190:	1009883a 	mov	r4,r2
 8012194:	180b883a 	mov	r5,r3
 8012198:	102f883a 	mov	r23,r2
 801219c:	182d883a 	mov	r22,r3
 80121a0:	801ae900 	call	801ae90 <__ledf2>
 80121a4:	00804a16 	blt	zero,r2,80122d0 <_strtod_r+0xaf8>
 80121a8:	d9400e17 	ldw	r5,56(sp)
 80121ac:	28006b26 	beq	r5,zero,801235c <_strtod_r+0xb84>
 80121b0:	058ffc34 	movhi	r22,16368
 80121b4:	d8000b15 	stw	zero,44(sp)
 80121b8:	d8000d15 	stw	zero,52(sp)
 80121bc:	b02f883a 	mov	r23,r22
 80121c0:	8f1ffc2c 	andhi	fp,r17,32752
 80121c4:	009ff834 	movhi	r2,32736
 80121c8:	e080cd26 	beq	fp,r2,8012500 <_strtod_r+0xd28>
 80121cc:	d9400917 	ldw	r5,36(sp)
 80121d0:	28001a26 	beq	r5,zero,801223c <_strtod_r+0xa64>
 80121d4:	0081a834 	movhi	r2,1696
 80121d8:	17001836 	bltu	r2,fp,801223c <_strtod_r+0xa64>
 80121dc:	d9000d17 	ldw	r4,52(sp)
 80121e0:	01d07834 	movhi	r7,16864
 80121e4:	39ffffc4 	addi	r7,r7,-1
 80121e8:	01bff034 	movhi	r6,65472
 80121ec:	b80b883a 	mov	r5,r23
 80121f0:	801ae900 	call	801ae90 <__ledf2>
 80121f4:	00800e16 	blt	zero,r2,8012230 <_strtod_r+0xa58>
 80121f8:	d9000d17 	ldw	r4,52(sp)
 80121fc:	b80b883a 	mov	r5,r23
 8012200:	8018e780 	call	8018e78 <__fixunsdfsi>
 8012204:	10018126 	beq	r2,zero,801280c <_strtod_r+0x1034>
 8012208:	1009883a 	mov	r4,r2
 801220c:	801c0f40 	call	801c0f4 <__floatunsidf>
 8012210:	d8800d15 	stw	r2,52(sp)
 8012214:	182f883a 	mov	r23,r3
 8012218:	d8800e17 	ldw	r2,56(sp)
 801221c:	1001791e 	bne	r2,zero,8012804 <_strtod_r+0x102c>
 8012220:	ba20003c 	xorhi	r8,r23,32768
 8012224:	d8c00d17 	ldw	r3,52(sp)
 8012228:	402d883a 	mov	r22,r8
 801222c:	d8c00b15 	stw	r3,44(sp)
 8012230:	0081ac34 	movhi	r2,1712
 8012234:	b091883a 	add	r8,r22,r2
 8012238:	472dc83a 	sub	r22,r8,fp
 801223c:	9009883a 	mov	r4,r18
 8012240:	880b883a 	mov	r5,r17
 8012244:	801099c0 	call	801099c <__ulp>
 8012248:	d9000b17 	ldw	r4,44(sp)
 801224c:	b00b883a 	mov	r5,r22
 8012250:	100d883a 	mov	r6,r2
 8012254:	180f883a 	mov	r7,r3
 8012258:	801af840 	call	801af84 <__muldf3>
 801225c:	900d883a 	mov	r6,r18
 8012260:	880f883a 	mov	r7,r17
 8012264:	1009883a 	mov	r4,r2
 8012268:	180b883a 	mov	r5,r3
 801226c:	8019b980 	call	8019b98 <__adddf3>
 8012270:	1025883a 	mov	r18,r2
 8012274:	1823883a 	mov	r17,r3
 8012278:	182d883a 	mov	r22,r3
 801227c:	d9000917 	ldw	r4,36(sp)
 8012280:	2000021e 	bne	r4,zero,801228c <_strtod_r+0xab4>
 8012284:	b09ffc2c 	andhi	r2,r22,32752
 8012288:	e080be26 	beq	fp,r2,8012584 <_strtod_r+0xdac>
 801228c:	d9400517 	ldw	r5,20(sp)
 8012290:	8009883a 	mov	r4,r16
 8012294:	800ff200 	call	800ff20 <_Bfree>
 8012298:	a00b883a 	mov	r5,r20
 801229c:	8009883a 	mov	r4,r16
 80122a0:	800ff200 	call	800ff20 <_Bfree>
 80122a4:	980b883a 	mov	r5,r19
 80122a8:	8009883a 	mov	r4,r16
 80122ac:	800ff200 	call	800ff20 <_Bfree>
 80122b0:	a80b883a 	mov	r5,r21
 80122b4:	8009883a 	mov	r4,r16
 80122b8:	800ff200 	call	800ff20 <_Bfree>
 80122bc:	003f2f06 	br	8011f7c <__alt_data_end+0xf8011f7c>
 80122c0:	00c00044 	movi	r3,1
 80122c4:	d8000b15 	stw	zero,44(sp)
 80122c8:	d8c00d15 	stw	r3,52(sp)
 80122cc:	003f5f06 	br	801204c <__alt_data_end+0xf801204c>
 80122d0:	b809883a 	mov	r4,r23
 80122d4:	000d883a 	mov	r6,zero
 80122d8:	01cff834 	movhi	r7,16352
 80122dc:	b00b883a 	mov	r5,r22
 80122e0:	801af840 	call	801af84 <__muldf3>
 80122e4:	d9000e17 	ldw	r4,56(sp)
 80122e8:	d8800d15 	stw	r2,52(sp)
 80122ec:	182f883a 	mov	r23,r3
 80122f0:	2000181e 	bne	r4,zero,8012354 <_strtod_r+0xb7c>
 80122f4:	1a20003c 	xorhi	r8,r3,32768
 80122f8:	d8800b15 	stw	r2,44(sp)
 80122fc:	402d883a 	mov	r22,r8
 8012300:	003faf06 	br	80121c0 <__alt_data_end+0xf80121c0>
 8012304:	0015883a 	mov	r10,zero
 8012308:	02c00044 	movi	r11,1
 801230c:	2800011e 	bne	r5,zero,8012314 <_strtod_r+0xb3c>
 8012310:	903d7e26 	beq	r18,zero,801190c <__alt_data_end+0xf801190c>
 8012314:	0013883a 	mov	r9,zero
 8012318:	003e4706 	br	8011c38 <__alt_data_end+0xf8011c38>
 801231c:	d8c00a17 	ldw	r3,40(sp)
 8012320:	dd800c17 	ldw	r22,48(sp)
 8012324:	1889c83a 	sub	r4,r3,r2
 8012328:	003f3706 	br	8012008 <__alt_data_end+0xf8012008>
 801232c:	00bef884 	movi	r2,-1054
 8012330:	05c00044 	movi	r23,1
 8012334:	10c5c83a 	sub	r2,r2,r3
 8012338:	b884983a 	sll	r2,r23,r2
 801233c:	ddc00d15 	stw	r23,52(sp)
 8012340:	d8800b15 	stw	r2,44(sp)
 8012344:	003f4106 	br	801204c <__alt_data_end+0xf801204c>
 8012348:	ddc00615 	stw	r23,24(sp)
 801234c:	002b883a 	mov	r21,zero
 8012350:	003dc306 	br	8011a60 <__alt_data_end+0xf8011a60>
 8012354:	1811883a 	mov	r8,r3
 8012358:	003fe706 	br	80122f8 <__alt_data_end+0xf80122f8>
 801235c:	90002e1e 	bne	r18,zero,8012418 <_strtod_r+0xc40>
 8012360:	00c00434 	movhi	r3,16
 8012364:	18ffffc4 	addi	r3,r3,-1
 8012368:	88c4703a 	and	r2,r17,r3
 801236c:	10002c1e 	bne	r2,zero,8012420 <_strtod_r+0xc48>
 8012370:	000d883a 	mov	r6,zero
 8012374:	01cffc34 	movhi	r7,16368
 8012378:	b809883a 	mov	r4,r23
 801237c:	b00b883a 	mov	r5,r22
 8012380:	801ae900 	call	801ae90 <__ledf2>
 8012384:	10021716 	blt	r2,zero,8012be4 <_strtod_r+0x140c>
 8012388:	b809883a 	mov	r4,r23
 801238c:	b00b883a 	mov	r5,r22
 8012390:	000d883a 	mov	r6,zero
 8012394:	01cff834 	movhi	r7,16352
 8012398:	801af840 	call	801af84 <__muldf3>
 801239c:	d8800d15 	stw	r2,52(sp)
 80123a0:	182f883a 	mov	r23,r3
 80123a4:	102d883a 	mov	r22,r2
 80123a8:	1a20003c 	xorhi	r8,r3,32768
 80123ac:	dd800b15 	stw	r22,44(sp)
 80123b0:	402d883a 	mov	r22,r8
 80123b4:	003f8206 	br	80121c0 <__alt_data_end+0xf80121c0>
 80123b8:	b013883a 	mov	r9,r22
 80123bc:	000b883a 	mov	r5,zero
 80123c0:	0015883a 	mov	r10,zero
 80123c4:	893ff404 	addi	r4,r17,-48
 80123c8:	00800244 	movi	r2,9
 80123cc:	11001036 	bltu	r2,r4,8012410 <_strtod_r+0xc38>
 80123d0:	28c00044 	addi	r3,r5,1
 80123d4:	2023883a 	mov	r17,r4
 80123d8:	20014d1e 	bne	r4,zero,8012910 <_strtod_r+0x1138>
 80123dc:	d9800617 	ldw	r6,24(sp)
 80123e0:	180b883a 	mov	r5,r3
 80123e4:	30800044 	addi	r2,r6,1
 80123e8:	d8800615 	stw	r2,24(sp)
 80123ec:	34400047 	ldb	r17,1(r6)
 80123f0:	003ff406 	br	80123c4 <__alt_data_end+0xf80123c4>
 80123f4:	0019883a 	mov	r12,zero
 80123f8:	b8800084 	addi	r2,r23,2
 80123fc:	d8800615 	stw	r2,24(sp)
 8012400:	bc400087 	ldb	r17,2(r23)
 8012404:	003e1606 	br	8011c60 <__alt_data_end+0xf8011c60>
 8012408:	03000044 	movi	r12,1
 801240c:	003ffa06 	br	80123f8 <__alt_data_end+0xf80123f8>
 8012410:	02c00044 	movi	r11,1
 8012414:	003d8d06 	br	8011a4c <__alt_data_end+0xf8011a4c>
 8012418:	00800044 	movi	r2,1
 801241c:	9080fe26 	beq	r18,r2,8012818 <_strtod_r+0x1040>
 8012420:	d8000b15 	stw	zero,44(sp)
 8012424:	05affc34 	movhi	r22,49136
 8012428:	d8000d15 	stw	zero,52(sp)
 801242c:	05cffc34 	movhi	r23,16368
 8012430:	003f6306 	br	80121c0 <__alt_data_end+0xf80121c0>
 8012434:	d8000a15 	stw	zero,40(sp)
 8012438:	003ec906 	br	8011f60 <__alt_data_end+0xf8011f60>
 801243c:	d9001117 	ldw	r4,68(sp)
 8012440:	00bfffc4 	movi	r2,-1
 8012444:	2080461e 	bne	r4,r2,8012560 <_strtod_r+0xd88>
 8012448:	dd000a15 	stw	r20,40(sp)
 801244c:	dd001217 	ldw	r20,72(sp)
 8012450:	a811883a 	mov	r8,r21
 8012454:	d8800517 	ldw	r2,20(sp)
 8012458:	00c00884 	movi	r3,34
 801245c:	80c00015 	stw	r3,0(r16)
 8012460:	002b883a 	mov	r21,zero
 8012464:	059ffc34 	movhi	r22,32752
 8012468:	100b883a 	mov	r5,r2
 801246c:	8009883a 	mov	r4,r16
 8012470:	da001315 	stw	r8,76(sp)
 8012474:	800ff200 	call	800ff20 <_Bfree>
 8012478:	d9400a17 	ldw	r5,40(sp)
 801247c:	8009883a 	mov	r4,r16
 8012480:	800ff200 	call	800ff20 <_Bfree>
 8012484:	980b883a 	mov	r5,r19
 8012488:	8009883a 	mov	r4,r16
 801248c:	800ff200 	call	800ff20 <_Bfree>
 8012490:	d9400817 	ldw	r5,32(sp)
 8012494:	8009883a 	mov	r4,r16
 8012498:	800ff200 	call	800ff20 <_Bfree>
 801249c:	da001317 	ldw	r8,76(sp)
 80124a0:	8009883a 	mov	r4,r16
 80124a4:	400b883a 	mov	r5,r8
 80124a8:	800ff200 	call	800ff20 <_Bfree>
 80124ac:	003d9206 	br	8011af8 <__alt_data_end+0xf8011af8>
 80124b0:	d8c00717 	ldw	r3,28(sp)
 80124b4:	d8800504 	addi	r2,sp,20
 80124b8:	018200b4 	movhi	r6,2050
 80124bc:	31806804 	addi	r6,r6,416
 80124c0:	d8c00115 	stw	r3,4(sp)
 80124c4:	d8800015 	stw	r2,0(sp)
 80124c8:	d9c00404 	addi	r7,sp,16
 80124cc:	d9400604 	addi	r5,sp,24
 80124d0:	8009883a 	mov	r4,r16
 80124d4:	8017f280 	call	8017f28 <__gethex>
 80124d8:	154001cc 	andi	r21,r2,7
 80124dc:	a83d9b26 	beq	r21,zero,8011b4c <__alt_data_end+0xf8011b4c>
 80124e0:	00c00184 	movi	r3,6
 80124e4:	a8c0d61e 	bne	r21,r3,8012840 <_strtod_r+0x1068>
 80124e8:	9cc00044 	addi	r19,r19,1
 80124ec:	dcc00615 	stw	r19,24(sp)
 80124f0:	002b883a 	mov	r21,zero
 80124f4:	002d883a 	mov	r22,zero
 80124f8:	d8000715 	stw	zero,28(sp)
 80124fc:	003d7e06 	br	8011af8 <__alt_data_end+0xf8011af8>
 8012500:	00bf2c34 	movhi	r2,64688
 8012504:	88a3883a 	add	r17,r17,r2
 8012508:	9009883a 	mov	r4,r18
 801250c:	880b883a 	mov	r5,r17
 8012510:	801099c0 	call	801099c <__ulp>
 8012514:	d9000b17 	ldw	r4,44(sp)
 8012518:	100d883a 	mov	r6,r2
 801251c:	180f883a 	mov	r7,r3
 8012520:	b00b883a 	mov	r5,r22
 8012524:	801af840 	call	801af84 <__muldf3>
 8012528:	900d883a 	mov	r6,r18
 801252c:	180b883a 	mov	r5,r3
 8012530:	880f883a 	mov	r7,r17
 8012534:	1009883a 	mov	r4,r2
 8012538:	8019b980 	call	8019b98 <__adddf3>
 801253c:	015f2834 	movhi	r5,31904
 8012540:	1025883a 	mov	r18,r2
 8012544:	297fffc4 	addi	r5,r5,-1
 8012548:	189ffc2c 	andhi	r2,r3,32752
 801254c:	2880892e 	bgeu	r5,r2,8012774 <_strtod_r+0xf9c>
 8012550:	d8801017 	ldw	r2,64(sp)
 8012554:	00dffc34 	movhi	r3,32752
 8012558:	18ffffc4 	addi	r3,r3,-1
 801255c:	10ffb726 	beq	r2,r3,801243c <__alt_data_end+0xf801243c>
 8012560:	045ffc34 	movhi	r17,32752
 8012564:	8c7fffc4 	addi	r17,r17,-1
 8012568:	04bfffc4 	movi	r18,-1
 801256c:	003f4706 	br	801228c <__alt_data_end+0xf801228c>
 8012570:	00800884 	movi	r2,34
 8012574:	80800015 	stw	r2,0(r16)
 8012578:	002b883a 	mov	r21,zero
 801257c:	059ffc34 	movhi	r22,32752
 8012580:	003d5d06 	br	8011af8 <__alt_data_end+0xf8011af8>
 8012584:	d9000d17 	ldw	r4,52(sp)
 8012588:	b80b883a 	mov	r5,r23
 801258c:	801bf980 	call	801bf98 <__fixdfsi>
 8012590:	1009883a 	mov	r4,r2
 8012594:	801c0180 	call	801c018 <__floatsidf>
 8012598:	d9000d17 	ldw	r4,52(sp)
 801259c:	b80b883a 	mov	r5,r23
 80125a0:	100d883a 	mov	r6,r2
 80125a4:	180f883a 	mov	r7,r3
 80125a8:	801b69c0 	call	801b69c <__subdf3>
 80125ac:	d9400e17 	ldw	r5,56(sp)
 80125b0:	1039883a 	mov	fp,r2
 80125b4:	182f883a 	mov	r23,r3
 80125b8:	2800141e 	bne	r5,zero,801260c <_strtod_r+0xe34>
 80125bc:	9000131e 	bne	r18,zero,801260c <_strtod_r+0xe34>
 80125c0:	00800434 	movhi	r2,16
 80125c4:	10bfffc4 	addi	r2,r2,-1
 80125c8:	b0ac703a 	and	r22,r22,r2
 80125cc:	b0000f1e 	bne	r22,zero,801260c <_strtod_r+0xe34>
 80125d0:	01a52834 	movhi	r6,38048
 80125d4:	01cff434 	movhi	r7,16336
 80125d8:	318d6544 	addi	r6,r6,13717
 80125dc:	39ffffc4 	addi	r7,r7,-1
 80125e0:	e009883a 	mov	r4,fp
 80125e4:	180b883a 	mov	r5,r3
 80125e8:	801ae900 	call	801ae90 <__ledf2>
 80125ec:	103f270e 	bge	r2,zero,801228c <__alt_data_end+0xf801228c>
 80125f0:	dd000a15 	stw	r20,40(sp)
 80125f4:	a811883a 	mov	r8,r21
 80125f8:	dd001217 	ldw	r20,72(sp)
 80125fc:	d8800517 	ldw	r2,20(sp)
 8012600:	002b883a 	mov	r21,zero
 8012604:	882d883a 	mov	r22,r17
 8012608:	003f9706 	br	8012468 <__alt_data_end+0xf8012468>
 801260c:	01a52834 	movhi	r6,38048
 8012610:	01cff834 	movhi	r7,16352
 8012614:	318d6544 	addi	r6,r6,13717
 8012618:	39ffffc4 	addi	r7,r7,-1
 801261c:	e009883a 	mov	r4,fp
 8012620:	b80b883a 	mov	r5,r23
 8012624:	801ae900 	call	801ae90 <__ledf2>
 8012628:	10000716 	blt	r2,zero,8012648 <_strtod_r+0xe70>
 801262c:	018d6c34 	movhi	r6,13744
 8012630:	31b94d44 	addi	r6,r6,-6859
 8012634:	01cff834 	movhi	r7,16352
 8012638:	e009883a 	mov	r4,fp
 801263c:	b80b883a 	mov	r5,r23
 8012640:	801adb40 	call	801adb4 <__gedf2>
 8012644:	00bf110e 	bge	zero,r2,801228c <__alt_data_end+0xf801228c>
 8012648:	dd000a15 	stw	r20,40(sp)
 801264c:	a811883a 	mov	r8,r21
 8012650:	dd001217 	ldw	r20,72(sp)
 8012654:	d8800517 	ldw	r2,20(sp)
 8012658:	902b883a 	mov	r21,r18
 801265c:	882d883a 	mov	r22,r17
 8012660:	003f8106 	br	8012468 <__alt_data_end+0xf8012468>
 8012664:	b83e2f26 	beq	r23,zero,8011f24 <__alt_data_end+0xf8011f24>
 8012668:	05efc83a 	sub	r23,zero,r23
 801266c:	b88003cc 	andi	r2,r23,15
 8012670:	10000d26 	beq	r2,zero,80126a8 <_strtod_r+0xed0>
 8012674:	100490fa 	slli	r2,r2,3
 8012678:	00c200b4 	movhi	r3,2050
 801267c:	18c02d04 	addi	r3,r3,180
 8012680:	1885883a 	add	r2,r3,r2
 8012684:	11800017 	ldw	r6,0(r2)
 8012688:	11c00117 	ldw	r7,4(r2)
 801268c:	9009883a 	mov	r4,r18
 8012690:	880b883a 	mov	r5,r17
 8012694:	da401315 	stw	r9,76(sp)
 8012698:	801a4440 	call	801a444 <__divdf3>
 801269c:	da401317 	ldw	r9,76(sp)
 80126a0:	1025883a 	mov	r18,r2
 80126a4:	1823883a 	mov	r17,r3
 80126a8:	b82fd13a 	srai	r23,r23,4
 80126ac:	b83e1d26 	beq	r23,zero,8011f24 <__alt_data_end+0xf8011f24>
 80126b0:	008007c4 	movi	r2,31
 80126b4:	15c02816 	blt	r2,r23,8012758 <_strtod_r+0xf80>
 80126b8:	b880040c 	andi	r2,r23,16
 80126bc:	10019726 	beq	r2,zero,8012d1c <_strtod_r+0x1544>
 80126c0:	05c1880e 	bge	zero,r23,8012ce4 <_strtod_r+0x150c>
 80126c4:	00c01a84 	movi	r3,106
 80126c8:	d8c00915 	stw	r3,36(sp)
 80126cc:	04c200b4 	movhi	r19,2050
 80126d0:	9cc06d04 	addi	r19,r19,436
 80126d4:	8807883a 	mov	r3,r17
 80126d8:	9005883a 	mov	r2,r18
 80126dc:	8023883a 	mov	r17,r16
 80126e0:	0009883a 	mov	r4,zero
 80126e4:	9821883a 	mov	r16,r19
 80126e8:	da400a15 	stw	r9,40(sp)
 80126ec:	1827883a 	mov	r19,r3
 80126f0:	b980004c 	andi	r6,r23,1
 80126f4:	30000626 	beq	r6,zero,8012710 <_strtod_r+0xf38>
 80126f8:	81800017 	ldw	r6,0(r16)
 80126fc:	81c00117 	ldw	r7,4(r16)
 8012700:	1009883a 	mov	r4,r2
 8012704:	180b883a 	mov	r5,r3
 8012708:	801af840 	call	801af84 <__muldf3>
 801270c:	01000044 	movi	r4,1
 8012710:	b82fd07a 	srai	r23,r23,1
 8012714:	84000204 	addi	r16,r16,8
 8012718:	b83ff51e 	bne	r23,zero,80126f0 <__alt_data_end+0xf80126f0>
 801271c:	21003fcc 	andi	r4,r4,255
 8012720:	8821883a 	mov	r16,r17
 8012724:	da400a17 	ldw	r9,40(sp)
 8012728:	9823883a 	mov	r17,r19
 801272c:	2001a51e 	bne	r4,zero,8012dc4 <_strtod_r+0x15ec>
 8012730:	d9000917 	ldw	r4,36(sp)
 8012734:	20016d1e 	bne	r4,zero,8012cec <_strtod_r+0x1514>
 8012738:	000d883a 	mov	r6,zero
 801273c:	000f883a 	mov	r7,zero
 8012740:	9009883a 	mov	r4,r18
 8012744:	880b883a 	mov	r5,r17
 8012748:	da401315 	stw	r9,76(sp)
 801274c:	801ad2c0 	call	801ad2c <__eqdf2>
 8012750:	da401317 	ldw	r9,76(sp)
 8012754:	103df41e 	bne	r2,zero,8011f28 <__alt_data_end+0xf8011f28>
 8012758:	00800884 	movi	r2,34
 801275c:	80800015 	stw	r2,0(r16)
 8012760:	002b883a 	mov	r21,zero
 8012764:	002d883a 	mov	r22,zero
 8012768:	003ce306 	br	8011af8 <__alt_data_end+0xf8011af8>
 801276c:	055387c4 	movi	r21,19999
 8012770:	003d6b06 	br	8011d20 <__alt_data_end+0xf8011d20>
 8012774:	0440d434 	movhi	r17,848
 8012778:	1c63883a 	add	r17,r3,r17
 801277c:	882d883a 	mov	r22,r17
 8012780:	003ebe06 	br	801227c <__alt_data_end+0xf801227c>
 8012784:	14403fcc 	andi	r17,r2,255
 8012788:	8c40201c 	xori	r17,r17,128
 801278c:	8c7fe004 	addi	r17,r17,-128
 8012790:	dd400817 	ldw	r21,32(sp)
 8012794:	0027883a 	mov	r19,zero
 8012798:	0039883a 	mov	fp,zero
 801279c:	002d883a 	mov	r22,zero
 80127a0:	003c9906 	br	8011a08 <__alt_data_end+0xf8011a08>
 80127a4:	00c00944 	movi	r3,37
 80127a8:	1a47c83a 	sub	r3,r3,r9
 80127ac:	1d7d8c16 	blt	r3,r21,8011de0 <__alt_data_end+0xf8011de0>
 80127b0:	1261c83a 	sub	r16,r2,r9
 80127b4:	800490fa 	slli	r2,r16,3
 80127b8:	04c200b4 	movhi	r19,2050
 80127bc:	9cc02d04 	addi	r19,r19,180
 80127c0:	9885883a 	add	r2,r19,r2
 80127c4:	11000017 	ldw	r4,0(r2)
 80127c8:	11400117 	ldw	r5,4(r2)
 80127cc:	900d883a 	mov	r6,r18
 80127d0:	880f883a 	mov	r7,r17
 80127d4:	801af840 	call	801af84 <__muldf3>
 80127d8:	ac0dc83a 	sub	r6,r21,r16
 80127dc:	300c90fa 	slli	r6,r6,3
 80127e0:	1009883a 	mov	r4,r2
 80127e4:	180b883a 	mov	r5,r3
 80127e8:	9985883a 	add	r2,r19,r6
 80127ec:	11800017 	ldw	r6,0(r2)
 80127f0:	11c00117 	ldw	r7,4(r2)
 80127f4:	801af840 	call	801af84 <__muldf3>
 80127f8:	102b883a 	mov	r21,r2
 80127fc:	182d883a 	mov	r22,r3
 8012800:	003cbd06 	br	8011af8 <__alt_data_end+0xf8011af8>
 8012804:	b811883a 	mov	r8,r23
 8012808:	003e8606 	br	8012224 <__alt_data_end+0xf8012224>
 801280c:	d8000d15 	stw	zero,52(sp)
 8012810:	05cffc34 	movhi	r23,16368
 8012814:	003e8006 	br	8012218 <__alt_data_end+0xf8012218>
 8012818:	883f011e 	bne	r17,zero,8012420 <__alt_data_end+0xf8012420>
 801281c:	dd000a15 	stw	r20,40(sp)
 8012820:	dd001217 	ldw	r20,72(sp)
 8012824:	a811883a 	mov	r8,r21
 8012828:	00800884 	movi	r2,34
 801282c:	80800015 	stw	r2,0(r16)
 8012830:	002b883a 	mov	r21,zero
 8012834:	d8800517 	ldw	r2,20(sp)
 8012838:	002d883a 	mov	r22,zero
 801283c:	003f0a06 	br	8012468 <__alt_data_end+0xf8012468>
 8012840:	d9800517 	ldw	r6,20(sp)
 8012844:	30000826 	beq	r6,zero,8012868 <_strtod_r+0x1090>
 8012848:	01400d44 	movi	r5,53
 801284c:	d9000204 	addi	r4,sp,8
 8012850:	d8801315 	stw	r2,76(sp)
 8012854:	8010d700 	call	8010d70 <__copybits>
 8012858:	d9400517 	ldw	r5,20(sp)
 801285c:	8009883a 	mov	r4,r16
 8012860:	800ff200 	call	800ff20 <_Bfree>
 8012864:	d8801317 	ldw	r2,76(sp)
 8012868:	00c00184 	movi	r3,6
 801286c:	1d400f36 	bltu	r3,r21,80128ac <_strtod_r+0x10d4>
 8012870:	a82a90ba 	slli	r21,r21,2
 8012874:	00c20074 	movhi	r3,2049
 8012878:	18ca2204 	addi	r3,r3,10376
 801287c:	a8eb883a 	add	r21,r21,r3
 8012880:	a8c00017 	ldw	r3,0(r21)
 8012884:	1800683a 	jmp	r3
 8012888:	08012904 	addi	zero,at,1188
 801288c:	080128dc 	xori	zero,at,1187
 8012890:	080128c0 	call	80128c <__alt_mem_sdram-0x77fed74>
 8012894:	080128a4 	muli	zero,at,1186
 8012898:	080128cc 	andi	zero,at,1187
 801289c:	080128dc 	xori	zero,at,1187
 80128a0:	08012904 	addi	zero,at,1188
 80128a4:	045ffc34 	movhi	r17,32752
 80128a8:	0025883a 	mov	r18,zero
 80128ac:	1080020c 	andi	r2,r2,8
 80128b0:	902b883a 	mov	r21,r18
 80128b4:	103c8f26 	beq	r2,zero,8011af4 <__alt_data_end+0xf8011af4>
 80128b8:	8da00034 	orhi	r22,r17,32768
 80128bc:	003c8e06 	br	8011af8 <__alt_data_end+0xf8011af8>
 80128c0:	dc800217 	ldw	r18,8(sp)
 80128c4:	dc400317 	ldw	r17,12(sp)
 80128c8:	003ff806 	br	80128ac <__alt_data_end+0xf80128ac>
 80128cc:	04600034 	movhi	r17,32768
 80128d0:	8c7fffc4 	addi	r17,r17,-1
 80128d4:	04bfffc4 	movi	r18,-1
 80128d8:	003ff406 	br	80128ac <__alt_data_end+0xf80128ac>
 80128dc:	d8c00417 	ldw	r3,16(sp)
 80128e0:	dc400317 	ldw	r17,12(sp)
 80128e4:	013ffc34 	movhi	r4,65520
 80128e8:	18c10cc4 	addi	r3,r3,1075
 80128ec:	1806953a 	slli	r3,r3,20
 80128f0:	213fffc4 	addi	r4,r4,-1
 80128f4:	8922703a 	and	r17,r17,r4
 80128f8:	dc800217 	ldw	r18,8(sp)
 80128fc:	88e2b03a 	or	r17,r17,r3
 8012900:	003fea06 	br	80128ac <__alt_data_end+0xf80128ac>
 8012904:	0023883a 	mov	r17,zero
 8012908:	0025883a 	mov	r18,zero
 801290c:	003fe706 	br	80128ac <__alt_data_end+0xf80128ac>
 8012910:	01800044 	movi	r6,1
 8012914:	50d5883a 	add	r10,r10,r3
 8012918:	2a4b883a 	add	r5,r5,r9
 801291c:	19811a26 	beq	r3,r6,8012d88 <_strtod_r+0x15b0>
 8012920:	01800204 	movi	r6,8
 8012924:	01c00404 	movi	r7,16
 8012928:	4a400044 	addi	r9,r9,1
 801292c:	48bfffc4 	addi	r2,r9,-1
 8012930:	30801616 	blt	r6,r2,801298c <_strtod_r+0x11b4>
 8012934:	e70002a4 	muli	fp,fp,10
 8012938:	497ffb1e 	bne	r9,r5,8012928 <__alt_data_end+0xf8012928>
 801293c:	d9800617 	ldw	r6,24(sp)
 8012940:	4a400044 	addi	r9,r9,1
 8012944:	00c00204 	movi	r3,8
 8012948:	19400c0e 	bge	r3,r5,801297c <_strtod_r+0x11a4>
 801294c:	00800404 	movi	r2,16
 8012950:	000b883a 	mov	r5,zero
 8012954:	127ea316 	blt	r2,r9,80123e4 <__alt_data_end+0xf80123e4>
 8012958:	988002a4 	muli	r2,r19,10
 801295c:	20a7883a 	add	r19,r4,r2
 8012960:	003ea006 	br	80123e4 <__alt_data_end+0xf80123e4>
 8012964:	d8800617 	ldw	r2,24(sp)
 8012968:	8c7ff404 	addi	r17,r17,-48
 801296c:	2a800044 	addi	r10,r5,1
 8012970:	d8800815 	stw	r2,32(sp)
 8012974:	100d883a 	mov	r6,r2
 8012978:	02400044 	movi	r9,1
 801297c:	e08002a4 	muli	r2,fp,10
 8012980:	000b883a 	mov	r5,zero
 8012984:	88b9883a 	add	fp,r17,r2
 8012988:	003e9606 	br	80123e4 <__alt_data_end+0xf80123e4>
 801298c:	3a7fea16 	blt	r7,r9,8012938 <__alt_data_end+0xf8012938>
 8012990:	9cc002a4 	muli	r19,r19,10
 8012994:	003fe806 	br	8012938 <__alt_data_end+0xf8012938>
 8012998:	00bffa84 	movi	r2,-22
 801299c:	a8bd1016 	blt	r21,r2,8011de0 <__alt_data_end+0xf8011de0>
 80129a0:	a82a90fa 	slli	r21,r21,3
 80129a4:	008200b4 	movhi	r2,2050
 80129a8:	10802d04 	addi	r2,r2,180
 80129ac:	1545c83a 	sub	r2,r2,r21
 80129b0:	11800017 	ldw	r6,0(r2)
 80129b4:	11c00117 	ldw	r7,4(r2)
 80129b8:	9009883a 	mov	r4,r18
 80129bc:	880b883a 	mov	r5,r17
 80129c0:	801a4440 	call	801a444 <__divdf3>
 80129c4:	102b883a 	mov	r21,r2
 80129c8:	182d883a 	mov	r22,r3
 80129cc:	003c4a06 	br	8011af8 <__alt_data_end+0xf8011af8>
 80129d0:	dd000a15 	stw	r20,40(sp)
 80129d4:	a811883a 	mov	r8,r21
 80129d8:	dd001217 	ldw	r20,72(sp)
 80129dc:	003e9e06 	br	8012458 <__alt_data_end+0xf8012458>
 80129e0:	014200b4 	movhi	r5,2050
 80129e4:	d9000617 	ldw	r4,24(sp)
 80129e8:	29405f04 	addi	r5,r5,380
 80129ec:	01c00644 	movi	r7,25
 80129f0:	00000b06 	br	8012a20 <_strtod_r+0x1248>
 80129f4:	21000044 	addi	r4,r4,1
 80129f8:	20800003 	ldbu	r2,0(r4)
 80129fc:	10ffefc4 	addi	r3,r2,-65
 8012a00:	10803fcc 	andi	r2,r2,255
 8012a04:	1080201c 	xori	r2,r2,128
 8012a08:	18c03fcc 	andi	r3,r3,255
 8012a0c:	10bfe004 	addi	r2,r2,-128
 8012a10:	38c00136 	bltu	r7,r3,8012a18 <_strtod_r+0x1240>
 8012a14:	10800804 	addi	r2,r2,32
 8012a18:	29400044 	addi	r5,r5,1
 8012a1c:	11bbbb1e 	bne	r2,r6,801190c <__alt_data_end+0xf801190c>
 8012a20:	29800007 	ldb	r6,0(r5)
 8012a24:	303ff31e 	bne	r6,zero,80129f4 <__alt_data_end+0xf80129f4>
 8012a28:	018200b4 	movhi	r6,2050
 8012a2c:	d9000615 	stw	r4,24(sp)
 8012a30:	31806004 	addi	r6,r6,384
 8012a34:	200b883a 	mov	r5,r4
 8012a38:	02000644 	movi	r8,25
 8012a3c:	00000a06 	br	8012a68 <_strtod_r+0x1290>
 8012a40:	28800003 	ldbu	r2,0(r5)
 8012a44:	10ffefc4 	addi	r3,r2,-65
 8012a48:	10803fcc 	andi	r2,r2,255
 8012a4c:	1080201c 	xori	r2,r2,128
 8012a50:	18c03fcc 	andi	r3,r3,255
 8012a54:	10bfe004 	addi	r2,r2,-128
 8012a58:	40c00136 	bltu	r8,r3,8012a60 <_strtod_r+0x1288>
 8012a5c:	10800804 	addi	r2,r2,32
 8012a60:	31800044 	addi	r6,r6,1
 8012a64:	11c0711e 	bne	r2,r7,8012c2c <_strtod_r+0x1454>
 8012a68:	31c00007 	ldb	r7,0(r6)
 8012a6c:	29400044 	addi	r5,r5,1
 8012a70:	383ff31e 	bne	r7,zero,8012a40 <__alt_data_end+0xf8012a40>
 8012a74:	d9400615 	stw	r5,24(sp)
 8012a78:	045ffc34 	movhi	r17,32752
 8012a7c:	0025883a 	mov	r18,zero
 8012a80:	003c1b06 	br	8011af0 <__alt_data_end+0xf8011af0>
 8012a84:	000b883a 	mov	r5,zero
 8012a88:	003ccc06 	br	8011dbc <__alt_data_end+0xf8011dbc>
 8012a8c:	d9400e17 	ldw	r5,56(sp)
 8012a90:	dd000a15 	stw	r20,40(sp)
 8012a94:	00800434 	movhi	r2,16
 8012a98:	a811883a 	mov	r8,r21
 8012a9c:	dd001217 	ldw	r20,72(sp)
 8012aa0:	dd401117 	ldw	r21,68(sp)
 8012aa4:	dd801017 	ldw	r22,64(sp)
 8012aa8:	10bfffc4 	addi	r2,r2,-1
 8012aac:	28005626 	beq	r5,zero,8012c08 <_strtod_r+0x1430>
 8012ab0:	8886703a 	and	r3,r17,r2
 8012ab4:	18807826 	beq	r3,r2,8012c98 <_strtod_r+0x14c0>
 8012ab8:	d8c00b17 	ldw	r3,44(sp)
 8012abc:	18005726 	beq	r3,zero,8012c1c <_strtod_r+0x1444>
 8012ac0:	1c44703a 	and	r2,r3,r17
 8012ac4:	10000f26 	beq	r2,zero,8012b04 <_strtod_r+0x132c>
 8012ac8:	d9000e17 	ldw	r4,56(sp)
 8012acc:	d9800917 	ldw	r6,36(sp)
 8012ad0:	20005e26 	beq	r4,zero,8012c4c <_strtod_r+0x1474>
 8012ad4:	9009883a 	mov	r4,r18
 8012ad8:	880b883a 	mov	r5,r17
 8012adc:	da001315 	stw	r8,76(sp)
 8012ae0:	80117740 	call	8011774 <sulp>
 8012ae4:	100d883a 	mov	r6,r2
 8012ae8:	180f883a 	mov	r7,r3
 8012aec:	9009883a 	mov	r4,r18
 8012af0:	880b883a 	mov	r5,r17
 8012af4:	8019b980 	call	8019b98 <__adddf3>
 8012af8:	da001317 	ldw	r8,76(sp)
 8012afc:	102b883a 	mov	r21,r2
 8012b00:	182d883a 	mov	r22,r3
 8012b04:	d8c00917 	ldw	r3,36(sp)
 8012b08:	18000f26 	beq	r3,zero,8012b48 <_strtod_r+0x1370>
 8012b0c:	a809883a 	mov	r4,r21
 8012b10:	b00b883a 	mov	r5,r22
 8012b14:	000d883a 	mov	r6,zero
 8012b18:	01ce5434 	movhi	r7,14672
 8012b1c:	da001315 	stw	r8,76(sp)
 8012b20:	801af840 	call	801af84 <__muldf3>
 8012b24:	102b883a 	mov	r21,r2
 8012b28:	182d883a 	mov	r22,r3
 8012b2c:	da001317 	ldw	r8,76(sp)
 8012b30:	1800051e 	bne	r3,zero,8012b48 <_strtod_r+0x1370>
 8012b34:	d8800517 	ldw	r2,20(sp)
 8012b38:	a83e4b1e 	bne	r21,zero,8012468 <__alt_data_end+0xf8012468>
 8012b3c:	00c00884 	movi	r3,34
 8012b40:	80c00015 	stw	r3,0(r16)
 8012b44:	003e4806 	br	8012468 <__alt_data_end+0xf8012468>
 8012b48:	d8800517 	ldw	r2,20(sp)
 8012b4c:	003e4606 	br	8012468 <__alt_data_end+0xf8012468>
 8012b50:	d9000e17 	ldw	r4,56(sp)
 8012b54:	dd000a15 	stw	r20,40(sp)
 8012b58:	a811883a 	mov	r8,r21
 8012b5c:	dd001217 	ldw	r20,72(sp)
 8012b60:	dd401117 	ldw	r21,68(sp)
 8012b64:	dd801017 	ldw	r22,64(sp)
 8012b68:	203fe61e 	bne	r4,zero,8012b04 <__alt_data_end+0xf8012b04>
 8012b6c:	903fe51e 	bne	r18,zero,8012b04 <__alt_data_end+0xf8012b04>
 8012b70:	00800434 	movhi	r2,16
 8012b74:	10bfffc4 	addi	r2,r2,-1
 8012b78:	8884703a 	and	r2,r17,r2
 8012b7c:	103fe11e 	bne	r2,zero,8012b04 <__alt_data_end+0xf8012b04>
 8012b80:	8ddffc2c 	andhi	r23,r17,32752
 8012b84:	0081ac34 	movhi	r2,1712
 8012b88:	15ffde2e 	bgeu	r2,r23,8012b04 <__alt_data_end+0xf8012b04>
 8012b8c:	40800517 	ldw	r2,20(r8)
 8012b90:	1000031e 	bne	r2,zero,8012ba0 <_strtod_r+0x13c8>
 8012b94:	40800417 	ldw	r2,16(r8)
 8012b98:	00c00044 	movi	r3,1
 8012b9c:	18bfd90e 	bge	r3,r2,8012b04 <__alt_data_end+0xf8012b04>
 8012ba0:	400b883a 	mov	r5,r8
 8012ba4:	01800044 	movi	r6,1
 8012ba8:	8009883a 	mov	r4,r16
 8012bac:	80105f80 	call	80105f8 <__lshift>
 8012bb0:	980b883a 	mov	r5,r19
 8012bb4:	1009883a 	mov	r4,r2
 8012bb8:	d8801315 	stw	r2,76(sp)
 8012bbc:	80107400 	call	8010740 <__mcmp>
 8012bc0:	da001317 	ldw	r8,76(sp)
 8012bc4:	00bfcf0e 	bge	zero,r2,8012b04 <__alt_data_end+0xf8012b04>
 8012bc8:	d8c00917 	ldw	r3,36(sp)
 8012bcc:	18005c26 	beq	r3,zero,8012d40 <_strtod_r+0x1568>
 8012bd0:	0081ac34 	movhi	r2,1712
 8012bd4:	15c05a16 	blt	r2,r23,8012d40 <_strtod_r+0x1568>
 8012bd8:	0080dc34 	movhi	r2,880
 8012bdc:	15ffcb16 	blt	r2,r23,8012b0c <__alt_data_end+0xf8012b0c>
 8012be0:	003f1106 	br	8012828 <__alt_data_end+0xf8012828>
 8012be4:	002d883a 	mov	r22,zero
 8012be8:	022ff834 	movhi	r8,49120
 8012bec:	d8000d15 	stw	zero,52(sp)
 8012bf0:	05cff834 	movhi	r23,16352
 8012bf4:	003ded06 	br	80123ac <__alt_data_end+0xf80123ac>
 8012bf8:	0440d434 	movhi	r17,848
 8012bfc:	1c63883a 	add	r17,r3,r17
 8012c00:	d8000915 	stw	zero,36(sp)
 8012c04:	003cc806 	br	8011f28 <__alt_data_end+0xf8011f28>
 8012c08:	8884703a 	and	r2,r17,r2
 8012c0c:	103faa1e 	bne	r2,zero,8012ab8 <__alt_data_end+0xf8012ab8>
 8012c10:	903fa91e 	bne	r18,zero,8012ab8 <__alt_data_end+0xf8012ab8>
 8012c14:	8ddffc2c 	andhi	r23,r17,32752
 8012c18:	003feb06 	br	8012bc8 <__alt_data_end+0xf8012bc8>
 8012c1c:	d8c00d17 	ldw	r3,52(sp)
 8012c20:	1cae703a 	and	r23,r3,r18
 8012c24:	b83fb726 	beq	r23,zero,8012b04 <__alt_data_end+0xf8012b04>
 8012c28:	003fa706 	br	8012ac8 <__alt_data_end+0xf8012ac8>
 8012c2c:	21000044 	addi	r4,r4,1
 8012c30:	d9000615 	stw	r4,24(sp)
 8012c34:	003f9006 	br	8012a78 <__alt_data_end+0xf8012a78>
 8012c38:	014200b4 	movhi	r5,2050
 8012c3c:	29402304 	addi	r5,r5,140
 8012c40:	d9400915 	stw	r5,36(sp)
 8012c44:	0027883a 	mov	r19,zero
 8012c48:	003ca206 	br	8011ed4 <__alt_data_end+0xf8011ed4>
 8012c4c:	9009883a 	mov	r4,r18
 8012c50:	880b883a 	mov	r5,r17
 8012c54:	da001315 	stw	r8,76(sp)
 8012c58:	80117740 	call	8011774 <sulp>
 8012c5c:	100d883a 	mov	r6,r2
 8012c60:	180f883a 	mov	r7,r3
 8012c64:	9009883a 	mov	r4,r18
 8012c68:	880b883a 	mov	r5,r17
 8012c6c:	801b69c0 	call	801b69c <__subdf3>
 8012c70:	000d883a 	mov	r6,zero
 8012c74:	000f883a 	mov	r7,zero
 8012c78:	1009883a 	mov	r4,r2
 8012c7c:	180b883a 	mov	r5,r3
 8012c80:	102b883a 	mov	r21,r2
 8012c84:	182d883a 	mov	r22,r3
 8012c88:	801ad2c0 	call	801ad2c <__eqdf2>
 8012c8c:	da001317 	ldw	r8,76(sp)
 8012c90:	103ee526 	beq	r2,zero,8012828 <__alt_data_end+0xf8012828>
 8012c94:	003f9b06 	br	8012b04 <__alt_data_end+0xf8012b04>
 8012c98:	d8800917 	ldw	r2,36(sp)
 8012c9c:	10002226 	beq	r2,zero,8012d28 <_strtod_r+0x1550>
 8012ca0:	889ffc2c 	andhi	r2,r17,32752
 8012ca4:	00c1a834 	movhi	r3,1696
 8012ca8:	18801f36 	bltu	r3,r2,8012d28 <_strtod_r+0x1550>
 8012cac:	1004d53a 	srli	r2,r2,20
 8012cb0:	00c01ac4 	movi	r3,107
 8012cb4:	1887c83a 	sub	r3,r3,r2
 8012cb8:	00bfffc4 	movi	r2,-1
 8012cbc:	10c4983a 	sll	r2,r2,r3
 8012cc0:	14bf7d1e 	bne	r2,r18,8012ab8 <__alt_data_end+0xf8012ab8>
 8012cc4:	00dffc34 	movhi	r3,32752
 8012cc8:	18ffffc4 	addi	r3,r3,-1
 8012ccc:	88c03526 	beq	r17,r3,8012da4 <_strtod_r+0x15cc>
 8012cd0:	8c5ffc2c 	andhi	r17,r17,32752
 8012cd4:	00800434 	movhi	r2,16
 8012cd8:	002b883a 	mov	r21,zero
 8012cdc:	88ad883a 	add	r22,r17,r2
 8012ce0:	003f8806 	br	8012b04 <__alt_data_end+0xf8012b04>
 8012ce4:	01401a84 	movi	r5,106
 8012ce8:	d9400915 	stw	r5,36(sp)
 8012cec:	8ddffc2c 	andhi	r23,r17,32752
 8012cf0:	b82ed53a 	srli	r23,r23,20
 8012cf4:	00801ac4 	movi	r2,107
 8012cf8:	15c5c83a 	sub	r2,r2,r23
 8012cfc:	00be8e0e 	bge	zero,r2,8012738 <__alt_data_end+0xf8012738>
 8012d00:	00c007c4 	movi	r3,31
 8012d04:	18800a0e 	bge	r3,r2,8012d30 <_strtod_r+0x1558>
 8012d08:	00c00d04 	movi	r3,52
 8012d0c:	0025883a 	mov	r18,zero
 8012d10:	1880270e 	bge	r3,r2,8012db0 <_strtod_r+0x15d8>
 8012d14:	0440dc34 	movhi	r17,880
 8012d18:	003e8706 	br	8012738 <__alt_data_end+0xf8012738>
 8012d1c:	d8000915 	stw	zero,36(sp)
 8012d20:	05fe6a16 	blt	zero,r23,80126cc <__alt_data_end+0xf80126cc>
 8012d24:	003e8406 	br	8012738 <__alt_data_end+0xf8012738>
 8012d28:	00bfffc4 	movi	r2,-1
 8012d2c:	003fe406 	br	8012cc0 <__alt_data_end+0xf8012cc0>
 8012d30:	00ffffc4 	movi	r3,-1
 8012d34:	1884983a 	sll	r2,r3,r2
 8012d38:	14a4703a 	and	r18,r2,r18
 8012d3c:	003e7e06 	br	8012738 <__alt_data_end+0xf8012738>
 8012d40:	00bffc34 	movhi	r2,65520
 8012d44:	b8af883a 	add	r23,r23,r2
 8012d48:	057fffc4 	movi	r21,-1
 8012d4c:	00800434 	movhi	r2,16
 8012d50:	1545883a 	add	r2,r2,r21
 8012d54:	b8acb03a 	or	r22,r23,r2
 8012d58:	003f6a06 	br	8012b04 <__alt_data_end+0xf8012b04>
 8012d5c:	014200b4 	movhi	r5,2050
 8012d60:	29406304 	addi	r5,r5,396
 8012d64:	d9800204 	addi	r6,sp,8
 8012d68:	d9000604 	addi	r4,sp,24
 8012d6c:	80187580 	call	8018758 <__hexnan>
 8012d70:	00c00144 	movi	r3,5
 8012d74:	10fb5c1e 	bne	r2,r3,8011ae8 <__alt_data_end+0xf8011ae8>
 8012d78:	dc400317 	ldw	r17,12(sp)
 8012d7c:	dc800217 	ldw	r18,8(sp)
 8012d80:	8c5ffc34 	orhi	r17,r17,32752
 8012d84:	003b5a06 	br	8011af0 <__alt_data_end+0xf8011af0>
 8012d88:	480b883a 	mov	r5,r9
 8012d8c:	d9800617 	ldw	r6,24(sp)
 8012d90:	4a400044 	addi	r9,r9,1
 8012d94:	003eeb06 	br	8012944 <__alt_data_end+0xf8012944>
 8012d98:	1025883a 	mov	r18,r2
 8012d9c:	1823883a 	mov	r17,r3
 8012da0:	003c4c06 	br	8011ed4 <__alt_data_end+0xf8011ed4>
 8012da4:	00ffffc4 	movi	r3,-1
 8012da8:	10ffc91e 	bne	r2,r3,8012cd0 <__alt_data_end+0xf8012cd0>
 8012dac:	003da906 	br	8012454 <__alt_data_end+0xf8012454>
 8012db0:	10bff804 	addi	r2,r2,-32
 8012db4:	00ffffc4 	movi	r3,-1
 8012db8:	1884983a 	sll	r2,r3,r2
 8012dbc:	1462703a 	and	r17,r2,r17
 8012dc0:	003e5d06 	br	8012738 <__alt_data_end+0xf8012738>
 8012dc4:	1025883a 	mov	r18,r2
 8012dc8:	1823883a 	mov	r17,r3
 8012dcc:	003e5806 	br	8012730 <__alt_data_end+0xf8012730>

08012dd0 <strtod>:
 8012dd0:	008200b4 	movhi	r2,2050
 8012dd4:	10881404 	addi	r2,r2,8272
 8012dd8:	280d883a 	mov	r6,r5
 8012ddc:	200b883a 	mov	r5,r4
 8012de0:	11000017 	ldw	r4,0(r2)
 8012de4:	80117d81 	jmpi	80117d8 <_strtod_r>

08012de8 <strtof>:
 8012de8:	defffb04 	addi	sp,sp,-20
 8012dec:	dcc00315 	stw	r19,12(sp)
 8012df0:	04c200b4 	movhi	r19,2050
 8012df4:	9cc81404 	addi	r19,r19,8272
 8012df8:	280d883a 	mov	r6,r5
 8012dfc:	200b883a 	mov	r5,r4
 8012e00:	99000017 	ldw	r4,0(r19)
 8012e04:	dfc00415 	stw	ra,16(sp)
 8012e08:	dc800215 	stw	r18,8(sp)
 8012e0c:	dc400115 	stw	r17,4(sp)
 8012e10:	dc000015 	stw	r16,0(sp)
 8012e14:	80117d80 	call	80117d8 <_strtod_r>
 8012e18:	1009883a 	mov	r4,r2
 8012e1c:	180b883a 	mov	r5,r3
 8012e20:	1025883a 	mov	r18,r2
 8012e24:	1823883a 	mov	r17,r3
 8012e28:	801c19c0 	call	801c19c <__truncdfsf2>
 8012e2c:	000b883a 	mov	r5,zero
 8012e30:	1009883a 	mov	r4,r2
 8012e34:	1021883a 	mov	r16,r2
 8012e38:	801999c0 	call	801999c <__eqsf2>
 8012e3c:	1000111e 	bne	r2,zero,8012e84 <strtof+0x9c>
 8012e40:	000d883a 	mov	r6,zero
 8012e44:	000f883a 	mov	r7,zero
 8012e48:	9009883a 	mov	r4,r18
 8012e4c:	880b883a 	mov	r5,r17
 8012e50:	801ad2c0 	call	801ad2c <__eqdf2>
 8012e54:	10000b26 	beq	r2,zero,8012e84 <strtof+0x9c>
 8012e58:	98800017 	ldw	r2,0(r19)
 8012e5c:	00c00884 	movi	r3,34
 8012e60:	10c00015 	stw	r3,0(r2)
 8012e64:	8005883a 	mov	r2,r16
 8012e68:	dfc00417 	ldw	ra,16(sp)
 8012e6c:	dcc00317 	ldw	r19,12(sp)
 8012e70:	dc800217 	ldw	r18,8(sp)
 8012e74:	dc400117 	ldw	r17,4(sp)
 8012e78:	dc000017 	ldw	r16,0(sp)
 8012e7c:	dec00504 	addi	sp,sp,20
 8012e80:	f800283a 	ret
 8012e84:	015fe034 	movhi	r5,32640
 8012e88:	297fffc4 	addi	r5,r5,-1
 8012e8c:	8009883a 	mov	r4,r16
 8012e90:	8019a140 	call	8019a14 <__gesf2>
 8012e94:	0080070e 	bge	zero,r2,8012eb4 <strtof+0xcc>
 8012e98:	01dffc34 	movhi	r7,32752
 8012e9c:	39ffffc4 	addi	r7,r7,-1
 8012ea0:	01bfffc4 	movi	r6,-1
 8012ea4:	9009883a 	mov	r4,r18
 8012ea8:	880b883a 	mov	r5,r17
 8012eac:	801adb40 	call	801adb4 <__gedf2>
 8012eb0:	00bfe90e 	bge	zero,r2,8012e58 <__alt_data_end+0xf8012e58>
 8012eb4:	017fe034 	movhi	r5,65408
 8012eb8:	297fffc4 	addi	r5,r5,-1
 8012ebc:	8009883a 	mov	r4,r16
 8012ec0:	8019ad00 	call	8019ad0 <__lesf2>
 8012ec4:	103fe70e 	bge	r2,zero,8012e64 <__alt_data_end+0xf8012e64>
 8012ec8:	01fffc34 	movhi	r7,65520
 8012ecc:	39ffffc4 	addi	r7,r7,-1
 8012ed0:	01bfffc4 	movi	r6,-1
 8012ed4:	9009883a 	mov	r4,r18
 8012ed8:	880b883a 	mov	r5,r17
 8012edc:	801ae900 	call	801ae90 <__ledf2>
 8012ee0:	103fdd0e 	bge	r2,zero,8012e58 <__alt_data_end+0xf8012e58>
 8012ee4:	003fdf06 	br	8012e64 <__alt_data_end+0xf8012e64>

08012ee8 <_strtol_r>:
 8012ee8:	008200b4 	movhi	r2,2050
 8012eec:	defff404 	addi	sp,sp,-48
 8012ef0:	10881204 	addi	r2,r2,8264
 8012ef4:	dd400715 	stw	r21,28(sp)
 8012ef8:	15400017 	ldw	r21,0(r2)
 8012efc:	dd800815 	stw	r22,32(sp)
 8012f00:	dd000615 	stw	r20,24(sp)
 8012f04:	dcc00515 	stw	r19,20(sp)
 8012f08:	d9000015 	stw	r4,0(sp)
 8012f0c:	dfc00b15 	stw	ra,44(sp)
 8012f10:	df000a15 	stw	fp,40(sp)
 8012f14:	ddc00915 	stw	r23,36(sp)
 8012f18:	dc800415 	stw	r18,16(sp)
 8012f1c:	dc400315 	stw	r17,12(sp)
 8012f20:	dc000215 	stw	r16,8(sp)
 8012f24:	2829883a 	mov	r20,r5
 8012f28:	3027883a 	mov	r19,r6
 8012f2c:	382d883a 	mov	r22,r7
 8012f30:	2809883a 	mov	r4,r5
 8012f34:	24000003 	ldbu	r16,0(r4)
 8012f38:	24400044 	addi	r17,r4,1
 8012f3c:	2007883a 	mov	r3,r4
 8012f40:	ac05883a 	add	r2,r21,r16
 8012f44:	10800043 	ldbu	r2,1(r2)
 8012f48:	8809883a 	mov	r4,r17
 8012f4c:	1080020c 	andi	r2,r2,8
 8012f50:	103ff81e 	bne	r2,zero,8012f34 <__alt_data_end+0xf8012f34>
 8012f54:	00800b44 	movi	r2,45
 8012f58:	80805826 	beq	r16,r2,80130bc <_strtol_r+0x1d4>
 8012f5c:	00800ac4 	movi	r2,43
 8012f60:	80805a26 	beq	r16,r2,80130cc <_strtol_r+0x1e4>
 8012f64:	0039883a 	mov	fp,zero
 8012f68:	b0004426 	beq	r22,zero,801307c <_strtol_r+0x194>
 8012f6c:	00800404 	movi	r2,16
 8012f70:	b0806026 	beq	r22,r2,80130f4 <_strtol_r+0x20c>
 8012f74:	b02f883a 	mov	r23,r22
 8012f78:	00a00034 	movhi	r2,32768
 8012f7c:	e025003a 	cmpeq	r18,fp,zero
 8012f80:	14a5c83a 	sub	r18,r2,r18
 8012f84:	b80b883a 	mov	r5,r23
 8012f88:	9009883a 	mov	r4,r18
 8012f8c:	8003a1c0 	call	8003a1c <__umodsi3>
 8012f90:	b80b883a 	mov	r5,r23
 8012f94:	9009883a 	mov	r4,r18
 8012f98:	d8800115 	stw	r2,4(sp)
 8012f9c:	80039b80 	call	80039b8 <__udivsi3>
 8012fa0:	ac07883a 	add	r3,r21,r16
 8012fa4:	18c00043 	ldbu	r3,1(r3)
 8012fa8:	880b883a 	mov	r5,r17
 8012fac:	000d883a 	mov	r6,zero
 8012fb0:	1a00010c 	andi	r8,r3,4
 8012fb4:	0009883a 	mov	r4,zero
 8012fb8:	02800044 	movi	r10,1
 8012fbc:	027fffc4 	movi	r9,-1
 8012fc0:	d9c00117 	ldw	r7,4(sp)
 8012fc4:	40000e26 	beq	r8,zero,8013000 <_strtol_r+0x118>
 8012fc8:	843ff404 	addi	r16,r16,-48
 8012fcc:	8580120e 	bge	r16,r22,8013018 <_strtol_r+0x130>
 8012fd0:	32400526 	beq	r6,r9,8012fe8 <_strtol_r+0x100>
 8012fd4:	11002536 	bltu	r2,r4,801306c <_strtol_r+0x184>
 8012fd8:	20802326 	beq	r4,r2,8013068 <_strtol_r+0x180>
 8012fdc:	25c9383a 	mul	r4,r4,r23
 8012fe0:	01800044 	movi	r6,1
 8012fe4:	8109883a 	add	r4,r16,r4
 8012fe8:	2c000003 	ldbu	r16,0(r5)
 8012fec:	29400044 	addi	r5,r5,1
 8012ff0:	ac07883a 	add	r3,r21,r16
 8012ff4:	18c00043 	ldbu	r3,1(r3)
 8012ff8:	1a00010c 	andi	r8,r3,4
 8012ffc:	403ff21e 	bne	r8,zero,8012fc8 <__alt_data_end+0xf8012fc8>
 8013000:	18c000cc 	andi	r3,r3,3
 8013004:	18000426 	beq	r3,zero,8013018 <_strtol_r+0x130>
 8013008:	1a801a26 	beq	r3,r10,8013074 <_strtol_r+0x18c>
 801300c:	00c015c4 	movi	r3,87
 8013010:	80e1c83a 	sub	r16,r16,r3
 8013014:	85bfee16 	blt	r16,r22,8012fd0 <__alt_data_end+0xf8012fd0>
 8013018:	00bfffc4 	movi	r2,-1
 801301c:	30801e26 	beq	r6,r2,8013098 <_strtol_r+0x1b0>
 8013020:	e0001b1e 	bne	fp,zero,8013090 <_strtol_r+0x1a8>
 8013024:	2005883a 	mov	r2,r4
 8013028:	98000326 	beq	r19,zero,8013038 <_strtol_r+0x150>
 801302c:	3000211e 	bne	r6,zero,80130b4 <_strtol_r+0x1cc>
 8013030:	a00b883a 	mov	r5,r20
 8013034:	99400015 	stw	r5,0(r19)
 8013038:	dfc00b17 	ldw	ra,44(sp)
 801303c:	df000a17 	ldw	fp,40(sp)
 8013040:	ddc00917 	ldw	r23,36(sp)
 8013044:	dd800817 	ldw	r22,32(sp)
 8013048:	dd400717 	ldw	r21,28(sp)
 801304c:	dd000617 	ldw	r20,24(sp)
 8013050:	dcc00517 	ldw	r19,20(sp)
 8013054:	dc800417 	ldw	r18,16(sp)
 8013058:	dc400317 	ldw	r17,12(sp)
 801305c:	dc000217 	ldw	r16,8(sp)
 8013060:	dec00c04 	addi	sp,sp,48
 8013064:	f800283a 	ret
 8013068:	3c3fdc0e 	bge	r7,r16,8012fdc <__alt_data_end+0xf8012fdc>
 801306c:	01bfffc4 	movi	r6,-1
 8013070:	003fdd06 	br	8012fe8 <__alt_data_end+0xf8012fe8>
 8013074:	00c00dc4 	movi	r3,55
 8013078:	003fe506 	br	8013010 <__alt_data_end+0xf8013010>
 801307c:	00800c04 	movi	r2,48
 8013080:	80801626 	beq	r16,r2,80130dc <_strtol_r+0x1f4>
 8013084:	05800284 	movi	r22,10
 8013088:	b02f883a 	mov	r23,r22
 801308c:	003fba06 	br	8012f78 <__alt_data_end+0xf8012f78>
 8013090:	0109c83a 	sub	r4,zero,r4
 8013094:	003fe306 	br	8013024 <__alt_data_end+0xf8013024>
 8013098:	d9000017 	ldw	r4,0(sp)
 801309c:	00c00884 	movi	r3,34
 80130a0:	e005003a 	cmpeq	r2,fp,zero
 80130a4:	20c00015 	stw	r3,0(r4)
 80130a8:	00e00034 	movhi	r3,32768
 80130ac:	1885c83a 	sub	r2,r3,r2
 80130b0:	983fe126 	beq	r19,zero,8013038 <__alt_data_end+0xf8013038>
 80130b4:	297fffc4 	addi	r5,r5,-1
 80130b8:	003fde06 	br	8013034 <__alt_data_end+0xf8013034>
 80130bc:	1c400084 	addi	r17,r3,2
 80130c0:	1c000043 	ldbu	r16,1(r3)
 80130c4:	07000044 	movi	fp,1
 80130c8:	003fa706 	br	8012f68 <__alt_data_end+0xf8012f68>
 80130cc:	1c400084 	addi	r17,r3,2
 80130d0:	1c000043 	ldbu	r16,1(r3)
 80130d4:	0039883a 	mov	fp,zero
 80130d8:	003fa306 	br	8012f68 <__alt_data_end+0xf8012f68>
 80130dc:	88800003 	ldbu	r2,0(r17)
 80130e0:	00c01604 	movi	r3,88
 80130e4:	108037cc 	andi	r2,r2,223
 80130e8:	10c00826 	beq	r2,r3,801310c <_strtol_r+0x224>
 80130ec:	05800204 	movi	r22,8
 80130f0:	003fa006 	br	8012f74 <__alt_data_end+0xf8012f74>
 80130f4:	00800c04 	movi	r2,48
 80130f8:	80bf9e1e 	bne	r16,r2,8012f74 <__alt_data_end+0xf8012f74>
 80130fc:	88800003 	ldbu	r2,0(r17)
 8013100:	00c01604 	movi	r3,88
 8013104:	108037cc 	andi	r2,r2,223
 8013108:	10ff9a1e 	bne	r2,r3,8012f74 <__alt_data_end+0xf8012f74>
 801310c:	05c00404 	movi	r23,16
 8013110:	8c000043 	ldbu	r16,1(r17)
 8013114:	b82d883a 	mov	r22,r23
 8013118:	8c400084 	addi	r17,r17,2
 801311c:	003f9606 	br	8012f78 <__alt_data_end+0xf8012f78>

08013120 <strtol>:
 8013120:	008200b4 	movhi	r2,2050
 8013124:	10881404 	addi	r2,r2,8272
 8013128:	300f883a 	mov	r7,r6
 801312c:	280d883a 	mov	r6,r5
 8013130:	200b883a 	mov	r5,r4
 8013134:	11000017 	ldw	r4,0(r2)
 8013138:	8012ee81 	jmpi	8012ee8 <_strtol_r>

0801313c <_strtoll_r>:
 801313c:	008200b4 	movhi	r2,2050
 8013140:	deffef04 	addi	sp,sp,-68
 8013144:	10881204 	addi	r2,r2,8264
 8013148:	dd800d15 	stw	r22,52(sp)
 801314c:	15800017 	ldw	r22,0(r2)
 8013150:	df000f15 	stw	fp,60(sp)
 8013154:	d9000515 	stw	r4,20(sp)
 8013158:	dfc01015 	stw	ra,64(sp)
 801315c:	ddc00e15 	stw	r23,56(sp)
 8013160:	dd400c15 	stw	r21,48(sp)
 8013164:	dd000b15 	stw	r20,44(sp)
 8013168:	dcc00a15 	stw	r19,40(sp)
 801316c:	dc800915 	stw	r18,36(sp)
 8013170:	dc400815 	stw	r17,32(sp)
 8013174:	dc000715 	stw	r16,28(sp)
 8013178:	d9400415 	stw	r5,16(sp)
 801317c:	d9800215 	stw	r6,8(sp)
 8013180:	3839883a 	mov	fp,r7
 8013184:	2809883a 	mov	r4,r5
 8013188:	22000003 	ldbu	r8,0(r4)
 801318c:	24400044 	addi	r17,r4,1
 8013190:	2007883a 	mov	r3,r4
 8013194:	b205883a 	add	r2,r22,r8
 8013198:	10800043 	ldbu	r2,1(r2)
 801319c:	8809883a 	mov	r4,r17
 80131a0:	1080020c 	andi	r2,r2,8
 80131a4:	103ff81e 	bne	r2,zero,8013188 <__alt_data_end+0xf8013188>
 80131a8:	00800b44 	movi	r2,45
 80131ac:	40807e26 	beq	r8,r2,80133a8 <_strtoll_r+0x26c>
 80131b0:	00800ac4 	movi	r2,43
 80131b4:	40808126 	beq	r8,r2,80133bc <_strtoll_r+0x280>
 80131b8:	d8000115 	stw	zero,4(sp)
 80131bc:	e0000b26 	beq	fp,zero,80131ec <_strtoll_r+0xb0>
 80131c0:	00800404 	movi	r2,16
 80131c4:	e0808926 	beq	fp,r2,80133ec <_strtoll_r+0x2b0>
 80131c8:	e00bd7fa 	srai	r5,fp,31
 80131cc:	d9000117 	ldw	r4,4(sp)
 80131d0:	e025883a 	mov	r18,fp
 80131d4:	d9400015 	stw	r5,0(sp)
 80131d8:	20000b1e 	bne	r4,zero,8013208 <_strtoll_r+0xcc>
 80131dc:	04200034 	movhi	r16,32768
 80131e0:	843fffc4 	addi	r16,r16,-1
 80131e4:	053fffc4 	movi	r20,-1
 80131e8:	00000906 	br	8013210 <_strtoll_r+0xd4>
 80131ec:	00800c04 	movi	r2,48
 80131f0:	40807626 	beq	r8,r2,80133cc <_strtoll_r+0x290>
 80131f4:	04800284 	movi	r18,10
 80131f8:	d8000015 	stw	zero,0(sp)
 80131fc:	9039883a 	mov	fp,r18
 8013200:	d9000117 	ldw	r4,4(sp)
 8013204:	203ff526 	beq	r4,zero,80131dc <__alt_data_end+0xf80131dc>
 8013208:	0029883a 	mov	r20,zero
 801320c:	04200034 	movhi	r16,32768
 8013210:	d9c00017 	ldw	r7,0(sp)
 8013214:	a009883a 	mov	r4,r20
 8013218:	800b883a 	mov	r5,r16
 801321c:	900d883a 	mov	r6,r18
 8013220:	da000615 	stw	r8,24(sp)
 8013224:	80194640 	call	8019464 <__umoddi3>
 8013228:	d9c00017 	ldw	r7,0(sp)
 801322c:	a009883a 	mov	r4,r20
 8013230:	800b883a 	mov	r5,r16
 8013234:	900d883a 	mov	r6,r18
 8013238:	d8800315 	stw	r2,12(sp)
 801323c:	8018eec0 	call	8018eec <__udivdi3>
 8013240:	da000617 	ldw	r8,24(sp)
 8013244:	1829883a 	mov	r20,r3
 8013248:	882f883a 	mov	r23,r17
 801324c:	b207883a 	add	r3,r22,r8
 8013250:	19800043 	ldbu	r6,1(r3)
 8013254:	1021883a 	mov	r16,r2
 8013258:	000f883a 	mov	r7,zero
 801325c:	30c0010c 	andi	r3,r6,4
 8013260:	0009883a 	mov	r4,zero
 8013264:	000b883a 	mov	r5,zero
 8013268:	04400044 	movi	r17,1
 801326c:	057fffc4 	movi	r21,-1
 8013270:	18000d26 	beq	r3,zero,80132a8 <_strtoll_r+0x16c>
 8013274:	44fff404 	addi	r19,r8,-48
 8013278:	9f00110e 	bge	r19,fp,80132c0 <_strtoll_r+0x184>
 801327c:	3d400426 	beq	r7,r21,8013290 <_strtoll_r+0x154>
 8013280:	a1400236 	bltu	r20,r5,801328c <_strtoll_r+0x150>
 8013284:	2d002a1e 	bne	r5,r20,8013330 <_strtoll_r+0x1f4>
 8013288:	8100292e 	bgeu	r16,r4,8013330 <_strtoll_r+0x1f4>
 801328c:	01ffffc4 	movi	r7,-1
 8013290:	ba000003 	ldbu	r8,0(r23)
 8013294:	bdc00044 	addi	r23,r23,1
 8013298:	b207883a 	add	r3,r22,r8
 801329c:	19800043 	ldbu	r6,1(r3)
 80132a0:	30c0010c 	andi	r3,r6,4
 80132a4:	183ff31e 	bne	r3,zero,8013274 <__alt_data_end+0xf8013274>
 80132a8:	318000cc 	andi	r6,r6,3
 80132ac:	30000426 	beq	r6,zero,80132c0 <_strtoll_r+0x184>
 80132b0:	34402b26 	beq	r6,r17,8013360 <_strtoll_r+0x224>
 80132b4:	00c015c4 	movi	r3,87
 80132b8:	40e7c83a 	sub	r19,r8,r3
 80132bc:	9f3fef16 	blt	r19,fp,801327c <__alt_data_end+0xf801327c>
 80132c0:	00bfffc4 	movi	r2,-1
 80132c4:	38802c26 	beq	r7,r2,8013378 <_strtoll_r+0x23c>
 80132c8:	d8800117 	ldw	r2,4(sp)
 80132cc:	10000426 	beq	r2,zero,80132e0 <_strtoll_r+0x1a4>
 80132d0:	0109c83a 	sub	r4,zero,r4
 80132d4:	2004c03a 	cmpne	r2,r4,zero
 80132d8:	0151c83a 	sub	r8,zero,r5
 80132dc:	408bc83a 	sub	r5,r8,r2
 80132e0:	d8800217 	ldw	r2,8(sp)
 80132e4:	10005026 	beq	r2,zero,8013428 <_strtoll_r+0x2ec>
 80132e8:	2005883a 	mov	r2,r4
 80132ec:	2807883a 	mov	r3,r5
 80132f0:	38002b1e 	bne	r7,zero,80133a0 <_strtoll_r+0x264>
 80132f4:	dd800417 	ldw	r22,16(sp)
 80132f8:	d9000217 	ldw	r4,8(sp)
 80132fc:	25800015 	stw	r22,0(r4)
 8013300:	dfc01017 	ldw	ra,64(sp)
 8013304:	df000f17 	ldw	fp,60(sp)
 8013308:	ddc00e17 	ldw	r23,56(sp)
 801330c:	dd800d17 	ldw	r22,52(sp)
 8013310:	dd400c17 	ldw	r21,48(sp)
 8013314:	dd000b17 	ldw	r20,44(sp)
 8013318:	dcc00a17 	ldw	r19,40(sp)
 801331c:	dc800917 	ldw	r18,36(sp)
 8013320:	dc400817 	ldw	r17,32(sp)
 8013324:	dc000717 	ldw	r16,28(sp)
 8013328:	dec01104 	addi	sp,sp,68
 801332c:	f800283a 	ret
 8013330:	24000d26 	beq	r4,r16,8013368 <_strtoll_r+0x22c>
 8013334:	d9c00017 	ldw	r7,0(sp)
 8013338:	900d883a 	mov	r6,r18
 801333c:	8018e180 	call	8018e18 <__muldi3>
 8013340:	980bd7fa 	srai	r5,r19,31
 8013344:	9885883a 	add	r2,r19,r2
 8013348:	14d1803a 	cmpltu	r8,r2,r19
 801334c:	28c7883a 	add	r3,r5,r3
 8013350:	1009883a 	mov	r4,r2
 8013354:	40cb883a 	add	r5,r8,r3
 8013358:	01c00044 	movi	r7,1
 801335c:	003fcc06 	br	8013290 <__alt_data_end+0xf8013290>
 8013360:	00c00dc4 	movi	r3,55
 8013364:	003fd406 	br	80132b8 <__alt_data_end+0xf80132b8>
 8013368:	2d3ff21e 	bne	r5,r20,8013334 <__alt_data_end+0xf8013334>
 801336c:	d8800317 	ldw	r2,12(sp)
 8013370:	14ffc616 	blt	r2,r19,801328c <__alt_data_end+0xf801328c>
 8013374:	003fef06 	br	8013334 <__alt_data_end+0xf8013334>
 8013378:	d9000117 	ldw	r4,4(sp)
 801337c:	2000271e 	bne	r4,zero,801341c <_strtoll_r+0x2e0>
 8013380:	00e00034 	movhi	r3,32768
 8013384:	18ffffc4 	addi	r3,r3,-1
 8013388:	3805883a 	mov	r2,r7
 801338c:	d9400517 	ldw	r5,20(sp)
 8013390:	01000884 	movi	r4,34
 8013394:	29000015 	stw	r4,0(r5)
 8013398:	d9000217 	ldw	r4,8(sp)
 801339c:	203fd826 	beq	r4,zero,8013300 <__alt_data_end+0xf8013300>
 80133a0:	bdbfffc4 	addi	r22,r23,-1
 80133a4:	003fd406 	br	80132f8 <__alt_data_end+0xf80132f8>
 80133a8:	00800044 	movi	r2,1
 80133ac:	1c400084 	addi	r17,r3,2
 80133b0:	1a000043 	ldbu	r8,1(r3)
 80133b4:	d8800115 	stw	r2,4(sp)
 80133b8:	003f8006 	br	80131bc <__alt_data_end+0xf80131bc>
 80133bc:	1c400084 	addi	r17,r3,2
 80133c0:	1a000043 	ldbu	r8,1(r3)
 80133c4:	d8000115 	stw	zero,4(sp)
 80133c8:	003f7c06 	br	80131bc <__alt_data_end+0xf80131bc>
 80133cc:	88800003 	ldbu	r2,0(r17)
 80133d0:	00c01604 	movi	r3,88
 80133d4:	108037cc 	andi	r2,r2,223
 80133d8:	10c00a26 	beq	r2,r3,8013404 <_strtoll_r+0x2c8>
 80133dc:	04800204 	movi	r18,8
 80133e0:	d8000015 	stw	zero,0(sp)
 80133e4:	9039883a 	mov	fp,r18
 80133e8:	003f8506 	br	8013200 <__alt_data_end+0xf8013200>
 80133ec:	00800c04 	movi	r2,48
 80133f0:	4080101e 	bne	r8,r2,8013434 <_strtoll_r+0x2f8>
 80133f4:	88800003 	ldbu	r2,0(r17)
 80133f8:	00c01604 	movi	r3,88
 80133fc:	108037cc 	andi	r2,r2,223
 8013400:	10c00c1e 	bne	r2,r3,8013434 <_strtoll_r+0x2f8>
 8013404:	04800404 	movi	r18,16
 8013408:	8a000043 	ldbu	r8,1(r17)
 801340c:	d8000015 	stw	zero,0(sp)
 8013410:	8c400084 	addi	r17,r17,2
 8013414:	9039883a 	mov	fp,r18
 8013418:	003f7906 	br	8013200 <__alt_data_end+0xf8013200>
 801341c:	0005883a 	mov	r2,zero
 8013420:	00e00034 	movhi	r3,32768
 8013424:	003fd906 	br	801338c <__alt_data_end+0xf801338c>
 8013428:	2005883a 	mov	r2,r4
 801342c:	2807883a 	mov	r3,r5
 8013430:	003fb306 	br	8013300 <__alt_data_end+0xf8013300>
 8013434:	e025883a 	mov	r18,fp
 8013438:	d8000015 	stw	zero,0(sp)
 801343c:	003f7006 	br	8013200 <__alt_data_end+0xf8013200>

08013440 <_strtoul_r>:
 8013440:	008200b4 	movhi	r2,2050
 8013444:	defff604 	addi	sp,sp,-40
 8013448:	10881204 	addi	r2,r2,8264
 801344c:	dc800315 	stw	r18,12(sp)
 8013450:	14800017 	ldw	r18,0(r2)
 8013454:	dd400615 	stw	r21,24(sp)
 8013458:	dd000515 	stw	r20,20(sp)
 801345c:	dcc00415 	stw	r19,16(sp)
 8013460:	2029883a 	mov	r20,r4
 8013464:	dfc00915 	stw	ra,36(sp)
 8013468:	ddc00815 	stw	r23,32(sp)
 801346c:	dd800715 	stw	r22,28(sp)
 8013470:	dc400215 	stw	r17,8(sp)
 8013474:	dc000115 	stw	r16,4(sp)
 8013478:	2827883a 	mov	r19,r5
 801347c:	382b883a 	mov	r21,r7
 8013480:	2809883a 	mov	r4,r5
 8013484:	24000003 	ldbu	r16,0(r4)
 8013488:	24400044 	addi	r17,r4,1
 801348c:	2007883a 	mov	r3,r4
 8013490:	9405883a 	add	r2,r18,r16
 8013494:	10800043 	ldbu	r2,1(r2)
 8013498:	8809883a 	mov	r4,r17
 801349c:	1080020c 	andi	r2,r2,8
 80134a0:	103ff81e 	bne	r2,zero,8013484 <__alt_data_end+0xf8013484>
 80134a4:	00800b44 	movi	r2,45
 80134a8:	80805326 	beq	r16,r2,80135f8 <_strtoul_r+0x1b8>
 80134ac:	00800ac4 	movi	r2,43
 80134b0:	80805526 	beq	r16,r2,8013608 <_strtoul_r+0x1c8>
 80134b4:	002f883a 	mov	r23,zero
 80134b8:	a8000f26 	beq	r21,zero,80134f8 <_strtoul_r+0xb8>
 80134bc:	00800404 	movi	r2,16
 80134c0:	a8805f26 	beq	r21,r2,8013640 <_strtoul_r+0x200>
 80134c4:	013fffc4 	movi	r4,-1
 80134c8:	a80b883a 	mov	r5,r21
 80134cc:	d9800015 	stw	r6,0(sp)
 80134d0:	80039b80 	call	80039b8 <__udivsi3>
 80134d4:	a80b883a 	mov	r5,r21
 80134d8:	013fffc4 	movi	r4,-1
 80134dc:	102d883a 	mov	r22,r2
 80134e0:	8003a1c0 	call	8003a1c <__umodsi3>
 80134e4:	d9800017 	ldw	r6,0(sp)
 80134e8:	1019883a 	mov	r12,r2
 80134ec:	a817883a 	mov	r11,r21
 80134f0:	b00f883a 	mov	r7,r22
 80134f4:	00000706 	br	8013514 <_strtoul_r+0xd4>
 80134f8:	00800c04 	movi	r2,48
 80134fc:	80804626 	beq	r16,r2,8013618 <_strtoul_r+0x1d8>
 8013500:	05400284 	movi	r21,10
 8013504:	01c666b4 	movhi	r7,6554
 8013508:	03000144 	movi	r12,5
 801350c:	39e66644 	addi	r7,r7,-26215
 8013510:	a817883a 	mov	r11,r21
 8013514:	9407883a 	add	r3,r18,r16
 8013518:	18c00043 	ldbu	r3,1(r3)
 801351c:	8809883a 	mov	r4,r17
 8013520:	0011883a 	mov	r8,zero
 8013524:	1940010c 	andi	r5,r3,4
 8013528:	0005883a 	mov	r2,zero
 801352c:	02800044 	movi	r10,1
 8013530:	027fffc4 	movi	r9,-1
 8013534:	28000e26 	beq	r5,zero,8013570 <_strtoul_r+0x130>
 8013538:	843ff404 	addi	r16,r16,-48
 801353c:	8540120e 	bge	r16,r21,8013588 <_strtoul_r+0x148>
 8013540:	42400526 	beq	r8,r9,8013558 <_strtoul_r+0x118>
 8013544:	38802236 	bltu	r7,r2,80135d0 <_strtoul_r+0x190>
 8013548:	11c02026 	beq	r2,r7,80135cc <_strtoul_r+0x18c>
 801354c:	12c5383a 	mul	r2,r2,r11
 8013550:	02000044 	movi	r8,1
 8013554:	8085883a 	add	r2,r16,r2
 8013558:	24000003 	ldbu	r16,0(r4)
 801355c:	21000044 	addi	r4,r4,1
 8013560:	9407883a 	add	r3,r18,r16
 8013564:	18c00043 	ldbu	r3,1(r3)
 8013568:	1940010c 	andi	r5,r3,4
 801356c:	283ff21e 	bne	r5,zero,8013538 <__alt_data_end+0xf8013538>
 8013570:	18c000cc 	andi	r3,r3,3
 8013574:	18000426 	beq	r3,zero,8013588 <_strtoul_r+0x148>
 8013578:	1a801726 	beq	r3,r10,80135d8 <_strtoul_r+0x198>
 801357c:	00c015c4 	movi	r3,87
 8013580:	80e1c83a 	sub	r16,r16,r3
 8013584:	857fee16 	blt	r16,r21,8013540 <__alt_data_end+0xf8013540>
 8013588:	40001516 	blt	r8,zero,80135e0 <_strtoul_r+0x1a0>
 801358c:	b8000126 	beq	r23,zero,8013594 <_strtoul_r+0x154>
 8013590:	0085c83a 	sub	r2,zero,r2
 8013594:	30000226 	beq	r6,zero,80135a0 <_strtoul_r+0x160>
 8013598:	4000151e 	bne	r8,zero,80135f0 <_strtoul_r+0x1b0>
 801359c:	34c00015 	stw	r19,0(r6)
 80135a0:	dfc00917 	ldw	ra,36(sp)
 80135a4:	ddc00817 	ldw	r23,32(sp)
 80135a8:	dd800717 	ldw	r22,28(sp)
 80135ac:	dd400617 	ldw	r21,24(sp)
 80135b0:	dd000517 	ldw	r20,20(sp)
 80135b4:	dcc00417 	ldw	r19,16(sp)
 80135b8:	dc800317 	ldw	r18,12(sp)
 80135bc:	dc400217 	ldw	r17,8(sp)
 80135c0:	dc000117 	ldw	r16,4(sp)
 80135c4:	dec00a04 	addi	sp,sp,40
 80135c8:	f800283a 	ret
 80135cc:	643fdf0e 	bge	r12,r16,801354c <__alt_data_end+0xf801354c>
 80135d0:	023fffc4 	movi	r8,-1
 80135d4:	003fe006 	br	8013558 <__alt_data_end+0xf8013558>
 80135d8:	00c00dc4 	movi	r3,55
 80135dc:	003fe806 	br	8013580 <__alt_data_end+0xf8013580>
 80135e0:	00800884 	movi	r2,34
 80135e4:	a0800015 	stw	r2,0(r20)
 80135e8:	00bfffc4 	movi	r2,-1
 80135ec:	303fec26 	beq	r6,zero,80135a0 <__alt_data_end+0xf80135a0>
 80135f0:	24ffffc4 	addi	r19,r4,-1
 80135f4:	003fe906 	br	801359c <__alt_data_end+0xf801359c>
 80135f8:	1c400084 	addi	r17,r3,2
 80135fc:	1c000043 	ldbu	r16,1(r3)
 8013600:	05c00044 	movi	r23,1
 8013604:	003fac06 	br	80134b8 <__alt_data_end+0xf80134b8>
 8013608:	1c400084 	addi	r17,r3,2
 801360c:	1c000043 	ldbu	r16,1(r3)
 8013610:	002f883a 	mov	r23,zero
 8013614:	003fa806 	br	80134b8 <__alt_data_end+0xf80134b8>
 8013618:	88800003 	ldbu	r2,0(r17)
 801361c:	00c01604 	movi	r3,88
 8013620:	108037cc 	andi	r2,r2,223
 8013624:	10c00c26 	beq	r2,r3,8013658 <_strtoul_r+0x218>
 8013628:	05400204 	movi	r21,8
 801362c:	01c80034 	movhi	r7,8192
 8013630:	030001c4 	movi	r12,7
 8013634:	39ffffc4 	addi	r7,r7,-1
 8013638:	a817883a 	mov	r11,r21
 801363c:	003fb506 	br	8013514 <__alt_data_end+0xf8013514>
 8013640:	00800c04 	movi	r2,48
 8013644:	80800c1e 	bne	r16,r2,8013678 <_strtoul_r+0x238>
 8013648:	88800003 	ldbu	r2,0(r17)
 801364c:	00c01604 	movi	r3,88
 8013650:	108037cc 	andi	r2,r2,223
 8013654:	10c0081e 	bne	r2,r3,8013678 <_strtoul_r+0x238>
 8013658:	02c00404 	movi	r11,16
 801365c:	05840034 	movhi	r22,4096
 8013660:	8c000043 	ldbu	r16,1(r17)
 8013664:	030003c4 	movi	r12,15
 8013668:	8c400084 	addi	r17,r17,2
 801366c:	b5bfffc4 	addi	r22,r22,-1
 8013670:	582b883a 	mov	r21,r11
 8013674:	003f9e06 	br	80134f0 <__alt_data_end+0xf80134f0>
 8013678:	01c40034 	movhi	r7,4096
 801367c:	030003c4 	movi	r12,15
 8013680:	39ffffc4 	addi	r7,r7,-1
 8013684:	a817883a 	mov	r11,r21
 8013688:	003fa206 	br	8013514 <__alt_data_end+0xf8013514>

0801368c <strtoul>:
 801368c:	008200b4 	movhi	r2,2050
 8013690:	10881404 	addi	r2,r2,8272
 8013694:	300f883a 	mov	r7,r6
 8013698:	280d883a 	mov	r6,r5
 801369c:	200b883a 	mov	r5,r4
 80136a0:	11000017 	ldw	r4,0(r2)
 80136a4:	80134401 	jmpi	8013440 <_strtoul_r>

080136a8 <_strtoull_r>:
 80136a8:	008200b4 	movhi	r2,2050
 80136ac:	deffef04 	addi	sp,sp,-68
 80136b0:	10881204 	addi	r2,r2,8264
 80136b4:	dd800d15 	stw	r22,52(sp)
 80136b8:	15800017 	ldw	r22,0(r2)
 80136bc:	df000f15 	stw	fp,60(sp)
 80136c0:	d9000515 	stw	r4,20(sp)
 80136c4:	dfc01015 	stw	ra,64(sp)
 80136c8:	ddc00e15 	stw	r23,56(sp)
 80136cc:	dd400c15 	stw	r21,48(sp)
 80136d0:	dd000b15 	stw	r20,44(sp)
 80136d4:	dcc00a15 	stw	r19,40(sp)
 80136d8:	dc800915 	stw	r18,36(sp)
 80136dc:	dc400815 	stw	r17,32(sp)
 80136e0:	dc000715 	stw	r16,28(sp)
 80136e4:	d9400215 	stw	r5,8(sp)
 80136e8:	d9800115 	stw	r6,4(sp)
 80136ec:	3839883a 	mov	fp,r7
 80136f0:	2809883a 	mov	r4,r5
 80136f4:	22000003 	ldbu	r8,0(r4)
 80136f8:	24400044 	addi	r17,r4,1
 80136fc:	2007883a 	mov	r3,r4
 8013700:	b205883a 	add	r2,r22,r8
 8013704:	10800043 	ldbu	r2,1(r2)
 8013708:	8809883a 	mov	r4,r17
 801370c:	1080020c 	andi	r2,r2,8
 8013710:	103ff81e 	bne	r2,zero,80136f4 <__alt_data_end+0xf80136f4>
 8013714:	00800b44 	movi	r2,45
 8013718:	40807726 	beq	r8,r2,80138f8 <_strtoull_r+0x250>
 801371c:	00800ac4 	movi	r2,43
 8013720:	40807a26 	beq	r8,r2,801390c <_strtoull_r+0x264>
 8013724:	d8000415 	stw	zero,16(sp)
 8013728:	e0001426 	beq	fp,zero,801377c <_strtoull_r+0xd4>
 801372c:	00800404 	movi	r2,16
 8013730:	e0808826 	beq	fp,r2,8013954 <_strtoull_r+0x2ac>
 8013734:	e025d7fa 	srai	r18,fp,31
 8013738:	013fffc4 	movi	r4,-1
 801373c:	200b883a 	mov	r5,r4
 8013740:	e00d883a 	mov	r6,fp
 8013744:	900f883a 	mov	r7,r18
 8013748:	da000615 	stw	r8,24(sp)
 801374c:	8018eec0 	call	8018eec <__udivdi3>
 8013750:	013fffc4 	movi	r4,-1
 8013754:	e00d883a 	mov	r6,fp
 8013758:	900f883a 	mov	r7,r18
 801375c:	200b883a 	mov	r5,r4
 8013760:	1021883a 	mov	r16,r2
 8013764:	182f883a 	mov	r23,r3
 8013768:	80194640 	call	8019464 <__umoddi3>
 801376c:	d8800315 	stw	r2,12(sp)
 8013770:	df000015 	stw	fp,0(sp)
 8013774:	da000617 	ldw	r8,24(sp)
 8013778:	00000c06 	br	80137ac <_strtoull_r+0x104>
 801377c:	00800c04 	movi	r2,48
 8013780:	40806626 	beq	r8,r2,801391c <_strtoull_r+0x274>
 8013784:	00800284 	movi	r2,10
 8013788:	00c00144 	movi	r3,5
 801378c:	042666b4 	movhi	r16,39322
 8013790:	05c666b4 	movhi	r23,6554
 8013794:	d8800015 	stw	r2,0(sp)
 8013798:	d8c00315 	stw	r3,12(sp)
 801379c:	84266644 	addi	r16,r16,-26215
 80137a0:	bde66644 	addi	r23,r23,-26215
 80137a4:	0025883a 	mov	r18,zero
 80137a8:	1039883a 	mov	fp,r2
 80137ac:	b205883a 	add	r2,r22,r8
 80137b0:	11800043 	ldbu	r6,1(r2)
 80137b4:	882b883a 	mov	r21,r17
 80137b8:	000f883a 	mov	r7,zero
 80137bc:	3080010c 	andi	r2,r6,4
 80137c0:	0009883a 	mov	r4,zero
 80137c4:	000b883a 	mov	r5,zero
 80137c8:	04400044 	movi	r17,1
 80137cc:	053fffc4 	movi	r20,-1
 80137d0:	10000d26 	beq	r2,zero,8013808 <_strtoull_r+0x160>
 80137d4:	44fff404 	addi	r19,r8,-48
 80137d8:	9f00110e 	bge	r19,fp,8013820 <_strtoull_r+0x178>
 80137dc:	3d000426 	beq	r7,r20,80137f0 <_strtoull_r+0x148>
 80137e0:	b9400236 	bltu	r23,r5,80137ec <_strtoull_r+0x144>
 80137e4:	2dc0291e 	bne	r5,r23,801388c <_strtoull_r+0x1e4>
 80137e8:	8100282e 	bgeu	r16,r4,801388c <_strtoull_r+0x1e4>
 80137ec:	01ffffc4 	movi	r7,-1
 80137f0:	aa000003 	ldbu	r8,0(r21)
 80137f4:	ad400044 	addi	r21,r21,1
 80137f8:	b205883a 	add	r2,r22,r8
 80137fc:	11800043 	ldbu	r6,1(r2)
 8013800:	3080010c 	andi	r2,r6,4
 8013804:	103ff31e 	bne	r2,zero,80137d4 <__alt_data_end+0xf80137d4>
 8013808:	318000cc 	andi	r6,r6,3
 801380c:	30000426 	beq	r6,zero,8013820 <_strtoull_r+0x178>
 8013810:	34402a26 	beq	r6,r17,80138bc <_strtoull_r+0x214>
 8013814:	00c015c4 	movi	r3,87
 8013818:	40e7c83a 	sub	r19,r8,r3
 801381c:	9f3fef16 	blt	r19,fp,80137dc <__alt_data_end+0xf80137dc>
 8013820:	38002c16 	blt	r7,zero,80138d4 <_strtoull_r+0x22c>
 8013824:	d8c00417 	ldw	r3,16(sp)
 8013828:	18000426 	beq	r3,zero,801383c <_strtoull_r+0x194>
 801382c:	0109c83a 	sub	r4,zero,r4
 8013830:	2004c03a 	cmpne	r2,r4,zero
 8013834:	0151c83a 	sub	r8,zero,r5
 8013838:	408bc83a 	sub	r5,r8,r2
 801383c:	d8800117 	ldw	r2,4(sp)
 8013840:	10000426 	beq	r2,zero,8013854 <_strtoull_r+0x1ac>
 8013844:	dd000217 	ldw	r20,8(sp)
 8013848:	3800291e 	bne	r7,zero,80138f0 <_strtoull_r+0x248>
 801384c:	d8c00117 	ldw	r3,4(sp)
 8013850:	1d000015 	stw	r20,0(r3)
 8013854:	2005883a 	mov	r2,r4
 8013858:	2807883a 	mov	r3,r5
 801385c:	dfc01017 	ldw	ra,64(sp)
 8013860:	df000f17 	ldw	fp,60(sp)
 8013864:	ddc00e17 	ldw	r23,56(sp)
 8013868:	dd800d17 	ldw	r22,52(sp)
 801386c:	dd400c17 	ldw	r21,48(sp)
 8013870:	dd000b17 	ldw	r20,44(sp)
 8013874:	dcc00a17 	ldw	r19,40(sp)
 8013878:	dc800917 	ldw	r18,36(sp)
 801387c:	dc400817 	ldw	r17,32(sp)
 8013880:	dc000717 	ldw	r16,28(sp)
 8013884:	dec01104 	addi	sp,sp,68
 8013888:	f800283a 	ret
 801388c:	24000d26 	beq	r4,r16,80138c4 <_strtoull_r+0x21c>
 8013890:	d9800017 	ldw	r6,0(sp)
 8013894:	900f883a 	mov	r7,r18
 8013898:	8018e180 	call	8018e18 <__muldi3>
 801389c:	980bd7fa 	srai	r5,r19,31
 80138a0:	9885883a 	add	r2,r19,r2
 80138a4:	14d1803a 	cmpltu	r8,r2,r19
 80138a8:	28c7883a 	add	r3,r5,r3
 80138ac:	1009883a 	mov	r4,r2
 80138b0:	40cb883a 	add	r5,r8,r3
 80138b4:	01c00044 	movi	r7,1
 80138b8:	003fcd06 	br	80137f0 <__alt_data_end+0xf80137f0>
 80138bc:	00c00dc4 	movi	r3,55
 80138c0:	003fd506 	br	8013818 <__alt_data_end+0xf8013818>
 80138c4:	2dfff21e 	bne	r5,r23,8013890 <__alt_data_end+0xf8013890>
 80138c8:	d8c00317 	ldw	r3,12(sp)
 80138cc:	1cffc716 	blt	r3,r19,80137ec <__alt_data_end+0xf80137ec>
 80138d0:	003fef06 	br	8013890 <__alt_data_end+0xf8013890>
 80138d4:	d8c00517 	ldw	r3,20(sp)
 80138d8:	00800884 	movi	r2,34
 80138dc:	013fffc4 	movi	r4,-1
 80138e0:	18800015 	stw	r2,0(r3)
 80138e4:	d8800117 	ldw	r2,4(sp)
 80138e8:	200b883a 	mov	r5,r4
 80138ec:	103fd926 	beq	r2,zero,8013854 <__alt_data_end+0xf8013854>
 80138f0:	ad3fffc4 	addi	r20,r21,-1
 80138f4:	003fd506 	br	801384c <__alt_data_end+0xf801384c>
 80138f8:	00800044 	movi	r2,1
 80138fc:	1c400084 	addi	r17,r3,2
 8013900:	1a000043 	ldbu	r8,1(r3)
 8013904:	d8800415 	stw	r2,16(sp)
 8013908:	003f8706 	br	8013728 <__alt_data_end+0xf8013728>
 801390c:	1c400084 	addi	r17,r3,2
 8013910:	1a000043 	ldbu	r8,1(r3)
 8013914:	d8000415 	stw	zero,16(sp)
 8013918:	003f8306 	br	8013728 <__alt_data_end+0xf8013728>
 801391c:	88800003 	ldbu	r2,0(r17)
 8013920:	00c01604 	movi	r3,88
 8013924:	108037cc 	andi	r2,r2,223
 8013928:	10c01026 	beq	r2,r3,801396c <_strtoull_r+0x2c4>
 801392c:	00c00204 	movi	r3,8
 8013930:	008001c4 	movi	r2,7
 8013934:	043fffc4 	movi	r16,-1
 8013938:	05c80034 	movhi	r23,8192
 801393c:	d8c00015 	stw	r3,0(sp)
 8013940:	d8800315 	stw	r2,12(sp)
 8013944:	bc2f883a 	add	r23,r23,r16
 8013948:	0025883a 	mov	r18,zero
 801394c:	1839883a 	mov	fp,r3
 8013950:	003f9606 	br	80137ac <__alt_data_end+0xf80137ac>
 8013954:	00800c04 	movi	r2,48
 8013958:	4080101e 	bne	r8,r2,801399c <_strtoull_r+0x2f4>
 801395c:	88800003 	ldbu	r2,0(r17)
 8013960:	00c01604 	movi	r3,88
 8013964:	108037cc 	andi	r2,r2,223
 8013968:	10c0141e 	bne	r2,r3,80139bc <_strtoull_r+0x314>
 801396c:	00c00404 	movi	r3,16
 8013970:	008003c4 	movi	r2,15
 8013974:	043fffc4 	movi	r16,-1
 8013978:	05c40034 	movhi	r23,4096
 801397c:	8a000043 	ldbu	r8,1(r17)
 8013980:	d8c00015 	stw	r3,0(sp)
 8013984:	d8800315 	stw	r2,12(sp)
 8013988:	8c400084 	addi	r17,r17,2
 801398c:	bc2f883a 	add	r23,r23,r16
 8013990:	0025883a 	mov	r18,zero
 8013994:	1839883a 	mov	fp,r3
 8013998:	003f8406 	br	80137ac <__alt_data_end+0xf80137ac>
 801399c:	008003c4 	movi	r2,15
 80139a0:	d8800315 	stw	r2,12(sp)
 80139a4:	043fffc4 	movi	r16,-1
 80139a8:	05c40034 	movhi	r23,4096
 80139ac:	bc2f883a 	add	r23,r23,r16
 80139b0:	df000015 	stw	fp,0(sp)
 80139b4:	0025883a 	mov	r18,zero
 80139b8:	003f7c06 	br	80137ac <__alt_data_end+0xf80137ac>
 80139bc:	00c003c4 	movi	r3,15
 80139c0:	d8c00315 	stw	r3,12(sp)
 80139c4:	003ff706 	br	80139a4 <__alt_data_end+0xf80139a4>

080139c8 <__ssprint_r>:
 80139c8:	30800217 	ldw	r2,8(r6)
 80139cc:	defff604 	addi	sp,sp,-40
 80139d0:	dc800215 	stw	r18,8(sp)
 80139d4:	dfc00915 	stw	ra,36(sp)
 80139d8:	df000815 	stw	fp,32(sp)
 80139dc:	ddc00715 	stw	r23,28(sp)
 80139e0:	dd800615 	stw	r22,24(sp)
 80139e4:	dd400515 	stw	r21,20(sp)
 80139e8:	dd000415 	stw	r20,16(sp)
 80139ec:	dcc00315 	stw	r19,12(sp)
 80139f0:	dc400115 	stw	r17,4(sp)
 80139f4:	dc000015 	stw	r16,0(sp)
 80139f8:	3025883a 	mov	r18,r6
 80139fc:	10005826 	beq	r2,zero,8013b60 <__ssprint_r+0x198>
 8013a00:	2027883a 	mov	r19,r4
 8013a04:	35c00017 	ldw	r23,0(r6)
 8013a08:	29000017 	ldw	r4,0(r5)
 8013a0c:	28800217 	ldw	r2,8(r5)
 8013a10:	2823883a 	mov	r17,r5
 8013a14:	0039883a 	mov	fp,zero
 8013a18:	0021883a 	mov	r16,zero
 8013a1c:	80003926 	beq	r16,zero,8013b04 <__ssprint_r+0x13c>
 8013a20:	102b883a 	mov	r21,r2
 8013a24:	102d883a 	mov	r22,r2
 8013a28:	80803a36 	bltu	r16,r2,8013b14 <__ssprint_r+0x14c>
 8013a2c:	88c0030b 	ldhu	r3,12(r17)
 8013a30:	1881200c 	andi	r2,r3,1152
 8013a34:	10002626 	beq	r2,zero,8013ad0 <__ssprint_r+0x108>
 8013a38:	88800517 	ldw	r2,20(r17)
 8013a3c:	89400417 	ldw	r5,16(r17)
 8013a40:	81800044 	addi	r6,r16,1
 8013a44:	108f883a 	add	r7,r2,r2
 8013a48:	3885883a 	add	r2,r7,r2
 8013a4c:	100ed7fa 	srli	r7,r2,31
 8013a50:	216dc83a 	sub	r22,r4,r5
 8013a54:	3589883a 	add	r4,r6,r22
 8013a58:	3885883a 	add	r2,r7,r2
 8013a5c:	102bd07a 	srai	r21,r2,1
 8013a60:	a80d883a 	mov	r6,r21
 8013a64:	a900022e 	bgeu	r21,r4,8013a70 <__ssprint_r+0xa8>
 8013a68:	202b883a 	mov	r21,r4
 8013a6c:	200d883a 	mov	r6,r4
 8013a70:	18c1000c 	andi	r3,r3,1024
 8013a74:	18002a26 	beq	r3,zero,8013b20 <__ssprint_r+0x158>
 8013a78:	300b883a 	mov	r5,r6
 8013a7c:	9809883a 	mov	r4,r19
 8013a80:	8003fd40 	call	8003fd4 <_malloc_r>
 8013a84:	1029883a 	mov	r20,r2
 8013a88:	10002c26 	beq	r2,zero,8013b3c <__ssprint_r+0x174>
 8013a8c:	89400417 	ldw	r5,16(r17)
 8013a90:	b00d883a 	mov	r6,r22
 8013a94:	1009883a 	mov	r4,r2
 8013a98:	800fbd40 	call	800fbd4 <memcpy>
 8013a9c:	8880030b 	ldhu	r2,12(r17)
 8013aa0:	00fedfc4 	movi	r3,-1153
 8013aa4:	10c4703a 	and	r2,r2,r3
 8013aa8:	10802014 	ori	r2,r2,128
 8013aac:	8880030d 	sth	r2,12(r17)
 8013ab0:	a589883a 	add	r4,r20,r22
 8013ab4:	adadc83a 	sub	r22,r21,r22
 8013ab8:	8d400515 	stw	r21,20(r17)
 8013abc:	8d800215 	stw	r22,8(r17)
 8013ac0:	8d000415 	stw	r20,16(r17)
 8013ac4:	89000015 	stw	r4,0(r17)
 8013ac8:	802b883a 	mov	r21,r16
 8013acc:	802d883a 	mov	r22,r16
 8013ad0:	b00d883a 	mov	r6,r22
 8013ad4:	e00b883a 	mov	r5,fp
 8013ad8:	800fd1c0 	call	800fd1c <memmove>
 8013adc:	88800217 	ldw	r2,8(r17)
 8013ae0:	89000017 	ldw	r4,0(r17)
 8013ae4:	90c00217 	ldw	r3,8(r18)
 8013ae8:	1545c83a 	sub	r2,r2,r21
 8013aec:	2589883a 	add	r4,r4,r22
 8013af0:	88800215 	stw	r2,8(r17)
 8013af4:	89000015 	stw	r4,0(r17)
 8013af8:	1c21c83a 	sub	r16,r3,r16
 8013afc:	94000215 	stw	r16,8(r18)
 8013b00:	80001726 	beq	r16,zero,8013b60 <__ssprint_r+0x198>
 8013b04:	bf000017 	ldw	fp,0(r23)
 8013b08:	bc000117 	ldw	r16,4(r23)
 8013b0c:	bdc00204 	addi	r23,r23,8
 8013b10:	003fc206 	br	8013a1c <__alt_data_end+0xf8013a1c>
 8013b14:	802b883a 	mov	r21,r16
 8013b18:	802d883a 	mov	r22,r16
 8013b1c:	003fec06 	br	8013ad0 <__alt_data_end+0xf8013ad0>
 8013b20:	9809883a 	mov	r4,r19
 8013b24:	8010ed40 	call	8010ed4 <_realloc_r>
 8013b28:	1029883a 	mov	r20,r2
 8013b2c:	103fe01e 	bne	r2,zero,8013ab0 <__alt_data_end+0xf8013ab0>
 8013b30:	89400417 	ldw	r5,16(r17)
 8013b34:	9809883a 	mov	r4,r19
 8013b38:	800ec500 	call	800ec50 <_free_r>
 8013b3c:	88c0030b 	ldhu	r3,12(r17)
 8013b40:	00800304 	movi	r2,12
 8013b44:	98800015 	stw	r2,0(r19)
 8013b48:	18c01014 	ori	r3,r3,64
 8013b4c:	88c0030d 	sth	r3,12(r17)
 8013b50:	00bfffc4 	movi	r2,-1
 8013b54:	90000215 	stw	zero,8(r18)
 8013b58:	90000115 	stw	zero,4(r18)
 8013b5c:	00000206 	br	8013b68 <__ssprint_r+0x1a0>
 8013b60:	90000115 	stw	zero,4(r18)
 8013b64:	0005883a 	mov	r2,zero
 8013b68:	dfc00917 	ldw	ra,36(sp)
 8013b6c:	df000817 	ldw	fp,32(sp)
 8013b70:	ddc00717 	ldw	r23,28(sp)
 8013b74:	dd800617 	ldw	r22,24(sp)
 8013b78:	dd400517 	ldw	r21,20(sp)
 8013b7c:	dd000417 	ldw	r20,16(sp)
 8013b80:	dcc00317 	ldw	r19,12(sp)
 8013b84:	dc800217 	ldw	r18,8(sp)
 8013b88:	dc400117 	ldw	r17,4(sp)
 8013b8c:	dc000017 	ldw	r16,0(sp)
 8013b90:	dec00a04 	addi	sp,sp,40
 8013b94:	f800283a 	ret

08013b98 <___svfiprintf_internal_r>:
 8013b98:	2880030b 	ldhu	r2,12(r5)
 8013b9c:	deffc804 	addi	sp,sp,-224
 8013ba0:	dcc03115 	stw	r19,196(sp)
 8013ba4:	dfc03715 	stw	ra,220(sp)
 8013ba8:	df003615 	stw	fp,216(sp)
 8013bac:	ddc03515 	stw	r23,212(sp)
 8013bb0:	dd803415 	stw	r22,208(sp)
 8013bb4:	dd403315 	stw	r21,204(sp)
 8013bb8:	dd003215 	stw	r20,200(sp)
 8013bbc:	dc803015 	stw	r18,192(sp)
 8013bc0:	dc402f15 	stw	r17,188(sp)
 8013bc4:	dc002e15 	stw	r16,184(sp)
 8013bc8:	d9402715 	stw	r5,156(sp)
 8013bcc:	d9002a15 	stw	r4,168(sp)
 8013bd0:	1080200c 	andi	r2,r2,128
 8013bd4:	d9c02315 	stw	r7,140(sp)
 8013bd8:	3027883a 	mov	r19,r6
 8013bdc:	10000226 	beq	r2,zero,8013be8 <___svfiprintf_internal_r+0x50>
 8013be0:	28800417 	ldw	r2,16(r5)
 8013be4:	10041d26 	beq	r2,zero,8014c5c <___svfiprintf_internal_r+0x10c4>
 8013be8:	dac01a04 	addi	r11,sp,104
 8013bec:	dac01e15 	stw	r11,120(sp)
 8013bf0:	d8801e17 	ldw	r2,120(sp)
 8013bf4:	dac019c4 	addi	r11,sp,103
 8013bf8:	dd402a17 	ldw	r21,168(sp)
 8013bfc:	ddc02717 	ldw	r23,156(sp)
 8013c00:	058200b4 	movhi	r22,2050
 8013c04:	050200b4 	movhi	r20,2050
 8013c08:	dac01f15 	stw	r11,124(sp)
 8013c0c:	12d7c83a 	sub	r11,r2,r11
 8013c10:	b5807b04 	addi	r22,r22,492
 8013c14:	a5007704 	addi	r20,r20,476
 8013c18:	dec01a15 	stw	sp,104(sp)
 8013c1c:	d8001c15 	stw	zero,112(sp)
 8013c20:	d8001b15 	stw	zero,108(sp)
 8013c24:	d811883a 	mov	r8,sp
 8013c28:	d8002915 	stw	zero,164(sp)
 8013c2c:	d8002515 	stw	zero,148(sp)
 8013c30:	dac02b15 	stw	r11,172(sp)
 8013c34:	98800007 	ldb	r2,0(r19)
 8013c38:	1002dd26 	beq	r2,zero,80147b0 <___svfiprintf_internal_r+0xc18>
 8013c3c:	00c00944 	movi	r3,37
 8013c40:	9823883a 	mov	r17,r19
 8013c44:	10c0021e 	bne	r2,r3,8013c50 <___svfiprintf_internal_r+0xb8>
 8013c48:	00001406 	br	8013c9c <___svfiprintf_internal_r+0x104>
 8013c4c:	10c00326 	beq	r2,r3,8013c5c <___svfiprintf_internal_r+0xc4>
 8013c50:	8c400044 	addi	r17,r17,1
 8013c54:	88800007 	ldb	r2,0(r17)
 8013c58:	103ffc1e 	bne	r2,zero,8013c4c <__alt_data_end+0xf8013c4c>
 8013c5c:	8ce1c83a 	sub	r16,r17,r19
 8013c60:	80000e26 	beq	r16,zero,8013c9c <___svfiprintf_internal_r+0x104>
 8013c64:	d8c01c17 	ldw	r3,112(sp)
 8013c68:	d8801b17 	ldw	r2,108(sp)
 8013c6c:	44c00015 	stw	r19,0(r8)
 8013c70:	1c07883a 	add	r3,r3,r16
 8013c74:	10800044 	addi	r2,r2,1
 8013c78:	d8c01c15 	stw	r3,112(sp)
 8013c7c:	44000115 	stw	r16,4(r8)
 8013c80:	d8801b15 	stw	r2,108(sp)
 8013c84:	00c001c4 	movi	r3,7
 8013c88:	18831e16 	blt	r3,r2,8014904 <___svfiprintf_internal_r+0xd6c>
 8013c8c:	42000204 	addi	r8,r8,8
 8013c90:	dac02517 	ldw	r11,148(sp)
 8013c94:	5c17883a 	add	r11,r11,r16
 8013c98:	dac02515 	stw	r11,148(sp)
 8013c9c:	88800007 	ldb	r2,0(r17)
 8013ca0:	1002c526 	beq	r2,zero,80147b8 <___svfiprintf_internal_r+0xc20>
 8013ca4:	88c00047 	ldb	r3,1(r17)
 8013ca8:	8cc00044 	addi	r19,r17,1
 8013cac:	d8001d85 	stb	zero,118(sp)
 8013cb0:	0009883a 	mov	r4,zero
 8013cb4:	000f883a 	mov	r7,zero
 8013cb8:	043fffc4 	movi	r16,-1
 8013cbc:	d8002415 	stw	zero,144(sp)
 8013cc0:	0025883a 	mov	r18,zero
 8013cc4:	01401604 	movi	r5,88
 8013cc8:	01800244 	movi	r6,9
 8013ccc:	02800a84 	movi	r10,42
 8013cd0:	02401b04 	movi	r9,108
 8013cd4:	9cc00044 	addi	r19,r19,1
 8013cd8:	18bff804 	addi	r2,r3,-32
 8013cdc:	2881dd36 	bltu	r5,r2,8014454 <___svfiprintf_internal_r+0x8bc>
 8013ce0:	100490ba 	slli	r2,r2,2
 8013ce4:	02c20074 	movhi	r11,2049
 8013ce8:	5acf3e04 	addi	r11,r11,15608
 8013cec:	12c5883a 	add	r2,r2,r11
 8013cf0:	10800017 	ldw	r2,0(r2)
 8013cf4:	1000683a 	jmp	r2
 8013cf8:	08013ef4 	orhi	zero,at,1275
 8013cfc:	08014454 	ori	zero,at,1297
 8013d00:	08014454 	ori	zero,at,1297
 8013d04:	08013ee8 	cmpgeui	zero,at,1275
 8013d08:	08014454 	ori	zero,at,1297
 8013d0c:	08014454 	ori	zero,at,1297
 8013d10:	08014454 	ori	zero,at,1297
 8013d14:	08014454 	ori	zero,at,1297
 8013d18:	08014454 	ori	zero,at,1297
 8013d1c:	08014454 	ori	zero,at,1297
 8013d20:	08013e5c 	xori	zero,at,1273
 8013d24:	08014038 	rdprs	zero,at,1280
 8013d28:	08014454 	ori	zero,at,1297
 8013d2c:	08013e88 	cmpgei	zero,at,1274
 8013d30:	08014488 	cmpgei	zero,at,1298
 8013d34:	08014454 	ori	zero,at,1297
 8013d38:	0801447c 	xorhi	zero,at,1297
 8013d3c:	0801441c 	xori	zero,at,1296
 8013d40:	0801441c 	xori	zero,at,1296
 8013d44:	0801441c 	xori	zero,at,1296
 8013d48:	0801441c 	xori	zero,at,1296
 8013d4c:	0801441c 	xori	zero,at,1296
 8013d50:	0801441c 	xori	zero,at,1296
 8013d54:	0801441c 	xori	zero,at,1296
 8013d58:	0801441c 	xori	zero,at,1296
 8013d5c:	0801441c 	xori	zero,at,1296
 8013d60:	08014454 	ori	zero,at,1297
 8013d64:	08014454 	ori	zero,at,1297
 8013d68:	08014454 	ori	zero,at,1297
 8013d6c:	08014454 	ori	zero,at,1297
 8013d70:	08014454 	ori	zero,at,1297
 8013d74:	08014454 	ori	zero,at,1297
 8013d78:	08014454 	ori	zero,at,1297
 8013d7c:	08014454 	ori	zero,at,1297
 8013d80:	08014454 	ori	zero,at,1297
 8013d84:	08014454 	ori	zero,at,1297
 8013d88:	080143b8 	rdprs	zero,at,1294
 8013d8c:	08014454 	ori	zero,at,1297
 8013d90:	08014454 	ori	zero,at,1297
 8013d94:	08014454 	ori	zero,at,1297
 8013d98:	08014454 	ori	zero,at,1297
 8013d9c:	08014454 	ori	zero,at,1297
 8013da0:	08014454 	ori	zero,at,1297
 8013da4:	08014454 	ori	zero,at,1297
 8013da8:	08014454 	ori	zero,at,1297
 8013dac:	08014454 	ori	zero,at,1297
 8013db0:	08014454 	ori	zero,at,1297
 8013db4:	08014530 	cmpltui	zero,at,1300
 8013db8:	08014454 	ori	zero,at,1297
 8013dbc:	08014454 	ori	zero,at,1297
 8013dc0:	08014454 	ori	zero,at,1297
 8013dc4:	08014454 	ori	zero,at,1297
 8013dc8:	08014454 	ori	zero,at,1297
 8013dcc:	080144c8 	cmpgei	zero,at,1299
 8013dd0:	08014454 	ori	zero,at,1297
 8013dd4:	08014454 	ori	zero,at,1297
 8013dd8:	080141fc 	xorhi	zero,at,1287
 8013ddc:	08014454 	ori	zero,at,1297
 8013de0:	08014454 	ori	zero,at,1297
 8013de4:	08014454 	ori	zero,at,1297
 8013de8:	08014454 	ori	zero,at,1297
 8013dec:	08014454 	ori	zero,at,1297
 8013df0:	08014454 	ori	zero,at,1297
 8013df4:	08014454 	ori	zero,at,1297
 8013df8:	08014454 	ori	zero,at,1297
 8013dfc:	08014454 	ori	zero,at,1297
 8013e00:	08014454 	ori	zero,at,1297
 8013e04:	080140ec 	andhi	zero,at,1283
 8013e08:	08014298 	cmpnei	zero,at,1290
 8013e0c:	08014454 	ori	zero,at,1297
 8013e10:	08014454 	ori	zero,at,1297
 8013e14:	08014454 	ori	zero,at,1297
 8013e18:	0801428c 	andi	zero,at,1290
 8013e1c:	08014298 	cmpnei	zero,at,1290
 8013e20:	08014454 	ori	zero,at,1297
 8013e24:	08014454 	ori	zero,at,1297
 8013e28:	0801427c 	xorhi	zero,at,1289
 8013e2c:	08014454 	ori	zero,at,1297
 8013e30:	08014240 	call	801424 <__alt_mem_sdram-0x77febdc>
 8013e34:	08014048 	cmpgei	zero,at,1281
 8013e38:	08013e94 	ori	zero,at,1274
 8013e3c:	080143ac 	andhi	zero,at,1294
 8013e40:	08014454 	ori	zero,at,1297
 8013e44:	08014360 	cmpeqi	zero,at,1293
 8013e48:	08014454 	ori	zero,at,1297
 8013e4c:	08013fb8 	rdprs	zero,at,1278
 8013e50:	08014454 	ori	zero,at,1297
 8013e54:	08014454 	ori	zero,at,1297
 8013e58:	08013f14 	ori	zero,at,1276
 8013e5c:	dac02317 	ldw	r11,140(sp)
 8013e60:	5ac00017 	ldw	r11,0(r11)
 8013e64:	dac02415 	stw	r11,144(sp)
 8013e68:	dac02317 	ldw	r11,140(sp)
 8013e6c:	58800104 	addi	r2,r11,4
 8013e70:	dac02417 	ldw	r11,144(sp)
 8013e74:	5802e90e 	bge	r11,zero,8014a1c <___svfiprintf_internal_r+0xe84>
 8013e78:	dac02417 	ldw	r11,144(sp)
 8013e7c:	d8802315 	stw	r2,140(sp)
 8013e80:	02d7c83a 	sub	r11,zero,r11
 8013e84:	dac02415 	stw	r11,144(sp)
 8013e88:	94800114 	ori	r18,r18,4
 8013e8c:	98c00007 	ldb	r3,0(r19)
 8013e90:	003f9006 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8013e94:	00800c04 	movi	r2,48
 8013e98:	dac02317 	ldw	r11,140(sp)
 8013e9c:	d8801d05 	stb	r2,116(sp)
 8013ea0:	00801e04 	movi	r2,120
 8013ea4:	d8801d45 	stb	r2,117(sp)
 8013ea8:	d8001d85 	stb	zero,118(sp)
 8013eac:	58c00104 	addi	r3,r11,4
 8013eb0:	5f000017 	ldw	fp,0(r11)
 8013eb4:	0013883a 	mov	r9,zero
 8013eb8:	90800094 	ori	r2,r18,2
 8013ebc:	80032b16 	blt	r16,zero,8014b6c <___svfiprintf_internal_r+0xfd4>
 8013ec0:	00bfdfc4 	movi	r2,-129
 8013ec4:	90a4703a 	and	r18,r18,r2
 8013ec8:	d8c02315 	stw	r3,140(sp)
 8013ecc:	94800094 	ori	r18,r18,2
 8013ed0:	e002dc26 	beq	fp,zero,8014a44 <___svfiprintf_internal_r+0xeac>
 8013ed4:	010200b4 	movhi	r4,2050
 8013ed8:	213f4304 	addi	r4,r4,-756
 8013edc:	0015883a 	mov	r10,zero
 8013ee0:	d9002915 	stw	r4,164(sp)
 8013ee4:	00002306 	br	8013f74 <___svfiprintf_internal_r+0x3dc>
 8013ee8:	94800054 	ori	r18,r18,1
 8013eec:	98c00007 	ldb	r3,0(r19)
 8013ef0:	003f7806 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8013ef4:	38803fcc 	andi	r2,r7,255
 8013ef8:	1080201c 	xori	r2,r2,128
 8013efc:	10bfe004 	addi	r2,r2,-128
 8013f00:	1002f31e 	bne	r2,zero,8014ad0 <___svfiprintf_internal_r+0xf38>
 8013f04:	01000044 	movi	r4,1
 8013f08:	01c00804 	movi	r7,32
 8013f0c:	98c00007 	ldb	r3,0(r19)
 8013f10:	003f7006 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8013f14:	21003fcc 	andi	r4,r4,255
 8013f18:	2003aa1e 	bne	r4,zero,8014dc4 <___svfiprintf_internal_r+0x122c>
 8013f1c:	008200b4 	movhi	r2,2050
 8013f20:	10bf4304 	addi	r2,r2,-756
 8013f24:	d8802915 	stw	r2,164(sp)
 8013f28:	9080080c 	andi	r2,r18,32
 8013f2c:	1000ba26 	beq	r2,zero,8014218 <___svfiprintf_internal_r+0x680>
 8013f30:	dac02317 	ldw	r11,140(sp)
 8013f34:	5f000017 	ldw	fp,0(r11)
 8013f38:	5a400117 	ldw	r9,4(r11)
 8013f3c:	5ac00204 	addi	r11,r11,8
 8013f40:	dac02315 	stw	r11,140(sp)
 8013f44:	9080004c 	andi	r2,r18,1
 8013f48:	10029026 	beq	r2,zero,801498c <___svfiprintf_internal_r+0xdf4>
 8013f4c:	e244b03a 	or	r2,fp,r9
 8013f50:	1002d41e 	bne	r2,zero,8014aa4 <___svfiprintf_internal_r+0xf0c>
 8013f54:	d8001d85 	stb	zero,118(sp)
 8013f58:	80030b16 	blt	r16,zero,8014b88 <___svfiprintf_internal_r+0xff0>
 8013f5c:	00bfdfc4 	movi	r2,-129
 8013f60:	90a4703a 	and	r18,r18,r2
 8013f64:	0015883a 	mov	r10,zero
 8013f68:	80002426 	beq	r16,zero,8013ffc <___svfiprintf_internal_r+0x464>
 8013f6c:	0039883a 	mov	fp,zero
 8013f70:	0013883a 	mov	r9,zero
 8013f74:	d9002917 	ldw	r4,164(sp)
 8013f78:	dc401a04 	addi	r17,sp,104
 8013f7c:	e08003cc 	andi	r2,fp,15
 8013f80:	4806973a 	slli	r3,r9,28
 8013f84:	2085883a 	add	r2,r4,r2
 8013f88:	e038d13a 	srli	fp,fp,4
 8013f8c:	10800003 	ldbu	r2,0(r2)
 8013f90:	4812d13a 	srli	r9,r9,4
 8013f94:	8c7fffc4 	addi	r17,r17,-1
 8013f98:	1f38b03a 	or	fp,r3,fp
 8013f9c:	88800005 	stb	r2,0(r17)
 8013fa0:	e244b03a 	or	r2,fp,r9
 8013fa4:	103ff51e 	bne	r2,zero,8013f7c <__alt_data_end+0xf8013f7c>
 8013fa8:	dac01e17 	ldw	r11,120(sp)
 8013fac:	5c57c83a 	sub	r11,r11,r17
 8013fb0:	dac02115 	stw	r11,132(sp)
 8013fb4:	00001406 	br	8014008 <___svfiprintf_internal_r+0x470>
 8013fb8:	21003fcc 	andi	r4,r4,255
 8013fbc:	2003741e 	bne	r4,zero,8014d90 <___svfiprintf_internal_r+0x11f8>
 8013fc0:	9080080c 	andi	r2,r18,32
 8013fc4:	10014526 	beq	r2,zero,80144dc <___svfiprintf_internal_r+0x944>
 8013fc8:	dac02317 	ldw	r11,140(sp)
 8013fcc:	d8001d85 	stb	zero,118(sp)
 8013fd0:	58c00204 	addi	r3,r11,8
 8013fd4:	5f000017 	ldw	fp,0(r11)
 8013fd8:	5a400117 	ldw	r9,4(r11)
 8013fdc:	8002d916 	blt	r16,zero,8014b44 <___svfiprintf_internal_r+0xfac>
 8013fe0:	013fdfc4 	movi	r4,-129
 8013fe4:	e244b03a 	or	r2,fp,r9
 8013fe8:	d8c02315 	stw	r3,140(sp)
 8013fec:	9124703a 	and	r18,r18,r4
 8013ff0:	0015883a 	mov	r10,zero
 8013ff4:	1000b91e 	bne	r2,zero,80142dc <___svfiprintf_internal_r+0x744>
 8013ff8:	8002e61e 	bne	r16,zero,8014b94 <___svfiprintf_internal_r+0xffc>
 8013ffc:	0021883a 	mov	r16,zero
 8014000:	d8002115 	stw	zero,132(sp)
 8014004:	dc401a04 	addi	r17,sp,104
 8014008:	d8c02117 	ldw	r3,132(sp)
 801400c:	dc002015 	stw	r16,128(sp)
 8014010:	80c0010e 	bge	r16,r3,8014018 <___svfiprintf_internal_r+0x480>
 8014014:	d8c02015 	stw	r3,128(sp)
 8014018:	52803fcc 	andi	r10,r10,255
 801401c:	5280201c 	xori	r10,r10,128
 8014020:	52bfe004 	addi	r10,r10,-128
 8014024:	50003c26 	beq	r10,zero,8014118 <___svfiprintf_internal_r+0x580>
 8014028:	dac02017 	ldw	r11,128(sp)
 801402c:	5ac00044 	addi	r11,r11,1
 8014030:	dac02015 	stw	r11,128(sp)
 8014034:	00003806 	br	8014118 <___svfiprintf_internal_r+0x580>
 8014038:	01000044 	movi	r4,1
 801403c:	01c00ac4 	movi	r7,43
 8014040:	98c00007 	ldb	r3,0(r19)
 8014044:	003f2306 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014048:	21003fcc 	andi	r4,r4,255
 801404c:	2003481e 	bne	r4,zero,8014d70 <___svfiprintf_internal_r+0x11d8>
 8014050:	9080080c 	andi	r2,r18,32
 8014054:	10013b26 	beq	r2,zero,8014544 <___svfiprintf_internal_r+0x9ac>
 8014058:	dac02317 	ldw	r11,140(sp)
 801405c:	d8001d85 	stb	zero,118(sp)
 8014060:	58800204 	addi	r2,r11,8
 8014064:	5f000017 	ldw	fp,0(r11)
 8014068:	5a400117 	ldw	r9,4(r11)
 801406c:	8002a816 	blt	r16,zero,8014b10 <___svfiprintf_internal_r+0xf78>
 8014070:	013fdfc4 	movi	r4,-129
 8014074:	e246b03a 	or	r3,fp,r9
 8014078:	d8802315 	stw	r2,140(sp)
 801407c:	9124703a 	and	r18,r18,r4
 8014080:	18013c26 	beq	r3,zero,8014574 <___svfiprintf_internal_r+0x9dc>
 8014084:	0015883a 	mov	r10,zero
 8014088:	dc401a04 	addi	r17,sp,104
 801408c:	e006d0fa 	srli	r3,fp,3
 8014090:	4808977a 	slli	r4,r9,29
 8014094:	4812d0fa 	srli	r9,r9,3
 8014098:	e70001cc 	andi	fp,fp,7
 801409c:	e0800c04 	addi	r2,fp,48
 80140a0:	8c7fffc4 	addi	r17,r17,-1
 80140a4:	20f8b03a 	or	fp,r4,r3
 80140a8:	88800005 	stb	r2,0(r17)
 80140ac:	e246b03a 	or	r3,fp,r9
 80140b0:	183ff61e 	bne	r3,zero,801408c <__alt_data_end+0xf801408c>
 80140b4:	90c0004c 	andi	r3,r18,1
 80140b8:	1800a526 	beq	r3,zero,8014350 <___svfiprintf_internal_r+0x7b8>
 80140bc:	10803fcc 	andi	r2,r2,255
 80140c0:	1080201c 	xori	r2,r2,128
 80140c4:	10bfe004 	addi	r2,r2,-128
 80140c8:	00c00c04 	movi	r3,48
 80140cc:	10ffb626 	beq	r2,r3,8013fa8 <__alt_data_end+0xf8013fa8>
 80140d0:	88ffffc5 	stb	r3,-1(r17)
 80140d4:	d8c01e17 	ldw	r3,120(sp)
 80140d8:	88bfffc4 	addi	r2,r17,-1
 80140dc:	1023883a 	mov	r17,r2
 80140e0:	1887c83a 	sub	r3,r3,r2
 80140e4:	d8c02115 	stw	r3,132(sp)
 80140e8:	003fc706 	br	8014008 <__alt_data_end+0xf8014008>
 80140ec:	dac02317 	ldw	r11,140(sp)
 80140f0:	00c00044 	movi	r3,1
 80140f4:	d8c02015 	stw	r3,128(sp)
 80140f8:	58800017 	ldw	r2,0(r11)
 80140fc:	5ac00104 	addi	r11,r11,4
 8014100:	d8001d85 	stb	zero,118(sp)
 8014104:	d8801005 	stb	r2,64(sp)
 8014108:	dac02315 	stw	r11,140(sp)
 801410c:	d8c02115 	stw	r3,132(sp)
 8014110:	dc401004 	addi	r17,sp,64
 8014114:	0021883a 	mov	r16,zero
 8014118:	90c0008c 	andi	r3,r18,2
 801411c:	d8c02215 	stw	r3,136(sp)
 8014120:	18000326 	beq	r3,zero,8014130 <___svfiprintf_internal_r+0x598>
 8014124:	dac02017 	ldw	r11,128(sp)
 8014128:	5ac00084 	addi	r11,r11,2
 801412c:	dac02015 	stw	r11,128(sp)
 8014130:	90c0210c 	andi	r3,r18,132
 8014134:	d8c02615 	stw	r3,152(sp)
 8014138:	1801131e 	bne	r3,zero,8014588 <___svfiprintf_internal_r+0x9f0>
 801413c:	dac02417 	ldw	r11,144(sp)
 8014140:	d8c02017 	ldw	r3,128(sp)
 8014144:	58f9c83a 	sub	fp,r11,r3
 8014148:	07010f0e 	bge	zero,fp,8014588 <___svfiprintf_internal_r+0x9f0>
 801414c:	02400404 	movi	r9,16
 8014150:	d8c01c17 	ldw	r3,112(sp)
 8014154:	d8801b17 	ldw	r2,108(sp)
 8014158:	4f02d60e 	bge	r9,fp,8014cb4 <___svfiprintf_internal_r+0x111c>
 801415c:	014200b4 	movhi	r5,2050
 8014160:	29407b04 	addi	r5,r5,492
 8014164:	d9402815 	stw	r5,160(sp)
 8014168:	028001c4 	movi	r10,7
 801416c:	00000306 	br	801417c <___svfiprintf_internal_r+0x5e4>
 8014170:	e73ffc04 	addi	fp,fp,-16
 8014174:	42000204 	addi	r8,r8,8
 8014178:	4f00150e 	bge	r9,fp,80141d0 <___svfiprintf_internal_r+0x638>
 801417c:	18c00404 	addi	r3,r3,16
 8014180:	10800044 	addi	r2,r2,1
 8014184:	45800015 	stw	r22,0(r8)
 8014188:	42400115 	stw	r9,4(r8)
 801418c:	d8c01c15 	stw	r3,112(sp)
 8014190:	d8801b15 	stw	r2,108(sp)
 8014194:	50bff60e 	bge	r10,r2,8014170 <__alt_data_end+0xf8014170>
 8014198:	d9801a04 	addi	r6,sp,104
 801419c:	b80b883a 	mov	r5,r23
 80141a0:	a809883a 	mov	r4,r21
 80141a4:	da402c15 	stw	r9,176(sp)
 80141a8:	da802d15 	stw	r10,180(sp)
 80141ac:	80139c80 	call	80139c8 <__ssprint_r>
 80141b0:	da402c17 	ldw	r9,176(sp)
 80141b4:	da802d17 	ldw	r10,180(sp)
 80141b8:	1001851e 	bne	r2,zero,80147d0 <___svfiprintf_internal_r+0xc38>
 80141bc:	e73ffc04 	addi	fp,fp,-16
 80141c0:	d8c01c17 	ldw	r3,112(sp)
 80141c4:	d8801b17 	ldw	r2,108(sp)
 80141c8:	d811883a 	mov	r8,sp
 80141cc:	4f3feb16 	blt	r9,fp,801417c <__alt_data_end+0xf801417c>
 80141d0:	dac02817 	ldw	r11,160(sp)
 80141d4:	e0c7883a 	add	r3,fp,r3
 80141d8:	10800044 	addi	r2,r2,1
 80141dc:	42c00015 	stw	r11,0(r8)
 80141e0:	47000115 	stw	fp,4(r8)
 80141e4:	d8c01c15 	stw	r3,112(sp)
 80141e8:	d8801b15 	stw	r2,108(sp)
 80141ec:	010001c4 	movi	r4,7
 80141f0:	2081ee16 	blt	r4,r2,80149ac <___svfiprintf_internal_r+0xe14>
 80141f4:	42000204 	addi	r8,r8,8
 80141f8:	0000e506 	br	8014590 <___svfiprintf_internal_r+0x9f8>
 80141fc:	21003fcc 	andi	r4,r4,255
 8014200:	2002dd1e 	bne	r4,zero,8014d78 <___svfiprintf_internal_r+0x11e0>
 8014204:	008200b4 	movhi	r2,2050
 8014208:	10bf3e04 	addi	r2,r2,-776
 801420c:	d8802915 	stw	r2,164(sp)
 8014210:	9080080c 	andi	r2,r18,32
 8014214:	103f461e 	bne	r2,zero,8013f30 <__alt_data_end+0xf8013f30>
 8014218:	9080040c 	andi	r2,r18,16
 801421c:	10022e1e 	bne	r2,zero,8014ad8 <___svfiprintf_internal_r+0xf40>
 8014220:	9080100c 	andi	r2,r18,64
 8014224:	dac02317 	ldw	r11,140(sp)
 8014228:	10027326 	beq	r2,zero,8014bf8 <___svfiprintf_internal_r+0x1060>
 801422c:	5f00000b 	ldhu	fp,0(r11)
 8014230:	5ac00104 	addi	r11,r11,4
 8014234:	0013883a 	mov	r9,zero
 8014238:	dac02315 	stw	r11,140(sp)
 801423c:	003f4106 	br	8013f44 <__alt_data_end+0xf8013f44>
 8014240:	21003fcc 	andi	r4,r4,255
 8014244:	2002e11e 	bne	r4,zero,8014dcc <___svfiprintf_internal_r+0x1234>
 8014248:	9080080c 	andi	r2,r18,32
 801424c:	1002011e 	bne	r2,zero,8014a54 <___svfiprintf_internal_r+0xebc>
 8014250:	9080040c 	andi	r2,r18,16
 8014254:	10023e1e 	bne	r2,zero,8014b50 <___svfiprintf_internal_r+0xfb8>
 8014258:	9480100c 	andi	r18,r18,64
 801425c:	90023c26 	beq	r18,zero,8014b50 <___svfiprintf_internal_r+0xfb8>
 8014260:	dac02317 	ldw	r11,140(sp)
 8014264:	58800017 	ldw	r2,0(r11)
 8014268:	5ac00104 	addi	r11,r11,4
 801426c:	dac02315 	stw	r11,140(sp)
 8014270:	dac02517 	ldw	r11,148(sp)
 8014274:	12c0000d 	sth	r11,0(r2)
 8014278:	003e6e06 	br	8013c34 <__alt_data_end+0xf8013c34>
 801427c:	98c00007 	ldb	r3,0(r19)
 8014280:	1a422926 	beq	r3,r9,8014b28 <___svfiprintf_internal_r+0xf90>
 8014284:	94800414 	ori	r18,r18,16
 8014288:	003e9206 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 801428c:	94801014 	ori	r18,r18,64
 8014290:	98c00007 	ldb	r3,0(r19)
 8014294:	003e8f06 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014298:	21003fcc 	andi	r4,r4,255
 801429c:	2002c71e 	bne	r4,zero,8014dbc <___svfiprintf_internal_r+0x1224>
 80142a0:	9080080c 	andi	r2,r18,32
 80142a4:	10004926 	beq	r2,zero,80143cc <___svfiprintf_internal_r+0x834>
 80142a8:	dac02317 	ldw	r11,140(sp)
 80142ac:	58800117 	ldw	r2,4(r11)
 80142b0:	5f000017 	ldw	fp,0(r11)
 80142b4:	5ac00204 	addi	r11,r11,8
 80142b8:	dac02315 	stw	r11,140(sp)
 80142bc:	1013883a 	mov	r9,r2
 80142c0:	10004b16 	blt	r2,zero,80143f0 <___svfiprintf_internal_r+0x858>
 80142c4:	da801d83 	ldbu	r10,118(sp)
 80142c8:	8001cb16 	blt	r16,zero,80149f8 <___svfiprintf_internal_r+0xe60>
 80142cc:	00ffdfc4 	movi	r3,-129
 80142d0:	e244b03a 	or	r2,fp,r9
 80142d4:	90e4703a 	and	r18,r18,r3
 80142d8:	103f4726 	beq	r2,zero,8013ff8 <__alt_data_end+0xf8013ff8>
 80142dc:	48008c26 	beq	r9,zero,8014510 <___svfiprintf_internal_r+0x978>
 80142e0:	dc802015 	stw	r18,128(sp)
 80142e4:	dc002115 	stw	r16,132(sp)
 80142e8:	dc401a04 	addi	r17,sp,104
 80142ec:	e021883a 	mov	r16,fp
 80142f0:	da002215 	stw	r8,136(sp)
 80142f4:	5039883a 	mov	fp,r10
 80142f8:	4825883a 	mov	r18,r9
 80142fc:	8009883a 	mov	r4,r16
 8014300:	900b883a 	mov	r5,r18
 8014304:	01800284 	movi	r6,10
 8014308:	000f883a 	mov	r7,zero
 801430c:	80194640 	call	8019464 <__umoddi3>
 8014310:	10800c04 	addi	r2,r2,48
 8014314:	8c7fffc4 	addi	r17,r17,-1
 8014318:	8009883a 	mov	r4,r16
 801431c:	900b883a 	mov	r5,r18
 8014320:	88800005 	stb	r2,0(r17)
 8014324:	01800284 	movi	r6,10
 8014328:	000f883a 	mov	r7,zero
 801432c:	8018eec0 	call	8018eec <__udivdi3>
 8014330:	1021883a 	mov	r16,r2
 8014334:	10c4b03a 	or	r2,r2,r3
 8014338:	1825883a 	mov	r18,r3
 801433c:	103fef1e 	bne	r2,zero,80142fc <__alt_data_end+0xf80142fc>
 8014340:	dc802017 	ldw	r18,128(sp)
 8014344:	dc002117 	ldw	r16,132(sp)
 8014348:	da002217 	ldw	r8,136(sp)
 801434c:	e015883a 	mov	r10,fp
 8014350:	d8c01e17 	ldw	r3,120(sp)
 8014354:	1c47c83a 	sub	r3,r3,r17
 8014358:	d8c02115 	stw	r3,132(sp)
 801435c:	003f2a06 	br	8014008 <__alt_data_end+0xf8014008>
 8014360:	dac02317 	ldw	r11,140(sp)
 8014364:	d8001d85 	stb	zero,118(sp)
 8014368:	5c400017 	ldw	r17,0(r11)
 801436c:	5f000104 	addi	fp,r11,4
 8014370:	88022f26 	beq	r17,zero,8014c30 <___svfiprintf_internal_r+0x1098>
 8014374:	80022516 	blt	r16,zero,8014c0c <___svfiprintf_internal_r+0x1074>
 8014378:	800d883a 	mov	r6,r16
 801437c:	000b883a 	mov	r5,zero
 8014380:	8809883a 	mov	r4,r17
 8014384:	da002c15 	stw	r8,176(sp)
 8014388:	800faf00 	call	800faf0 <memchr>
 801438c:	da002c17 	ldw	r8,176(sp)
 8014390:	10026426 	beq	r2,zero,8014d24 <___svfiprintf_internal_r+0x118c>
 8014394:	1445c83a 	sub	r2,r2,r17
 8014398:	d8802115 	stw	r2,132(sp)
 801439c:	da801d83 	ldbu	r10,118(sp)
 80143a0:	df002315 	stw	fp,140(sp)
 80143a4:	0021883a 	mov	r16,zero
 80143a8:	003f1706 	br	8014008 <__alt_data_end+0xf8014008>
 80143ac:	94800814 	ori	r18,r18,32
 80143b0:	98c00007 	ldb	r3,0(r19)
 80143b4:	003e4706 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 80143b8:	21003fcc 	andi	r4,r4,255
 80143bc:	2002701e 	bne	r4,zero,8014d80 <___svfiprintf_internal_r+0x11e8>
 80143c0:	94800414 	ori	r18,r18,16
 80143c4:	9080080c 	andi	r2,r18,32
 80143c8:	103fb71e 	bne	r2,zero,80142a8 <__alt_data_end+0xf80142a8>
 80143cc:	9080040c 	andi	r2,r18,16
 80143d0:	1001ab26 	beq	r2,zero,8014a80 <___svfiprintf_internal_r+0xee8>
 80143d4:	dac02317 	ldw	r11,140(sp)
 80143d8:	5f000017 	ldw	fp,0(r11)
 80143dc:	5ac00104 	addi	r11,r11,4
 80143e0:	dac02315 	stw	r11,140(sp)
 80143e4:	e013d7fa 	srai	r9,fp,31
 80143e8:	4805883a 	mov	r2,r9
 80143ec:	103fb50e 	bge	r2,zero,80142c4 <__alt_data_end+0xf80142c4>
 80143f0:	0739c83a 	sub	fp,zero,fp
 80143f4:	02800b44 	movi	r10,45
 80143f8:	e004c03a 	cmpne	r2,fp,zero
 80143fc:	0253c83a 	sub	r9,zero,r9
 8014400:	da801d85 	stb	r10,118(sp)
 8014404:	4893c83a 	sub	r9,r9,r2
 8014408:	80023016 	blt	r16,zero,8014ccc <___svfiprintf_internal_r+0x1134>
 801440c:	00bfdfc4 	movi	r2,-129
 8014410:	90a4703a 	and	r18,r18,r2
 8014414:	483fb21e 	bne	r9,zero,80142e0 <__alt_data_end+0xf80142e0>
 8014418:	00003d06 	br	8014510 <___svfiprintf_internal_r+0x978>
 801441c:	9817883a 	mov	r11,r19
 8014420:	d8002415 	stw	zero,144(sp)
 8014424:	18bff404 	addi	r2,r3,-48
 8014428:	0019883a 	mov	r12,zero
 801442c:	58c00007 	ldb	r3,0(r11)
 8014430:	630002a4 	muli	r12,r12,10
 8014434:	9cc00044 	addi	r19,r19,1
 8014438:	9817883a 	mov	r11,r19
 801443c:	1319883a 	add	r12,r2,r12
 8014440:	18bff404 	addi	r2,r3,-48
 8014444:	30bff92e 	bgeu	r6,r2,801442c <__alt_data_end+0xf801442c>
 8014448:	db002415 	stw	r12,144(sp)
 801444c:	18bff804 	addi	r2,r3,-32
 8014450:	28be232e 	bgeu	r5,r2,8013ce0 <__alt_data_end+0xf8013ce0>
 8014454:	21003fcc 	andi	r4,r4,255
 8014458:	20024b1e 	bne	r4,zero,8014d88 <___svfiprintf_internal_r+0x11f0>
 801445c:	1800d626 	beq	r3,zero,80147b8 <___svfiprintf_internal_r+0xc20>
 8014460:	02c00044 	movi	r11,1
 8014464:	dac02015 	stw	r11,128(sp)
 8014468:	d8c01005 	stb	r3,64(sp)
 801446c:	d8001d85 	stb	zero,118(sp)
 8014470:	dac02115 	stw	r11,132(sp)
 8014474:	dc401004 	addi	r17,sp,64
 8014478:	003f2606 	br	8014114 <__alt_data_end+0xf8014114>
 801447c:	94802014 	ori	r18,r18,128
 8014480:	98c00007 	ldb	r3,0(r19)
 8014484:	003e1306 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014488:	98c00007 	ldb	r3,0(r19)
 801448c:	9ac00044 	addi	r11,r19,1
 8014490:	1a822b26 	beq	r3,r10,8014d40 <___svfiprintf_internal_r+0x11a8>
 8014494:	18bff404 	addi	r2,r3,-48
 8014498:	0021883a 	mov	r16,zero
 801449c:	30821e36 	bltu	r6,r2,8014d18 <___svfiprintf_internal_r+0x1180>
 80144a0:	58c00007 	ldb	r3,0(r11)
 80144a4:	840002a4 	muli	r16,r16,10
 80144a8:	5cc00044 	addi	r19,r11,1
 80144ac:	9817883a 	mov	r11,r19
 80144b0:	80a1883a 	add	r16,r16,r2
 80144b4:	18bff404 	addi	r2,r3,-48
 80144b8:	30bff92e 	bgeu	r6,r2,80144a0 <__alt_data_end+0xf80144a0>
 80144bc:	803e060e 	bge	r16,zero,8013cd8 <__alt_data_end+0xf8013cd8>
 80144c0:	043fffc4 	movi	r16,-1
 80144c4:	003e0406 	br	8013cd8 <__alt_data_end+0xf8013cd8>
 80144c8:	21003fcc 	andi	r4,r4,255
 80144cc:	2002371e 	bne	r4,zero,8014dac <___svfiprintf_internal_r+0x1214>
 80144d0:	94800414 	ori	r18,r18,16
 80144d4:	9080080c 	andi	r2,r18,32
 80144d8:	103ebb1e 	bne	r2,zero,8013fc8 <__alt_data_end+0xf8013fc8>
 80144dc:	9080040c 	andi	r2,r18,16
 80144e0:	10013b26 	beq	r2,zero,80149d0 <___svfiprintf_internal_r+0xe38>
 80144e4:	dac02317 	ldw	r11,140(sp)
 80144e8:	d8001d85 	stb	zero,118(sp)
 80144ec:	0013883a 	mov	r9,zero
 80144f0:	58800104 	addi	r2,r11,4
 80144f4:	5f000017 	ldw	fp,0(r11)
 80144f8:	80013d16 	blt	r16,zero,80149f0 <___svfiprintf_internal_r+0xe58>
 80144fc:	00ffdfc4 	movi	r3,-129
 8014500:	d8802315 	stw	r2,140(sp)
 8014504:	90e4703a 	and	r18,r18,r3
 8014508:	0015883a 	mov	r10,zero
 801450c:	e03eba26 	beq	fp,zero,8013ff8 <__alt_data_end+0xf8013ff8>
 8014510:	00800244 	movi	r2,9
 8014514:	173f7236 	bltu	r2,fp,80142e0 <__alt_data_end+0xf80142e0>
 8014518:	dac02b17 	ldw	r11,172(sp)
 801451c:	e7000c04 	addi	fp,fp,48
 8014520:	df0019c5 	stb	fp,103(sp)
 8014524:	dac02115 	stw	r11,132(sp)
 8014528:	dc4019c4 	addi	r17,sp,103
 801452c:	003eb606 	br	8014008 <__alt_data_end+0xf8014008>
 8014530:	21003fcc 	andi	r4,r4,255
 8014534:	20021f1e 	bne	r4,zero,8014db4 <___svfiprintf_internal_r+0x121c>
 8014538:	94800414 	ori	r18,r18,16
 801453c:	9080080c 	andi	r2,r18,32
 8014540:	103ec51e 	bne	r2,zero,8014058 <__alt_data_end+0xf8014058>
 8014544:	9080040c 	andi	r2,r18,16
 8014548:	10016926 	beq	r2,zero,8014af0 <___svfiprintf_internal_r+0xf58>
 801454c:	dac02317 	ldw	r11,140(sp)
 8014550:	d8001d85 	stb	zero,118(sp)
 8014554:	0013883a 	mov	r9,zero
 8014558:	58800104 	addi	r2,r11,4
 801455c:	5f000017 	ldw	fp,0(r11)
 8014560:	80016b16 	blt	r16,zero,8014b10 <___svfiprintf_internal_r+0xf78>
 8014564:	00ffdfc4 	movi	r3,-129
 8014568:	d8802315 	stw	r2,140(sp)
 801456c:	90e4703a 	and	r18,r18,r3
 8014570:	e03ec41e 	bne	fp,zero,8014084 <__alt_data_end+0xf8014084>
 8014574:	0015883a 	mov	r10,zero
 8014578:	8001c226 	beq	r16,zero,8014c84 <___svfiprintf_internal_r+0x10ec>
 801457c:	0039883a 	mov	fp,zero
 8014580:	0013883a 	mov	r9,zero
 8014584:	003ec006 	br	8014088 <__alt_data_end+0xf8014088>
 8014588:	d8c01c17 	ldw	r3,112(sp)
 801458c:	d8801b17 	ldw	r2,108(sp)
 8014590:	d9001d87 	ldb	r4,118(sp)
 8014594:	20000b26 	beq	r4,zero,80145c4 <___svfiprintf_internal_r+0xa2c>
 8014598:	d9001d84 	addi	r4,sp,118
 801459c:	18c00044 	addi	r3,r3,1
 80145a0:	10800044 	addi	r2,r2,1
 80145a4:	41000015 	stw	r4,0(r8)
 80145a8:	01000044 	movi	r4,1
 80145ac:	41000115 	stw	r4,4(r8)
 80145b0:	d8c01c15 	stw	r3,112(sp)
 80145b4:	d8801b15 	stw	r2,108(sp)
 80145b8:	010001c4 	movi	r4,7
 80145bc:	2080e116 	blt	r4,r2,8014944 <___svfiprintf_internal_r+0xdac>
 80145c0:	42000204 	addi	r8,r8,8
 80145c4:	dac02217 	ldw	r11,136(sp)
 80145c8:	58000b26 	beq	r11,zero,80145f8 <___svfiprintf_internal_r+0xa60>
 80145cc:	d9001d04 	addi	r4,sp,116
 80145d0:	18c00084 	addi	r3,r3,2
 80145d4:	10800044 	addi	r2,r2,1
 80145d8:	41000015 	stw	r4,0(r8)
 80145dc:	01000084 	movi	r4,2
 80145e0:	41000115 	stw	r4,4(r8)
 80145e4:	d8c01c15 	stw	r3,112(sp)
 80145e8:	d8801b15 	stw	r2,108(sp)
 80145ec:	010001c4 	movi	r4,7
 80145f0:	2080dd16 	blt	r4,r2,8014968 <___svfiprintf_internal_r+0xdd0>
 80145f4:	42000204 	addi	r8,r8,8
 80145f8:	dac02617 	ldw	r11,152(sp)
 80145fc:	01002004 	movi	r4,128
 8014600:	59008426 	beq	r11,r4,8014814 <___svfiprintf_internal_r+0xc7c>
 8014604:	dac02117 	ldw	r11,132(sp)
 8014608:	82e1c83a 	sub	r16,r16,r11
 801460c:	0400270e 	bge	zero,r16,80146ac <___svfiprintf_internal_r+0xb14>
 8014610:	01c00404 	movi	r7,16
 8014614:	3c016a0e 	bge	r7,r16,8014bc0 <___svfiprintf_internal_r+0x1028>
 8014618:	014200b4 	movhi	r5,2050
 801461c:	29407704 	addi	r5,r5,476
 8014620:	d9402215 	stw	r5,136(sp)
 8014624:	070001c4 	movi	fp,7
 8014628:	00000306 	br	8014638 <___svfiprintf_internal_r+0xaa0>
 801462c:	843ffc04 	addi	r16,r16,-16
 8014630:	42000204 	addi	r8,r8,8
 8014634:	3c00130e 	bge	r7,r16,8014684 <___svfiprintf_internal_r+0xaec>
 8014638:	18c00404 	addi	r3,r3,16
 801463c:	10800044 	addi	r2,r2,1
 8014640:	45000015 	stw	r20,0(r8)
 8014644:	41c00115 	stw	r7,4(r8)
 8014648:	d8c01c15 	stw	r3,112(sp)
 801464c:	d8801b15 	stw	r2,108(sp)
 8014650:	e0bff60e 	bge	fp,r2,801462c <__alt_data_end+0xf801462c>
 8014654:	d9801a04 	addi	r6,sp,104
 8014658:	b80b883a 	mov	r5,r23
 801465c:	a809883a 	mov	r4,r21
 8014660:	d9c02c15 	stw	r7,176(sp)
 8014664:	80139c80 	call	80139c8 <__ssprint_r>
 8014668:	d9c02c17 	ldw	r7,176(sp)
 801466c:	1000581e 	bne	r2,zero,80147d0 <___svfiprintf_internal_r+0xc38>
 8014670:	843ffc04 	addi	r16,r16,-16
 8014674:	d8c01c17 	ldw	r3,112(sp)
 8014678:	d8801b17 	ldw	r2,108(sp)
 801467c:	d811883a 	mov	r8,sp
 8014680:	3c3fed16 	blt	r7,r16,8014638 <__alt_data_end+0xf8014638>
 8014684:	dac02217 	ldw	r11,136(sp)
 8014688:	1c07883a 	add	r3,r3,r16
 801468c:	10800044 	addi	r2,r2,1
 8014690:	42c00015 	stw	r11,0(r8)
 8014694:	44000115 	stw	r16,4(r8)
 8014698:	d8c01c15 	stw	r3,112(sp)
 801469c:	d8801b15 	stw	r2,108(sp)
 80146a0:	010001c4 	movi	r4,7
 80146a4:	20809e16 	blt	r4,r2,8014920 <___svfiprintf_internal_r+0xd88>
 80146a8:	42000204 	addi	r8,r8,8
 80146ac:	dac02117 	ldw	r11,132(sp)
 80146b0:	10800044 	addi	r2,r2,1
 80146b4:	44400015 	stw	r17,0(r8)
 80146b8:	58c7883a 	add	r3,r11,r3
 80146bc:	42c00115 	stw	r11,4(r8)
 80146c0:	d8c01c15 	stw	r3,112(sp)
 80146c4:	d8801b15 	stw	r2,108(sp)
 80146c8:	010001c4 	movi	r4,7
 80146cc:	20807f16 	blt	r4,r2,80148cc <___svfiprintf_internal_r+0xd34>
 80146d0:	42000204 	addi	r8,r8,8
 80146d4:	9480010c 	andi	r18,r18,4
 80146d8:	90002926 	beq	r18,zero,8014780 <___svfiprintf_internal_r+0xbe8>
 80146dc:	dac02417 	ldw	r11,144(sp)
 80146e0:	d8802017 	ldw	r2,128(sp)
 80146e4:	58a1c83a 	sub	r16,r11,r2
 80146e8:	0400250e 	bge	zero,r16,8014780 <___svfiprintf_internal_r+0xbe8>
 80146ec:	04400404 	movi	r17,16
 80146f0:	d8801b17 	ldw	r2,108(sp)
 80146f4:	8c017c0e 	bge	r17,r16,8014ce8 <___svfiprintf_internal_r+0x1150>
 80146f8:	014200b4 	movhi	r5,2050
 80146fc:	29407b04 	addi	r5,r5,492
 8014700:	d9402815 	stw	r5,160(sp)
 8014704:	048001c4 	movi	r18,7
 8014708:	00000306 	br	8014718 <___svfiprintf_internal_r+0xb80>
 801470c:	843ffc04 	addi	r16,r16,-16
 8014710:	42000204 	addi	r8,r8,8
 8014714:	8c00110e 	bge	r17,r16,801475c <___svfiprintf_internal_r+0xbc4>
 8014718:	18c00404 	addi	r3,r3,16
 801471c:	10800044 	addi	r2,r2,1
 8014720:	45800015 	stw	r22,0(r8)
 8014724:	44400115 	stw	r17,4(r8)
 8014728:	d8c01c15 	stw	r3,112(sp)
 801472c:	d8801b15 	stw	r2,108(sp)
 8014730:	90bff60e 	bge	r18,r2,801470c <__alt_data_end+0xf801470c>
 8014734:	d9801a04 	addi	r6,sp,104
 8014738:	b80b883a 	mov	r5,r23
 801473c:	a809883a 	mov	r4,r21
 8014740:	80139c80 	call	80139c8 <__ssprint_r>
 8014744:	1000221e 	bne	r2,zero,80147d0 <___svfiprintf_internal_r+0xc38>
 8014748:	843ffc04 	addi	r16,r16,-16
 801474c:	d8c01c17 	ldw	r3,112(sp)
 8014750:	d8801b17 	ldw	r2,108(sp)
 8014754:	d811883a 	mov	r8,sp
 8014758:	8c3fef16 	blt	r17,r16,8014718 <__alt_data_end+0xf8014718>
 801475c:	dac02817 	ldw	r11,160(sp)
 8014760:	1c07883a 	add	r3,r3,r16
 8014764:	10800044 	addi	r2,r2,1
 8014768:	42c00015 	stw	r11,0(r8)
 801476c:	44000115 	stw	r16,4(r8)
 8014770:	d8c01c15 	stw	r3,112(sp)
 8014774:	d8801b15 	stw	r2,108(sp)
 8014778:	010001c4 	movi	r4,7
 801477c:	2080aa16 	blt	r4,r2,8014a28 <___svfiprintf_internal_r+0xe90>
 8014780:	d8802417 	ldw	r2,144(sp)
 8014784:	dac02017 	ldw	r11,128(sp)
 8014788:	12c0010e 	bge	r2,r11,8014790 <___svfiprintf_internal_r+0xbf8>
 801478c:	5805883a 	mov	r2,r11
 8014790:	dac02517 	ldw	r11,148(sp)
 8014794:	5897883a 	add	r11,r11,r2
 8014798:	dac02515 	stw	r11,148(sp)
 801479c:	1800531e 	bne	r3,zero,80148ec <___svfiprintf_internal_r+0xd54>
 80147a0:	98800007 	ldb	r2,0(r19)
 80147a4:	d8001b15 	stw	zero,108(sp)
 80147a8:	d811883a 	mov	r8,sp
 80147ac:	103d231e 	bne	r2,zero,8013c3c <__alt_data_end+0xf8013c3c>
 80147b0:	9823883a 	mov	r17,r19
 80147b4:	003d3906 	br	8013c9c <__alt_data_end+0xf8013c9c>
 80147b8:	d8801c17 	ldw	r2,112(sp)
 80147bc:	10000426 	beq	r2,zero,80147d0 <___svfiprintf_internal_r+0xc38>
 80147c0:	d9402717 	ldw	r5,156(sp)
 80147c4:	d9002a17 	ldw	r4,168(sp)
 80147c8:	d9801a04 	addi	r6,sp,104
 80147cc:	80139c80 	call	80139c8 <__ssprint_r>
 80147d0:	dac02717 	ldw	r11,156(sp)
 80147d4:	d8802517 	ldw	r2,148(sp)
 80147d8:	58c0030b 	ldhu	r3,12(r11)
 80147dc:	18c0100c 	andi	r3,r3,64
 80147e0:	1801381e 	bne	r3,zero,8014cc4 <___svfiprintf_internal_r+0x112c>
 80147e4:	dfc03717 	ldw	ra,220(sp)
 80147e8:	df003617 	ldw	fp,216(sp)
 80147ec:	ddc03517 	ldw	r23,212(sp)
 80147f0:	dd803417 	ldw	r22,208(sp)
 80147f4:	dd403317 	ldw	r21,204(sp)
 80147f8:	dd003217 	ldw	r20,200(sp)
 80147fc:	dcc03117 	ldw	r19,196(sp)
 8014800:	dc803017 	ldw	r18,192(sp)
 8014804:	dc402f17 	ldw	r17,188(sp)
 8014808:	dc002e17 	ldw	r16,184(sp)
 801480c:	dec03804 	addi	sp,sp,224
 8014810:	f800283a 	ret
 8014814:	dac02417 	ldw	r11,144(sp)
 8014818:	d9002017 	ldw	r4,128(sp)
 801481c:	5939c83a 	sub	fp,r11,r4
 8014820:	073f780e 	bge	zero,fp,8014604 <__alt_data_end+0xf8014604>
 8014824:	02400404 	movi	r9,16
 8014828:	4f01370e 	bge	r9,fp,8014d08 <___svfiprintf_internal_r+0x1170>
 801482c:	02c200b4 	movhi	r11,2050
 8014830:	5ac07704 	addi	r11,r11,476
 8014834:	dac02215 	stw	r11,136(sp)
 8014838:	028001c4 	movi	r10,7
 801483c:	00000306 	br	801484c <___svfiprintf_internal_r+0xcb4>
 8014840:	e73ffc04 	addi	fp,fp,-16
 8014844:	42000204 	addi	r8,r8,8
 8014848:	4f00150e 	bge	r9,fp,80148a0 <___svfiprintf_internal_r+0xd08>
 801484c:	18c00404 	addi	r3,r3,16
 8014850:	10800044 	addi	r2,r2,1
 8014854:	45000015 	stw	r20,0(r8)
 8014858:	42400115 	stw	r9,4(r8)
 801485c:	d8c01c15 	stw	r3,112(sp)
 8014860:	d8801b15 	stw	r2,108(sp)
 8014864:	50bff60e 	bge	r10,r2,8014840 <__alt_data_end+0xf8014840>
 8014868:	d9801a04 	addi	r6,sp,104
 801486c:	b80b883a 	mov	r5,r23
 8014870:	a809883a 	mov	r4,r21
 8014874:	da402c15 	stw	r9,176(sp)
 8014878:	da802d15 	stw	r10,180(sp)
 801487c:	80139c80 	call	80139c8 <__ssprint_r>
 8014880:	da402c17 	ldw	r9,176(sp)
 8014884:	da802d17 	ldw	r10,180(sp)
 8014888:	103fd11e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 801488c:	e73ffc04 	addi	fp,fp,-16
 8014890:	d8c01c17 	ldw	r3,112(sp)
 8014894:	d8801b17 	ldw	r2,108(sp)
 8014898:	d811883a 	mov	r8,sp
 801489c:	4f3feb16 	blt	r9,fp,801484c <__alt_data_end+0xf801484c>
 80148a0:	dac02217 	ldw	r11,136(sp)
 80148a4:	1f07883a 	add	r3,r3,fp
 80148a8:	10800044 	addi	r2,r2,1
 80148ac:	42c00015 	stw	r11,0(r8)
 80148b0:	47000115 	stw	fp,4(r8)
 80148b4:	d8c01c15 	stw	r3,112(sp)
 80148b8:	d8801b15 	stw	r2,108(sp)
 80148bc:	010001c4 	movi	r4,7
 80148c0:	2080b616 	blt	r4,r2,8014b9c <___svfiprintf_internal_r+0x1004>
 80148c4:	42000204 	addi	r8,r8,8
 80148c8:	003f4e06 	br	8014604 <__alt_data_end+0xf8014604>
 80148cc:	d9801a04 	addi	r6,sp,104
 80148d0:	b80b883a 	mov	r5,r23
 80148d4:	a809883a 	mov	r4,r21
 80148d8:	80139c80 	call	80139c8 <__ssprint_r>
 80148dc:	103fbc1e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 80148e0:	d8c01c17 	ldw	r3,112(sp)
 80148e4:	d811883a 	mov	r8,sp
 80148e8:	003f7a06 	br	80146d4 <__alt_data_end+0xf80146d4>
 80148ec:	d9801a04 	addi	r6,sp,104
 80148f0:	b80b883a 	mov	r5,r23
 80148f4:	a809883a 	mov	r4,r21
 80148f8:	80139c80 	call	80139c8 <__ssprint_r>
 80148fc:	103fa826 	beq	r2,zero,80147a0 <__alt_data_end+0xf80147a0>
 8014900:	003fb306 	br	80147d0 <__alt_data_end+0xf80147d0>
 8014904:	d9801a04 	addi	r6,sp,104
 8014908:	b80b883a 	mov	r5,r23
 801490c:	a809883a 	mov	r4,r21
 8014910:	80139c80 	call	80139c8 <__ssprint_r>
 8014914:	103fae1e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 8014918:	d811883a 	mov	r8,sp
 801491c:	003cdc06 	br	8013c90 <__alt_data_end+0xf8013c90>
 8014920:	d9801a04 	addi	r6,sp,104
 8014924:	b80b883a 	mov	r5,r23
 8014928:	a809883a 	mov	r4,r21
 801492c:	80139c80 	call	80139c8 <__ssprint_r>
 8014930:	103fa71e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 8014934:	d8c01c17 	ldw	r3,112(sp)
 8014938:	d8801b17 	ldw	r2,108(sp)
 801493c:	d811883a 	mov	r8,sp
 8014940:	003f5a06 	br	80146ac <__alt_data_end+0xf80146ac>
 8014944:	d9801a04 	addi	r6,sp,104
 8014948:	b80b883a 	mov	r5,r23
 801494c:	a809883a 	mov	r4,r21
 8014950:	80139c80 	call	80139c8 <__ssprint_r>
 8014954:	103f9e1e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 8014958:	d8c01c17 	ldw	r3,112(sp)
 801495c:	d8801b17 	ldw	r2,108(sp)
 8014960:	d811883a 	mov	r8,sp
 8014964:	003f1706 	br	80145c4 <__alt_data_end+0xf80145c4>
 8014968:	d9801a04 	addi	r6,sp,104
 801496c:	b80b883a 	mov	r5,r23
 8014970:	a809883a 	mov	r4,r21
 8014974:	80139c80 	call	80139c8 <__ssprint_r>
 8014978:	103f951e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 801497c:	d8c01c17 	ldw	r3,112(sp)
 8014980:	d8801b17 	ldw	r2,108(sp)
 8014984:	d811883a 	mov	r8,sp
 8014988:	003f1b06 	br	80145f8 <__alt_data_end+0xf80145f8>
 801498c:	d8001d85 	stb	zero,118(sp)
 8014990:	80007b16 	blt	r16,zero,8014b80 <___svfiprintf_internal_r+0xfe8>
 8014994:	00ffdfc4 	movi	r3,-129
 8014998:	e244b03a 	or	r2,fp,r9
 801499c:	90e4703a 	and	r18,r18,r3
 80149a0:	103d7026 	beq	r2,zero,8013f64 <__alt_data_end+0xf8013f64>
 80149a4:	0015883a 	mov	r10,zero
 80149a8:	003d7206 	br	8013f74 <__alt_data_end+0xf8013f74>
 80149ac:	d9801a04 	addi	r6,sp,104
 80149b0:	b80b883a 	mov	r5,r23
 80149b4:	a809883a 	mov	r4,r21
 80149b8:	80139c80 	call	80139c8 <__ssprint_r>
 80149bc:	103f841e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 80149c0:	d8c01c17 	ldw	r3,112(sp)
 80149c4:	d8801b17 	ldw	r2,108(sp)
 80149c8:	d811883a 	mov	r8,sp
 80149cc:	003ef006 	br	8014590 <__alt_data_end+0xf8014590>
 80149d0:	9080100c 	andi	r2,r18,64
 80149d4:	d8001d85 	stb	zero,118(sp)
 80149d8:	dac02317 	ldw	r11,140(sp)
 80149dc:	10008126 	beq	r2,zero,8014be4 <___svfiprintf_internal_r+0x104c>
 80149e0:	58800104 	addi	r2,r11,4
 80149e4:	5f00000b 	ldhu	fp,0(r11)
 80149e8:	0013883a 	mov	r9,zero
 80149ec:	803ec30e 	bge	r16,zero,80144fc <__alt_data_end+0xf80144fc>
 80149f0:	d8802315 	stw	r2,140(sp)
 80149f4:	0015883a 	mov	r10,zero
 80149f8:	e244b03a 	or	r2,fp,r9
 80149fc:	103e371e 	bne	r2,zero,80142dc <__alt_data_end+0xf80142dc>
 8014a00:	00800044 	movi	r2,1
 8014a04:	10803fcc 	andi	r2,r2,255
 8014a08:	00c00044 	movi	r3,1
 8014a0c:	10c06126 	beq	r2,r3,8014b94 <___svfiprintf_internal_r+0xffc>
 8014a10:	00c00084 	movi	r3,2
 8014a14:	10fd5526 	beq	r2,r3,8013f6c <__alt_data_end+0xf8013f6c>
 8014a18:	003ed806 	br	801457c <__alt_data_end+0xf801457c>
 8014a1c:	d8802315 	stw	r2,140(sp)
 8014a20:	98c00007 	ldb	r3,0(r19)
 8014a24:	003cab06 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014a28:	d9801a04 	addi	r6,sp,104
 8014a2c:	b80b883a 	mov	r5,r23
 8014a30:	a809883a 	mov	r4,r21
 8014a34:	80139c80 	call	80139c8 <__ssprint_r>
 8014a38:	103f651e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 8014a3c:	d8c01c17 	ldw	r3,112(sp)
 8014a40:	003f4f06 	br	8014780 <__alt_data_end+0xf8014780>
 8014a44:	008200b4 	movhi	r2,2050
 8014a48:	10bf4304 	addi	r2,r2,-756
 8014a4c:	d8802915 	stw	r2,164(sp)
 8014a50:	003d4406 	br	8013f64 <__alt_data_end+0xf8013f64>
 8014a54:	dac02317 	ldw	r11,140(sp)
 8014a58:	58800017 	ldw	r2,0(r11)
 8014a5c:	dac02517 	ldw	r11,148(sp)
 8014a60:	5807d7fa 	srai	r3,r11,31
 8014a64:	dac02317 	ldw	r11,140(sp)
 8014a68:	10c00115 	stw	r3,4(r2)
 8014a6c:	5ac00104 	addi	r11,r11,4
 8014a70:	dac02315 	stw	r11,140(sp)
 8014a74:	dac02517 	ldw	r11,148(sp)
 8014a78:	12c00015 	stw	r11,0(r2)
 8014a7c:	003c6d06 	br	8013c34 <__alt_data_end+0xf8013c34>
 8014a80:	9080100c 	andi	r2,r18,64
 8014a84:	dac02317 	ldw	r11,140(sp)
 8014a88:	103e5326 	beq	r2,zero,80143d8 <__alt_data_end+0xf80143d8>
 8014a8c:	5f00000f 	ldh	fp,0(r11)
 8014a90:	5ac00104 	addi	r11,r11,4
 8014a94:	dac02315 	stw	r11,140(sp)
 8014a98:	e013d7fa 	srai	r9,fp,31
 8014a9c:	4805883a 	mov	r2,r9
 8014aa0:	003e0706 	br	80142c0 <__alt_data_end+0xf80142c0>
 8014aa4:	00800c04 	movi	r2,48
 8014aa8:	d8801d05 	stb	r2,116(sp)
 8014aac:	d8c01d45 	stb	r3,117(sp)
 8014ab0:	d8001d85 	stb	zero,118(sp)
 8014ab4:	90800094 	ori	r2,r18,2
 8014ab8:	80008f16 	blt	r16,zero,8014cf8 <___svfiprintf_internal_r+0x1160>
 8014abc:	00bfdfc4 	movi	r2,-129
 8014ac0:	90a4703a 	and	r18,r18,r2
 8014ac4:	94800094 	ori	r18,r18,2
 8014ac8:	0015883a 	mov	r10,zero
 8014acc:	003d2906 	br	8013f74 <__alt_data_end+0xf8013f74>
 8014ad0:	98c00007 	ldb	r3,0(r19)
 8014ad4:	003c7f06 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014ad8:	dac02317 	ldw	r11,140(sp)
 8014adc:	0013883a 	mov	r9,zero
 8014ae0:	5f000017 	ldw	fp,0(r11)
 8014ae4:	5ac00104 	addi	r11,r11,4
 8014ae8:	dac02315 	stw	r11,140(sp)
 8014aec:	003d1506 	br	8013f44 <__alt_data_end+0xf8013f44>
 8014af0:	9080100c 	andi	r2,r18,64
 8014af4:	d8001d85 	stb	zero,118(sp)
 8014af8:	dac02317 	ldw	r11,140(sp)
 8014afc:	10003426 	beq	r2,zero,8014bd0 <___svfiprintf_internal_r+0x1038>
 8014b00:	58800104 	addi	r2,r11,4
 8014b04:	5f00000b 	ldhu	fp,0(r11)
 8014b08:	0013883a 	mov	r9,zero
 8014b0c:	803e950e 	bge	r16,zero,8014564 <__alt_data_end+0xf8014564>
 8014b10:	e246b03a 	or	r3,fp,r9
 8014b14:	d8802315 	stw	r2,140(sp)
 8014b18:	183d5a1e 	bne	r3,zero,8014084 <__alt_data_end+0xf8014084>
 8014b1c:	0015883a 	mov	r10,zero
 8014b20:	0005883a 	mov	r2,zero
 8014b24:	003fb706 	br	8014a04 <__alt_data_end+0xf8014a04>
 8014b28:	98c00043 	ldbu	r3,1(r19)
 8014b2c:	94800814 	ori	r18,r18,32
 8014b30:	9cc00044 	addi	r19,r19,1
 8014b34:	18c03fcc 	andi	r3,r3,255
 8014b38:	18c0201c 	xori	r3,r3,128
 8014b3c:	18ffe004 	addi	r3,r3,-128
 8014b40:	003c6406 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014b44:	d8c02315 	stw	r3,140(sp)
 8014b48:	0015883a 	mov	r10,zero
 8014b4c:	003faa06 	br	80149f8 <__alt_data_end+0xf80149f8>
 8014b50:	dac02317 	ldw	r11,140(sp)
 8014b54:	58800017 	ldw	r2,0(r11)
 8014b58:	5ac00104 	addi	r11,r11,4
 8014b5c:	dac02315 	stw	r11,140(sp)
 8014b60:	dac02517 	ldw	r11,148(sp)
 8014b64:	12c00015 	stw	r11,0(r2)
 8014b68:	003c3206 	br	8013c34 <__alt_data_end+0xf8013c34>
 8014b6c:	010200b4 	movhi	r4,2050
 8014b70:	213f4304 	addi	r4,r4,-756
 8014b74:	d9002915 	stw	r4,164(sp)
 8014b78:	d8c02315 	stw	r3,140(sp)
 8014b7c:	1025883a 	mov	r18,r2
 8014b80:	e244b03a 	or	r2,fp,r9
 8014b84:	103f871e 	bne	r2,zero,80149a4 <__alt_data_end+0xf80149a4>
 8014b88:	0015883a 	mov	r10,zero
 8014b8c:	00800084 	movi	r2,2
 8014b90:	003f9c06 	br	8014a04 <__alt_data_end+0xf8014a04>
 8014b94:	0039883a 	mov	fp,zero
 8014b98:	003e5f06 	br	8014518 <__alt_data_end+0xf8014518>
 8014b9c:	d9801a04 	addi	r6,sp,104
 8014ba0:	b80b883a 	mov	r5,r23
 8014ba4:	a809883a 	mov	r4,r21
 8014ba8:	80139c80 	call	80139c8 <__ssprint_r>
 8014bac:	103f081e 	bne	r2,zero,80147d0 <__alt_data_end+0xf80147d0>
 8014bb0:	d8c01c17 	ldw	r3,112(sp)
 8014bb4:	d8801b17 	ldw	r2,108(sp)
 8014bb8:	d811883a 	mov	r8,sp
 8014bbc:	003e9106 	br	8014604 <__alt_data_end+0xf8014604>
 8014bc0:	010200b4 	movhi	r4,2050
 8014bc4:	21007704 	addi	r4,r4,476
 8014bc8:	d9002215 	stw	r4,136(sp)
 8014bcc:	003ead06 	br	8014684 <__alt_data_end+0xf8014684>
 8014bd0:	58800104 	addi	r2,r11,4
 8014bd4:	5f000017 	ldw	fp,0(r11)
 8014bd8:	0013883a 	mov	r9,zero
 8014bdc:	803e610e 	bge	r16,zero,8014564 <__alt_data_end+0xf8014564>
 8014be0:	003fcb06 	br	8014b10 <__alt_data_end+0xf8014b10>
 8014be4:	58800104 	addi	r2,r11,4
 8014be8:	5f000017 	ldw	fp,0(r11)
 8014bec:	0013883a 	mov	r9,zero
 8014bf0:	803e420e 	bge	r16,zero,80144fc <__alt_data_end+0xf80144fc>
 8014bf4:	003f7e06 	br	80149f0 <__alt_data_end+0xf80149f0>
 8014bf8:	5f000017 	ldw	fp,0(r11)
 8014bfc:	5ac00104 	addi	r11,r11,4
 8014c00:	0013883a 	mov	r9,zero
 8014c04:	dac02315 	stw	r11,140(sp)
 8014c08:	003cce06 	br	8013f44 <__alt_data_end+0xf8013f44>
 8014c0c:	8809883a 	mov	r4,r17
 8014c10:	da002c15 	stw	r8,176(sp)
 8014c14:	800526c0 	call	800526c <strlen>
 8014c18:	d8802115 	stw	r2,132(sp)
 8014c1c:	da801d83 	ldbu	r10,118(sp)
 8014c20:	df002315 	stw	fp,140(sp)
 8014c24:	0021883a 	mov	r16,zero
 8014c28:	da002c17 	ldw	r8,176(sp)
 8014c2c:	003cf606 	br	8014008 <__alt_data_end+0xf8014008>
 8014c30:	00800184 	movi	r2,6
 8014c34:	1400012e 	bgeu	r2,r16,8014c3c <___svfiprintf_internal_r+0x10a4>
 8014c38:	1021883a 	mov	r16,r2
 8014c3c:	dc002115 	stw	r16,132(sp)
 8014c40:	8005883a 	mov	r2,r16
 8014c44:	80003c16 	blt	r16,zero,8014d38 <___svfiprintf_internal_r+0x11a0>
 8014c48:	044200b4 	movhi	r17,2050
 8014c4c:	d8802015 	stw	r2,128(sp)
 8014c50:	df002315 	stw	fp,140(sp)
 8014c54:	8c7f4804 	addi	r17,r17,-736
 8014c58:	003d2e06 	br	8014114 <__alt_data_end+0xf8014114>
 8014c5c:	04001004 	movi	r16,64
 8014c60:	800b883a 	mov	r5,r16
 8014c64:	8003fd40 	call	8003fd4 <_malloc_r>
 8014c68:	dac02717 	ldw	r11,156(sp)
 8014c6c:	58800015 	stw	r2,0(r11)
 8014c70:	58800415 	stw	r2,16(r11)
 8014c74:	10004826 	beq	r2,zero,8014d98 <___svfiprintf_internal_r+0x1200>
 8014c78:	dac02717 	ldw	r11,156(sp)
 8014c7c:	5c000515 	stw	r16,20(r11)
 8014c80:	003bd906 	br	8013be8 <__alt_data_end+0xf8013be8>
 8014c84:	9080004c 	andi	r2,r18,1
 8014c88:	0015883a 	mov	r10,zero
 8014c8c:	10000626 	beq	r2,zero,8014ca8 <___svfiprintf_internal_r+0x1110>
 8014c90:	dac02b17 	ldw	r11,172(sp)
 8014c94:	00800c04 	movi	r2,48
 8014c98:	d88019c5 	stb	r2,103(sp)
 8014c9c:	dac02115 	stw	r11,132(sp)
 8014ca0:	dc4019c4 	addi	r17,sp,103
 8014ca4:	003cd806 	br	8014008 <__alt_data_end+0xf8014008>
 8014ca8:	d8002115 	stw	zero,132(sp)
 8014cac:	dc401a04 	addi	r17,sp,104
 8014cb0:	003cd506 	br	8014008 <__alt_data_end+0xf8014008>
 8014cb4:	010200b4 	movhi	r4,2050
 8014cb8:	21007b04 	addi	r4,r4,492
 8014cbc:	d9002815 	stw	r4,160(sp)
 8014cc0:	003d4306 	br	80141d0 <__alt_data_end+0xf80141d0>
 8014cc4:	00bfffc4 	movi	r2,-1
 8014cc8:	003ec606 	br	80147e4 <__alt_data_end+0xf80147e4>
 8014ccc:	00800044 	movi	r2,1
 8014cd0:	10803fcc 	andi	r2,r2,255
 8014cd4:	00c00044 	movi	r3,1
 8014cd8:	10fd8026 	beq	r2,r3,80142dc <__alt_data_end+0xf80142dc>
 8014cdc:	00c00084 	movi	r3,2
 8014ce0:	10fca426 	beq	r2,r3,8013f74 <__alt_data_end+0xf8013f74>
 8014ce4:	003ce806 	br	8014088 <__alt_data_end+0xf8014088>
 8014ce8:	010200b4 	movhi	r4,2050
 8014cec:	21007b04 	addi	r4,r4,492
 8014cf0:	d9002815 	stw	r4,160(sp)
 8014cf4:	003e9906 	br	801475c <__alt_data_end+0xf801475c>
 8014cf8:	1025883a 	mov	r18,r2
 8014cfc:	0015883a 	mov	r10,zero
 8014d00:	00800084 	movi	r2,2
 8014d04:	003ff206 	br	8014cd0 <__alt_data_end+0xf8014cd0>
 8014d08:	014200b4 	movhi	r5,2050
 8014d0c:	29407704 	addi	r5,r5,476
 8014d10:	d9402215 	stw	r5,136(sp)
 8014d14:	003ee206 	br	80148a0 <__alt_data_end+0xf80148a0>
 8014d18:	5827883a 	mov	r19,r11
 8014d1c:	0021883a 	mov	r16,zero
 8014d20:	003bed06 	br	8013cd8 <__alt_data_end+0xf8013cd8>
 8014d24:	dc002115 	stw	r16,132(sp)
 8014d28:	da801d83 	ldbu	r10,118(sp)
 8014d2c:	df002315 	stw	fp,140(sp)
 8014d30:	0021883a 	mov	r16,zero
 8014d34:	003cb406 	br	8014008 <__alt_data_end+0xf8014008>
 8014d38:	0005883a 	mov	r2,zero
 8014d3c:	003fc206 	br	8014c48 <__alt_data_end+0xf8014c48>
 8014d40:	d8802317 	ldw	r2,140(sp)
 8014d44:	98c00043 	ldbu	r3,1(r19)
 8014d48:	5827883a 	mov	r19,r11
 8014d4c:	14000017 	ldw	r16,0(r2)
 8014d50:	10800104 	addi	r2,r2,4
 8014d54:	d8802315 	stw	r2,140(sp)
 8014d58:	803f760e 	bge	r16,zero,8014b34 <__alt_data_end+0xf8014b34>
 8014d5c:	18c03fcc 	andi	r3,r3,255
 8014d60:	18c0201c 	xori	r3,r3,128
 8014d64:	043fffc4 	movi	r16,-1
 8014d68:	18ffe004 	addi	r3,r3,-128
 8014d6c:	003bd906 	br	8013cd4 <__alt_data_end+0xf8013cd4>
 8014d70:	d9c01d85 	stb	r7,118(sp)
 8014d74:	003cb606 	br	8014050 <__alt_data_end+0xf8014050>
 8014d78:	d9c01d85 	stb	r7,118(sp)
 8014d7c:	003d2106 	br	8014204 <__alt_data_end+0xf8014204>
 8014d80:	d9c01d85 	stb	r7,118(sp)
 8014d84:	003d8e06 	br	80143c0 <__alt_data_end+0xf80143c0>
 8014d88:	d9c01d85 	stb	r7,118(sp)
 8014d8c:	003db306 	br	801445c <__alt_data_end+0xf801445c>
 8014d90:	d9c01d85 	stb	r7,118(sp)
 8014d94:	003c8a06 	br	8013fc0 <__alt_data_end+0xf8013fc0>
 8014d98:	dac02a17 	ldw	r11,168(sp)
 8014d9c:	00800304 	movi	r2,12
 8014da0:	58800015 	stw	r2,0(r11)
 8014da4:	00bfffc4 	movi	r2,-1
 8014da8:	003e8e06 	br	80147e4 <__alt_data_end+0xf80147e4>
 8014dac:	d9c01d85 	stb	r7,118(sp)
 8014db0:	003dc706 	br	80144d0 <__alt_data_end+0xf80144d0>
 8014db4:	d9c01d85 	stb	r7,118(sp)
 8014db8:	003ddf06 	br	8014538 <__alt_data_end+0xf8014538>
 8014dbc:	d9c01d85 	stb	r7,118(sp)
 8014dc0:	003d3706 	br	80142a0 <__alt_data_end+0xf80142a0>
 8014dc4:	d9c01d85 	stb	r7,118(sp)
 8014dc8:	003c5406 	br	8013f1c <__alt_data_end+0xf8013f1c>
 8014dcc:	d9c01d85 	stb	r7,118(sp)
 8014dd0:	003d1d06 	br	8014248 <__alt_data_end+0xf8014248>

08014dd4 <_sungetc_r>:
 8014dd4:	00bfffc4 	movi	r2,-1
 8014dd8:	28803726 	beq	r5,r2,8014eb8 <_sungetc_r+0xe4>
 8014ddc:	3080030b 	ldhu	r2,12(r6)
 8014de0:	30c00c17 	ldw	r3,48(r6)
 8014de4:	defffc04 	addi	sp,sp,-16
 8014de8:	10bff7cc 	andi	r2,r2,65503
 8014dec:	dc800215 	stw	r18,8(sp)
 8014df0:	dfc00315 	stw	ra,12(sp)
 8014df4:	dc400115 	stw	r17,4(sp)
 8014df8:	dc000015 	stw	r16,0(sp)
 8014dfc:	3080030d 	sth	r2,12(r6)
 8014e00:	2c803fcc 	andi	r18,r5,255
 8014e04:	18001826 	beq	r3,zero,8014e68 <_sungetc_r+0x94>
 8014e08:	30c00117 	ldw	r3,4(r6)
 8014e0c:	30800d17 	ldw	r2,52(r6)
 8014e10:	3021883a 	mov	r16,r6
 8014e14:	2823883a 	mov	r17,r5
 8014e18:	18800e0e 	bge	r3,r2,8014e54 <_sungetc_r+0x80>
 8014e1c:	80c00017 	ldw	r3,0(r16)
 8014e20:	9005883a 	mov	r2,r18
 8014e24:	193fffc4 	addi	r4,r3,-1
 8014e28:	81000015 	stw	r4,0(r16)
 8014e2c:	1c7fffc5 	stb	r17,-1(r3)
 8014e30:	80c00117 	ldw	r3,4(r16)
 8014e34:	18c00044 	addi	r3,r3,1
 8014e38:	80c00115 	stw	r3,4(r16)
 8014e3c:	dfc00317 	ldw	ra,12(sp)
 8014e40:	dc800217 	ldw	r18,8(sp)
 8014e44:	dc400117 	ldw	r17,4(sp)
 8014e48:	dc000017 	ldw	r16,0(sp)
 8014e4c:	dec00404 	addi	sp,sp,16
 8014e50:	f800283a 	ret
 8014e54:	300b883a 	mov	r5,r6
 8014e58:	80161340 	call	8016134 <__submore>
 8014e5c:	103fef26 	beq	r2,zero,8014e1c <__alt_data_end+0xf8014e1c>
 8014e60:	00bfffc4 	movi	r2,-1
 8014e64:	003ff506 	br	8014e3c <__alt_data_end+0xf8014e3c>
 8014e68:	30c00417 	ldw	r3,16(r6)
 8014e6c:	30800017 	ldw	r2,0(r6)
 8014e70:	18000326 	beq	r3,zero,8014e80 <_sungetc_r+0xac>
 8014e74:	1880022e 	bgeu	r3,r2,8014e80 <_sungetc_r+0xac>
 8014e78:	10ffffc3 	ldbu	r3,-1(r2)
 8014e7c:	90c01026 	beq	r18,r3,8014ec0 <_sungetc_r+0xec>
 8014e80:	31c00117 	ldw	r7,4(r6)
 8014e84:	30800e15 	stw	r2,56(r6)
 8014e88:	008000c4 	movi	r2,3
 8014e8c:	31001004 	addi	r4,r6,64
 8014e90:	30c01084 	addi	r3,r6,66
 8014e94:	30800d15 	stw	r2,52(r6)
 8014e98:	00800044 	movi	r2,1
 8014e9c:	30800115 	stw	r2,4(r6)
 8014ea0:	31c00f15 	stw	r7,60(r6)
 8014ea4:	31000c15 	stw	r4,48(r6)
 8014ea8:	31401085 	stb	r5,66(r6)
 8014eac:	30c00015 	stw	r3,0(r6)
 8014eb0:	9005883a 	mov	r2,r18
 8014eb4:	003fe106 	br	8014e3c <__alt_data_end+0xf8014e3c>
 8014eb8:	00bfffc4 	movi	r2,-1
 8014ebc:	f800283a 	ret
 8014ec0:	30c00117 	ldw	r3,4(r6)
 8014ec4:	10bfffc4 	addi	r2,r2,-1
 8014ec8:	30800015 	stw	r2,0(r6)
 8014ecc:	18800044 	addi	r2,r3,1
 8014ed0:	30800115 	stw	r2,4(r6)
 8014ed4:	9005883a 	mov	r2,r18
 8014ed8:	003fd806 	br	8014e3c <__alt_data_end+0xf8014e3c>

08014edc <__ssrefill_r>:
 8014edc:	defffe04 	addi	sp,sp,-8
 8014ee0:	dc000015 	stw	r16,0(sp)
 8014ee4:	2821883a 	mov	r16,r5
 8014ee8:	29400c17 	ldw	r5,48(r5)
 8014eec:	dfc00115 	stw	ra,4(sp)
 8014ef0:	28000e26 	beq	r5,zero,8014f2c <__ssrefill_r+0x50>
 8014ef4:	80801004 	addi	r2,r16,64
 8014ef8:	28800126 	beq	r5,r2,8014f00 <__ssrefill_r+0x24>
 8014efc:	800ec500 	call	800ec50 <_free_r>
 8014f00:	80800f17 	ldw	r2,60(r16)
 8014f04:	80000c15 	stw	zero,48(r16)
 8014f08:	80800115 	stw	r2,4(r16)
 8014f0c:	10000726 	beq	r2,zero,8014f2c <__ssrefill_r+0x50>
 8014f10:	80c00e17 	ldw	r3,56(r16)
 8014f14:	0005883a 	mov	r2,zero
 8014f18:	80c00015 	stw	r3,0(r16)
 8014f1c:	dfc00117 	ldw	ra,4(sp)
 8014f20:	dc000017 	ldw	r16,0(sp)
 8014f24:	dec00204 	addi	sp,sp,8
 8014f28:	f800283a 	ret
 8014f2c:	8080030b 	ldhu	r2,12(r16)
 8014f30:	80c00417 	ldw	r3,16(r16)
 8014f34:	80000115 	stw	zero,4(r16)
 8014f38:	10800814 	ori	r2,r2,32
 8014f3c:	8080030d 	sth	r2,12(r16)
 8014f40:	80c00015 	stw	r3,0(r16)
 8014f44:	00bfffc4 	movi	r2,-1
 8014f48:	003ff406 	br	8014f1c <__alt_data_end+0xf8014f1c>

08014f4c <_sfread_r>:
 8014f4c:	defff704 	addi	sp,sp,-36
 8014f50:	dd800615 	stw	r22,24(sp)
 8014f54:	39ad383a 	mul	r22,r7,r6
 8014f58:	dc400115 	stw	r17,4(sp)
 8014f5c:	dfc00815 	stw	ra,32(sp)
 8014f60:	ddc00715 	stw	r23,28(sp)
 8014f64:	dd400515 	stw	r21,20(sp)
 8014f68:	dd000415 	stw	r20,16(sp)
 8014f6c:	dcc00315 	stw	r19,12(sp)
 8014f70:	dc800215 	stw	r18,8(sp)
 8014f74:	dc000015 	stw	r16,0(sp)
 8014f78:	dc400917 	ldw	r17,36(sp)
 8014f7c:	b0002a26 	beq	r22,zero,8015028 <_sfread_r+0xdc>
 8014f80:	302f883a 	mov	r23,r6
 8014f84:	382b883a 	mov	r21,r7
 8014f88:	2029883a 	mov	r20,r4
 8014f8c:	2827883a 	mov	r19,r5
 8014f90:	b025883a 	mov	r18,r22
 8014f94:	00000b06 	br	8014fc4 <_sfread_r+0x78>
 8014f98:	800fbd40 	call	800fbd4 <memcpy>
 8014f9c:	88800017 	ldw	r2,0(r17)
 8014fa0:	9c27883a 	add	r19,r19,r16
 8014fa4:	9425c83a 	sub	r18,r18,r16
 8014fa8:	1421883a 	add	r16,r2,r16
 8014fac:	88000115 	stw	zero,4(r17)
 8014fb0:	880b883a 	mov	r5,r17
 8014fb4:	8c000015 	stw	r16,0(r17)
 8014fb8:	a009883a 	mov	r4,r20
 8014fbc:	8014edc0 	call	8014edc <__ssrefill_r>
 8014fc0:	10001b1e 	bne	r2,zero,8015030 <_sfread_r+0xe4>
 8014fc4:	8c000117 	ldw	r16,4(r17)
 8014fc8:	9809883a 	mov	r4,r19
 8014fcc:	89400017 	ldw	r5,0(r17)
 8014fd0:	800d883a 	mov	r6,r16
 8014fd4:	84bff036 	bltu	r16,r18,8014f98 <__alt_data_end+0xf8014f98>
 8014fd8:	900d883a 	mov	r6,r18
 8014fdc:	800fbd40 	call	800fbd4 <memcpy>
 8014fe0:	88c00117 	ldw	r3,4(r17)
 8014fe4:	89000017 	ldw	r4,0(r17)
 8014fe8:	a805883a 	mov	r2,r21
 8014fec:	1c87c83a 	sub	r3,r3,r18
 8014ff0:	24a5883a 	add	r18,r4,r18
 8014ff4:	88c00115 	stw	r3,4(r17)
 8014ff8:	8c800015 	stw	r18,0(r17)
 8014ffc:	dfc00817 	ldw	ra,32(sp)
 8015000:	ddc00717 	ldw	r23,28(sp)
 8015004:	dd800617 	ldw	r22,24(sp)
 8015008:	dd400517 	ldw	r21,20(sp)
 801500c:	dd000417 	ldw	r20,16(sp)
 8015010:	dcc00317 	ldw	r19,12(sp)
 8015014:	dc800217 	ldw	r18,8(sp)
 8015018:	dc400117 	ldw	r17,4(sp)
 801501c:	dc000017 	ldw	r16,0(sp)
 8015020:	dec00904 	addi	sp,sp,36
 8015024:	f800283a 	ret
 8015028:	0005883a 	mov	r2,zero
 801502c:	003ff306 	br	8014ffc <__alt_data_end+0xf8014ffc>
 8015030:	b80b883a 	mov	r5,r23
 8015034:	b489c83a 	sub	r4,r22,r18
 8015038:	80039b80 	call	80039b8 <__udivsi3>
 801503c:	003fef06 	br	8014ffc <__alt_data_end+0xf8014ffc>

08015040 <__ssvfiscanf_r>:
 8015040:	2880030b 	ldhu	r2,12(r5)
 8015044:	deff9b04 	addi	sp,sp,-404
 8015048:	df006315 	stw	fp,396(sp)
 801504c:	dc405c15 	stw	r17,368(sp)
 8015050:	dfc06415 	stw	ra,400(sp)
 8015054:	ddc06215 	stw	r23,392(sp)
 8015058:	dd806115 	stw	r22,388(sp)
 801505c:	dd406015 	stw	r21,384(sp)
 8015060:	dd005f15 	stw	r20,380(sp)
 8015064:	dcc05e15 	stw	r19,376(sp)
 8015068:	dc805d15 	stw	r18,372(sp)
 801506c:	dc005b15 	stw	r16,364(sp)
 8015070:	10c8000c 	andi	r3,r2,8192
 8015074:	d9c04f15 	stw	r7,316(sp)
 8015078:	2839883a 	mov	fp,r5
 801507c:	2023883a 	mov	r17,r4
 8015080:	1800061e 	bne	r3,zero,801509c <__ssvfiscanf_r+0x5c>
 8015084:	29001917 	ldw	r4,100(r5)
 8015088:	00f7ffc4 	movi	r3,-8193
 801508c:	10880014 	ori	r2,r2,8192
 8015090:	20c6703a 	and	r3,r4,r3
 8015094:	2880030d 	sth	r2,12(r5)
 8015098:	28c01915 	stw	r3,100(r5)
 801509c:	30800003 	ldbu	r2,0(r6)
 80150a0:	dac04104 	addi	r11,sp,260
 80150a4:	0025883a 	mov	r18,zero
 80150a8:	050200b4 	movhi	r20,2050
 80150ac:	d8005215 	stw	zero,328(sp)
 80150b0:	d8005015 	stw	zero,320(sp)
 80150b4:	d8005115 	stw	zero,324(sp)
 80150b8:	dac04e15 	stw	r11,312(sp)
 80150bc:	d8804d15 	stw	r2,308(sp)
 80150c0:	e027883a 	mov	r19,fp
 80150c4:	a5081204 	addi	r20,r20,8264
 80150c8:	9039883a 	mov	fp,r18
 80150cc:	34800044 	addi	r18,r6,1
 80150d0:	10001e26 	beq	r2,zero,801514c <__ssvfiscanf_r+0x10c>
 80150d4:	a1c00017 	ldw	r7,0(r20)
 80150d8:	3887883a 	add	r3,r7,r2
 80150dc:	18c00043 	ldbu	r3,1(r3)
 80150e0:	18c0020c 	andi	r3,r3,8
 80150e4:	18001b26 	beq	r3,zero,8015154 <__ssvfiscanf_r+0x114>
 80150e8:	98800117 	ldw	r2,4(r19)
 80150ec:	00800e0e 	bge	zero,r2,8015128 <__ssvfiscanf_r+0xe8>
 80150f0:	98c00017 	ldw	r3,0(r19)
 80150f4:	a1000017 	ldw	r4,0(r20)
 80150f8:	18800003 	ldbu	r2,0(r3)
 80150fc:	2085883a 	add	r2,r4,r2
 8015100:	10800043 	ldbu	r2,1(r2)
 8015104:	1080020c 	andi	r2,r2,8
 8015108:	10000b26 	beq	r2,zero,8015138 <__ssvfiscanf_r+0xf8>
 801510c:	98800117 	ldw	r2,4(r19)
 8015110:	18c00044 	addi	r3,r3,1
 8015114:	98c00015 	stw	r3,0(r19)
 8015118:	10bfffc4 	addi	r2,r2,-1
 801511c:	98800115 	stw	r2,4(r19)
 8015120:	e7000044 	addi	fp,fp,1
 8015124:	00bff216 	blt	zero,r2,80150f0 <__alt_data_end+0xf80150f0>
 8015128:	980b883a 	mov	r5,r19
 801512c:	8809883a 	mov	r4,r17
 8015130:	8014edc0 	call	8014edc <__ssrefill_r>
 8015134:	103fee26 	beq	r2,zero,80150f0 <__alt_data_end+0xf80150f0>
 8015138:	900d883a 	mov	r6,r18
 801513c:	30800003 	ldbu	r2,0(r6)
 8015140:	34800044 	addi	r18,r6,1
 8015144:	d8804d15 	stw	r2,308(sp)
 8015148:	103fe21e 	bne	r2,zero,80150d4 <__alt_data_end+0xf80150d4>
 801514c:	d8805117 	ldw	r2,324(sp)
 8015150:	00009806 	br	80153b4 <__ssvfiscanf_r+0x374>
 8015154:	00c00944 	movi	r3,37
 8015158:	10c0871e 	bne	r2,r3,8015378 <__ssvfiscanf_r+0x338>
 801515c:	30c00043 	ldbu	r3,1(r6)
 8015160:	0021883a 	mov	r16,zero
 8015164:	002f883a 	mov	r23,zero
 8015168:	01001e04 	movi	r4,120
 801516c:	01401b04 	movi	r5,108
 8015170:	95400044 	addi	r21,r18,1
 8015174:	20c0e036 	bltu	r4,r3,80154f8 <__ssvfiscanf_r+0x4b8>
 8015178:	180490ba 	slli	r2,r3,2
 801517c:	01820074 	movhi	r6,2049
 8015180:	31946404 	addi	r6,r6,20880
 8015184:	1185883a 	add	r2,r2,r6
 8015188:	10800017 	ldw	r2,0(r2)
 801518c:	1000683a 	jmp	r2
 8015190:	080153b0 	cmpltui	zero,at,1358
 8015194:	080154f8 	rdprs	zero,at,1363
 8015198:	080154f8 	rdprs	zero,at,1363
 801519c:	080154f8 	rdprs	zero,at,1363
 80151a0:	080154f8 	rdprs	zero,at,1363
 80151a4:	080154f8 	rdprs	zero,at,1363
 80151a8:	080154f8 	rdprs	zero,at,1363
 80151ac:	080154f8 	rdprs	zero,at,1363
 80151b0:	080154f8 	rdprs	zero,at,1363
 80151b4:	080154f8 	rdprs	zero,at,1363
 80151b8:	080154f8 	rdprs	zero,at,1363
 80151bc:	080154f8 	rdprs	zero,at,1363
 80151c0:	080154f8 	rdprs	zero,at,1363
 80151c4:	080154f8 	rdprs	zero,at,1363
 80151c8:	080154f8 	rdprs	zero,at,1363
 80151cc:	080154f8 	rdprs	zero,at,1363
 80151d0:	080154f8 	rdprs	zero,at,1363
 80151d4:	080154f8 	rdprs	zero,at,1363
 80151d8:	080154f8 	rdprs	zero,at,1363
 80151dc:	080154f8 	rdprs	zero,at,1363
 80151e0:	080154f8 	rdprs	zero,at,1363
 80151e4:	080154f8 	rdprs	zero,at,1363
 80151e8:	080154f8 	rdprs	zero,at,1363
 80151ec:	080154f8 	rdprs	zero,at,1363
 80151f0:	080154f8 	rdprs	zero,at,1363
 80151f4:	080154f8 	rdprs	zero,at,1363
 80151f8:	080154f8 	rdprs	zero,at,1363
 80151fc:	080154f8 	rdprs	zero,at,1363
 8015200:	080154f8 	rdprs	zero,at,1363
 8015204:	080154f8 	rdprs	zero,at,1363
 8015208:	080154f8 	rdprs	zero,at,1363
 801520c:	080154f8 	rdprs	zero,at,1363
 8015210:	080154f8 	rdprs	zero,at,1363
 8015214:	080154f8 	rdprs	zero,at,1363
 8015218:	080154f8 	rdprs	zero,at,1363
 801521c:	080154f8 	rdprs	zero,at,1363
 8015220:	080154f8 	rdprs	zero,at,1363
 8015224:	08015374 	orhi	zero,at,1357
 8015228:	080154f8 	rdprs	zero,at,1363
 801522c:	080154f8 	rdprs	zero,at,1363
 8015230:	080154f8 	rdprs	zero,at,1363
 8015234:	080154f8 	rdprs	zero,at,1363
 8015238:	08015708 	cmpgei	zero,at,1372
 801523c:	080154f8 	rdprs	zero,at,1363
 8015240:	080154f8 	rdprs	zero,at,1363
 8015244:	080154f8 	rdprs	zero,at,1363
 8015248:	080154f8 	rdprs	zero,at,1363
 801524c:	080154f8 	rdprs	zero,at,1363
 8015250:	08015690 	cmplti	zero,at,1370
 8015254:	08015690 	cmplti	zero,at,1370
 8015258:	08015690 	cmplti	zero,at,1370
 801525c:	08015690 	cmplti	zero,at,1370
 8015260:	08015690 	cmplti	zero,at,1370
 8015264:	08015690 	cmplti	zero,at,1370
 8015268:	08015690 	cmplti	zero,at,1370
 801526c:	08015690 	cmplti	zero,at,1370
 8015270:	08015690 	cmplti	zero,at,1370
 8015274:	08015690 	cmplti	zero,at,1370
 8015278:	080154f8 	rdprs	zero,at,1363
 801527c:	080154f8 	rdprs	zero,at,1363
 8015280:	080154f8 	rdprs	zero,at,1363
 8015284:	080154f8 	rdprs	zero,at,1363
 8015288:	080154f8 	rdprs	zero,at,1363
 801528c:	080154f8 	rdprs	zero,at,1363
 8015290:	080154f8 	rdprs	zero,at,1363
 8015294:	080154f8 	rdprs	zero,at,1363
 8015298:	080154f8 	rdprs	zero,at,1363
 801529c:	080154f8 	rdprs	zero,at,1363
 80152a0:	08015668 	cmpgeui	zero,at,1369
 80152a4:	080154f8 	rdprs	zero,at,1363
 80152a8:	080154f8 	rdprs	zero,at,1363
 80152ac:	080154f8 	rdprs	zero,at,1363
 80152b0:	080154f8 	rdprs	zero,at,1363
 80152b4:	080154f8 	rdprs	zero,at,1363
 80152b8:	080154f8 	rdprs	zero,at,1363
 80152bc:	080154f8 	rdprs	zero,at,1363
 80152c0:	080156d0 	cmplti	zero,at,1371
 80152c4:	080154f8 	rdprs	zero,at,1363
 80152c8:	080154f8 	rdprs	zero,at,1363
 80152cc:	080156ac 	andhi	zero,at,1370
 80152d0:	080154f8 	rdprs	zero,at,1363
 80152d4:	080154f8 	rdprs	zero,at,1363
 80152d8:	080154f8 	rdprs	zero,at,1363
 80152dc:	080154f8 	rdprs	zero,at,1363
 80152e0:	080154f8 	rdprs	zero,at,1363
 80152e4:	080154f8 	rdprs	zero,at,1363
 80152e8:	080154f8 	rdprs	zero,at,1363
 80152ec:	080154f8 	rdprs	zero,at,1363
 80152f0:	080156e4 	muli	zero,at,1371
 80152f4:	080154f8 	rdprs	zero,at,1363
 80152f8:	080154f8 	rdprs	zero,at,1363
 80152fc:	080155e0 	cmpeqi	zero,at,1367
 8015300:	080154f8 	rdprs	zero,at,1363
 8015304:	080154f8 	rdprs	zero,at,1363
 8015308:	080154f8 	rdprs	zero,at,1363
 801530c:	080154f8 	rdprs	zero,at,1363
 8015310:	080154f8 	rdprs	zero,at,1363
 8015314:	080154f8 	rdprs	zero,at,1363
 8015318:	080154f8 	rdprs	zero,at,1363
 801531c:	08015568 	cmpgeui	zero,at,1365
 8015320:	08015544 	addi	zero,at,1365
 8015324:	080154f8 	rdprs	zero,at,1363
 8015328:	080154f8 	rdprs	zero,at,1363
 801532c:	080154f8 	rdprs	zero,at,1363
 8015330:	08015530 	cmpltui	zero,at,1364
 8015334:	0801571c 	xori	zero,at,1372
 8015338:	080154f8 	rdprs	zero,at,1363
 801533c:	080154f8 	rdprs	zero,at,1363
 8015340:	080154e0 	cmpeqi	zero,at,1363
 8015344:	080154f8 	rdprs	zero,at,1363
 8015348:	080154b4 	orhi	zero,at,1362
 801534c:	08015490 	cmplti	zero,at,1362
 8015350:	08015468 	cmpgeui	zero,at,1361
 8015354:	080154f8 	rdprs	zero,at,1363
 8015358:	080154f8 	rdprs	zero,at,1363
 801535c:	08015458 	cmpnei	zero,at,1361
 8015360:	080154f8 	rdprs	zero,at,1363
 8015364:	080153e4 	muli	zero,at,1359
 8015368:	080154f8 	rdprs	zero,at,1363
 801536c:	080154f8 	rdprs	zero,at,1363
 8015370:	080156e4 	muli	zero,at,1371
 8015374:	a825883a 	mov	r18,r21
 8015378:	98800117 	ldw	r2,4(r19)
 801537c:	0081d20e 	bge	zero,r2,8015ac8 <__ssvfiscanf_r+0xa88>
 8015380:	98800017 	ldw	r2,0(r19)
 8015384:	90ffffc3 	ldbu	r3,-1(r18)
 8015388:	11000003 	ldbu	r4,0(r2)
 801538c:	20ff6f1e 	bne	r4,r3,801514c <__alt_data_end+0xf801514c>
 8015390:	98c00117 	ldw	r3,4(r19)
 8015394:	10800044 	addi	r2,r2,1
 8015398:	98800015 	stw	r2,0(r19)
 801539c:	18bfffc4 	addi	r2,r3,-1
 80153a0:	98800115 	stw	r2,4(r19)
 80153a4:	e7000044 	addi	fp,fp,1
 80153a8:	900d883a 	mov	r6,r18
 80153ac:	003f6306 	br	801513c <__alt_data_end+0xf801513c>
 80153b0:	00bfffc4 	movi	r2,-1
 80153b4:	dfc06417 	ldw	ra,400(sp)
 80153b8:	df006317 	ldw	fp,396(sp)
 80153bc:	ddc06217 	ldw	r23,392(sp)
 80153c0:	dd806117 	ldw	r22,388(sp)
 80153c4:	dd406017 	ldw	r21,384(sp)
 80153c8:	dd005f17 	ldw	r20,380(sp)
 80153cc:	dcc05e17 	ldw	r19,376(sp)
 80153d0:	dc805d17 	ldw	r18,372(sp)
 80153d4:	dc405c17 	ldw	r17,368(sp)
 80153d8:	dc005b17 	ldw	r16,364(sp)
 80153dc:	dec06504 	addi	sp,sp,404
 80153e0:	f800283a 	ret
 80153e4:	98800117 	ldw	r2,4(r19)
 80153e8:	0081e10e 	bge	zero,r2,8015b70 <__ssvfiscanf_r+0xb30>
 80153ec:	00820074 	movhi	r2,2049
 80153f0:	108d1004 	addi	r2,r2,13376
 80153f4:	02c00284 	movi	r11,10
 80153f8:	d8805215 	stw	r2,328(sp)
 80153fc:	dac05015 	stw	r11,320(sp)
 8015400:	058000c4 	movi	r22,3
 8015404:	98800017 	ldw	r2,0(r19)
 8015408:	00000206 	br	8015414 <__ssvfiscanf_r+0x3d4>
 801540c:	10800044 	addi	r2,r2,1
 8015410:	98800015 	stw	r2,0(r19)
 8015414:	11000003 	ldbu	r4,0(r2)
 8015418:	20c03fcc 	andi	r3,r4,255
 801541c:	38c7883a 	add	r3,r7,r3
 8015420:	18c00043 	ldbu	r3,1(r3)
 8015424:	1940020c 	andi	r5,r3,8
 8015428:	2801dd26 	beq	r5,zero,8015ba0 <__ssvfiscanf_r+0xb60>
 801542c:	98c00117 	ldw	r3,4(r19)
 8015430:	e7000044 	addi	fp,fp,1
 8015434:	18ffffc4 	addi	r3,r3,-1
 8015438:	98c00115 	stw	r3,4(r19)
 801543c:	00fff316 	blt	zero,r3,801540c <__alt_data_end+0xf801540c>
 8015440:	980b883a 	mov	r5,r19
 8015444:	8809883a 	mov	r4,r17
 8015448:	8014edc0 	call	8014edc <__ssrefill_r>
 801544c:	1001591e 	bne	r2,zero,80159b4 <__ssvfiscanf_r+0x974>
 8015450:	a1c00017 	ldw	r7,0(r20)
 8015454:	003feb06 	br	8015404 <__alt_data_end+0xf8015404>
 8015458:	98800117 	ldw	r2,4(r19)
 801545c:	0081b80e 	bge	zero,r2,8015b40 <__ssvfiscanf_r+0xb00>
 8015460:	05800084 	movi	r22,2
 8015464:	003fe706 	br	8015404 <__alt_data_end+0xf8015404>
 8015468:	98800117 	ldw	r2,4(r19)
 801546c:	84008814 	ori	r16,r16,544
 8015470:	00809f0e 	bge	zero,r2,80156f0 <__ssvfiscanf_r+0x6b0>
 8015474:	00820074 	movhi	r2,2049
 8015478:	108d1004 	addi	r2,r2,13376
 801547c:	02c00404 	movi	r11,16
 8015480:	d8805215 	stw	r2,328(sp)
 8015484:	dac05015 	stw	r11,320(sp)
 8015488:	058000c4 	movi	r22,3
 801548c:	003fdd06 	br	8015404 <__alt_data_end+0xf8015404>
 8015490:	98800117 	ldw	r2,4(r19)
 8015494:	0080880e 	bge	zero,r2,80156b8 <__ssvfiscanf_r+0x678>
 8015498:	00820074 	movhi	r2,2049
 801549c:	108d1004 	addi	r2,r2,13376
 80154a0:	02c00204 	movi	r11,8
 80154a4:	d8805215 	stw	r2,328(sp)
 80154a8:	dac05015 	stw	r11,320(sp)
 80154ac:	058000c4 	movi	r22,3
 80154b0:	003fd406 	br	8015404 <__alt_data_end+0xf8015404>
 80154b4:	8080040c 	andi	r2,r16,16
 80154b8:	1000d61e 	bne	r2,zero,8015814 <__ssvfiscanf_r+0x7d4>
 80154bc:	8080010c 	andi	r2,r16,4
 80154c0:	10018b26 	beq	r2,zero,8015af0 <__ssvfiscanf_r+0xab0>
 80154c4:	dac04f17 	ldw	r11,316(sp)
 80154c8:	a825883a 	mov	r18,r21
 80154cc:	58800017 	ldw	r2,0(r11)
 80154d0:	5ac00104 	addi	r11,r11,4
 80154d4:	dac04f15 	stw	r11,316(sp)
 80154d8:	1700000d 	sth	fp,0(r2)
 80154dc:	003f1606 	br	8015138 <__alt_data_end+0xf8015138>
 80154e0:	90c00043 	ldbu	r3,1(r18)
 80154e4:	19417d26 	beq	r3,r5,8015adc <__ssvfiscanf_r+0xa9c>
 80154e8:	a825883a 	mov	r18,r21
 80154ec:	84000054 	ori	r16,r16,1
 80154f0:	95400044 	addi	r21,r18,1
 80154f4:	20ff202e 	bgeu	r4,r3,8015178 <__alt_data_end+0xf8015178>
 80154f8:	38c7883a 	add	r3,r7,r3
 80154fc:	18800043 	ldbu	r2,1(r3)
 8015500:	00c00044 	movi	r3,1
 8015504:	108000cc 	andi	r2,r2,3
 8015508:	10c16626 	beq	r2,r3,8015aa4 <__ssvfiscanf_r+0xa64>
 801550c:	98800117 	ldw	r2,4(r19)
 8015510:	0081670e 	bge	zero,r2,8015ab0 <__ssvfiscanf_r+0xa70>
 8015514:	00820074 	movhi	r2,2049
 8015518:	108bba04 	addi	r2,r2,12008
 801551c:	02c00284 	movi	r11,10
 8015520:	d8805215 	stw	r2,328(sp)
 8015524:	dac05015 	stw	r11,320(sp)
 8015528:	058000c4 	movi	r22,3
 801552c:	003fb506 	br	8015404 <__alt_data_end+0xf8015404>
 8015530:	90800043 	ldbu	r2,1(r18)
 8015534:	84000114 	ori	r16,r16,4
 8015538:	a825883a 	mov	r18,r21
 801553c:	10c03fcc 	andi	r3,r2,255
 8015540:	003f0b06 	br	8015170 <__alt_data_end+0xf8015170>
 8015544:	98800117 	ldw	r2,4(r19)
 8015548:	0081590e 	bge	zero,r2,8015ab0 <__ssvfiscanf_r+0xa70>
 801554c:	02c20074 	movhi	r11,2049
 8015550:	5acbba04 	addi	r11,r11,12008
 8015554:	dac05215 	stw	r11,328(sp)
 8015558:	02c00284 	movi	r11,10
 801555c:	dac05015 	stw	r11,320(sp)
 8015560:	058000c4 	movi	r22,3
 8015564:	003fa706 	br	8015404 <__alt_data_end+0xf8015404>
 8015568:	98800117 	ldw	r2,4(r19)
 801556c:	0081220e 	bge	zero,r2,80159f8 <__ssvfiscanf_r+0x9b8>
 8015570:	b800011e 	bne	r23,zero,8015578 <__ssvfiscanf_r+0x538>
 8015574:	05c00044 	movi	r23,1
 8015578:	8080004c 	andi	r2,r16,1
 801557c:	10006f1e 	bne	r2,zero,801573c <__ssvfiscanf_r+0x6fc>
 8015580:	8400040c 	andi	r16,r16,16
 8015584:	80013526 	beq	r16,zero,8015a5c <__ssvfiscanf_r+0xa1c>
 8015588:	0021883a 	mov	r16,zero
 801558c:	00000806 	br	80155b0 <__ssvfiscanf_r+0x570>
 8015590:	1887883a 	add	r3,r3,r2
 8015594:	980b883a 	mov	r5,r19
 8015598:	8809883a 	mov	r4,r17
 801559c:	98c00015 	stw	r3,0(r19)
 80155a0:	80a1883a 	add	r16,r16,r2
 80155a4:	b8afc83a 	sub	r23,r23,r2
 80155a8:	8014edc0 	call	8014edc <__ssrefill_r>
 80155ac:	1001291e 	bne	r2,zero,8015a54 <__ssvfiscanf_r+0xa14>
 80155b0:	98800117 	ldw	r2,4(r19)
 80155b4:	98c00017 	ldw	r3,0(r19)
 80155b8:	15fff516 	blt	r2,r23,8015590 <__alt_data_end+0xf8015590>
 80155bc:	15c5c83a 	sub	r2,r2,r23
 80155c0:	1dd5883a 	add	r10,r3,r23
 80155c4:	85e1883a 	add	r16,r16,r23
 80155c8:	98800115 	stw	r2,4(r19)
 80155cc:	9a800015 	stw	r10,0(r19)
 80155d0:	a825883a 	mov	r18,r21
 80155d4:	e439883a 	add	fp,fp,r16
 80155d8:	900d883a 	mov	r6,r18
 80155dc:	003ed706 	br	801513c <__alt_data_end+0xf801513c>
 80155e0:	a80b883a 	mov	r5,r21
 80155e4:	d9000104 	addi	r4,sp,4
 80155e8:	801169c0 	call	801169c <__sccl>
 80155ec:	1025883a 	mov	r18,r2
 80155f0:	98800117 	ldw	r2,4(r19)
 80155f4:	0081590e 	bge	zero,r2,8015b5c <__ssvfiscanf_r+0xb1c>
 80155f8:	99000017 	ldw	r4,0(r19)
 80155fc:	20800003 	ldbu	r2,0(r4)
 8015600:	b8008726 	beq	r23,zero,8015820 <__ssvfiscanf_r+0x7e0>
 8015604:	8400040c 	andi	r16,r16,16
 8015608:	80008826 	beq	r16,zero,801582c <__ssvfiscanf_r+0x7ec>
 801560c:	b821883a 	mov	r16,r23
 8015610:	002b883a 	mov	r21,zero
 8015614:	00000106 	br	801561c <__ssvfiscanf_r+0x5dc>
 8015618:	20800003 	ldbu	r2,0(r4)
 801561c:	10803fcc 	andi	r2,r2,255
 8015620:	d8c00104 	addi	r3,sp,4
 8015624:	1885883a 	add	r2,r3,r2
 8015628:	10800007 	ldb	r2,0(r2)
 801562c:	10010726 	beq	r2,zero,8015a4c <__ssvfiscanf_r+0xa0c>
 8015630:	98800117 	ldw	r2,4(r19)
 8015634:	21000044 	addi	r4,r4,1
 8015638:	ad400044 	addi	r21,r21,1
 801563c:	10bfffc4 	addi	r2,r2,-1
 8015640:	98800115 	stw	r2,4(r19)
 8015644:	99000015 	stw	r4,0(r19)
 8015648:	adc0e226 	beq	r21,r23,80159d4 <__ssvfiscanf_r+0x994>
 801564c:	00bff216 	blt	zero,r2,8015618 <__alt_data_end+0xf8015618>
 8015650:	980b883a 	mov	r5,r19
 8015654:	8809883a 	mov	r4,r17
 8015658:	8014edc0 	call	8014edc <__ssrefill_r>
 801565c:	1000dc1e 	bne	r2,zero,80159d0 <__ssvfiscanf_r+0x990>
 8015660:	99000017 	ldw	r4,0(r19)
 8015664:	003fec06 	br	8015618 <__alt_data_end+0xf8015618>
 8015668:	98800117 	ldw	r2,4(r19)
 801566c:	84000054 	ori	r16,r16,1
 8015670:	00810f0e 	bge	zero,r2,8015ab0 <__ssvfiscanf_r+0xa70>
 8015674:	00c20074 	movhi	r3,2049
 8015678:	18cbba04 	addi	r3,r3,12008
 801567c:	02c00284 	movi	r11,10
 8015680:	d8c05215 	stw	r3,328(sp)
 8015684:	dac05015 	stw	r11,320(sp)
 8015688:	058000c4 	movi	r22,3
 801568c:	003f5d06 	br	8015404 <__alt_data_end+0xf8015404>
 8015690:	bdc002a4 	muli	r23,r23,10
 8015694:	90800043 	ldbu	r2,1(r18)
 8015698:	a825883a 	mov	r18,r21
 801569c:	b8ef883a 	add	r23,r23,r3
 80156a0:	bdfff404 	addi	r23,r23,-48
 80156a4:	10c03fcc 	andi	r3,r2,255
 80156a8:	003eb106 	br	8015170 <__alt_data_end+0xf8015170>
 80156ac:	98800117 	ldw	r2,4(r19)
 80156b0:	84000054 	ori	r16,r16,1
 80156b4:	00bf7816 	blt	zero,r2,8015498 <__alt_data_end+0xf8015498>
 80156b8:	980b883a 	mov	r5,r19
 80156bc:	8809883a 	mov	r4,r17
 80156c0:	8014edc0 	call	8014edc <__ssrefill_r>
 80156c4:	1000bb1e 	bne	r2,zero,80159b4 <__ssvfiscanf_r+0x974>
 80156c8:	a1c00017 	ldw	r7,0(r20)
 80156cc:	003f7206 	br	8015498 <__alt_data_end+0xf8015498>
 80156d0:	90800043 	ldbu	r2,1(r18)
 80156d4:	84000094 	ori	r16,r16,2
 80156d8:	a825883a 	mov	r18,r21
 80156dc:	10c03fcc 	andi	r3,r2,255
 80156e0:	003ea306 	br	8015170 <__alt_data_end+0xf8015170>
 80156e4:	98800117 	ldw	r2,4(r19)
 80156e8:	84008014 	ori	r16,r16,512
 80156ec:	00bf6116 	blt	zero,r2,8015474 <__alt_data_end+0xf8015474>
 80156f0:	980b883a 	mov	r5,r19
 80156f4:	8809883a 	mov	r4,r17
 80156f8:	8014edc0 	call	8014edc <__ssrefill_r>
 80156fc:	1000ad1e 	bne	r2,zero,80159b4 <__ssvfiscanf_r+0x974>
 8015700:	a1c00017 	ldw	r7,0(r20)
 8015704:	003f5b06 	br	8015474 <__alt_data_end+0xf8015474>
 8015708:	90800043 	ldbu	r2,1(r18)
 801570c:	84000414 	ori	r16,r16,16
 8015710:	a825883a 	mov	r18,r21
 8015714:	10c03fcc 	andi	r3,r2,255
 8015718:	003e9506 	br	8015170 <__alt_data_end+0xf8015170>
 801571c:	98800117 	ldw	r2,4(r19)
 8015720:	0081190e 	bge	zero,r2,8015b88 <__ssvfiscanf_r+0xb48>
 8015724:	00820074 	movhi	r2,2049
 8015728:	108bba04 	addi	r2,r2,12008
 801572c:	d8805215 	stw	r2,328(sp)
 8015730:	d8005015 	stw	zero,320(sp)
 8015734:	058000c4 	movi	r22,3
 8015738:	003f3206 	br	8015404 <__alt_data_end+0xf8015404>
 801573c:	d8c04b04 	addi	r3,sp,300
 8015740:	8400040c 	andi	r16,r16,16
 8015744:	01800204 	movi	r6,8
 8015748:	000b883a 	mov	r5,zero
 801574c:	1809883a 	mov	r4,r3
 8015750:	dc005415 	stw	r16,336(sp)
 8015754:	d8c05315 	stw	r3,332(sp)
 8015758:	80047e00 	call	80047e0 <memset>
 801575c:	dc005417 	ldw	r16,336(sp)
 8015760:	8000a026 	beq	r16,zero,80159e4 <__ssvfiscanf_r+0x9a4>
 8015764:	002d883a 	mov	r22,zero
 8015768:	0021883a 	mov	r16,zero
 801576c:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 8015770:	14009026 	beq	r2,r16,80159b4 <__ssvfiscanf_r+0x974>
 8015774:	98800017 	ldw	r2,0(r19)
 8015778:	98c00117 	ldw	r3,4(r19)
 801577c:	dac05317 	ldw	r11,332(sp)
 8015780:	12000003 	ldbu	r8,0(r2)
 8015784:	18ffffc4 	addi	r3,r3,-1
 8015788:	10800044 	addi	r2,r2,1
 801578c:	d9004104 	addi	r4,sp,260
 8015790:	98c00115 	stw	r3,4(r19)
 8015794:	98800015 	stw	r2,0(r19)
 8015798:	84800044 	addi	r18,r16,1
 801579c:	dac00015 	stw	r11,0(sp)
 80157a0:	2421883a 	add	r16,r4,r16
 80157a4:	200d883a 	mov	r6,r4
 80157a8:	900f883a 	mov	r7,r18
 80157ac:	b00b883a 	mov	r5,r22
 80157b0:	8809883a 	mov	r4,r17
 80157b4:	82000005 	stb	r8,0(r16)
 80157b8:	800f8cc0 	call	800f8cc <_mbrtowc_r>
 80157bc:	00ffffc4 	movi	r3,-1
 80157c0:	10c07c26 	beq	r2,r3,80159b4 <__ssvfiscanf_r+0x974>
 80157c4:	1000911e 	bne	r2,zero,8015a0c <__ssvfiscanf_r+0x9cc>
 80157c8:	dac05417 	ldw	r11,336(sp)
 80157cc:	5800951e 	bne	r11,zero,8015a24 <__ssvfiscanf_r+0x9e4>
 80157d0:	b0000015 	stw	zero,0(r22)
 80157d4:	e4b9883a 	add	fp,fp,r18
 80157d8:	b8ef883a 	add	r23,r23,r3
 80157dc:	b5800104 	addi	r22,r22,4
 80157e0:	98800117 	ldw	r2,4(r19)
 80157e4:	0021883a 	mov	r16,zero
 80157e8:	00807c16 	blt	zero,r2,80159dc <__ssvfiscanf_r+0x99c>
 80157ec:	980b883a 	mov	r5,r19
 80157f0:	8809883a 	mov	r4,r17
 80157f4:	8014edc0 	call	8014edc <__ssrefill_r>
 80157f8:	10007826 	beq	r2,zero,80159dc <__ssvfiscanf_r+0x99c>
 80157fc:	80006d1e 	bne	r16,zero,80159b4 <__ssvfiscanf_r+0x974>
 8015800:	d8c05417 	ldw	r3,336(sp)
 8015804:	1800031e 	bne	r3,zero,8015814 <__ssvfiscanf_r+0x7d4>
 8015808:	dac05117 	ldw	r11,324(sp)
 801580c:	5ac00044 	addi	r11,r11,1
 8015810:	dac05115 	stw	r11,324(sp)
 8015814:	a825883a 	mov	r18,r21
 8015818:	900d883a 	mov	r6,r18
 801581c:	003e4706 	br	801513c <__alt_data_end+0xf801513c>
 8015820:	8400040c 	andi	r16,r16,16
 8015824:	05ffffc4 	movi	r23,-1
 8015828:	803f781e 	bne	r16,zero,801560c <__alt_data_end+0xf801560c>
 801582c:	dac04f17 	ldw	r11,316(sp)
 8015830:	babfffc4 	addi	r10,r23,-1
 8015834:	5d400017 	ldw	r21,0(r11)
 8015838:	5c000104 	addi	r16,r11,4
 801583c:	a807883a 	mov	r3,r21
 8015840:	aaaf883a 	add	r23,r21,r10
 8015844:	00000306 	br	8015854 <__ssvfiscanf_r+0x814>
 8015848:	99000017 	ldw	r4,0(r19)
 801584c:	b007883a 	mov	r3,r22
 8015850:	20800003 	ldbu	r2,0(r4)
 8015854:	10803fcc 	andi	r2,r2,255
 8015858:	d9400104 	addi	r5,sp,4
 801585c:	2885883a 	add	r2,r5,r2
 8015860:	10800007 	ldb	r2,0(r2)
 8015864:	10007726 	beq	r2,zero,8015a44 <__ssvfiscanf_r+0xa04>
 8015868:	98800117 	ldw	r2,4(r19)
 801586c:	21400044 	addi	r5,r4,1
 8015870:	99400015 	stw	r5,0(r19)
 8015874:	10bfffc4 	addi	r2,r2,-1
 8015878:	98800115 	stw	r2,4(r19)
 801587c:	20800003 	ldbu	r2,0(r4)
 8015880:	1d800044 	addi	r22,r3,1
 8015884:	18800005 	stb	r2,0(r3)
 8015888:	1dc00726 	beq	r3,r23,80158a8 <__ssvfiscanf_r+0x868>
 801588c:	98800117 	ldw	r2,4(r19)
 8015890:	00bfed16 	blt	zero,r2,8015848 <__alt_data_end+0xf8015848>
 8015894:	980b883a 	mov	r5,r19
 8015898:	8809883a 	mov	r4,r17
 801589c:	8014edc0 	call	8014edc <__ssrefill_r>
 80158a0:	103fe926 	beq	r2,zero,8015848 <__alt_data_end+0xf8015848>
 80158a4:	ad804326 	beq	r21,r22,80159b4 <__ssvfiscanf_r+0x974>
 80158a8:	b56bc83a 	sub	r21,r22,r21
 80158ac:	a83e2726 	beq	r21,zero,801514c <__alt_data_end+0xf801514c>
 80158b0:	dac05117 	ldw	r11,324(sp)
 80158b4:	b0000005 	stb	zero,0(r22)
 80158b8:	dc004f15 	stw	r16,316(sp)
 80158bc:	5ac00044 	addi	r11,r11,1
 80158c0:	dac05115 	stw	r11,324(sp)
 80158c4:	e579883a 	add	fp,fp,r21
 80158c8:	900d883a 	mov	r6,r18
 80158cc:	003e1b06 	br	801513c <__alt_data_end+0xf801513c>
 80158d0:	d8c04b04 	addi	r3,sp,300
 80158d4:	8400040c 	andi	r16,r16,16
 80158d8:	01800204 	movi	r6,8
 80158dc:	000b883a 	mov	r5,zero
 80158e0:	1809883a 	mov	r4,r3
 80158e4:	d8c05315 	stw	r3,332(sp)
 80158e8:	80047e00 	call	80047e0 <memset>
 80158ec:	8001e91e 	bne	r16,zero,8016094 <__ssvfiscanf_r+0x1054>
 80158f0:	dac04f17 	ldw	r11,316(sp)
 80158f4:	5d800017 	ldw	r22,0(r11)
 80158f8:	5ac00104 	addi	r11,r11,4
 80158fc:	dac04f15 	stw	r11,316(sp)
 8015900:	000d883a 	mov	r6,zero
 8015904:	3025883a 	mov	r18,r6
 8015908:	98800017 	ldw	r2,0(r19)
 801590c:	a0c00017 	ldw	r3,0(r20)
 8015910:	10800003 	ldbu	r2,0(r2)
 8015914:	1885883a 	add	r2,r3,r2
 8015918:	10800043 	ldbu	r2,1(r2)
 801591c:	1080020c 	andi	r2,r2,8
 8015920:	1001cc1e 	bne	r2,zero,8016054 <__ssvfiscanf_r+0x1014>
 8015924:	b801cb26 	beq	r23,zero,8016054 <__ssvfiscanf_r+0x1014>
 8015928:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 801592c:	90802126 	beq	r18,r2,80159b4 <__ssvfiscanf_r+0x974>
 8015930:	98800017 	ldw	r2,0(r19)
 8015934:	99000117 	ldw	r4,4(r19)
 8015938:	dac05317 	ldw	r11,332(sp)
 801593c:	12000003 	ldbu	r8,0(r2)
 8015940:	213fffc4 	addi	r4,r4,-1
 8015944:	10800044 	addi	r2,r2,1
 8015948:	99000115 	stw	r4,4(r19)
 801594c:	d9404104 	addi	r5,sp,260
 8015950:	98800015 	stw	r2,0(r19)
 8015954:	90c00044 	addi	r3,r18,1
 8015958:	dac00015 	stw	r11,0(sp)
 801595c:	2ca5883a 	add	r18,r5,r18
 8015960:	180f883a 	mov	r7,r3
 8015964:	280d883a 	mov	r6,r5
 8015968:	8809883a 	mov	r4,r17
 801596c:	92000005 	stb	r8,0(r18)
 8015970:	b00b883a 	mov	r5,r22
 8015974:	d8c05a15 	stw	r3,360(sp)
 8015978:	800f8cc0 	call	800f8cc <_mbrtowc_r>
 801597c:	013fffc4 	movi	r4,-1
 8015980:	d8c05a17 	ldw	r3,360(sp)
 8015984:	11000b26 	beq	r2,r4,80159b4 <__ssvfiscanf_r+0x974>
 8015988:	1001a026 	beq	r2,zero,801600c <__ssvfiscanf_r+0xfcc>
 801598c:	017fff84 	movi	r5,-2
 8015990:	1825883a 	mov	r18,r3
 8015994:	1141e31e 	bne	r2,r5,8016124 <__ssvfiscanf_r+0x10e4>
 8015998:	98800117 	ldw	r2,4(r19)
 801599c:	00bfda16 	blt	zero,r2,8015908 <__alt_data_end+0xf8015908>
 80159a0:	980b883a 	mov	r5,r19
 80159a4:	8809883a 	mov	r4,r17
 80159a8:	8014edc0 	call	8014edc <__ssrefill_r>
 80159ac:	103fd626 	beq	r2,zero,8015908 <__alt_data_end+0xf8015908>
 80159b0:	9001a826 	beq	r18,zero,8016054 <__ssvfiscanf_r+0x1014>
 80159b4:	dac05117 	ldw	r11,324(sp)
 80159b8:	583e7d26 	beq	r11,zero,80153b0 <__alt_data_end+0xf80153b0>
 80159bc:	9880030b 	ldhu	r2,12(r19)
 80159c0:	1080100c 	andi	r2,r2,64
 80159c4:	103e7a1e 	bne	r2,zero,80153b0 <__alt_data_end+0xf80153b0>
 80159c8:	5805883a 	mov	r2,r11
 80159cc:	003e7906 	br	80153b4 <__alt_data_end+0xf80153b4>
 80159d0:	a821883a 	mov	r16,r21
 80159d4:	802b883a 	mov	r21,r16
 80159d8:	003fba06 	br	80158c4 <__alt_data_end+0xf80158c4>
 80159dc:	b83f631e 	bne	r23,zero,801576c <__alt_data_end+0xf801576c>
 80159e0:	003f8706 	br	8015800 <__alt_data_end+0xf8015800>
 80159e4:	dac04f17 	ldw	r11,316(sp)
 80159e8:	5d800017 	ldw	r22,0(r11)
 80159ec:	5ac00104 	addi	r11,r11,4
 80159f0:	dac04f15 	stw	r11,316(sp)
 80159f4:	003f5c06 	br	8015768 <__alt_data_end+0xf8015768>
 80159f8:	980b883a 	mov	r5,r19
 80159fc:	8809883a 	mov	r4,r17
 8015a00:	8014edc0 	call	8014edc <__ssrefill_r>
 8015a04:	103eda26 	beq	r2,zero,8015570 <__alt_data_end+0xf8015570>
 8015a08:	003fea06 	br	80159b4 <__alt_data_end+0xf80159b4>
 8015a0c:	00ffff84 	movi	r3,-2
 8015a10:	10c0071e 	bne	r2,r3,8015a30 <__ssvfiscanf_r+0x9f0>
 8015a14:	98800117 	ldw	r2,4(r19)
 8015a18:	9021883a 	mov	r16,r18
 8015a1c:	00bf5316 	blt	zero,r2,801576c <__alt_data_end+0xf801576c>
 8015a20:	003f7206 	br	80157ec <__alt_data_end+0xf80157ec>
 8015a24:	e4b9883a 	add	fp,fp,r18
 8015a28:	bdffffc4 	addi	r23,r23,-1
 8015a2c:	003f6c06 	br	80157e0 <__alt_data_end+0xf80157e0>
 8015a30:	dac05417 	ldw	r11,336(sp)
 8015a34:	e4b9883a 	add	fp,fp,r18
 8015a38:	bdffffc4 	addi	r23,r23,-1
 8015a3c:	583f6726 	beq	r11,zero,80157dc <__alt_data_end+0xf80157dc>
 8015a40:	003f6706 	br	80157e0 <__alt_data_end+0xf80157e0>
 8015a44:	182d883a 	mov	r22,r3
 8015a48:	003f9706 	br	80158a8 <__alt_data_end+0xf80158a8>
 8015a4c:	a83f9d1e 	bne	r21,zero,80158c4 <__alt_data_end+0xf80158c4>
 8015a50:	003dbe06 	br	801514c <__alt_data_end+0xf801514c>
 8015a54:	803ede1e 	bne	r16,zero,80155d0 <__alt_data_end+0xf80155d0>
 8015a58:	003fd606 	br	80159b4 <__alt_data_end+0xf80159b4>
 8015a5c:	dac04f17 	ldw	r11,316(sp)
 8015a60:	dcc00015 	stw	r19,0(sp)
 8015a64:	b80f883a 	mov	r7,r23
 8015a68:	59400017 	ldw	r5,0(r11)
 8015a6c:	01800044 	movi	r6,1
 8015a70:	8809883a 	mov	r4,r17
 8015a74:	8014f4c0 	call	8014f4c <_sfread_r>
 8015a78:	dac04f17 	ldw	r11,316(sp)
 8015a7c:	58c00104 	addi	r3,r11,4
 8015a80:	103fcc26 	beq	r2,zero,80159b4 <__alt_data_end+0xf80159b4>
 8015a84:	dac05117 	ldw	r11,324(sp)
 8015a88:	a825883a 	mov	r18,r21
 8015a8c:	e0b9883a 	add	fp,fp,r2
 8015a90:	5ac00044 	addi	r11,r11,1
 8015a94:	dac05115 	stw	r11,324(sp)
 8015a98:	d8c04f15 	stw	r3,316(sp)
 8015a9c:	900d883a 	mov	r6,r18
 8015aa0:	003da606 	br	801513c <__alt_data_end+0xf801513c>
 8015aa4:	98800117 	ldw	r2,4(r19)
 8015aa8:	80e0b03a 	or	r16,r16,r3
 8015aac:	00be9916 	blt	zero,r2,8015514 <__alt_data_end+0xf8015514>
 8015ab0:	980b883a 	mov	r5,r19
 8015ab4:	8809883a 	mov	r4,r17
 8015ab8:	8014edc0 	call	8014edc <__ssrefill_r>
 8015abc:	103fbd1e 	bne	r2,zero,80159b4 <__alt_data_end+0xf80159b4>
 8015ac0:	a1c00017 	ldw	r7,0(r20)
 8015ac4:	003e9306 	br	8015514 <__alt_data_end+0xf8015514>
 8015ac8:	980b883a 	mov	r5,r19
 8015acc:	8809883a 	mov	r4,r17
 8015ad0:	8014edc0 	call	8014edc <__ssrefill_r>
 8015ad4:	103e2a26 	beq	r2,zero,8015380 <__alt_data_end+0xf8015380>
 8015ad8:	003fb606 	br	80159b4 <__alt_data_end+0xf80159b4>
 8015adc:	90800083 	ldbu	r2,2(r18)
 8015ae0:	84000094 	ori	r16,r16,2
 8015ae4:	94800084 	addi	r18,r18,2
 8015ae8:	10c03fcc 	andi	r3,r2,255
 8015aec:	003da006 	br	8015170 <__alt_data_end+0xf8015170>
 8015af0:	8080004c 	andi	r2,r16,1
 8015af4:	10000b1e 	bne	r2,zero,8015b24 <__ssvfiscanf_r+0xae4>
 8015af8:	8400008c 	andi	r16,r16,2
 8015afc:	80000926 	beq	r16,zero,8015b24 <__ssvfiscanf_r+0xae4>
 8015b00:	dac04f17 	ldw	r11,316(sp)
 8015b04:	e007d7fa 	srai	r3,fp,31
 8015b08:	a825883a 	mov	r18,r21
 8015b0c:	58800017 	ldw	r2,0(r11)
 8015b10:	5ac00104 	addi	r11,r11,4
 8015b14:	dac04f15 	stw	r11,316(sp)
 8015b18:	17000015 	stw	fp,0(r2)
 8015b1c:	10c00115 	stw	r3,4(r2)
 8015b20:	003d8506 	br	8015138 <__alt_data_end+0xf8015138>
 8015b24:	dac04f17 	ldw	r11,316(sp)
 8015b28:	a825883a 	mov	r18,r21
 8015b2c:	58800017 	ldw	r2,0(r11)
 8015b30:	5ac00104 	addi	r11,r11,4
 8015b34:	dac04f15 	stw	r11,316(sp)
 8015b38:	17000015 	stw	fp,0(r2)
 8015b3c:	003d7e06 	br	8015138 <__alt_data_end+0xf8015138>
 8015b40:	980b883a 	mov	r5,r19
 8015b44:	8809883a 	mov	r4,r17
 8015b48:	8014edc0 	call	8014edc <__ssrefill_r>
 8015b4c:	103f991e 	bne	r2,zero,80159b4 <__alt_data_end+0xf80159b4>
 8015b50:	a1c00017 	ldw	r7,0(r20)
 8015b54:	05800084 	movi	r22,2
 8015b58:	003e2a06 	br	8015404 <__alt_data_end+0xf8015404>
 8015b5c:	980b883a 	mov	r5,r19
 8015b60:	8809883a 	mov	r4,r17
 8015b64:	8014edc0 	call	8014edc <__ssrefill_r>
 8015b68:	103ea326 	beq	r2,zero,80155f8 <__alt_data_end+0xf80155f8>
 8015b6c:	003f9106 	br	80159b4 <__alt_data_end+0xf80159b4>
 8015b70:	980b883a 	mov	r5,r19
 8015b74:	8809883a 	mov	r4,r17
 8015b78:	8014edc0 	call	8014edc <__ssrefill_r>
 8015b7c:	103f8d1e 	bne	r2,zero,80159b4 <__alt_data_end+0xf80159b4>
 8015b80:	a1c00017 	ldw	r7,0(r20)
 8015b84:	003e1906 	br	80153ec <__alt_data_end+0xf80153ec>
 8015b88:	980b883a 	mov	r5,r19
 8015b8c:	8809883a 	mov	r4,r17
 8015b90:	8014edc0 	call	8014edc <__ssrefill_r>
 8015b94:	103f871e 	bne	r2,zero,80159b4 <__alt_data_end+0xf80159b4>
 8015b98:	a1c00017 	ldw	r7,0(r20)
 8015b9c:	003ee106 	br	8015724 <__alt_data_end+0xf8015724>
 8015ba0:	014000c4 	movi	r5,3
 8015ba4:	b140ac1e 	bne	r22,r5,8015e58 <__ssvfiscanf_r+0xe18>
 8015ba8:	b8ffffc4 	addi	r3,r23,-1
 8015bac:	01400984 	movi	r5,38
 8015bb0:	28c0d62e 	bgeu	r5,r3,8015f0c <__ssvfiscanf_r+0xecc>
 8015bb4:	b9bff644 	addi	r6,r23,-39
 8015bb8:	05c009c4 	movi	r23,39
 8015bbc:	85836014 	ori	r22,r16,3456
 8015bc0:	0021883a 	mov	r16,zero
 8015bc4:	a815883a 	mov	r10,r21
 8015bc8:	802b883a 	mov	r21,r16
 8015bcc:	dc005017 	ldw	r16,320(sp)
 8015bd0:	dc804104 	addi	r18,sp,260
 8015bd4:	02401344 	movi	r9,77
 8015bd8:	01c08004 	movi	r7,512
 8015bdc:	00ff7fc4 	movi	r3,-513
 8015be0:	023fdfc4 	movi	r8,-129
 8015be4:	217ff544 	addi	r5,r4,-43
 8015be8:	29403fcc 	andi	r5,r5,255
 8015bec:	49408836 	bltu	r9,r5,8015e10 <__ssvfiscanf_r+0xdd0>
 8015bf0:	280a90ba 	slli	r5,r5,2
 8015bf4:	02c20074 	movhi	r11,2049
 8015bf8:	5ad70204 	addi	r11,r11,23560
 8015bfc:	2acb883a 	add	r5,r5,r11
 8015c00:	29400017 	ldw	r5,0(r5)
 8015c04:	2800683a 	jmp	r5
 8015c08:	08015d9c 	xori	zero,at,1398
 8015c0c:	08015e10 	cmplti	zero,at,1400
 8015c10:	08015d9c 	xori	zero,at,1398
 8015c14:	08015e10 	cmplti	zero,at,1400
 8015c18:	08015e10 	cmplti	zero,at,1400
 8015c1c:	08015dcc 	andi	zero,at,1399
 8015c20:	08015dac 	andhi	zero,at,1398
 8015c24:	08015dac 	andhi	zero,at,1398
 8015c28:	08015dac 	andhi	zero,at,1398
 8015c2c:	08015dac 	andhi	zero,at,1398
 8015c30:	08015dac 	andhi	zero,at,1398
 8015c34:	08015dac 	andhi	zero,at,1398
 8015c38:	08015dac 	andhi	zero,at,1398
 8015c3c:	08015df4 	orhi	zero,at,1399
 8015c40:	08015df4 	orhi	zero,at,1399
 8015c44:	08015e10 	cmplti	zero,at,1400
 8015c48:	08015e10 	cmplti	zero,at,1400
 8015c4c:	08015e10 	cmplti	zero,at,1400
 8015c50:	08015e10 	cmplti	zero,at,1400
 8015c54:	08015e10 	cmplti	zero,at,1400
 8015c58:	08015e10 	cmplti	zero,at,1400
 8015c5c:	08015e10 	cmplti	zero,at,1400
 8015c60:	08015d88 	cmpgei	zero,at,1398
 8015c64:	08015d88 	cmpgei	zero,at,1398
 8015c68:	08015d88 	cmpgei	zero,at,1398
 8015c6c:	08015d88 	cmpgei	zero,at,1398
 8015c70:	08015d88 	cmpgei	zero,at,1398
 8015c74:	08015d88 	cmpgei	zero,at,1398
 8015c78:	08015e10 	cmplti	zero,at,1400
 8015c7c:	08015e10 	cmplti	zero,at,1400
 8015c80:	08015e10 	cmplti	zero,at,1400
 8015c84:	08015e10 	cmplti	zero,at,1400
 8015c88:	08015e10 	cmplti	zero,at,1400
 8015c8c:	08015e10 	cmplti	zero,at,1400
 8015c90:	08015e10 	cmplti	zero,at,1400
 8015c94:	08015e10 	cmplti	zero,at,1400
 8015c98:	08015e10 	cmplti	zero,at,1400
 8015c9c:	08015e10 	cmplti	zero,at,1400
 8015ca0:	08015e10 	cmplti	zero,at,1400
 8015ca4:	08015e10 	cmplti	zero,at,1400
 8015ca8:	08015e10 	cmplti	zero,at,1400
 8015cac:	08015e10 	cmplti	zero,at,1400
 8015cb0:	08015e10 	cmplti	zero,at,1400
 8015cb4:	08015e10 	cmplti	zero,at,1400
 8015cb8:	08015e10 	cmplti	zero,at,1400
 8015cbc:	08015d40 	call	8015d4 <__alt_mem_sdram-0x77fea2c>
 8015cc0:	08015e10 	cmplti	zero,at,1400
 8015cc4:	08015e10 	cmplti	zero,at,1400
 8015cc8:	08015e10 	cmplti	zero,at,1400
 8015ccc:	08015e10 	cmplti	zero,at,1400
 8015cd0:	08015e10 	cmplti	zero,at,1400
 8015cd4:	08015e10 	cmplti	zero,at,1400
 8015cd8:	08015e10 	cmplti	zero,at,1400
 8015cdc:	08015e10 	cmplti	zero,at,1400
 8015ce0:	08015d88 	cmpgei	zero,at,1398
 8015ce4:	08015d88 	cmpgei	zero,at,1398
 8015ce8:	08015d88 	cmpgei	zero,at,1398
 8015cec:	08015d88 	cmpgei	zero,at,1398
 8015cf0:	08015d88 	cmpgei	zero,at,1398
 8015cf4:	08015d88 	cmpgei	zero,at,1398
 8015cf8:	08015e10 	cmplti	zero,at,1400
 8015cfc:	08015e10 	cmplti	zero,at,1400
 8015d00:	08015e10 	cmplti	zero,at,1400
 8015d04:	08015e10 	cmplti	zero,at,1400
 8015d08:	08015e10 	cmplti	zero,at,1400
 8015d0c:	08015e10 	cmplti	zero,at,1400
 8015d10:	08015e10 	cmplti	zero,at,1400
 8015d14:	08015e10 	cmplti	zero,at,1400
 8015d18:	08015e10 	cmplti	zero,at,1400
 8015d1c:	08015e10 	cmplti	zero,at,1400
 8015d20:	08015e10 	cmplti	zero,at,1400
 8015d24:	08015e10 	cmplti	zero,at,1400
 8015d28:	08015e10 	cmplti	zero,at,1400
 8015d2c:	08015e10 	cmplti	zero,at,1400
 8015d30:	08015e10 	cmplti	zero,at,1400
 8015d34:	08015e10 	cmplti	zero,at,1400
 8015d38:	08015e10 	cmplti	zero,at,1400
 8015d3c:	08015d40 	call	8015d4 <__alt_mem_sdram-0x77fea2c>
 8015d40:	b141800c 	andi	r5,r22,1536
 8015d44:	29c0321e 	bne	r5,r7,8015e10 <__ssvfiscanf_r+0xdd0>
 8015d48:	b0ec703a 	and	r22,r22,r3
 8015d4c:	b5814014 	ori	r22,r22,1280
 8015d50:	04000404 	movi	r16,16
 8015d54:	91000005 	stb	r4,0(r18)
 8015d58:	94800044 	addi	r18,r18,1
 8015d5c:	99000117 	ldw	r4,4(r19)
 8015d60:	213fffc4 	addi	r4,r4,-1
 8015d64:	99000115 	stw	r4,4(r19)
 8015d68:	0100570e 	bge	zero,r4,8015ec8 <__ssvfiscanf_r+0xe88>
 8015d6c:	10800044 	addi	r2,r2,1
 8015d70:	98800015 	stw	r2,0(r19)
 8015d74:	bdffffc4 	addi	r23,r23,-1
 8015d78:	b8002526 	beq	r23,zero,8015e10 <__ssvfiscanf_r+0xdd0>
 8015d7c:	98800017 	ldw	r2,0(r19)
 8015d80:	11000003 	ldbu	r4,0(r2)
 8015d84:	003f9706 	br	8015be4 <__alt_data_end+0xf8015be4>
 8015d88:	01400284 	movi	r5,10
 8015d8c:	2c00200e 	bge	r5,r16,8015e10 <__ssvfiscanf_r+0xdd0>
 8015d90:	017d1fc4 	movi	r5,-2945
 8015d94:	b16c703a 	and	r22,r22,r5
 8015d98:	003fee06 	br	8015d54 <__alt_data_end+0xf8015d54>
 8015d9c:	b140200c 	andi	r5,r22,128
 8015da0:	28001b26 	beq	r5,zero,8015e10 <__ssvfiscanf_r+0xdd0>
 8015da4:	b22c703a 	and	r22,r22,r8
 8015da8:	003fea06 	br	8015d54 <__alt_data_end+0xf8015d54>
 8015dac:	02c200b4 	movhi	r11,2050
 8015db0:	8421883a 	add	r16,r16,r16
 8015db4:	5ac07f04 	addi	r11,r11,508
 8015db8:	5c0b883a 	add	r5,r11,r16
 8015dbc:	2c00000f 	ldh	r16,0(r5)
 8015dc0:	017d1fc4 	movi	r5,-2945
 8015dc4:	b16c703a 	and	r22,r22,r5
 8015dc8:	003fe206 	br	8015d54 <__alt_data_end+0xf8015d54>
 8015dcc:	b142000c 	andi	r5,r22,2048
 8015dd0:	283fe026 	beq	r5,zero,8015d54 <__alt_data_end+0xf8015d54>
 8015dd4:	8000021e 	bne	r16,zero,8015de0 <__ssvfiscanf_r+0xda0>
 8015dd8:	b5808014 	ori	r22,r22,512
 8015ddc:	04000204 	movi	r16,8
 8015de0:	b141000c 	andi	r5,r22,1024
 8015de4:	28009e26 	beq	r5,zero,8016060 <__ssvfiscanf_r+0x1020>
 8015de8:	017e9fc4 	movi	r5,-1409
 8015dec:	b16c703a 	and	r22,r22,r5
 8015df0:	003fd806 	br	8015d54 <__alt_data_end+0xf8015d54>
 8015df4:	02c200b4 	movhi	r11,2050
 8015df8:	8421883a 	add	r16,r16,r16
 8015dfc:	5ac07f04 	addi	r11,r11,508
 8015e00:	5c0b883a 	add	r5,r11,r16
 8015e04:	2c00000f 	ldh	r16,0(r5)
 8015e08:	01400204 	movi	r5,8
 8015e0c:	2c3fe016 	blt	r5,r16,8015d90 <__alt_data_end+0xf8015d90>
 8015e10:	dc005015 	stw	r16,320(sp)
 8015e14:	b080400c 	andi	r2,r22,256
 8015e18:	a821883a 	mov	r16,r21
 8015e1c:	502b883a 	mov	r21,r10
 8015e20:	10000426 	beq	r2,zero,8015e34 <__ssvfiscanf_r+0xdf4>
 8015e24:	dac04e17 	ldw	r11,312(sp)
 8015e28:	5c809c36 	bltu	r11,r18,801609c <__ssvfiscanf_r+0x105c>
 8015e2c:	dac04e17 	ldw	r11,312(sp)
 8015e30:	92fcc626 	beq	r18,r11,801514c <__alt_data_end+0xf801514c>
 8015e34:	b080040c 	andi	r2,r22,16
 8015e38:	10006026 	beq	r2,zero,8015fbc <__ssvfiscanf_r+0xf7c>
 8015e3c:	dac04e17 	ldw	r11,312(sp)
 8015e40:	92e5c83a 	sub	r18,r18,r11
 8015e44:	9425883a 	add	r18,r18,r16
 8015e48:	e4b9883a 	add	fp,fp,r18
 8015e4c:	a825883a 	mov	r18,r21
 8015e50:	900d883a 	mov	r6,r18
 8015e54:	003cb906 	br	801513c <__alt_data_end+0xf801513c>
 8015e58:	b800011e 	bne	r23,zero,8015e60 <__ssvfiscanf_r+0xe20>
 8015e5c:	05ffffc4 	movi	r23,-1
 8015e60:	8100004c 	andi	r4,r16,1
 8015e64:	203e9a1e 	bne	r4,zero,80158d0 <__alt_data_end+0xf80158d0>
 8015e68:	8400040c 	andi	r16,r16,16
 8015e6c:	80002926 	beq	r16,zero,8015f14 <__ssvfiscanf_r+0xed4>
 8015e70:	0021883a 	mov	r16,zero
 8015e74:	00000306 	br	8015e84 <__ssvfiscanf_r+0xe44>
 8015e78:	10c00003 	ldbu	r3,0(r2)
 8015e7c:	38c7883a 	add	r3,r7,r3
 8015e80:	18c00043 	ldbu	r3,1(r3)
 8015e84:	18c0020c 	andi	r3,r3,8
 8015e88:	183dd11e 	bne	r3,zero,80155d0 <__alt_data_end+0xf80155d0>
 8015e8c:	98c00117 	ldw	r3,4(r19)
 8015e90:	10800044 	addi	r2,r2,1
 8015e94:	84000044 	addi	r16,r16,1
 8015e98:	18ffffc4 	addi	r3,r3,-1
 8015e9c:	98c00115 	stw	r3,4(r19)
 8015ea0:	98800015 	stw	r2,0(r19)
 8015ea4:	85fdca26 	beq	r16,r23,80155d0 <__alt_data_end+0xf80155d0>
 8015ea8:	00fff316 	blt	zero,r3,8015e78 <__alt_data_end+0xf8015e78>
 8015eac:	980b883a 	mov	r5,r19
 8015eb0:	8809883a 	mov	r4,r17
 8015eb4:	8014edc0 	call	8014edc <__ssrefill_r>
 8015eb8:	103dc51e 	bne	r2,zero,80155d0 <__alt_data_end+0xf80155d0>
 8015ebc:	a1c00017 	ldw	r7,0(r20)
 8015ec0:	98800017 	ldw	r2,0(r19)
 8015ec4:	003fec06 	br	8015e78 <__alt_data_end+0xf8015e78>
 8015ec8:	980b883a 	mov	r5,r19
 8015ecc:	8809883a 	mov	r4,r17
 8015ed0:	d8c05a15 	stw	r3,360(sp)
 8015ed4:	d9805815 	stw	r6,352(sp)
 8015ed8:	d9c05615 	stw	r7,344(sp)
 8015edc:	da005715 	stw	r8,348(sp)
 8015ee0:	da405515 	stw	r9,340(sp)
 8015ee4:	da805915 	stw	r10,356(sp)
 8015ee8:	8014edc0 	call	8014edc <__ssrefill_r>
 8015eec:	d8c05a17 	ldw	r3,360(sp)
 8015ef0:	d9805817 	ldw	r6,352(sp)
 8015ef4:	d9c05617 	ldw	r7,344(sp)
 8015ef8:	da005717 	ldw	r8,348(sp)
 8015efc:	da405517 	ldw	r9,340(sp)
 8015f00:	da805917 	ldw	r10,356(sp)
 8015f04:	103f9b26 	beq	r2,zero,8015d74 <__alt_data_end+0xf8015d74>
 8015f08:	003fc106 	br	8015e10 <__alt_data_end+0xf8015e10>
 8015f0c:	000d883a 	mov	r6,zero
 8015f10:	003f2a06 	br	8015bbc <__alt_data_end+0xf8015bbc>
 8015f14:	dac04f17 	ldw	r11,316(sp)
 8015f18:	babfffc4 	addi	r10,r23,-1
 8015f1c:	5c800017 	ldw	r18,0(r11)
 8015f20:	5c000104 	addi	r16,r11,4
 8015f24:	900b883a 	mov	r5,r18
 8015f28:	92ad883a 	add	r22,r18,r10
 8015f2c:	00000606 	br	8015f48 <__ssvfiscanf_r+0xf08>
 8015f30:	98800017 	ldw	r2,0(r19)
 8015f34:	a1000017 	ldw	r4,0(r20)
 8015f38:	b80b883a 	mov	r5,r23
 8015f3c:	10c00003 	ldbu	r3,0(r2)
 8015f40:	20c7883a 	add	r3,r4,r3
 8015f44:	18c00043 	ldbu	r3,1(r3)
 8015f48:	18c0020c 	andi	r3,r3,8
 8015f4c:	2809883a 	mov	r4,r5
 8015f50:	1800101e 	bne	r3,zero,8015f94 <__ssvfiscanf_r+0xf54>
 8015f54:	98c00117 	ldw	r3,4(r19)
 8015f58:	11800044 	addi	r6,r2,1
 8015f5c:	99800015 	stw	r6,0(r19)
 8015f60:	18ffffc4 	addi	r3,r3,-1
 8015f64:	98c00115 	stw	r3,4(r19)
 8015f68:	10800003 	ldbu	r2,0(r2)
 8015f6c:	25c00044 	addi	r23,r4,1
 8015f70:	28800005 	stb	r2,0(r5)
 8015f74:	25800626 	beq	r4,r22,8015f90 <__ssvfiscanf_r+0xf50>
 8015f78:	98800117 	ldw	r2,4(r19)
 8015f7c:	00bfec16 	blt	zero,r2,8015f30 <__alt_data_end+0xf8015f30>
 8015f80:	980b883a 	mov	r5,r19
 8015f84:	8809883a 	mov	r4,r17
 8015f88:	8014edc0 	call	8014edc <__ssrefill_r>
 8015f8c:	103fe826 	beq	r2,zero,8015f30 <__alt_data_end+0xf8015f30>
 8015f90:	b809883a 	mov	r4,r23
 8015f94:	dac05117 	ldw	r11,324(sp)
 8015f98:	24a5c83a 	sub	r18,r4,r18
 8015f9c:	e4b9883a 	add	fp,fp,r18
 8015fa0:	5ac00044 	addi	r11,r11,1
 8015fa4:	a825883a 	mov	r18,r21
 8015fa8:	20000005 	stb	zero,0(r4)
 8015fac:	dac05115 	stw	r11,324(sp)
 8015fb0:	dc004f15 	stw	r16,316(sp)
 8015fb4:	900d883a 	mov	r6,r18
 8015fb8:	003c6006 	br	801513c <__alt_data_end+0xf801513c>
 8015fbc:	d9c05017 	ldw	r7,320(sp)
 8015fc0:	dac05217 	ldw	r11,328(sp)
 8015fc4:	000d883a 	mov	r6,zero
 8015fc8:	d9404104 	addi	r5,sp,260
 8015fcc:	8809883a 	mov	r4,r17
 8015fd0:	90000005 	stb	zero,0(r18)
 8015fd4:	583ee83a 	callr	r11
 8015fd8:	b0c0080c 	andi	r3,r22,32
 8015fdc:	1800271e 	bne	r3,zero,801607c <__ssvfiscanf_r+0x103c>
 8015fe0:	b0c0010c 	andi	r3,r22,4
 8015fe4:	18003326 	beq	r3,zero,80160b4 <__ssvfiscanf_r+0x1074>
 8015fe8:	dac04f17 	ldw	r11,316(sp)
 8015fec:	58c00017 	ldw	r3,0(r11)
 8015ff0:	5ac00104 	addi	r11,r11,4
 8015ff4:	dac04f15 	stw	r11,316(sp)
 8015ff8:	1880000d 	sth	r2,0(r3)
 8015ffc:	dac05117 	ldw	r11,324(sp)
 8016000:	5ac00044 	addi	r11,r11,1
 8016004:	dac05115 	stw	r11,324(sp)
 8016008:	003f8c06 	br	8015e3c <__alt_data_end+0xf8015e3c>
 801600c:	b0000015 	stw	zero,0(r22)
 8016010:	0009883a 	mov	r4,zero
 8016014:	d8c05a15 	stw	r3,360(sp)
 8016018:	800f5a40 	call	800f5a4 <iswspace>
 801601c:	d8c05a17 	ldw	r3,360(sp)
 8016020:	10003826 	beq	r2,zero,8016104 <__ssvfiscanf_r+0x10c4>
 8016024:	18000b26 	beq	r3,zero,8016054 <__ssvfiscanf_r+0x1014>
 8016028:	1cbfffc4 	addi	r18,r3,-1
 801602c:	d9804104 	addi	r6,sp,260
 8016030:	34af883a 	add	r23,r6,r18
 8016034:	00000106 	br	801603c <__ssvfiscanf_r+0xffc>
 8016038:	94bfffc4 	addi	r18,r18,-1
 801603c:	b9400003 	ldbu	r5,0(r23)
 8016040:	980d883a 	mov	r6,r19
 8016044:	8809883a 	mov	r4,r17
 8016048:	8014dd40 	call	8014dd4 <_sungetc_r>
 801604c:	bdffffc4 	addi	r23,r23,-1
 8016050:	903ff91e 	bne	r18,zero,8016038 <__alt_data_end+0xf8016038>
 8016054:	803def1e 	bne	r16,zero,8015814 <__alt_data_end+0xf8015814>
 8016058:	b0000015 	stw	zero,0(r22)
 801605c:	003dea06 	br	8015808 <__alt_data_end+0xf8015808>
 8016060:	013f1fc4 	movi	r4,-897
 8016064:	b12c703a 	and	r22,r22,r4
 8016068:	30000226 	beq	r6,zero,8016074 <__ssvfiscanf_r+0x1034>
 801606c:	31bfffc4 	addi	r6,r6,-1
 8016070:	bdc00044 	addi	r23,r23,1
 8016074:	ad400044 	addi	r21,r21,1
 8016078:	003f3806 	br	8015d5c <__alt_data_end+0xf8015d5c>
 801607c:	dac04f17 	ldw	r11,316(sp)
 8016080:	58c00017 	ldw	r3,0(r11)
 8016084:	5ac00104 	addi	r11,r11,4
 8016088:	dac04f15 	stw	r11,316(sp)
 801608c:	18800015 	stw	r2,0(r3)
 8016090:	003fda06 	br	8015ffc <__alt_data_end+0xf8015ffc>
 8016094:	dd804d04 	addi	r22,sp,308
 8016098:	003e1906 	br	8015900 <__alt_data_end+0xf8015900>
 801609c:	917fffc7 	ldb	r5,-1(r18)
 80160a0:	980d883a 	mov	r6,r19
 80160a4:	8809883a 	mov	r4,r17
 80160a8:	94bfffc4 	addi	r18,r18,-1
 80160ac:	8014dd40 	call	8014dd4 <_sungetc_r>
 80160b0:	003f5e06 	br	8015e2c <__alt_data_end+0xf8015e2c>
 80160b4:	b0c0004c 	andi	r3,r22,1
 80160b8:	183ff01e 	bne	r3,zero,801607c <__alt_data_end+0xf801607c>
 80160bc:	b580008c 	andi	r22,r22,2
 80160c0:	b03fee26 	beq	r22,zero,801607c <__alt_data_end+0xf801607c>
 80160c4:	dac05217 	ldw	r11,328(sp)
 80160c8:	00820074 	movhi	r2,2049
 80160cc:	108d1004 	addi	r2,r2,13376
 80160d0:	d9c05017 	ldw	r7,320(sp)
 80160d4:	000d883a 	mov	r6,zero
 80160d8:	d9404104 	addi	r5,sp,260
 80160dc:	8809883a 	mov	r4,r17
 80160e0:	58801226 	beq	r11,r2,801612c <__ssvfiscanf_r+0x10ec>
 80160e4:	801313c0 	call	801313c <_strtoll_r>
 80160e8:	dac04f17 	ldw	r11,316(sp)
 80160ec:	59000017 	ldw	r4,0(r11)
 80160f0:	5ac00104 	addi	r11,r11,4
 80160f4:	dac04f15 	stw	r11,316(sp)
 80160f8:	20800015 	stw	r2,0(r4)
 80160fc:	20c00115 	stw	r3,4(r4)
 8016100:	003fbe06 	br	8015ffc <__alt_data_end+0xf8015ffc>
 8016104:	e0f9883a 	add	fp,fp,r3
 8016108:	bdffffc4 	addi	r23,r23,-1
 801610c:	8000031e 	bne	r16,zero,801611c <__ssvfiscanf_r+0x10dc>
 8016110:	b5800104 	addi	r22,r22,4
 8016114:	0025883a 	mov	r18,zero
 8016118:	003e1f06 	br	8015998 <__alt_data_end+0xf8015998>
 801611c:	0025883a 	mov	r18,zero
 8016120:	003e1d06 	br	8015998 <__alt_data_end+0xf8015998>
 8016124:	b1000017 	ldw	r4,0(r22)
 8016128:	003fba06 	br	8016014 <__alt_data_end+0xf8016014>
 801612c:	80136a80 	call	80136a8 <_strtoull_r>
 8016130:	003fed06 	br	80160e8 <__alt_data_end+0xf80160e8>

08016134 <__submore>:
 8016134:	defffa04 	addi	sp,sp,-24
 8016138:	dc000015 	stw	r16,0(sp)
 801613c:	2821883a 	mov	r16,r5
 8016140:	29400c17 	ldw	r5,48(r5)
 8016144:	dfc00515 	stw	ra,20(sp)
 8016148:	dd000415 	stw	r20,16(sp)
 801614c:	dcc00315 	stw	r19,12(sp)
 8016150:	dc800215 	stw	r18,8(sp)
 8016154:	dc400115 	stw	r17,4(sp)
 8016158:	80801004 	addi	r2,r16,64
 801615c:	28801726 	beq	r5,r2,80161bc <__submore+0x88>
 8016160:	84400d17 	ldw	r17,52(r16)
 8016164:	8c67883a 	add	r19,r17,r17
 8016168:	980d883a 	mov	r6,r19
 801616c:	8010ed40 	call	8010ed4 <_realloc_r>
 8016170:	1025883a 	mov	r18,r2
 8016174:	10002226 	beq	r2,zero,8016200 <__submore+0xcc>
 8016178:	1469883a 	add	r20,r2,r17
 801617c:	880d883a 	mov	r6,r17
 8016180:	100b883a 	mov	r5,r2
 8016184:	a009883a 	mov	r4,r20
 8016188:	800fbd40 	call	800fbd4 <memcpy>
 801618c:	0005883a 	mov	r2,zero
 8016190:	85000015 	stw	r20,0(r16)
 8016194:	84800c15 	stw	r18,48(r16)
 8016198:	84c00d15 	stw	r19,52(r16)
 801619c:	dfc00517 	ldw	ra,20(sp)
 80161a0:	dd000417 	ldw	r20,16(sp)
 80161a4:	dcc00317 	ldw	r19,12(sp)
 80161a8:	dc800217 	ldw	r18,8(sp)
 80161ac:	dc400117 	ldw	r17,4(sp)
 80161b0:	dc000017 	ldw	r16,0(sp)
 80161b4:	dec00604 	addi	sp,sp,24
 80161b8:	f800283a 	ret
 80161bc:	04410004 	movi	r17,1024
 80161c0:	880b883a 	mov	r5,r17
 80161c4:	8003fd40 	call	8003fd4 <_malloc_r>
 80161c8:	1007883a 	mov	r3,r2
 80161cc:	10000c26 	beq	r2,zero,8016200 <__submore+0xcc>
 80161d0:	80801083 	ldbu	r2,66(r16)
 80161d4:	80c00c15 	stw	r3,48(r16)
 80161d8:	84400d15 	stw	r17,52(r16)
 80161dc:	1880ffc5 	stb	r2,1023(r3)
 80161e0:	81401043 	ldbu	r5,65(r16)
 80161e4:	1900ff44 	addi	r4,r3,1021
 80161e8:	0005883a 	mov	r2,zero
 80161ec:	1940ff85 	stb	r5,1022(r3)
 80161f0:	81401003 	ldbu	r5,64(r16)
 80161f4:	1940ff45 	stb	r5,1021(r3)
 80161f8:	81000015 	stw	r4,0(r16)
 80161fc:	003fe706 	br	801619c <__alt_data_end+0xf801619c>
 8016200:	00bfffc4 	movi	r2,-1
 8016204:	003fe506 	br	801619c <__alt_data_end+0xf801619c>

08016208 <_ungetc_r>:
 8016208:	00bfffc4 	movi	r2,-1
 801620c:	28806126 	beq	r5,r2,8016394 <_ungetc_r+0x18c>
 8016210:	defffb04 	addi	sp,sp,-20
 8016214:	dcc00315 	stw	r19,12(sp)
 8016218:	dc400115 	stw	r17,4(sp)
 801621c:	dc000015 	stw	r16,0(sp)
 8016220:	dfc00415 	stw	ra,16(sp)
 8016224:	dc800215 	stw	r18,8(sp)
 8016228:	2023883a 	mov	r17,r4
 801622c:	3021883a 	mov	r16,r6
 8016230:	2827883a 	mov	r19,r5
 8016234:	20000226 	beq	r4,zero,8016240 <_ungetc_r+0x38>
 8016238:	20800e17 	ldw	r2,56(r4)
 801623c:	10002e26 	beq	r2,zero,80162f8 <_ungetc_r+0xf0>
 8016240:	80c0030b 	ldhu	r3,12(r16)
 8016244:	1888000c 	andi	r2,r3,8192
 8016248:	1000051e 	bne	r2,zero,8016260 <_ungetc_r+0x58>
 801624c:	81001917 	ldw	r4,100(r16)
 8016250:	00b7ffc4 	movi	r2,-8193
 8016254:	18c80014 	ori	r3,r3,8192
 8016258:	2084703a 	and	r2,r4,r2
 801625c:	80801915 	stw	r2,100(r16)
 8016260:	00bff7c4 	movi	r2,-33
 8016264:	1884703a 	and	r2,r3,r2
 8016268:	8080030d 	sth	r2,12(r16)
 801626c:	1900010c 	andi	r4,r3,4
 8016270:	2000061e 	bne	r4,zero,801628c <_ungetc_r+0x84>
 8016274:	1900040c 	andi	r4,r3,16
 8016278:	20001d26 	beq	r4,zero,80162f0 <_ungetc_r+0xe8>
 801627c:	18c0020c 	andi	r3,r3,8
 8016280:	1800331e 	bne	r3,zero,8016350 <_ungetc_r+0x148>
 8016284:	10800114 	ori	r2,r2,4
 8016288:	8080030d 	sth	r2,12(r16)
 801628c:	80800c17 	ldw	r2,48(r16)
 8016290:	9c803fcc 	andi	r18,r19,255
 8016294:	10001a26 	beq	r2,zero,8016300 <_ungetc_r+0xf8>
 8016298:	80c00117 	ldw	r3,4(r16)
 801629c:	80800d17 	ldw	r2,52(r16)
 80162a0:	18800f0e 	bge	r3,r2,80162e0 <_ungetc_r+0xd8>
 80162a4:	80c00017 	ldw	r3,0(r16)
 80162a8:	9005883a 	mov	r2,r18
 80162ac:	193fffc4 	addi	r4,r3,-1
 80162b0:	81000015 	stw	r4,0(r16)
 80162b4:	1cffffc5 	stb	r19,-1(r3)
 80162b8:	80c00117 	ldw	r3,4(r16)
 80162bc:	18c00044 	addi	r3,r3,1
 80162c0:	80c00115 	stw	r3,4(r16)
 80162c4:	dfc00417 	ldw	ra,16(sp)
 80162c8:	dcc00317 	ldw	r19,12(sp)
 80162cc:	dc800217 	ldw	r18,8(sp)
 80162d0:	dc400117 	ldw	r17,4(sp)
 80162d4:	dc000017 	ldw	r16,0(sp)
 80162d8:	dec00504 	addi	sp,sp,20
 80162dc:	f800283a 	ret
 80162e0:	800b883a 	mov	r5,r16
 80162e4:	8809883a 	mov	r4,r17
 80162e8:	80161340 	call	8016134 <__submore>
 80162ec:	103fed26 	beq	r2,zero,80162a4 <__alt_data_end+0xf80162a4>
 80162f0:	00bfffc4 	movi	r2,-1
 80162f4:	003ff306 	br	80162c4 <__alt_data_end+0xf80162c4>
 80162f8:	800e87c0 	call	800e87c <__sinit>
 80162fc:	003fd006 	br	8016240 <__alt_data_end+0xf8016240>
 8016300:	80c00417 	ldw	r3,16(r16)
 8016304:	80800017 	ldw	r2,0(r16)
 8016308:	18000326 	beq	r3,zero,8016318 <_ungetc_r+0x110>
 801630c:	1880022e 	bgeu	r3,r2,8016318 <_ungetc_r+0x110>
 8016310:	10ffffc3 	ldbu	r3,-1(r2)
 8016314:	90c01826 	beq	r18,r3,8016378 <_ungetc_r+0x170>
 8016318:	81400117 	ldw	r5,4(r16)
 801631c:	80800e15 	stw	r2,56(r16)
 8016320:	008000c4 	movi	r2,3
 8016324:	81001004 	addi	r4,r16,64
 8016328:	80c01084 	addi	r3,r16,66
 801632c:	80800d15 	stw	r2,52(r16)
 8016330:	00800044 	movi	r2,1
 8016334:	80800115 	stw	r2,4(r16)
 8016338:	81400f15 	stw	r5,60(r16)
 801633c:	81000c15 	stw	r4,48(r16)
 8016340:	84c01085 	stb	r19,66(r16)
 8016344:	80c00015 	stw	r3,0(r16)
 8016348:	9005883a 	mov	r2,r18
 801634c:	003fdd06 	br	80162c4 <__alt_data_end+0xf80162c4>
 8016350:	800b883a 	mov	r5,r16
 8016354:	8809883a 	mov	r4,r17
 8016358:	800e4a00 	call	800e4a0 <_fflush_r>
 801635c:	103fe41e 	bne	r2,zero,80162f0 <__alt_data_end+0xf80162f0>
 8016360:	8080030b 	ldhu	r2,12(r16)
 8016364:	00fffdc4 	movi	r3,-9
 8016368:	80000215 	stw	zero,8(r16)
 801636c:	1884703a 	and	r2,r3,r2
 8016370:	80000615 	stw	zero,24(r16)
 8016374:	003fc306 	br	8016284 <__alt_data_end+0xf8016284>
 8016378:	80c00117 	ldw	r3,4(r16)
 801637c:	10bfffc4 	addi	r2,r2,-1
 8016380:	80800015 	stw	r2,0(r16)
 8016384:	18800044 	addi	r2,r3,1
 8016388:	80800115 	stw	r2,4(r16)
 801638c:	9005883a 	mov	r2,r18
 8016390:	003fcc06 	br	80162c4 <__alt_data_end+0xf80162c4>
 8016394:	00bfffc4 	movi	r2,-1
 8016398:	f800283a 	ret

0801639c <ungetc>:
 801639c:	008200b4 	movhi	r2,2050
 80163a0:	10881404 	addi	r2,r2,8272
 80163a4:	280d883a 	mov	r6,r5
 80163a8:	200b883a 	mov	r5,r4
 80163ac:	11000017 	ldw	r4,0(r2)
 80163b0:	80162081 	jmpi	8016208 <_ungetc_r>

080163b4 <__sprint_r.part.0>:
 80163b4:	28801917 	ldw	r2,100(r5)
 80163b8:	defff604 	addi	sp,sp,-40
 80163bc:	dd400515 	stw	r21,20(sp)
 80163c0:	dfc00915 	stw	ra,36(sp)
 80163c4:	df000815 	stw	fp,32(sp)
 80163c8:	ddc00715 	stw	r23,28(sp)
 80163cc:	dd800615 	stw	r22,24(sp)
 80163d0:	dd000415 	stw	r20,16(sp)
 80163d4:	dcc00315 	stw	r19,12(sp)
 80163d8:	dc800215 	stw	r18,8(sp)
 80163dc:	dc400115 	stw	r17,4(sp)
 80163e0:	dc000015 	stw	r16,0(sp)
 80163e4:	1088000c 	andi	r2,r2,8192
 80163e8:	302b883a 	mov	r21,r6
 80163ec:	10002e26 	beq	r2,zero,80164a8 <__sprint_r.part.0+0xf4>
 80163f0:	30800217 	ldw	r2,8(r6)
 80163f4:	35800017 	ldw	r22,0(r6)
 80163f8:	10002926 	beq	r2,zero,80164a0 <__sprint_r.part.0+0xec>
 80163fc:	2827883a 	mov	r19,r5
 8016400:	2029883a 	mov	r20,r4
 8016404:	b5c00104 	addi	r23,r22,4
 8016408:	04bfffc4 	movi	r18,-1
 801640c:	bc400017 	ldw	r17,0(r23)
 8016410:	b4000017 	ldw	r16,0(r22)
 8016414:	0039883a 	mov	fp,zero
 8016418:	8822d0ba 	srli	r17,r17,2
 801641c:	8800031e 	bne	r17,zero,801642c <__sprint_r.part.0+0x78>
 8016420:	00001806 	br	8016484 <__sprint_r.part.0+0xd0>
 8016424:	84000104 	addi	r16,r16,4
 8016428:	8f001526 	beq	r17,fp,8016480 <__sprint_r.part.0+0xcc>
 801642c:	81400017 	ldw	r5,0(r16)
 8016430:	980d883a 	mov	r6,r19
 8016434:	a009883a 	mov	r4,r20
 8016438:	8017d280 	call	8017d28 <_fputwc_r>
 801643c:	e7000044 	addi	fp,fp,1
 8016440:	14bff81e 	bne	r2,r18,8016424 <__alt_data_end+0xf8016424>
 8016444:	9005883a 	mov	r2,r18
 8016448:	a8000215 	stw	zero,8(r21)
 801644c:	a8000115 	stw	zero,4(r21)
 8016450:	dfc00917 	ldw	ra,36(sp)
 8016454:	df000817 	ldw	fp,32(sp)
 8016458:	ddc00717 	ldw	r23,28(sp)
 801645c:	dd800617 	ldw	r22,24(sp)
 8016460:	dd400517 	ldw	r21,20(sp)
 8016464:	dd000417 	ldw	r20,16(sp)
 8016468:	dcc00317 	ldw	r19,12(sp)
 801646c:	dc800217 	ldw	r18,8(sp)
 8016470:	dc400117 	ldw	r17,4(sp)
 8016474:	dc000017 	ldw	r16,0(sp)
 8016478:	dec00a04 	addi	sp,sp,40
 801647c:	f800283a 	ret
 8016480:	a8800217 	ldw	r2,8(r21)
 8016484:	8c63883a 	add	r17,r17,r17
 8016488:	8c63883a 	add	r17,r17,r17
 801648c:	1445c83a 	sub	r2,r2,r17
 8016490:	a8800215 	stw	r2,8(r21)
 8016494:	b5800204 	addi	r22,r22,8
 8016498:	bdc00204 	addi	r23,r23,8
 801649c:	103fdb1e 	bne	r2,zero,801640c <__alt_data_end+0xf801640c>
 80164a0:	0005883a 	mov	r2,zero
 80164a4:	003fe806 	br	8016448 <__alt_data_end+0xf8016448>
 80164a8:	800ef600 	call	800ef60 <__sfvwrite_r>
 80164ac:	003fe606 	br	8016448 <__alt_data_end+0xf8016448>

080164b0 <__sprint_r>:
 80164b0:	30c00217 	ldw	r3,8(r6)
 80164b4:	18000126 	beq	r3,zero,80164bc <__sprint_r+0xc>
 80164b8:	80163b41 	jmpi	80163b4 <__sprint_r.part.0>
 80164bc:	30000115 	stw	zero,4(r6)
 80164c0:	0005883a 	mov	r2,zero
 80164c4:	f800283a 	ret

080164c8 <___vfiprintf_internal_r>:
 80164c8:	deffc904 	addi	sp,sp,-220
 80164cc:	df003515 	stw	fp,212(sp)
 80164d0:	dd003115 	stw	r20,196(sp)
 80164d4:	dfc03615 	stw	ra,216(sp)
 80164d8:	ddc03415 	stw	r23,208(sp)
 80164dc:	dd803315 	stw	r22,204(sp)
 80164e0:	dd403215 	stw	r21,200(sp)
 80164e4:	dcc03015 	stw	r19,192(sp)
 80164e8:	dc802f15 	stw	r18,188(sp)
 80164ec:	dc402e15 	stw	r17,184(sp)
 80164f0:	dc002d15 	stw	r16,180(sp)
 80164f4:	d9002015 	stw	r4,128(sp)
 80164f8:	d9c02215 	stw	r7,136(sp)
 80164fc:	2829883a 	mov	r20,r5
 8016500:	3039883a 	mov	fp,r6
 8016504:	20000226 	beq	r4,zero,8016510 <___vfiprintf_internal_r+0x48>
 8016508:	20800e17 	ldw	r2,56(r4)
 801650c:	1000cf26 	beq	r2,zero,801684c <___vfiprintf_internal_r+0x384>
 8016510:	a080030b 	ldhu	r2,12(r20)
 8016514:	10c8000c 	andi	r3,r2,8192
 8016518:	1800061e 	bne	r3,zero,8016534 <___vfiprintf_internal_r+0x6c>
 801651c:	a1001917 	ldw	r4,100(r20)
 8016520:	00f7ffc4 	movi	r3,-8193
 8016524:	10880014 	ori	r2,r2,8192
 8016528:	20c6703a 	and	r3,r4,r3
 801652c:	a080030d 	sth	r2,12(r20)
 8016530:	a0c01915 	stw	r3,100(r20)
 8016534:	10c0020c 	andi	r3,r2,8
 8016538:	1800a926 	beq	r3,zero,80167e0 <___vfiprintf_internal_r+0x318>
 801653c:	a0c00417 	ldw	r3,16(r20)
 8016540:	1800a726 	beq	r3,zero,80167e0 <___vfiprintf_internal_r+0x318>
 8016544:	1080068c 	andi	r2,r2,26
 8016548:	00c00284 	movi	r3,10
 801654c:	10c0ac26 	beq	r2,r3,8016800 <___vfiprintf_internal_r+0x338>
 8016550:	da801a04 	addi	r10,sp,104
 8016554:	da801e15 	stw	r10,120(sp)
 8016558:	d8801e17 	ldw	r2,120(sp)
 801655c:	da8019c4 	addi	r10,sp,103
 8016560:	058200b4 	movhi	r22,2050
 8016564:	05c200b4 	movhi	r23,2050
 8016568:	da801f15 	stw	r10,124(sp)
 801656c:	1295c83a 	sub	r10,r2,r10
 8016570:	b5808b84 	addi	r22,r22,558
 8016574:	bdc08784 	addi	r23,r23,542
 8016578:	dec01a15 	stw	sp,104(sp)
 801657c:	d8001c15 	stw	zero,112(sp)
 8016580:	d8001b15 	stw	zero,108(sp)
 8016584:	d8002615 	stw	zero,152(sp)
 8016588:	d8002315 	stw	zero,140(sp)
 801658c:	da802715 	stw	r10,156(sp)
 8016590:	d811883a 	mov	r8,sp
 8016594:	dd002115 	stw	r20,132(sp)
 8016598:	e021883a 	mov	r16,fp
 801659c:	80800007 	ldb	r2,0(r16)
 80165a0:	1003ea26 	beq	r2,zero,801754c <___vfiprintf_internal_r+0x1084>
 80165a4:	00c00944 	movi	r3,37
 80165a8:	8025883a 	mov	r18,r16
 80165ac:	10c0021e 	bne	r2,r3,80165b8 <___vfiprintf_internal_r+0xf0>
 80165b0:	00001606 	br	801660c <___vfiprintf_internal_r+0x144>
 80165b4:	10c00326 	beq	r2,r3,80165c4 <___vfiprintf_internal_r+0xfc>
 80165b8:	94800044 	addi	r18,r18,1
 80165bc:	90800007 	ldb	r2,0(r18)
 80165c0:	103ffc1e 	bne	r2,zero,80165b4 <__alt_data_end+0xf80165b4>
 80165c4:	9423c83a 	sub	r17,r18,r16
 80165c8:	88001026 	beq	r17,zero,801660c <___vfiprintf_internal_r+0x144>
 80165cc:	d8c01c17 	ldw	r3,112(sp)
 80165d0:	d8801b17 	ldw	r2,108(sp)
 80165d4:	44000015 	stw	r16,0(r8)
 80165d8:	88c7883a 	add	r3,r17,r3
 80165dc:	10800044 	addi	r2,r2,1
 80165e0:	44400115 	stw	r17,4(r8)
 80165e4:	d8c01c15 	stw	r3,112(sp)
 80165e8:	d8801b15 	stw	r2,108(sp)
 80165ec:	010001c4 	movi	r4,7
 80165f0:	2080760e 	bge	r4,r2,80167cc <___vfiprintf_internal_r+0x304>
 80165f4:	1803821e 	bne	r3,zero,8017400 <___vfiprintf_internal_r+0xf38>
 80165f8:	da802317 	ldw	r10,140(sp)
 80165fc:	d8001b15 	stw	zero,108(sp)
 8016600:	d811883a 	mov	r8,sp
 8016604:	5455883a 	add	r10,r10,r17
 8016608:	da802315 	stw	r10,140(sp)
 801660c:	90800007 	ldb	r2,0(r18)
 8016610:	10044626 	beq	r2,zero,801772c <___vfiprintf_internal_r+0x1264>
 8016614:	90c00047 	ldb	r3,1(r18)
 8016618:	94000044 	addi	r16,r18,1
 801661c:	d8001d85 	stb	zero,118(sp)
 8016620:	0009883a 	mov	r4,zero
 8016624:	000f883a 	mov	r7,zero
 8016628:	027fffc4 	movi	r9,-1
 801662c:	0023883a 	mov	r17,zero
 8016630:	0029883a 	mov	r20,zero
 8016634:	01401604 	movi	r5,88
 8016638:	01800244 	movi	r6,9
 801663c:	03400a84 	movi	r13,42
 8016640:	03001b04 	movi	r12,108
 8016644:	84000044 	addi	r16,r16,1
 8016648:	18bff804 	addi	r2,r3,-32
 801664c:	28827336 	bltu	r5,r2,801701c <___vfiprintf_internal_r+0xb54>
 8016650:	100490ba 	slli	r2,r2,2
 8016654:	02820074 	movhi	r10,2049
 8016658:	52999a04 	addi	r10,r10,26216
 801665c:	1285883a 	add	r2,r2,r10
 8016660:	10800017 	ldw	r2,0(r2)
 8016664:	1000683a 	jmp	r2
 8016668:	08016d50 	cmplti	zero,at,1461
 801666c:	0801701c 	xori	zero,at,1472
 8016670:	0801701c 	xori	zero,at,1472
 8016674:	08016d70 	cmpltui	zero,at,1461
 8016678:	0801701c 	xori	zero,at,1472
 801667c:	0801701c 	xori	zero,at,1472
 8016680:	0801701c 	xori	zero,at,1472
 8016684:	0801701c 	xori	zero,at,1472
 8016688:	0801701c 	xori	zero,at,1472
 801668c:	0801701c 	xori	zero,at,1472
 8016690:	08016f58 	cmpnei	zero,at,1469
 8016694:	08016f74 	orhi	zero,at,1469
 8016698:	0801701c 	xori	zero,at,1472
 801669c:	0801685c 	xori	zero,at,1441
 80166a0:	08016f84 	addi	zero,at,1470
 80166a4:	0801701c 	xori	zero,at,1472
 80166a8:	08016d7c 	xorhi	zero,at,1461
 80166ac:	08016d88 	cmpgei	zero,at,1462
 80166b0:	08016d88 	cmpgei	zero,at,1462
 80166b4:	08016d88 	cmpgei	zero,at,1462
 80166b8:	08016d88 	cmpgei	zero,at,1462
 80166bc:	08016d88 	cmpgei	zero,at,1462
 80166c0:	08016d88 	cmpgei	zero,at,1462
 80166c4:	08016d88 	cmpgei	zero,at,1462
 80166c8:	08016d88 	cmpgei	zero,at,1462
 80166cc:	08016d88 	cmpgei	zero,at,1462
 80166d0:	0801701c 	xori	zero,at,1472
 80166d4:	0801701c 	xori	zero,at,1472
 80166d8:	0801701c 	xori	zero,at,1472
 80166dc:	0801701c 	xori	zero,at,1472
 80166e0:	0801701c 	xori	zero,at,1472
 80166e4:	0801701c 	xori	zero,at,1472
 80166e8:	0801701c 	xori	zero,at,1472
 80166ec:	0801701c 	xori	zero,at,1472
 80166f0:	0801701c 	xori	zero,at,1472
 80166f4:	0801701c 	xori	zero,at,1472
 80166f8:	08016db4 	orhi	zero,at,1462
 80166fc:	0801701c 	xori	zero,at,1472
 8016700:	0801701c 	xori	zero,at,1472
 8016704:	0801701c 	xori	zero,at,1472
 8016708:	0801701c 	xori	zero,at,1472
 801670c:	0801701c 	xori	zero,at,1472
 8016710:	0801701c 	xori	zero,at,1472
 8016714:	0801701c 	xori	zero,at,1472
 8016718:	0801701c 	xori	zero,at,1472
 801671c:	0801701c 	xori	zero,at,1472
 8016720:	0801701c 	xori	zero,at,1472
 8016724:	08016dec 	andhi	zero,at,1463
 8016728:	0801701c 	xori	zero,at,1472
 801672c:	0801701c 	xori	zero,at,1472
 8016730:	0801701c 	xori	zero,at,1472
 8016734:	0801701c 	xori	zero,at,1472
 8016738:	0801701c 	xori	zero,at,1472
 801673c:	08016e44 	addi	zero,at,1465
 8016740:	0801701c 	xori	zero,at,1472
 8016744:	0801701c 	xori	zero,at,1472
 8016748:	08016eb4 	orhi	zero,at,1466
 801674c:	0801701c 	xori	zero,at,1472
 8016750:	0801701c 	xori	zero,at,1472
 8016754:	0801701c 	xori	zero,at,1472
 8016758:	0801701c 	xori	zero,at,1472
 801675c:	0801701c 	xori	zero,at,1472
 8016760:	0801701c 	xori	zero,at,1472
 8016764:	0801701c 	xori	zero,at,1472
 8016768:	0801701c 	xori	zero,at,1472
 801676c:	0801701c 	xori	zero,at,1472
 8016770:	0801701c 	xori	zero,at,1472
 8016774:	08016c60 	cmpeqi	zero,at,1457
 8016778:	08016c8c 	andi	zero,at,1458
 801677c:	0801701c 	xori	zero,at,1472
 8016780:	0801701c 	xori	zero,at,1472
 8016784:	0801701c 	xori	zero,at,1472
 8016788:	08016fc4 	addi	zero,at,1471
 801678c:	08016c8c 	andi	zero,at,1458
 8016790:	0801701c 	xori	zero,at,1472
 8016794:	0801701c 	xori	zero,at,1472
 8016798:	08016b20 	cmpeqi	zero,at,1452
 801679c:	0801701c 	xori	zero,at,1472
 80167a0:	08016b30 	cmpltui	zero,at,1452
 80167a4:	08016b6c 	andhi	zero,at,1453
 80167a8:	08016868 	cmpgeui	zero,at,1441
 80167ac:	08016b14 	ori	zero,at,1452
 80167b0:	0801701c 	xori	zero,at,1472
 80167b4:	08016ef0 	cmpltui	zero,at,1467
 80167b8:	0801701c 	xori	zero,at,1472
 80167bc:	08016f48 	cmpgei	zero,at,1469
 80167c0:	0801701c 	xori	zero,at,1472
 80167c4:	0801701c 	xori	zero,at,1472
 80167c8:	08016c0c 	andi	zero,at,1456
 80167cc:	42000204 	addi	r8,r8,8
 80167d0:	da802317 	ldw	r10,140(sp)
 80167d4:	5455883a 	add	r10,r10,r17
 80167d8:	da802315 	stw	r10,140(sp)
 80167dc:	003f8b06 	br	801660c <__alt_data_end+0xf801660c>
 80167e0:	d9002017 	ldw	r4,128(sp)
 80167e4:	a00b883a 	mov	r5,r20
 80167e8:	800c8540 	call	800c854 <__swsetup_r>
 80167ec:	1003b11e 	bne	r2,zero,80176b4 <___vfiprintf_internal_r+0x11ec>
 80167f0:	a080030b 	ldhu	r2,12(r20)
 80167f4:	00c00284 	movi	r3,10
 80167f8:	1080068c 	andi	r2,r2,26
 80167fc:	10ff541e 	bne	r2,r3,8016550 <__alt_data_end+0xf8016550>
 8016800:	a080038f 	ldh	r2,14(r20)
 8016804:	103f5216 	blt	r2,zero,8016550 <__alt_data_end+0xf8016550>
 8016808:	d9c02217 	ldw	r7,136(sp)
 801680c:	d9002017 	ldw	r4,128(sp)
 8016810:	e00d883a 	mov	r6,fp
 8016814:	a00b883a 	mov	r5,r20
 8016818:	80179400 	call	8017940 <__sbprintf>
 801681c:	dfc03617 	ldw	ra,216(sp)
 8016820:	df003517 	ldw	fp,212(sp)
 8016824:	ddc03417 	ldw	r23,208(sp)
 8016828:	dd803317 	ldw	r22,204(sp)
 801682c:	dd403217 	ldw	r21,200(sp)
 8016830:	dd003117 	ldw	r20,196(sp)
 8016834:	dcc03017 	ldw	r19,192(sp)
 8016838:	dc802f17 	ldw	r18,188(sp)
 801683c:	dc402e17 	ldw	r17,184(sp)
 8016840:	dc002d17 	ldw	r16,180(sp)
 8016844:	dec03704 	addi	sp,sp,220
 8016848:	f800283a 	ret
 801684c:	800e87c0 	call	800e87c <__sinit>
 8016850:	003f2f06 	br	8016510 <__alt_data_end+0xf8016510>
 8016854:	0463c83a 	sub	r17,zero,r17
 8016858:	d8802215 	stw	r2,136(sp)
 801685c:	a5000114 	ori	r20,r20,4
 8016860:	80c00007 	ldb	r3,0(r16)
 8016864:	003f7706 	br	8016644 <__alt_data_end+0xf8016644>
 8016868:	00800c04 	movi	r2,48
 801686c:	da802217 	ldw	r10,136(sp)
 8016870:	d8801d05 	stb	r2,116(sp)
 8016874:	00801e04 	movi	r2,120
 8016878:	d8801d45 	stb	r2,117(sp)
 801687c:	d8001d85 	stb	zero,118(sp)
 8016880:	50c00104 	addi	r3,r10,4
 8016884:	54800017 	ldw	r18,0(r10)
 8016888:	0027883a 	mov	r19,zero
 801688c:	a0800094 	ori	r2,r20,2
 8016890:	48030b16 	blt	r9,zero,80174c0 <___vfiprintf_internal_r+0xff8>
 8016894:	00bfdfc4 	movi	r2,-129
 8016898:	a096703a 	and	r11,r20,r2
 801689c:	d8c02215 	stw	r3,136(sp)
 80168a0:	5d000094 	ori	r20,r11,2
 80168a4:	90032b1e 	bne	r18,zero,8017554 <___vfiprintf_internal_r+0x108c>
 80168a8:	008200b4 	movhi	r2,2050
 80168ac:	10bf4304 	addi	r2,r2,-756
 80168b0:	d8802615 	stw	r2,152(sp)
 80168b4:	0039883a 	mov	fp,zero
 80168b8:	48017b1e 	bne	r9,zero,8016ea8 <___vfiprintf_internal_r+0x9e0>
 80168bc:	0013883a 	mov	r9,zero
 80168c0:	0027883a 	mov	r19,zero
 80168c4:	dd401a04 	addi	r21,sp,104
 80168c8:	4825883a 	mov	r18,r9
 80168cc:	4cc0010e 	bge	r9,r19,80168d4 <___vfiprintf_internal_r+0x40c>
 80168d0:	9825883a 	mov	r18,r19
 80168d4:	e7003fcc 	andi	fp,fp,255
 80168d8:	e700201c 	xori	fp,fp,128
 80168dc:	e73fe004 	addi	fp,fp,-128
 80168e0:	e0000126 	beq	fp,zero,80168e8 <___vfiprintf_internal_r+0x420>
 80168e4:	94800044 	addi	r18,r18,1
 80168e8:	a380008c 	andi	r14,r20,2
 80168ec:	70000126 	beq	r14,zero,80168f4 <___vfiprintf_internal_r+0x42c>
 80168f0:	94800084 	addi	r18,r18,2
 80168f4:	a700210c 	andi	fp,r20,132
 80168f8:	e001df1e 	bne	fp,zero,8017078 <___vfiprintf_internal_r+0xbb0>
 80168fc:	8c87c83a 	sub	r3,r17,r18
 8016900:	00c1dd0e 	bge	zero,r3,8017078 <___vfiprintf_internal_r+0xbb0>
 8016904:	01c00404 	movi	r7,16
 8016908:	d8801c17 	ldw	r2,112(sp)
 801690c:	38c3ad0e 	bge	r7,r3,80177c4 <___vfiprintf_internal_r+0x12fc>
 8016910:	028200b4 	movhi	r10,2050
 8016914:	52808b84 	addi	r10,r10,558
 8016918:	dc002915 	stw	r16,164(sp)
 801691c:	d9801b17 	ldw	r6,108(sp)
 8016920:	da802415 	stw	r10,144(sp)
 8016924:	03c001c4 	movi	r15,7
 8016928:	da402515 	stw	r9,148(sp)
 801692c:	db802815 	stw	r14,160(sp)
 8016930:	1821883a 	mov	r16,r3
 8016934:	00000506 	br	801694c <___vfiprintf_internal_r+0x484>
 8016938:	31400084 	addi	r5,r6,2
 801693c:	42000204 	addi	r8,r8,8
 8016940:	200d883a 	mov	r6,r4
 8016944:	843ffc04 	addi	r16,r16,-16
 8016948:	3c000d0e 	bge	r7,r16,8016980 <___vfiprintf_internal_r+0x4b8>
 801694c:	10800404 	addi	r2,r2,16
 8016950:	31000044 	addi	r4,r6,1
 8016954:	45800015 	stw	r22,0(r8)
 8016958:	41c00115 	stw	r7,4(r8)
 801695c:	d8801c15 	stw	r2,112(sp)
 8016960:	d9001b15 	stw	r4,108(sp)
 8016964:	793ff40e 	bge	r15,r4,8016938 <__alt_data_end+0xf8016938>
 8016968:	1001b51e 	bne	r2,zero,8017040 <___vfiprintf_internal_r+0xb78>
 801696c:	843ffc04 	addi	r16,r16,-16
 8016970:	000d883a 	mov	r6,zero
 8016974:	01400044 	movi	r5,1
 8016978:	d811883a 	mov	r8,sp
 801697c:	3c3ff316 	blt	r7,r16,801694c <__alt_data_end+0xf801694c>
 8016980:	8007883a 	mov	r3,r16
 8016984:	da402517 	ldw	r9,148(sp)
 8016988:	db802817 	ldw	r14,160(sp)
 801698c:	dc002917 	ldw	r16,164(sp)
 8016990:	da802417 	ldw	r10,144(sp)
 8016994:	1885883a 	add	r2,r3,r2
 8016998:	40c00115 	stw	r3,4(r8)
 801699c:	42800015 	stw	r10,0(r8)
 80169a0:	d8801c15 	stw	r2,112(sp)
 80169a4:	d9401b15 	stw	r5,108(sp)
 80169a8:	00c001c4 	movi	r3,7
 80169ac:	19426016 	blt	r3,r5,8017330 <___vfiprintf_internal_r+0xe68>
 80169b0:	d8c01d87 	ldb	r3,118(sp)
 80169b4:	42000204 	addi	r8,r8,8
 80169b8:	29000044 	addi	r4,r5,1
 80169bc:	1801b31e 	bne	r3,zero,801708c <___vfiprintf_internal_r+0xbc4>
 80169c0:	7001c026 	beq	r14,zero,80170c4 <___vfiprintf_internal_r+0xbfc>
 80169c4:	d8c01d04 	addi	r3,sp,116
 80169c8:	10800084 	addi	r2,r2,2
 80169cc:	40c00015 	stw	r3,0(r8)
 80169d0:	00c00084 	movi	r3,2
 80169d4:	40c00115 	stw	r3,4(r8)
 80169d8:	d8801c15 	stw	r2,112(sp)
 80169dc:	d9001b15 	stw	r4,108(sp)
 80169e0:	00c001c4 	movi	r3,7
 80169e4:	1902650e 	bge	r3,r4,801737c <___vfiprintf_internal_r+0xeb4>
 80169e8:	10029a1e 	bne	r2,zero,8017454 <___vfiprintf_internal_r+0xf8c>
 80169ec:	00c02004 	movi	r3,128
 80169f0:	01000044 	movi	r4,1
 80169f4:	000b883a 	mov	r5,zero
 80169f8:	d811883a 	mov	r8,sp
 80169fc:	e0c1b31e 	bne	fp,r3,80170cc <___vfiprintf_internal_r+0xc04>
 8016a00:	8cb9c83a 	sub	fp,r17,r18
 8016a04:	0701b10e 	bge	zero,fp,80170cc <___vfiprintf_internal_r+0xc04>
 8016a08:	01c00404 	movi	r7,16
 8016a0c:	3f03890e 	bge	r7,fp,8017834 <___vfiprintf_internal_r+0x136c>
 8016a10:	00c200b4 	movhi	r3,2050
 8016a14:	18c08784 	addi	r3,r3,542
 8016a18:	d8c02415 	stw	r3,144(sp)
 8016a1c:	8007883a 	mov	r3,r16
 8016a20:	034001c4 	movi	r13,7
 8016a24:	e021883a 	mov	r16,fp
 8016a28:	da402515 	stw	r9,148(sp)
 8016a2c:	1839883a 	mov	fp,r3
 8016a30:	00000506 	br	8016a48 <___vfiprintf_internal_r+0x580>
 8016a34:	29800084 	addi	r6,r5,2
 8016a38:	42000204 	addi	r8,r8,8
 8016a3c:	180b883a 	mov	r5,r3
 8016a40:	843ffc04 	addi	r16,r16,-16
 8016a44:	3c000d0e 	bge	r7,r16,8016a7c <___vfiprintf_internal_r+0x5b4>
 8016a48:	10800404 	addi	r2,r2,16
 8016a4c:	28c00044 	addi	r3,r5,1
 8016a50:	45c00015 	stw	r23,0(r8)
 8016a54:	41c00115 	stw	r7,4(r8)
 8016a58:	d8801c15 	stw	r2,112(sp)
 8016a5c:	d8c01b15 	stw	r3,108(sp)
 8016a60:	68fff40e 	bge	r13,r3,8016a34 <__alt_data_end+0xf8016a34>
 8016a64:	1002241e 	bne	r2,zero,80172f8 <___vfiprintf_internal_r+0xe30>
 8016a68:	843ffc04 	addi	r16,r16,-16
 8016a6c:	01800044 	movi	r6,1
 8016a70:	000b883a 	mov	r5,zero
 8016a74:	d811883a 	mov	r8,sp
 8016a78:	3c3ff316 	blt	r7,r16,8016a48 <__alt_data_end+0xf8016a48>
 8016a7c:	da402517 	ldw	r9,148(sp)
 8016a80:	e007883a 	mov	r3,fp
 8016a84:	8039883a 	mov	fp,r16
 8016a88:	1821883a 	mov	r16,r3
 8016a8c:	d8c02417 	ldw	r3,144(sp)
 8016a90:	1705883a 	add	r2,r2,fp
 8016a94:	47000115 	stw	fp,4(r8)
 8016a98:	40c00015 	stw	r3,0(r8)
 8016a9c:	d8801c15 	stw	r2,112(sp)
 8016aa0:	d9801b15 	stw	r6,108(sp)
 8016aa4:	00c001c4 	movi	r3,7
 8016aa8:	19827616 	blt	r3,r6,8017484 <___vfiprintf_internal_r+0xfbc>
 8016aac:	4cf9c83a 	sub	fp,r9,r19
 8016ab0:	42000204 	addi	r8,r8,8
 8016ab4:	31000044 	addi	r4,r6,1
 8016ab8:	300b883a 	mov	r5,r6
 8016abc:	07018516 	blt	zero,fp,80170d4 <___vfiprintf_internal_r+0xc0c>
 8016ac0:	9885883a 	add	r2,r19,r2
 8016ac4:	45400015 	stw	r21,0(r8)
 8016ac8:	44c00115 	stw	r19,4(r8)
 8016acc:	d8801c15 	stw	r2,112(sp)
 8016ad0:	d9001b15 	stw	r4,108(sp)
 8016ad4:	00c001c4 	movi	r3,7
 8016ad8:	1901dd0e 	bge	r3,r4,8017250 <___vfiprintf_internal_r+0xd88>
 8016adc:	1002401e 	bne	r2,zero,80173e0 <___vfiprintf_internal_r+0xf18>
 8016ae0:	d8001b15 	stw	zero,108(sp)
 8016ae4:	a2c0010c 	andi	r11,r20,4
 8016ae8:	58000226 	beq	r11,zero,8016af4 <___vfiprintf_internal_r+0x62c>
 8016aec:	8ca7c83a 	sub	r19,r17,r18
 8016af0:	04c2f216 	blt	zero,r19,80176bc <___vfiprintf_internal_r+0x11f4>
 8016af4:	8c80010e 	bge	r17,r18,8016afc <___vfiprintf_internal_r+0x634>
 8016af8:	9023883a 	mov	r17,r18
 8016afc:	da802317 	ldw	r10,140(sp)
 8016b00:	5455883a 	add	r10,r10,r17
 8016b04:	da802315 	stw	r10,140(sp)
 8016b08:	d8001b15 	stw	zero,108(sp)
 8016b0c:	d811883a 	mov	r8,sp
 8016b10:	003ea206 	br	801659c <__alt_data_end+0xf801659c>
 8016b14:	a5000814 	ori	r20,r20,32
 8016b18:	80c00007 	ldb	r3,0(r16)
 8016b1c:	003ec906 	br	8016644 <__alt_data_end+0xf8016644>
 8016b20:	80c00007 	ldb	r3,0(r16)
 8016b24:	1b030926 	beq	r3,r12,801774c <___vfiprintf_internal_r+0x1284>
 8016b28:	a5000414 	ori	r20,r20,16
 8016b2c:	003ec506 	br	8016644 <__alt_data_end+0xf8016644>
 8016b30:	21003fcc 	andi	r4,r4,255
 8016b34:	20035e1e 	bne	r4,zero,80178b0 <___vfiprintf_internal_r+0x13e8>
 8016b38:	a080080c 	andi	r2,r20,32
 8016b3c:	1002a526 	beq	r2,zero,80175d4 <___vfiprintf_internal_r+0x110c>
 8016b40:	da802217 	ldw	r10,136(sp)
 8016b44:	50800017 	ldw	r2,0(r10)
 8016b48:	da802317 	ldw	r10,140(sp)
 8016b4c:	5007d7fa 	srai	r3,r10,31
 8016b50:	da802217 	ldw	r10,136(sp)
 8016b54:	10c00115 	stw	r3,4(r2)
 8016b58:	52800104 	addi	r10,r10,4
 8016b5c:	da802215 	stw	r10,136(sp)
 8016b60:	da802317 	ldw	r10,140(sp)
 8016b64:	12800015 	stw	r10,0(r2)
 8016b68:	003e8c06 	br	801659c <__alt_data_end+0xf801659c>
 8016b6c:	21003fcc 	andi	r4,r4,255
 8016b70:	2003511e 	bne	r4,zero,80178b8 <___vfiprintf_internal_r+0x13f0>
 8016b74:	a080080c 	andi	r2,r20,32
 8016b78:	1000a126 	beq	r2,zero,8016e00 <___vfiprintf_internal_r+0x938>
 8016b7c:	da802217 	ldw	r10,136(sp)
 8016b80:	d8001d85 	stb	zero,118(sp)
 8016b84:	50800204 	addi	r2,r10,8
 8016b88:	54800017 	ldw	r18,0(r10)
 8016b8c:	54c00117 	ldw	r19,4(r10)
 8016b90:	4802b416 	blt	r9,zero,8017664 <___vfiprintf_internal_r+0x119c>
 8016b94:	013fdfc4 	movi	r4,-129
 8016b98:	94c6b03a 	or	r3,r18,r19
 8016b9c:	d8802215 	stw	r2,136(sp)
 8016ba0:	a128703a 	and	r20,r20,r4
 8016ba4:	1800a226 	beq	r3,zero,8016e30 <___vfiprintf_internal_r+0x968>
 8016ba8:	0039883a 	mov	fp,zero
 8016bac:	dd401a04 	addi	r21,sp,104
 8016bb0:	9006d0fa 	srli	r3,r18,3
 8016bb4:	9808977a 	slli	r4,r19,29
 8016bb8:	9826d0fa 	srli	r19,r19,3
 8016bbc:	948001cc 	andi	r18,r18,7
 8016bc0:	90800c04 	addi	r2,r18,48
 8016bc4:	ad7fffc4 	addi	r21,r21,-1
 8016bc8:	20e4b03a 	or	r18,r4,r3
 8016bcc:	a8800005 	stb	r2,0(r21)
 8016bd0:	94c6b03a 	or	r3,r18,r19
 8016bd4:	183ff61e 	bne	r3,zero,8016bb0 <__alt_data_end+0xf8016bb0>
 8016bd8:	a0c0004c 	andi	r3,r20,1
 8016bdc:	18005926 	beq	r3,zero,8016d44 <___vfiprintf_internal_r+0x87c>
 8016be0:	10803fcc 	andi	r2,r2,255
 8016be4:	1080201c 	xori	r2,r2,128
 8016be8:	10bfe004 	addi	r2,r2,-128
 8016bec:	00c00c04 	movi	r3,48
 8016bf0:	10c05426 	beq	r2,r3,8016d44 <___vfiprintf_internal_r+0x87c>
 8016bf4:	da801e17 	ldw	r10,120(sp)
 8016bf8:	a8bfffc4 	addi	r2,r21,-1
 8016bfc:	a8ffffc5 	stb	r3,-1(r21)
 8016c00:	50a7c83a 	sub	r19,r10,r2
 8016c04:	102b883a 	mov	r21,r2
 8016c08:	003f2f06 	br	80168c8 <__alt_data_end+0xf80168c8>
 8016c0c:	21003fcc 	andi	r4,r4,255
 8016c10:	2003421e 	bne	r4,zero,801791c <___vfiprintf_internal_r+0x1454>
 8016c14:	008200b4 	movhi	r2,2050
 8016c18:	10bf4304 	addi	r2,r2,-756
 8016c1c:	d8802615 	stw	r2,152(sp)
 8016c20:	a080080c 	andi	r2,r20,32
 8016c24:	1000aa26 	beq	r2,zero,8016ed0 <___vfiprintf_internal_r+0xa08>
 8016c28:	da802217 	ldw	r10,136(sp)
 8016c2c:	54800017 	ldw	r18,0(r10)
 8016c30:	54c00117 	ldw	r19,4(r10)
 8016c34:	52800204 	addi	r10,r10,8
 8016c38:	da802215 	stw	r10,136(sp)
 8016c3c:	a080004c 	andi	r2,r20,1
 8016c40:	1001d226 	beq	r2,zero,801738c <___vfiprintf_internal_r+0xec4>
 8016c44:	94c4b03a 	or	r2,r18,r19
 8016c48:	1002351e 	bne	r2,zero,8017520 <___vfiprintf_internal_r+0x1058>
 8016c4c:	d8001d85 	stb	zero,118(sp)
 8016c50:	48022216 	blt	r9,zero,80174dc <___vfiprintf_internal_r+0x1014>
 8016c54:	00bfdfc4 	movi	r2,-129
 8016c58:	a0a8703a 	and	r20,r20,r2
 8016c5c:	003f1506 	br	80168b4 <__alt_data_end+0xf80168b4>
 8016c60:	da802217 	ldw	r10,136(sp)
 8016c64:	04800044 	movi	r18,1
 8016c68:	d8001d85 	stb	zero,118(sp)
 8016c6c:	50800017 	ldw	r2,0(r10)
 8016c70:	52800104 	addi	r10,r10,4
 8016c74:	da802215 	stw	r10,136(sp)
 8016c78:	d8801005 	stb	r2,64(sp)
 8016c7c:	9027883a 	mov	r19,r18
 8016c80:	dd401004 	addi	r21,sp,64
 8016c84:	0013883a 	mov	r9,zero
 8016c88:	003f1706 	br	80168e8 <__alt_data_end+0xf80168e8>
 8016c8c:	21003fcc 	andi	r4,r4,255
 8016c90:	2003201e 	bne	r4,zero,8017914 <___vfiprintf_internal_r+0x144c>
 8016c94:	a080080c 	andi	r2,r20,32
 8016c98:	10004b26 	beq	r2,zero,8016dc8 <___vfiprintf_internal_r+0x900>
 8016c9c:	da802217 	ldw	r10,136(sp)
 8016ca0:	50800117 	ldw	r2,4(r10)
 8016ca4:	54800017 	ldw	r18,0(r10)
 8016ca8:	52800204 	addi	r10,r10,8
 8016cac:	da802215 	stw	r10,136(sp)
 8016cb0:	1027883a 	mov	r19,r2
 8016cb4:	10022c16 	blt	r2,zero,8017568 <___vfiprintf_internal_r+0x10a0>
 8016cb8:	df001d83 	ldbu	fp,118(sp)
 8016cbc:	48007216 	blt	r9,zero,8016e88 <___vfiprintf_internal_r+0x9c0>
 8016cc0:	00ffdfc4 	movi	r3,-129
 8016cc4:	94c4b03a 	or	r2,r18,r19
 8016cc8:	a0e8703a 	and	r20,r20,r3
 8016ccc:	1000cc26 	beq	r2,zero,8017000 <___vfiprintf_internal_r+0xb38>
 8016cd0:	98021026 	beq	r19,zero,8017514 <___vfiprintf_internal_r+0x104c>
 8016cd4:	dc402415 	stw	r17,144(sp)
 8016cd8:	dc002515 	stw	r16,148(sp)
 8016cdc:	9823883a 	mov	r17,r19
 8016ce0:	9021883a 	mov	r16,r18
 8016ce4:	dd401a04 	addi	r21,sp,104
 8016ce8:	4825883a 	mov	r18,r9
 8016cec:	4027883a 	mov	r19,r8
 8016cf0:	8009883a 	mov	r4,r16
 8016cf4:	880b883a 	mov	r5,r17
 8016cf8:	01800284 	movi	r6,10
 8016cfc:	000f883a 	mov	r7,zero
 8016d00:	80194640 	call	8019464 <__umoddi3>
 8016d04:	10800c04 	addi	r2,r2,48
 8016d08:	ad7fffc4 	addi	r21,r21,-1
 8016d0c:	8009883a 	mov	r4,r16
 8016d10:	880b883a 	mov	r5,r17
 8016d14:	a8800005 	stb	r2,0(r21)
 8016d18:	01800284 	movi	r6,10
 8016d1c:	000f883a 	mov	r7,zero
 8016d20:	8018eec0 	call	8018eec <__udivdi3>
 8016d24:	1021883a 	mov	r16,r2
 8016d28:	10c4b03a 	or	r2,r2,r3
 8016d2c:	1823883a 	mov	r17,r3
 8016d30:	103fef1e 	bne	r2,zero,8016cf0 <__alt_data_end+0xf8016cf0>
 8016d34:	dc402417 	ldw	r17,144(sp)
 8016d38:	dc002517 	ldw	r16,148(sp)
 8016d3c:	9013883a 	mov	r9,r18
 8016d40:	9811883a 	mov	r8,r19
 8016d44:	da801e17 	ldw	r10,120(sp)
 8016d48:	5567c83a 	sub	r19,r10,r21
 8016d4c:	003ede06 	br	80168c8 <__alt_data_end+0xf80168c8>
 8016d50:	38803fcc 	andi	r2,r7,255
 8016d54:	1080201c 	xori	r2,r2,128
 8016d58:	10bfe004 	addi	r2,r2,-128
 8016d5c:	1002371e 	bne	r2,zero,801763c <___vfiprintf_internal_r+0x1174>
 8016d60:	01000044 	movi	r4,1
 8016d64:	01c00804 	movi	r7,32
 8016d68:	80c00007 	ldb	r3,0(r16)
 8016d6c:	003e3506 	br	8016644 <__alt_data_end+0xf8016644>
 8016d70:	a5000054 	ori	r20,r20,1
 8016d74:	80c00007 	ldb	r3,0(r16)
 8016d78:	003e3206 	br	8016644 <__alt_data_end+0xf8016644>
 8016d7c:	a5002014 	ori	r20,r20,128
 8016d80:	80c00007 	ldb	r3,0(r16)
 8016d84:	003e2f06 	br	8016644 <__alt_data_end+0xf8016644>
 8016d88:	8015883a 	mov	r10,r16
 8016d8c:	0023883a 	mov	r17,zero
 8016d90:	18bff404 	addi	r2,r3,-48
 8016d94:	50c00007 	ldb	r3,0(r10)
 8016d98:	8c4002a4 	muli	r17,r17,10
 8016d9c:	84000044 	addi	r16,r16,1
 8016da0:	8015883a 	mov	r10,r16
 8016da4:	1463883a 	add	r17,r2,r17
 8016da8:	18bff404 	addi	r2,r3,-48
 8016dac:	30bff92e 	bgeu	r6,r2,8016d94 <__alt_data_end+0xf8016d94>
 8016db0:	003e2506 	br	8016648 <__alt_data_end+0xf8016648>
 8016db4:	21003fcc 	andi	r4,r4,255
 8016db8:	2002d41e 	bne	r4,zero,801790c <___vfiprintf_internal_r+0x1444>
 8016dbc:	a5000414 	ori	r20,r20,16
 8016dc0:	a080080c 	andi	r2,r20,32
 8016dc4:	103fb51e 	bne	r2,zero,8016c9c <__alt_data_end+0xf8016c9c>
 8016dc8:	a080040c 	andi	r2,r20,16
 8016dcc:	1001f826 	beq	r2,zero,80175b0 <___vfiprintf_internal_r+0x10e8>
 8016dd0:	da802217 	ldw	r10,136(sp)
 8016dd4:	54800017 	ldw	r18,0(r10)
 8016dd8:	52800104 	addi	r10,r10,4
 8016ddc:	da802215 	stw	r10,136(sp)
 8016de0:	9027d7fa 	srai	r19,r18,31
 8016de4:	9805883a 	mov	r2,r19
 8016de8:	003fb206 	br	8016cb4 <__alt_data_end+0xf8016cb4>
 8016dec:	21003fcc 	andi	r4,r4,255
 8016df0:	2002c41e 	bne	r4,zero,8017904 <___vfiprintf_internal_r+0x143c>
 8016df4:	a5000414 	ori	r20,r20,16
 8016df8:	a080080c 	andi	r2,r20,32
 8016dfc:	103f5f1e 	bne	r2,zero,8016b7c <__alt_data_end+0xf8016b7c>
 8016e00:	a080040c 	andi	r2,r20,16
 8016e04:	10020f26 	beq	r2,zero,8017644 <___vfiprintf_internal_r+0x117c>
 8016e08:	da802217 	ldw	r10,136(sp)
 8016e0c:	d8001d85 	stb	zero,118(sp)
 8016e10:	0027883a 	mov	r19,zero
 8016e14:	50800104 	addi	r2,r10,4
 8016e18:	54800017 	ldw	r18,0(r10)
 8016e1c:	48021116 	blt	r9,zero,8017664 <___vfiprintf_internal_r+0x119c>
 8016e20:	00ffdfc4 	movi	r3,-129
 8016e24:	d8802215 	stw	r2,136(sp)
 8016e28:	a0e8703a 	and	r20,r20,r3
 8016e2c:	903f5e1e 	bne	r18,zero,8016ba8 <__alt_data_end+0xf8016ba8>
 8016e30:	0039883a 	mov	fp,zero
 8016e34:	4802a626 	beq	r9,zero,80178d0 <___vfiprintf_internal_r+0x1408>
 8016e38:	0025883a 	mov	r18,zero
 8016e3c:	0027883a 	mov	r19,zero
 8016e40:	003f5a06 	br	8016bac <__alt_data_end+0xf8016bac>
 8016e44:	21003fcc 	andi	r4,r4,255
 8016e48:	20029f1e 	bne	r4,zero,80178c8 <___vfiprintf_internal_r+0x1400>
 8016e4c:	a5000414 	ori	r20,r20,16
 8016e50:	a080080c 	andi	r2,r20,32
 8016e54:	10005e1e 	bne	r2,zero,8016fd0 <___vfiprintf_internal_r+0xb08>
 8016e58:	a080040c 	andi	r2,r20,16
 8016e5c:	1001a21e 	bne	r2,zero,80174e8 <___vfiprintf_internal_r+0x1020>
 8016e60:	a080100c 	andi	r2,r20,64
 8016e64:	d8001d85 	stb	zero,118(sp)
 8016e68:	da802217 	ldw	r10,136(sp)
 8016e6c:	1002231e 	bne	r2,zero,80176fc <___vfiprintf_internal_r+0x1234>
 8016e70:	50800104 	addi	r2,r10,4
 8016e74:	54800017 	ldw	r18,0(r10)
 8016e78:	0027883a 	mov	r19,zero
 8016e7c:	4801a00e 	bge	r9,zero,8017500 <___vfiprintf_internal_r+0x1038>
 8016e80:	d8802215 	stw	r2,136(sp)
 8016e84:	0039883a 	mov	fp,zero
 8016e88:	94c4b03a 	or	r2,r18,r19
 8016e8c:	103f901e 	bne	r2,zero,8016cd0 <__alt_data_end+0xf8016cd0>
 8016e90:	00800044 	movi	r2,1
 8016e94:	10803fcc 	andi	r2,r2,255
 8016e98:	00c00044 	movi	r3,1
 8016e9c:	10c05926 	beq	r2,r3,8017004 <___vfiprintf_internal_r+0xb3c>
 8016ea0:	00c00084 	movi	r3,2
 8016ea4:	10ffe41e 	bne	r2,r3,8016e38 <__alt_data_end+0xf8016e38>
 8016ea8:	0025883a 	mov	r18,zero
 8016eac:	0027883a 	mov	r19,zero
 8016eb0:	00013d06 	br	80173a8 <___vfiprintf_internal_r+0xee0>
 8016eb4:	21003fcc 	andi	r4,r4,255
 8016eb8:	2002811e 	bne	r4,zero,80178c0 <___vfiprintf_internal_r+0x13f8>
 8016ebc:	008200b4 	movhi	r2,2050
 8016ec0:	10bf3e04 	addi	r2,r2,-776
 8016ec4:	d8802615 	stw	r2,152(sp)
 8016ec8:	a080080c 	andi	r2,r20,32
 8016ecc:	103f561e 	bne	r2,zero,8016c28 <__alt_data_end+0xf8016c28>
 8016ed0:	a080040c 	andi	r2,r20,16
 8016ed4:	1001d126 	beq	r2,zero,801761c <___vfiprintf_internal_r+0x1154>
 8016ed8:	da802217 	ldw	r10,136(sp)
 8016edc:	0027883a 	mov	r19,zero
 8016ee0:	54800017 	ldw	r18,0(r10)
 8016ee4:	52800104 	addi	r10,r10,4
 8016ee8:	da802215 	stw	r10,136(sp)
 8016eec:	003f5306 	br	8016c3c <__alt_data_end+0xf8016c3c>
 8016ef0:	da802217 	ldw	r10,136(sp)
 8016ef4:	d8001d85 	stb	zero,118(sp)
 8016ef8:	55400017 	ldw	r21,0(r10)
 8016efc:	50c00104 	addi	r3,r10,4
 8016f00:	a8024226 	beq	r21,zero,801780c <___vfiprintf_internal_r+0x1344>
 8016f04:	48021816 	blt	r9,zero,8017768 <___vfiprintf_internal_r+0x12a0>
 8016f08:	480d883a 	mov	r6,r9
 8016f0c:	000b883a 	mov	r5,zero
 8016f10:	a809883a 	mov	r4,r21
 8016f14:	d8c02a15 	stw	r3,168(sp)
 8016f18:	da002b15 	stw	r8,172(sp)
 8016f1c:	da402c15 	stw	r9,176(sp)
 8016f20:	800faf00 	call	800faf0 <memchr>
 8016f24:	d8c02a17 	ldw	r3,168(sp)
 8016f28:	da002b17 	ldw	r8,172(sp)
 8016f2c:	da402c17 	ldw	r9,176(sp)
 8016f30:	10024826 	beq	r2,zero,8017854 <___vfiprintf_internal_r+0x138c>
 8016f34:	1567c83a 	sub	r19,r2,r21
 8016f38:	df001d83 	ldbu	fp,118(sp)
 8016f3c:	d8c02215 	stw	r3,136(sp)
 8016f40:	0013883a 	mov	r9,zero
 8016f44:	003e6006 	br	80168c8 <__alt_data_end+0xf80168c8>
 8016f48:	21003fcc 	andi	r4,r4,255
 8016f4c:	203fc026 	beq	r4,zero,8016e50 <__alt_data_end+0xf8016e50>
 8016f50:	d9c01d85 	stb	r7,118(sp)
 8016f54:	003fbe06 	br	8016e50 <__alt_data_end+0xf8016e50>
 8016f58:	da802217 	ldw	r10,136(sp)
 8016f5c:	54400017 	ldw	r17,0(r10)
 8016f60:	50800104 	addi	r2,r10,4
 8016f64:	883e3b16 	blt	r17,zero,8016854 <__alt_data_end+0xf8016854>
 8016f68:	d8802215 	stw	r2,136(sp)
 8016f6c:	80c00007 	ldb	r3,0(r16)
 8016f70:	003db406 	br	8016644 <__alt_data_end+0xf8016644>
 8016f74:	01000044 	movi	r4,1
 8016f78:	01c00ac4 	movi	r7,43
 8016f7c:	80c00007 	ldb	r3,0(r16)
 8016f80:	003db006 	br	8016644 <__alt_data_end+0xf8016644>
 8016f84:	80c00007 	ldb	r3,0(r16)
 8016f88:	82800044 	addi	r10,r16,1
 8016f8c:	1b423c26 	beq	r3,r13,8017880 <___vfiprintf_internal_r+0x13b8>
 8016f90:	18bff404 	addi	r2,r3,-48
 8016f94:	0013883a 	mov	r9,zero
 8016f98:	30822b36 	bltu	r6,r2,8017848 <___vfiprintf_internal_r+0x1380>
 8016f9c:	50c00007 	ldb	r3,0(r10)
 8016fa0:	4a4002a4 	muli	r9,r9,10
 8016fa4:	54000044 	addi	r16,r10,1
 8016fa8:	8015883a 	mov	r10,r16
 8016fac:	4893883a 	add	r9,r9,r2
 8016fb0:	18bff404 	addi	r2,r3,-48
 8016fb4:	30bff92e 	bgeu	r6,r2,8016f9c <__alt_data_end+0xf8016f9c>
 8016fb8:	483da30e 	bge	r9,zero,8016648 <__alt_data_end+0xf8016648>
 8016fbc:	027fffc4 	movi	r9,-1
 8016fc0:	003da106 	br	8016648 <__alt_data_end+0xf8016648>
 8016fc4:	a5001014 	ori	r20,r20,64
 8016fc8:	80c00007 	ldb	r3,0(r16)
 8016fcc:	003d9d06 	br	8016644 <__alt_data_end+0xf8016644>
 8016fd0:	da802217 	ldw	r10,136(sp)
 8016fd4:	d8001d85 	stb	zero,118(sp)
 8016fd8:	50c00204 	addi	r3,r10,8
 8016fdc:	54800017 	ldw	r18,0(r10)
 8016fe0:	54c00117 	ldw	r19,4(r10)
 8016fe4:	4801ca16 	blt	r9,zero,8017710 <___vfiprintf_internal_r+0x1248>
 8016fe8:	013fdfc4 	movi	r4,-129
 8016fec:	94c4b03a 	or	r2,r18,r19
 8016ff0:	d8c02215 	stw	r3,136(sp)
 8016ff4:	a128703a 	and	r20,r20,r4
 8016ff8:	0039883a 	mov	fp,zero
 8016ffc:	103f341e 	bne	r2,zero,8016cd0 <__alt_data_end+0xf8016cd0>
 8017000:	483e2e26 	beq	r9,zero,80168bc <__alt_data_end+0xf80168bc>
 8017004:	0025883a 	mov	r18,zero
 8017008:	94800c04 	addi	r18,r18,48
 801700c:	dc8019c5 	stb	r18,103(sp)
 8017010:	dcc02717 	ldw	r19,156(sp)
 8017014:	dd4019c4 	addi	r21,sp,103
 8017018:	003e2b06 	br	80168c8 <__alt_data_end+0xf80168c8>
 801701c:	21003fcc 	andi	r4,r4,255
 8017020:	2002361e 	bne	r4,zero,80178fc <___vfiprintf_internal_r+0x1434>
 8017024:	1801c126 	beq	r3,zero,801772c <___vfiprintf_internal_r+0x1264>
 8017028:	04800044 	movi	r18,1
 801702c:	d8c01005 	stb	r3,64(sp)
 8017030:	d8001d85 	stb	zero,118(sp)
 8017034:	9027883a 	mov	r19,r18
 8017038:	dd401004 	addi	r21,sp,64
 801703c:	003f1106 	br	8016c84 <__alt_data_end+0xf8016c84>
 8017040:	d9402117 	ldw	r5,132(sp)
 8017044:	d9002017 	ldw	r4,128(sp)
 8017048:	d9801a04 	addi	r6,sp,104
 801704c:	d9c02b15 	stw	r7,172(sp)
 8017050:	dbc02a15 	stw	r15,168(sp)
 8017054:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017058:	d9c02b17 	ldw	r7,172(sp)
 801705c:	dbc02a17 	ldw	r15,168(sp)
 8017060:	10006d1e 	bne	r2,zero,8017218 <___vfiprintf_internal_r+0xd50>
 8017064:	d9801b17 	ldw	r6,108(sp)
 8017068:	d8801c17 	ldw	r2,112(sp)
 801706c:	d811883a 	mov	r8,sp
 8017070:	31400044 	addi	r5,r6,1
 8017074:	003e3306 	br	8016944 <__alt_data_end+0xf8016944>
 8017078:	d9401b17 	ldw	r5,108(sp)
 801707c:	d8801c17 	ldw	r2,112(sp)
 8017080:	29000044 	addi	r4,r5,1
 8017084:	d8c01d87 	ldb	r3,118(sp)
 8017088:	183e4d26 	beq	r3,zero,80169c0 <__alt_data_end+0xf80169c0>
 801708c:	00c00044 	movi	r3,1
 8017090:	d9401d84 	addi	r5,sp,118
 8017094:	10c5883a 	add	r2,r2,r3
 8017098:	41400015 	stw	r5,0(r8)
 801709c:	40c00115 	stw	r3,4(r8)
 80170a0:	d8801c15 	stw	r2,112(sp)
 80170a4:	d9001b15 	stw	r4,108(sp)
 80170a8:	014001c4 	movi	r5,7
 80170ac:	2900a90e 	bge	r5,r4,8017354 <___vfiprintf_internal_r+0xe8c>
 80170b0:	1000da1e 	bne	r2,zero,801741c <___vfiprintf_internal_r+0xf54>
 80170b4:	7000ab1e 	bne	r14,zero,8017364 <___vfiprintf_internal_r+0xe9c>
 80170b8:	000b883a 	mov	r5,zero
 80170bc:	1809883a 	mov	r4,r3
 80170c0:	d811883a 	mov	r8,sp
 80170c4:	00c02004 	movi	r3,128
 80170c8:	e0fe4d26 	beq	fp,r3,8016a00 <__alt_data_end+0xf8016a00>
 80170cc:	4cf9c83a 	sub	fp,r9,r19
 80170d0:	073e7b0e 	bge	zero,fp,8016ac0 <__alt_data_end+0xf8016ac0>
 80170d4:	01c00404 	movi	r7,16
 80170d8:	3f01900e 	bge	r7,fp,801771c <___vfiprintf_internal_r+0x1254>
 80170dc:	00c200b4 	movhi	r3,2050
 80170e0:	18c08784 	addi	r3,r3,542
 80170e4:	d8c02415 	stw	r3,144(sp)
 80170e8:	034001c4 	movi	r13,7
 80170ec:	00000506 	br	8017104 <___vfiprintf_internal_r+0xc3c>
 80170f0:	29000084 	addi	r4,r5,2
 80170f4:	42000204 	addi	r8,r8,8
 80170f8:	180b883a 	mov	r5,r3
 80170fc:	e73ffc04 	addi	fp,fp,-16
 8017100:	3f000d0e 	bge	r7,fp,8017138 <___vfiprintf_internal_r+0xc70>
 8017104:	10800404 	addi	r2,r2,16
 8017108:	28c00044 	addi	r3,r5,1
 801710c:	45c00015 	stw	r23,0(r8)
 8017110:	41c00115 	stw	r7,4(r8)
 8017114:	d8801c15 	stw	r2,112(sp)
 8017118:	d8c01b15 	stw	r3,108(sp)
 801711c:	68fff40e 	bge	r13,r3,80170f0 <__alt_data_end+0xf80170f0>
 8017120:	1000101e 	bne	r2,zero,8017164 <___vfiprintf_internal_r+0xc9c>
 8017124:	e73ffc04 	addi	fp,fp,-16
 8017128:	01000044 	movi	r4,1
 801712c:	000b883a 	mov	r5,zero
 8017130:	d811883a 	mov	r8,sp
 8017134:	3f3ff316 	blt	r7,fp,8017104 <__alt_data_end+0xf8017104>
 8017138:	da802417 	ldw	r10,144(sp)
 801713c:	1705883a 	add	r2,r2,fp
 8017140:	47000115 	stw	fp,4(r8)
 8017144:	42800015 	stw	r10,0(r8)
 8017148:	d8801c15 	stw	r2,112(sp)
 801714c:	d9001b15 	stw	r4,108(sp)
 8017150:	00c001c4 	movi	r3,7
 8017154:	19003616 	blt	r3,r4,8017230 <___vfiprintf_internal_r+0xd68>
 8017158:	42000204 	addi	r8,r8,8
 801715c:	21000044 	addi	r4,r4,1
 8017160:	003e5706 	br	8016ac0 <__alt_data_end+0xf8016ac0>
 8017164:	d9402117 	ldw	r5,132(sp)
 8017168:	d9002017 	ldw	r4,128(sp)
 801716c:	d9801a04 	addi	r6,sp,104
 8017170:	d9c02b15 	stw	r7,172(sp)
 8017174:	db402a15 	stw	r13,168(sp)
 8017178:	80163b40 	call	80163b4 <__sprint_r.part.0>
 801717c:	d9c02b17 	ldw	r7,172(sp)
 8017180:	db402a17 	ldw	r13,168(sp)
 8017184:	1000241e 	bne	r2,zero,8017218 <___vfiprintf_internal_r+0xd50>
 8017188:	d9401b17 	ldw	r5,108(sp)
 801718c:	d8801c17 	ldw	r2,112(sp)
 8017190:	d811883a 	mov	r8,sp
 8017194:	29000044 	addi	r4,r5,1
 8017198:	003fd806 	br	80170fc <__alt_data_end+0xf80170fc>
 801719c:	d9401b17 	ldw	r5,108(sp)
 80171a0:	00c200b4 	movhi	r3,2050
 80171a4:	18c08b84 	addi	r3,r3,558
 80171a8:	d8c02415 	stw	r3,144(sp)
 80171ac:	29400044 	addi	r5,r5,1
 80171b0:	d8c02417 	ldw	r3,144(sp)
 80171b4:	14c5883a 	add	r2,r2,r19
 80171b8:	44c00115 	stw	r19,4(r8)
 80171bc:	40c00015 	stw	r3,0(r8)
 80171c0:	d8801c15 	stw	r2,112(sp)
 80171c4:	d9401b15 	stw	r5,108(sp)
 80171c8:	00c001c4 	movi	r3,7
 80171cc:	1940070e 	bge	r3,r5,80171ec <___vfiprintf_internal_r+0xd24>
 80171d0:	103e4826 	beq	r2,zero,8016af4 <__alt_data_end+0xf8016af4>
 80171d4:	d9402117 	ldw	r5,132(sp)
 80171d8:	d9002017 	ldw	r4,128(sp)
 80171dc:	d9801a04 	addi	r6,sp,104
 80171e0:	80163b40 	call	80163b4 <__sprint_r.part.0>
 80171e4:	10000c1e 	bne	r2,zero,8017218 <___vfiprintf_internal_r+0xd50>
 80171e8:	d8801c17 	ldw	r2,112(sp)
 80171ec:	8c80010e 	bge	r17,r18,80171f4 <___vfiprintf_internal_r+0xd2c>
 80171f0:	9023883a 	mov	r17,r18
 80171f4:	da802317 	ldw	r10,140(sp)
 80171f8:	5455883a 	add	r10,r10,r17
 80171fc:	da802315 	stw	r10,140(sp)
 8017200:	103e4126 	beq	r2,zero,8016b08 <__alt_data_end+0xf8016b08>
 8017204:	d9402117 	ldw	r5,132(sp)
 8017208:	d9002017 	ldw	r4,128(sp)
 801720c:	d9801a04 	addi	r6,sp,104
 8017210:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017214:	103e3c26 	beq	r2,zero,8016b08 <__alt_data_end+0xf8016b08>
 8017218:	dd002117 	ldw	r20,132(sp)
 801721c:	a080030b 	ldhu	r2,12(r20)
 8017220:	1080100c 	andi	r2,r2,64
 8017224:	1001231e 	bne	r2,zero,80176b4 <___vfiprintf_internal_r+0x11ec>
 8017228:	d8802317 	ldw	r2,140(sp)
 801722c:	003d7b06 	br	801681c <__alt_data_end+0xf801681c>
 8017230:	1000991e 	bne	r2,zero,8017498 <___vfiprintf_internal_r+0xfd0>
 8017234:	00c00044 	movi	r3,1
 8017238:	9805883a 	mov	r2,r19
 801723c:	dd400015 	stw	r21,0(sp)
 8017240:	dcc00115 	stw	r19,4(sp)
 8017244:	dcc01c15 	stw	r19,112(sp)
 8017248:	d8c01b15 	stw	r3,108(sp)
 801724c:	d811883a 	mov	r8,sp
 8017250:	42000204 	addi	r8,r8,8
 8017254:	a2c0010c 	andi	r11,r20,4
 8017258:	583fe426 	beq	r11,zero,80171ec <__alt_data_end+0xf80171ec>
 801725c:	8ca7c83a 	sub	r19,r17,r18
 8017260:	04ffe20e 	bge	zero,r19,80171ec <__alt_data_end+0xf80171ec>
 8017264:	01c00404 	movi	r7,16
 8017268:	3cffcc0e 	bge	r7,r19,801719c <__alt_data_end+0xf801719c>
 801726c:	028200b4 	movhi	r10,2050
 8017270:	52808b84 	addi	r10,r10,558
 8017274:	d9001b17 	ldw	r4,108(sp)
 8017278:	da802415 	stw	r10,144(sp)
 801727c:	382b883a 	mov	r21,r7
 8017280:	050001c4 	movi	r20,7
 8017284:	df002017 	ldw	fp,128(sp)
 8017288:	00000506 	br	80172a0 <___vfiprintf_internal_r+0xdd8>
 801728c:	21400084 	addi	r5,r4,2
 8017290:	42000204 	addi	r8,r8,8
 8017294:	1809883a 	mov	r4,r3
 8017298:	9cfffc04 	addi	r19,r19,-16
 801729c:	acffc40e 	bge	r21,r19,80171b0 <__alt_data_end+0xf80171b0>
 80172a0:	10800404 	addi	r2,r2,16
 80172a4:	20c00044 	addi	r3,r4,1
 80172a8:	45800015 	stw	r22,0(r8)
 80172ac:	45400115 	stw	r21,4(r8)
 80172b0:	d8801c15 	stw	r2,112(sp)
 80172b4:	d8c01b15 	stw	r3,108(sp)
 80172b8:	a0fff40e 	bge	r20,r3,801728c <__alt_data_end+0xf801728c>
 80172bc:	1000041e 	bne	r2,zero,80172d0 <___vfiprintf_internal_r+0xe08>
 80172c0:	01400044 	movi	r5,1
 80172c4:	0009883a 	mov	r4,zero
 80172c8:	d811883a 	mov	r8,sp
 80172cc:	003ff206 	br	8017298 <__alt_data_end+0xf8017298>
 80172d0:	d9402117 	ldw	r5,132(sp)
 80172d4:	d9801a04 	addi	r6,sp,104
 80172d8:	e009883a 	mov	r4,fp
 80172dc:	80163b40 	call	80163b4 <__sprint_r.part.0>
 80172e0:	103fcd1e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 80172e4:	d9001b17 	ldw	r4,108(sp)
 80172e8:	d8801c17 	ldw	r2,112(sp)
 80172ec:	d811883a 	mov	r8,sp
 80172f0:	21400044 	addi	r5,r4,1
 80172f4:	003fe806 	br	8017298 <__alt_data_end+0xf8017298>
 80172f8:	d9402117 	ldw	r5,132(sp)
 80172fc:	d9002017 	ldw	r4,128(sp)
 8017300:	d9801a04 	addi	r6,sp,104
 8017304:	d9c02b15 	stw	r7,172(sp)
 8017308:	db402a15 	stw	r13,168(sp)
 801730c:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017310:	d9c02b17 	ldw	r7,172(sp)
 8017314:	db402a17 	ldw	r13,168(sp)
 8017318:	103fbf1e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 801731c:	d9401b17 	ldw	r5,108(sp)
 8017320:	d8801c17 	ldw	r2,112(sp)
 8017324:	d811883a 	mov	r8,sp
 8017328:	29800044 	addi	r6,r5,1
 801732c:	003dc406 	br	8016a40 <__alt_data_end+0xf8016a40>
 8017330:	1000d21e 	bne	r2,zero,801767c <___vfiprintf_internal_r+0x11b4>
 8017334:	d8c01d87 	ldb	r3,118(sp)
 8017338:	18009526 	beq	r3,zero,8017590 <___vfiprintf_internal_r+0x10c8>
 801733c:	00800044 	movi	r2,1
 8017340:	d8c01d84 	addi	r3,sp,118
 8017344:	1009883a 	mov	r4,r2
 8017348:	d8c00015 	stw	r3,0(sp)
 801734c:	d8800115 	stw	r2,4(sp)
 8017350:	d811883a 	mov	r8,sp
 8017354:	200b883a 	mov	r5,r4
 8017358:	42000204 	addi	r8,r8,8
 801735c:	21000044 	addi	r4,r4,1
 8017360:	003d9706 	br	80169c0 <__alt_data_end+0xf80169c0>
 8017364:	d9001d04 	addi	r4,sp,116
 8017368:	00800084 	movi	r2,2
 801736c:	d9000015 	stw	r4,0(sp)
 8017370:	d8800115 	stw	r2,4(sp)
 8017374:	1809883a 	mov	r4,r3
 8017378:	d811883a 	mov	r8,sp
 801737c:	200b883a 	mov	r5,r4
 8017380:	42000204 	addi	r8,r8,8
 8017384:	21000044 	addi	r4,r4,1
 8017388:	003f4e06 	br	80170c4 <__alt_data_end+0xf80170c4>
 801738c:	d8001d85 	stb	zero,118(sp)
 8017390:	48005016 	blt	r9,zero,80174d4 <___vfiprintf_internal_r+0x100c>
 8017394:	00ffdfc4 	movi	r3,-129
 8017398:	94c4b03a 	or	r2,r18,r19
 801739c:	a0e8703a 	and	r20,r20,r3
 80173a0:	103d4426 	beq	r2,zero,80168b4 <__alt_data_end+0xf80168b4>
 80173a4:	0039883a 	mov	fp,zero
 80173a8:	d9002617 	ldw	r4,152(sp)
 80173ac:	dd401a04 	addi	r21,sp,104
 80173b0:	908003cc 	andi	r2,r18,15
 80173b4:	9806973a 	slli	r3,r19,28
 80173b8:	2085883a 	add	r2,r4,r2
 80173bc:	9024d13a 	srli	r18,r18,4
 80173c0:	10800003 	ldbu	r2,0(r2)
 80173c4:	9826d13a 	srli	r19,r19,4
 80173c8:	ad7fffc4 	addi	r21,r21,-1
 80173cc:	1ca4b03a 	or	r18,r3,r18
 80173d0:	a8800005 	stb	r2,0(r21)
 80173d4:	94c4b03a 	or	r2,r18,r19
 80173d8:	103ff51e 	bne	r2,zero,80173b0 <__alt_data_end+0xf80173b0>
 80173dc:	003e5906 	br	8016d44 <__alt_data_end+0xf8016d44>
 80173e0:	d9402117 	ldw	r5,132(sp)
 80173e4:	d9002017 	ldw	r4,128(sp)
 80173e8:	d9801a04 	addi	r6,sp,104
 80173ec:	80163b40 	call	80163b4 <__sprint_r.part.0>
 80173f0:	103f891e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 80173f4:	d8801c17 	ldw	r2,112(sp)
 80173f8:	d811883a 	mov	r8,sp
 80173fc:	003f9506 	br	8017254 <__alt_data_end+0xf8017254>
 8017400:	d9402117 	ldw	r5,132(sp)
 8017404:	d9002017 	ldw	r4,128(sp)
 8017408:	d9801a04 	addi	r6,sp,104
 801740c:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017410:	103f811e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 8017414:	d811883a 	mov	r8,sp
 8017418:	003ced06 	br	80167d0 <__alt_data_end+0xf80167d0>
 801741c:	d9402117 	ldw	r5,132(sp)
 8017420:	d9002017 	ldw	r4,128(sp)
 8017424:	d9801a04 	addi	r6,sp,104
 8017428:	da402c15 	stw	r9,176(sp)
 801742c:	db802a15 	stw	r14,168(sp)
 8017430:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017434:	da402c17 	ldw	r9,176(sp)
 8017438:	db802a17 	ldw	r14,168(sp)
 801743c:	103f761e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 8017440:	d9401b17 	ldw	r5,108(sp)
 8017444:	d8801c17 	ldw	r2,112(sp)
 8017448:	d811883a 	mov	r8,sp
 801744c:	29000044 	addi	r4,r5,1
 8017450:	003d5b06 	br	80169c0 <__alt_data_end+0xf80169c0>
 8017454:	d9402117 	ldw	r5,132(sp)
 8017458:	d9002017 	ldw	r4,128(sp)
 801745c:	d9801a04 	addi	r6,sp,104
 8017460:	da402c15 	stw	r9,176(sp)
 8017464:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017468:	da402c17 	ldw	r9,176(sp)
 801746c:	103f6a1e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 8017470:	d9401b17 	ldw	r5,108(sp)
 8017474:	d8801c17 	ldw	r2,112(sp)
 8017478:	d811883a 	mov	r8,sp
 801747c:	29000044 	addi	r4,r5,1
 8017480:	003f1006 	br	80170c4 <__alt_data_end+0xf80170c4>
 8017484:	1000c31e 	bne	r2,zero,8017794 <___vfiprintf_internal_r+0x12cc>
 8017488:	01000044 	movi	r4,1
 801748c:	000b883a 	mov	r5,zero
 8017490:	d811883a 	mov	r8,sp
 8017494:	003f0d06 	br	80170cc <__alt_data_end+0xf80170cc>
 8017498:	d9402117 	ldw	r5,132(sp)
 801749c:	d9002017 	ldw	r4,128(sp)
 80174a0:	d9801a04 	addi	r6,sp,104
 80174a4:	80163b40 	call	80163b4 <__sprint_r.part.0>
 80174a8:	103f5b1e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 80174ac:	d9001b17 	ldw	r4,108(sp)
 80174b0:	d8801c17 	ldw	r2,112(sp)
 80174b4:	d811883a 	mov	r8,sp
 80174b8:	21000044 	addi	r4,r4,1
 80174bc:	003d8006 	br	8016ac0 <__alt_data_end+0xf8016ac0>
 80174c0:	010200b4 	movhi	r4,2050
 80174c4:	213f4304 	addi	r4,r4,-756
 80174c8:	d9002615 	stw	r4,152(sp)
 80174cc:	d8c02215 	stw	r3,136(sp)
 80174d0:	1029883a 	mov	r20,r2
 80174d4:	94c4b03a 	or	r2,r18,r19
 80174d8:	103fb21e 	bne	r2,zero,80173a4 <__alt_data_end+0xf80173a4>
 80174dc:	0039883a 	mov	fp,zero
 80174e0:	00800084 	movi	r2,2
 80174e4:	003e6b06 	br	8016e94 <__alt_data_end+0xf8016e94>
 80174e8:	da802217 	ldw	r10,136(sp)
 80174ec:	d8001d85 	stb	zero,118(sp)
 80174f0:	0027883a 	mov	r19,zero
 80174f4:	50800104 	addi	r2,r10,4
 80174f8:	54800017 	ldw	r18,0(r10)
 80174fc:	483e6016 	blt	r9,zero,8016e80 <__alt_data_end+0xf8016e80>
 8017500:	00ffdfc4 	movi	r3,-129
 8017504:	d8802215 	stw	r2,136(sp)
 8017508:	a0e8703a 	and	r20,r20,r3
 801750c:	0039883a 	mov	fp,zero
 8017510:	903ebb26 	beq	r18,zero,8017000 <__alt_data_end+0xf8017000>
 8017514:	00800244 	movi	r2,9
 8017518:	14bdee36 	bltu	r2,r18,8016cd4 <__alt_data_end+0xf8016cd4>
 801751c:	003eba06 	br	8017008 <__alt_data_end+0xf8017008>
 8017520:	00800c04 	movi	r2,48
 8017524:	d8c01d45 	stb	r3,117(sp)
 8017528:	d8801d05 	stb	r2,116(sp)
 801752c:	d8001d85 	stb	zero,118(sp)
 8017530:	a0c00094 	ori	r3,r20,2
 8017534:	4800a916 	blt	r9,zero,80177dc <___vfiprintf_internal_r+0x1314>
 8017538:	00bfdfc4 	movi	r2,-129
 801753c:	a096703a 	and	r11,r20,r2
 8017540:	5d000094 	ori	r20,r11,2
 8017544:	0039883a 	mov	fp,zero
 8017548:	003f9706 	br	80173a8 <__alt_data_end+0xf80173a8>
 801754c:	8025883a 	mov	r18,r16
 8017550:	003c2e06 	br	801660c <__alt_data_end+0xf801660c>
 8017554:	008200b4 	movhi	r2,2050
 8017558:	10bf4304 	addi	r2,r2,-756
 801755c:	0039883a 	mov	fp,zero
 8017560:	d8802615 	stw	r2,152(sp)
 8017564:	003f9006 	br	80173a8 <__alt_data_end+0xf80173a8>
 8017568:	04a5c83a 	sub	r18,zero,r18
 801756c:	07000b44 	movi	fp,45
 8017570:	9004c03a 	cmpne	r2,r18,zero
 8017574:	04e7c83a 	sub	r19,zero,r19
 8017578:	df001d85 	stb	fp,118(sp)
 801757c:	98a7c83a 	sub	r19,r19,r2
 8017580:	48009f16 	blt	r9,zero,8017800 <___vfiprintf_internal_r+0x1338>
 8017584:	00bfdfc4 	movi	r2,-129
 8017588:	a0a8703a 	and	r20,r20,r2
 801758c:	003dd006 	br	8016cd0 <__alt_data_end+0xf8016cd0>
 8017590:	70004c26 	beq	r14,zero,80176c4 <___vfiprintf_internal_r+0x11fc>
 8017594:	00800084 	movi	r2,2
 8017598:	d8c01d04 	addi	r3,sp,116
 801759c:	d8c00015 	stw	r3,0(sp)
 80175a0:	d8800115 	stw	r2,4(sp)
 80175a4:	01000044 	movi	r4,1
 80175a8:	d811883a 	mov	r8,sp
 80175ac:	003f7306 	br	801737c <__alt_data_end+0xf801737c>
 80175b0:	a080100c 	andi	r2,r20,64
 80175b4:	da802217 	ldw	r10,136(sp)
 80175b8:	103e0626 	beq	r2,zero,8016dd4 <__alt_data_end+0xf8016dd4>
 80175bc:	5480000f 	ldh	r18,0(r10)
 80175c0:	52800104 	addi	r10,r10,4
 80175c4:	da802215 	stw	r10,136(sp)
 80175c8:	9027d7fa 	srai	r19,r18,31
 80175cc:	9805883a 	mov	r2,r19
 80175d0:	003db806 	br	8016cb4 <__alt_data_end+0xf8016cb4>
 80175d4:	a080040c 	andi	r2,r20,16
 80175d8:	1000091e 	bne	r2,zero,8017600 <___vfiprintf_internal_r+0x1138>
 80175dc:	a2c0100c 	andi	r11,r20,64
 80175e0:	58000726 	beq	r11,zero,8017600 <___vfiprintf_internal_r+0x1138>
 80175e4:	da802217 	ldw	r10,136(sp)
 80175e8:	50800017 	ldw	r2,0(r10)
 80175ec:	52800104 	addi	r10,r10,4
 80175f0:	da802215 	stw	r10,136(sp)
 80175f4:	da802317 	ldw	r10,140(sp)
 80175f8:	1280000d 	sth	r10,0(r2)
 80175fc:	003be706 	br	801659c <__alt_data_end+0xf801659c>
 8017600:	da802217 	ldw	r10,136(sp)
 8017604:	50800017 	ldw	r2,0(r10)
 8017608:	52800104 	addi	r10,r10,4
 801760c:	da802215 	stw	r10,136(sp)
 8017610:	da802317 	ldw	r10,140(sp)
 8017614:	12800015 	stw	r10,0(r2)
 8017618:	003be006 	br	801659c <__alt_data_end+0xf801659c>
 801761c:	a080100c 	andi	r2,r20,64
 8017620:	da802217 	ldw	r10,136(sp)
 8017624:	10003026 	beq	r2,zero,80176e8 <___vfiprintf_internal_r+0x1220>
 8017628:	5480000b 	ldhu	r18,0(r10)
 801762c:	52800104 	addi	r10,r10,4
 8017630:	0027883a 	mov	r19,zero
 8017634:	da802215 	stw	r10,136(sp)
 8017638:	003d8006 	br	8016c3c <__alt_data_end+0xf8016c3c>
 801763c:	80c00007 	ldb	r3,0(r16)
 8017640:	003c0006 	br	8016644 <__alt_data_end+0xf8016644>
 8017644:	a080100c 	andi	r2,r20,64
 8017648:	d8001d85 	stb	zero,118(sp)
 801764c:	da802217 	ldw	r10,136(sp)
 8017650:	1000201e 	bne	r2,zero,80176d4 <___vfiprintf_internal_r+0x120c>
 8017654:	50800104 	addi	r2,r10,4
 8017658:	54800017 	ldw	r18,0(r10)
 801765c:	0027883a 	mov	r19,zero
 8017660:	483def0e 	bge	r9,zero,8016e20 <__alt_data_end+0xf8016e20>
 8017664:	94c6b03a 	or	r3,r18,r19
 8017668:	d8802215 	stw	r2,136(sp)
 801766c:	183d4e1e 	bne	r3,zero,8016ba8 <__alt_data_end+0xf8016ba8>
 8017670:	0039883a 	mov	fp,zero
 8017674:	0005883a 	mov	r2,zero
 8017678:	003e0606 	br	8016e94 <__alt_data_end+0xf8016e94>
 801767c:	d9402117 	ldw	r5,132(sp)
 8017680:	d9002017 	ldw	r4,128(sp)
 8017684:	d9801a04 	addi	r6,sp,104
 8017688:	da402c15 	stw	r9,176(sp)
 801768c:	db802a15 	stw	r14,168(sp)
 8017690:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017694:	da402c17 	ldw	r9,176(sp)
 8017698:	db802a17 	ldw	r14,168(sp)
 801769c:	103ede1e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 80176a0:	d9401b17 	ldw	r5,108(sp)
 80176a4:	d8801c17 	ldw	r2,112(sp)
 80176a8:	d811883a 	mov	r8,sp
 80176ac:	29000044 	addi	r4,r5,1
 80176b0:	003e7406 	br	8017084 <__alt_data_end+0xf8017084>
 80176b4:	00bfffc4 	movi	r2,-1
 80176b8:	003c5806 	br	801681c <__alt_data_end+0xf801681c>
 80176bc:	d811883a 	mov	r8,sp
 80176c0:	003ee806 	br	8017264 <__alt_data_end+0xf8017264>
 80176c4:	000b883a 	mov	r5,zero
 80176c8:	01000044 	movi	r4,1
 80176cc:	d811883a 	mov	r8,sp
 80176d0:	003e7c06 	br	80170c4 <__alt_data_end+0xf80170c4>
 80176d4:	50800104 	addi	r2,r10,4
 80176d8:	5480000b 	ldhu	r18,0(r10)
 80176dc:	0027883a 	mov	r19,zero
 80176e0:	483dcf0e 	bge	r9,zero,8016e20 <__alt_data_end+0xf8016e20>
 80176e4:	003fdf06 	br	8017664 <__alt_data_end+0xf8017664>
 80176e8:	54800017 	ldw	r18,0(r10)
 80176ec:	52800104 	addi	r10,r10,4
 80176f0:	0027883a 	mov	r19,zero
 80176f4:	da802215 	stw	r10,136(sp)
 80176f8:	003d5006 	br	8016c3c <__alt_data_end+0xf8016c3c>
 80176fc:	50800104 	addi	r2,r10,4
 8017700:	5480000b 	ldhu	r18,0(r10)
 8017704:	0027883a 	mov	r19,zero
 8017708:	483f7d0e 	bge	r9,zero,8017500 <__alt_data_end+0xf8017500>
 801770c:	003ddc06 	br	8016e80 <__alt_data_end+0xf8016e80>
 8017710:	d8c02215 	stw	r3,136(sp)
 8017714:	0039883a 	mov	fp,zero
 8017718:	003ddb06 	br	8016e88 <__alt_data_end+0xf8016e88>
 801771c:	028200b4 	movhi	r10,2050
 8017720:	52808784 	addi	r10,r10,542
 8017724:	da802415 	stw	r10,144(sp)
 8017728:	003e8306 	br	8017138 <__alt_data_end+0xf8017138>
 801772c:	d8801c17 	ldw	r2,112(sp)
 8017730:	dd002117 	ldw	r20,132(sp)
 8017734:	103eb926 	beq	r2,zero,801721c <__alt_data_end+0xf801721c>
 8017738:	d9002017 	ldw	r4,128(sp)
 801773c:	d9801a04 	addi	r6,sp,104
 8017740:	a00b883a 	mov	r5,r20
 8017744:	80163b40 	call	80163b4 <__sprint_r.part.0>
 8017748:	003eb406 	br	801721c <__alt_data_end+0xf801721c>
 801774c:	80c00043 	ldbu	r3,1(r16)
 8017750:	a5000814 	ori	r20,r20,32
 8017754:	84000044 	addi	r16,r16,1
 8017758:	18c03fcc 	andi	r3,r3,255
 801775c:	18c0201c 	xori	r3,r3,128
 8017760:	18ffe004 	addi	r3,r3,-128
 8017764:	003bb706 	br	8016644 <__alt_data_end+0xf8016644>
 8017768:	a809883a 	mov	r4,r21
 801776c:	d8c02a15 	stw	r3,168(sp)
 8017770:	da002b15 	stw	r8,172(sp)
 8017774:	800526c0 	call	800526c <strlen>
 8017778:	d8c02a17 	ldw	r3,168(sp)
 801777c:	1027883a 	mov	r19,r2
 8017780:	df001d83 	ldbu	fp,118(sp)
 8017784:	d8c02215 	stw	r3,136(sp)
 8017788:	0013883a 	mov	r9,zero
 801778c:	da002b17 	ldw	r8,172(sp)
 8017790:	003c4d06 	br	80168c8 <__alt_data_end+0xf80168c8>
 8017794:	d9402117 	ldw	r5,132(sp)
 8017798:	d9002017 	ldw	r4,128(sp)
 801779c:	d9801a04 	addi	r6,sp,104
 80177a0:	da402c15 	stw	r9,176(sp)
 80177a4:	80163b40 	call	80163b4 <__sprint_r.part.0>
 80177a8:	da402c17 	ldw	r9,176(sp)
 80177ac:	103e9a1e 	bne	r2,zero,8017218 <__alt_data_end+0xf8017218>
 80177b0:	d9401b17 	ldw	r5,108(sp)
 80177b4:	d8801c17 	ldw	r2,112(sp)
 80177b8:	d811883a 	mov	r8,sp
 80177bc:	29000044 	addi	r4,r5,1
 80177c0:	003e4206 	br	80170cc <__alt_data_end+0xf80170cc>
 80177c4:	d9401b17 	ldw	r5,108(sp)
 80177c8:	010200b4 	movhi	r4,2050
 80177cc:	21008b84 	addi	r4,r4,558
 80177d0:	d9002415 	stw	r4,144(sp)
 80177d4:	29400044 	addi	r5,r5,1
 80177d8:	003c6d06 	br	8016990 <__alt_data_end+0xf8016990>
 80177dc:	0039883a 	mov	fp,zero
 80177e0:	00800084 	movi	r2,2
 80177e4:	10803fcc 	andi	r2,r2,255
 80177e8:	01000044 	movi	r4,1
 80177ec:	11001e26 	beq	r2,r4,8017868 <___vfiprintf_internal_r+0x13a0>
 80177f0:	01000084 	movi	r4,2
 80177f4:	11001e1e 	bne	r2,r4,8017870 <___vfiprintf_internal_r+0x13a8>
 80177f8:	1829883a 	mov	r20,r3
 80177fc:	003eea06 	br	80173a8 <__alt_data_end+0xf80173a8>
 8017800:	a007883a 	mov	r3,r20
 8017804:	00800044 	movi	r2,1
 8017808:	003ff606 	br	80177e4 <__alt_data_end+0xf80177e4>
 801780c:	00800184 	movi	r2,6
 8017810:	1240012e 	bgeu	r2,r9,8017818 <___vfiprintf_internal_r+0x1350>
 8017814:	1013883a 	mov	r9,r2
 8017818:	4827883a 	mov	r19,r9
 801781c:	4825883a 	mov	r18,r9
 8017820:	48001516 	blt	r9,zero,8017878 <___vfiprintf_internal_r+0x13b0>
 8017824:	054200b4 	movhi	r21,2050
 8017828:	d8c02215 	stw	r3,136(sp)
 801782c:	ad7f4804 	addi	r21,r21,-736
 8017830:	003d1406 	br	8016c84 <__alt_data_end+0xf8016c84>
 8017834:	028200b4 	movhi	r10,2050
 8017838:	52808784 	addi	r10,r10,542
 801783c:	da802415 	stw	r10,144(sp)
 8017840:	200d883a 	mov	r6,r4
 8017844:	003c9106 	br	8016a8c <__alt_data_end+0xf8016a8c>
 8017848:	5021883a 	mov	r16,r10
 801784c:	0013883a 	mov	r9,zero
 8017850:	003b7d06 	br	8016648 <__alt_data_end+0xf8016648>
 8017854:	4827883a 	mov	r19,r9
 8017858:	df001d83 	ldbu	fp,118(sp)
 801785c:	d8c02215 	stw	r3,136(sp)
 8017860:	0013883a 	mov	r9,zero
 8017864:	003c1806 	br	80168c8 <__alt_data_end+0xf80168c8>
 8017868:	1829883a 	mov	r20,r3
 801786c:	003d1806 	br	8016cd0 <__alt_data_end+0xf8016cd0>
 8017870:	1829883a 	mov	r20,r3
 8017874:	003ccd06 	br	8016bac <__alt_data_end+0xf8016bac>
 8017878:	0025883a 	mov	r18,zero
 801787c:	003fe906 	br	8017824 <__alt_data_end+0xf8017824>
 8017880:	d8802217 	ldw	r2,136(sp)
 8017884:	80c00043 	ldbu	r3,1(r16)
 8017888:	5021883a 	mov	r16,r10
 801788c:	12400017 	ldw	r9,0(r2)
 8017890:	10800104 	addi	r2,r2,4
 8017894:	d8802215 	stw	r2,136(sp)
 8017898:	483faf0e 	bge	r9,zero,8017758 <__alt_data_end+0xf8017758>
 801789c:	18c03fcc 	andi	r3,r3,255
 80178a0:	18c0201c 	xori	r3,r3,128
 80178a4:	027fffc4 	movi	r9,-1
 80178a8:	18ffe004 	addi	r3,r3,-128
 80178ac:	003b6506 	br	8016644 <__alt_data_end+0xf8016644>
 80178b0:	d9c01d85 	stb	r7,118(sp)
 80178b4:	003ca006 	br	8016b38 <__alt_data_end+0xf8016b38>
 80178b8:	d9c01d85 	stb	r7,118(sp)
 80178bc:	003cad06 	br	8016b74 <__alt_data_end+0xf8016b74>
 80178c0:	d9c01d85 	stb	r7,118(sp)
 80178c4:	003d7d06 	br	8016ebc <__alt_data_end+0xf8016ebc>
 80178c8:	d9c01d85 	stb	r7,118(sp)
 80178cc:	003d5f06 	br	8016e4c <__alt_data_end+0xf8016e4c>
 80178d0:	a080004c 	andi	r2,r20,1
 80178d4:	0039883a 	mov	fp,zero
 80178d8:	10000526 	beq	r2,zero,80178f0 <___vfiprintf_internal_r+0x1428>
 80178dc:	00800c04 	movi	r2,48
 80178e0:	d88019c5 	stb	r2,103(sp)
 80178e4:	dcc02717 	ldw	r19,156(sp)
 80178e8:	dd4019c4 	addi	r21,sp,103
 80178ec:	003bf606 	br	80168c8 <__alt_data_end+0xf80168c8>
 80178f0:	0027883a 	mov	r19,zero
 80178f4:	dd401a04 	addi	r21,sp,104
 80178f8:	003bf306 	br	80168c8 <__alt_data_end+0xf80168c8>
 80178fc:	d9c01d85 	stb	r7,118(sp)
 8017900:	003dc806 	br	8017024 <__alt_data_end+0xf8017024>
 8017904:	d9c01d85 	stb	r7,118(sp)
 8017908:	003d3a06 	br	8016df4 <__alt_data_end+0xf8016df4>
 801790c:	d9c01d85 	stb	r7,118(sp)
 8017910:	003d2a06 	br	8016dbc <__alt_data_end+0xf8016dbc>
 8017914:	d9c01d85 	stb	r7,118(sp)
 8017918:	003cde06 	br	8016c94 <__alt_data_end+0xf8016c94>
 801791c:	d9c01d85 	stb	r7,118(sp)
 8017920:	003cbc06 	br	8016c14 <__alt_data_end+0xf8016c14>

08017924 <__vfiprintf_internal>:
 8017924:	008200b4 	movhi	r2,2050
 8017928:	10881404 	addi	r2,r2,8272
 801792c:	300f883a 	mov	r7,r6
 8017930:	280d883a 	mov	r6,r5
 8017934:	200b883a 	mov	r5,r4
 8017938:	11000017 	ldw	r4,0(r2)
 801793c:	80164c81 	jmpi	80164c8 <___vfiprintf_internal_r>

08017940 <__sbprintf>:
 8017940:	2880030b 	ldhu	r2,12(r5)
 8017944:	2ac01917 	ldw	r11,100(r5)
 8017948:	2a80038b 	ldhu	r10,14(r5)
 801794c:	2a400717 	ldw	r9,28(r5)
 8017950:	2a000917 	ldw	r8,36(r5)
 8017954:	defee204 	addi	sp,sp,-1144
 8017958:	00c10004 	movi	r3,1024
 801795c:	dc011a15 	stw	r16,1128(sp)
 8017960:	10bfff4c 	andi	r2,r2,65533
 8017964:	2821883a 	mov	r16,r5
 8017968:	d8cb883a 	add	r5,sp,r3
 801796c:	dc811c15 	stw	r18,1136(sp)
 8017970:	dc411b15 	stw	r17,1132(sp)
 8017974:	dfc11d15 	stw	ra,1140(sp)
 8017978:	2025883a 	mov	r18,r4
 801797c:	d881030d 	sth	r2,1036(sp)
 8017980:	dac11915 	stw	r11,1124(sp)
 8017984:	da81038d 	sth	r10,1038(sp)
 8017988:	da410715 	stw	r9,1052(sp)
 801798c:	da010915 	stw	r8,1060(sp)
 8017990:	dec10015 	stw	sp,1024(sp)
 8017994:	dec10415 	stw	sp,1040(sp)
 8017998:	d8c10215 	stw	r3,1032(sp)
 801799c:	d8c10515 	stw	r3,1044(sp)
 80179a0:	d8010615 	stw	zero,1048(sp)
 80179a4:	80164c80 	call	80164c8 <___vfiprintf_internal_r>
 80179a8:	1023883a 	mov	r17,r2
 80179ac:	10000416 	blt	r2,zero,80179c0 <__sbprintf+0x80>
 80179b0:	d9410004 	addi	r5,sp,1024
 80179b4:	9009883a 	mov	r4,r18
 80179b8:	800e4a00 	call	800e4a0 <_fflush_r>
 80179bc:	10000d1e 	bne	r2,zero,80179f4 <__sbprintf+0xb4>
 80179c0:	d881030b 	ldhu	r2,1036(sp)
 80179c4:	1080100c 	andi	r2,r2,64
 80179c8:	10000326 	beq	r2,zero,80179d8 <__sbprintf+0x98>
 80179cc:	8080030b 	ldhu	r2,12(r16)
 80179d0:	10801014 	ori	r2,r2,64
 80179d4:	8080030d 	sth	r2,12(r16)
 80179d8:	8805883a 	mov	r2,r17
 80179dc:	dfc11d17 	ldw	ra,1140(sp)
 80179e0:	dc811c17 	ldw	r18,1136(sp)
 80179e4:	dc411b17 	ldw	r17,1132(sp)
 80179e8:	dc011a17 	ldw	r16,1128(sp)
 80179ec:	dec11e04 	addi	sp,sp,1144
 80179f0:	f800283a 	ret
 80179f4:	047fffc4 	movi	r17,-1
 80179f8:	003ff106 	br	80179c0 <__alt_data_end+0xf80179c0>

080179fc <_calloc_r>:
 80179fc:	298b383a 	mul	r5,r5,r6
 8017a00:	defffe04 	addi	sp,sp,-8
 8017a04:	dfc00115 	stw	ra,4(sp)
 8017a08:	dc000015 	stw	r16,0(sp)
 8017a0c:	8003fd40 	call	8003fd4 <_malloc_r>
 8017a10:	10002926 	beq	r2,zero,8017ab8 <_calloc_r+0xbc>
 8017a14:	11bfff17 	ldw	r6,-4(r2)
 8017a18:	1021883a 	mov	r16,r2
 8017a1c:	00bfff04 	movi	r2,-4
 8017a20:	308c703a 	and	r6,r6,r2
 8017a24:	00c00904 	movi	r3,36
 8017a28:	308d883a 	add	r6,r6,r2
 8017a2c:	19801636 	bltu	r3,r6,8017a88 <_calloc_r+0x8c>
 8017a30:	008004c4 	movi	r2,19
 8017a34:	11800b2e 	bgeu	r2,r6,8017a64 <_calloc_r+0x68>
 8017a38:	80000015 	stw	zero,0(r16)
 8017a3c:	80000115 	stw	zero,4(r16)
 8017a40:	008006c4 	movi	r2,27
 8017a44:	11801a2e 	bgeu	r2,r6,8017ab0 <_calloc_r+0xb4>
 8017a48:	80000215 	stw	zero,8(r16)
 8017a4c:	80000315 	stw	zero,12(r16)
 8017a50:	30c0151e 	bne	r6,r3,8017aa8 <_calloc_r+0xac>
 8017a54:	80000415 	stw	zero,16(r16)
 8017a58:	80800604 	addi	r2,r16,24
 8017a5c:	80000515 	stw	zero,20(r16)
 8017a60:	00000106 	br	8017a68 <_calloc_r+0x6c>
 8017a64:	8005883a 	mov	r2,r16
 8017a68:	10000015 	stw	zero,0(r2)
 8017a6c:	10000115 	stw	zero,4(r2)
 8017a70:	10000215 	stw	zero,8(r2)
 8017a74:	8005883a 	mov	r2,r16
 8017a78:	dfc00117 	ldw	ra,4(sp)
 8017a7c:	dc000017 	ldw	r16,0(sp)
 8017a80:	dec00204 	addi	sp,sp,8
 8017a84:	f800283a 	ret
 8017a88:	000b883a 	mov	r5,zero
 8017a8c:	8009883a 	mov	r4,r16
 8017a90:	80047e00 	call	80047e0 <memset>
 8017a94:	8005883a 	mov	r2,r16
 8017a98:	dfc00117 	ldw	ra,4(sp)
 8017a9c:	dc000017 	ldw	r16,0(sp)
 8017aa0:	dec00204 	addi	sp,sp,8
 8017aa4:	f800283a 	ret
 8017aa8:	80800404 	addi	r2,r16,16
 8017aac:	003fee06 	br	8017a68 <__alt_data_end+0xf8017a68>
 8017ab0:	80800204 	addi	r2,r16,8
 8017ab4:	003fec06 	br	8017a68 <__alt_data_end+0xf8017a68>
 8017ab8:	0005883a 	mov	r2,zero
 8017abc:	003fee06 	br	8017a78 <__alt_data_end+0xf8017a78>

08017ac0 <_fclose_r>:
 8017ac0:	28003926 	beq	r5,zero,8017ba8 <_fclose_r+0xe8>
 8017ac4:	defffc04 	addi	sp,sp,-16
 8017ac8:	dc400115 	stw	r17,4(sp)
 8017acc:	dc000015 	stw	r16,0(sp)
 8017ad0:	dfc00315 	stw	ra,12(sp)
 8017ad4:	dc800215 	stw	r18,8(sp)
 8017ad8:	2023883a 	mov	r17,r4
 8017adc:	2821883a 	mov	r16,r5
 8017ae0:	20000226 	beq	r4,zero,8017aec <_fclose_r+0x2c>
 8017ae4:	20800e17 	ldw	r2,56(r4)
 8017ae8:	10002726 	beq	r2,zero,8017b88 <_fclose_r+0xc8>
 8017aec:	8080030f 	ldh	r2,12(r16)
 8017af0:	1000071e 	bne	r2,zero,8017b10 <_fclose_r+0x50>
 8017af4:	0005883a 	mov	r2,zero
 8017af8:	dfc00317 	ldw	ra,12(sp)
 8017afc:	dc800217 	ldw	r18,8(sp)
 8017b00:	dc400117 	ldw	r17,4(sp)
 8017b04:	dc000017 	ldw	r16,0(sp)
 8017b08:	dec00404 	addi	sp,sp,16
 8017b0c:	f800283a 	ret
 8017b10:	800b883a 	mov	r5,r16
 8017b14:	8809883a 	mov	r4,r17
 8017b18:	800e2840 	call	800e284 <__sflush_r>
 8017b1c:	1025883a 	mov	r18,r2
 8017b20:	80800b17 	ldw	r2,44(r16)
 8017b24:	10000426 	beq	r2,zero,8017b38 <_fclose_r+0x78>
 8017b28:	81400717 	ldw	r5,28(r16)
 8017b2c:	8809883a 	mov	r4,r17
 8017b30:	103ee83a 	callr	r2
 8017b34:	10001616 	blt	r2,zero,8017b90 <_fclose_r+0xd0>
 8017b38:	8080030b 	ldhu	r2,12(r16)
 8017b3c:	1080200c 	andi	r2,r2,128
 8017b40:	1000151e 	bne	r2,zero,8017b98 <_fclose_r+0xd8>
 8017b44:	81400c17 	ldw	r5,48(r16)
 8017b48:	28000526 	beq	r5,zero,8017b60 <_fclose_r+0xa0>
 8017b4c:	80801004 	addi	r2,r16,64
 8017b50:	28800226 	beq	r5,r2,8017b5c <_fclose_r+0x9c>
 8017b54:	8809883a 	mov	r4,r17
 8017b58:	800ec500 	call	800ec50 <_free_r>
 8017b5c:	80000c15 	stw	zero,48(r16)
 8017b60:	81401117 	ldw	r5,68(r16)
 8017b64:	28000326 	beq	r5,zero,8017b74 <_fclose_r+0xb4>
 8017b68:	8809883a 	mov	r4,r17
 8017b6c:	800ec500 	call	800ec50 <_free_r>
 8017b70:	80001115 	stw	zero,68(r16)
 8017b74:	800e88c0 	call	800e88c <__sfp_lock_acquire>
 8017b78:	8000030d 	sth	zero,12(r16)
 8017b7c:	800e8900 	call	800e890 <__sfp_lock_release>
 8017b80:	9005883a 	mov	r2,r18
 8017b84:	003fdc06 	br	8017af8 <__alt_data_end+0xf8017af8>
 8017b88:	800e87c0 	call	800e87c <__sinit>
 8017b8c:	003fd706 	br	8017aec <__alt_data_end+0xf8017aec>
 8017b90:	04bfffc4 	movi	r18,-1
 8017b94:	003fe806 	br	8017b38 <__alt_data_end+0xf8017b38>
 8017b98:	81400417 	ldw	r5,16(r16)
 8017b9c:	8809883a 	mov	r4,r17
 8017ba0:	800ec500 	call	800ec50 <_free_r>
 8017ba4:	003fe706 	br	8017b44 <__alt_data_end+0xf8017b44>
 8017ba8:	0005883a 	mov	r2,zero
 8017bac:	f800283a 	ret

08017bb0 <fclose>:
 8017bb0:	008200b4 	movhi	r2,2050
 8017bb4:	10881404 	addi	r2,r2,8272
 8017bb8:	200b883a 	mov	r5,r4
 8017bbc:	11000017 	ldw	r4,0(r2)
 8017bc0:	8017ac01 	jmpi	8017ac0 <_fclose_r>

08017bc4 <__fputwc>:
 8017bc4:	defff804 	addi	sp,sp,-32
 8017bc8:	dcc00415 	stw	r19,16(sp)
 8017bcc:	dc800315 	stw	r18,12(sp)
 8017bd0:	dc000115 	stw	r16,4(sp)
 8017bd4:	dfc00715 	stw	ra,28(sp)
 8017bd8:	dd400615 	stw	r21,24(sp)
 8017bdc:	dd000515 	stw	r20,20(sp)
 8017be0:	dc400215 	stw	r17,8(sp)
 8017be4:	2027883a 	mov	r19,r4
 8017be8:	2825883a 	mov	r18,r5
 8017bec:	3021883a 	mov	r16,r6
 8017bf0:	800f65c0 	call	800f65c <__locale_mb_cur_max>
 8017bf4:	00c00044 	movi	r3,1
 8017bf8:	10c03e26 	beq	r2,r3,8017cf4 <__fputwc+0x130>
 8017bfc:	81c01704 	addi	r7,r16,92
 8017c00:	900d883a 	mov	r6,r18
 8017c04:	d80b883a 	mov	r5,sp
 8017c08:	9809883a 	mov	r4,r19
 8017c0c:	8018c300 	call	8018c30 <_wcrtomb_r>
 8017c10:	1029883a 	mov	r20,r2
 8017c14:	00bfffc4 	movi	r2,-1
 8017c18:	a0802026 	beq	r20,r2,8017c9c <__fputwc+0xd8>
 8017c1c:	d9400003 	ldbu	r5,0(sp)
 8017c20:	a0001c26 	beq	r20,zero,8017c94 <__fputwc+0xd0>
 8017c24:	0023883a 	mov	r17,zero
 8017c28:	05400284 	movi	r21,10
 8017c2c:	00000906 	br	8017c54 <__fputwc+0x90>
 8017c30:	80800017 	ldw	r2,0(r16)
 8017c34:	11400005 	stb	r5,0(r2)
 8017c38:	80c00017 	ldw	r3,0(r16)
 8017c3c:	18c00044 	addi	r3,r3,1
 8017c40:	80c00015 	stw	r3,0(r16)
 8017c44:	8c400044 	addi	r17,r17,1
 8017c48:	dc45883a 	add	r2,sp,r17
 8017c4c:	8d00112e 	bgeu	r17,r20,8017c94 <__fputwc+0xd0>
 8017c50:	11400003 	ldbu	r5,0(r2)
 8017c54:	80c00217 	ldw	r3,8(r16)
 8017c58:	18ffffc4 	addi	r3,r3,-1
 8017c5c:	80c00215 	stw	r3,8(r16)
 8017c60:	183ff30e 	bge	r3,zero,8017c30 <__alt_data_end+0xf8017c30>
 8017c64:	80800617 	ldw	r2,24(r16)
 8017c68:	18801916 	blt	r3,r2,8017cd0 <__fputwc+0x10c>
 8017c6c:	80800017 	ldw	r2,0(r16)
 8017c70:	11400005 	stb	r5,0(r2)
 8017c74:	80800017 	ldw	r2,0(r16)
 8017c78:	10c00003 	ldbu	r3,0(r2)
 8017c7c:	10800044 	addi	r2,r2,1
 8017c80:	1d402326 	beq	r3,r21,8017d10 <__fputwc+0x14c>
 8017c84:	80800015 	stw	r2,0(r16)
 8017c88:	8c400044 	addi	r17,r17,1
 8017c8c:	dc45883a 	add	r2,sp,r17
 8017c90:	8d3fef36 	bltu	r17,r20,8017c50 <__alt_data_end+0xf8017c50>
 8017c94:	9005883a 	mov	r2,r18
 8017c98:	00000406 	br	8017cac <__fputwc+0xe8>
 8017c9c:	80c0030b 	ldhu	r3,12(r16)
 8017ca0:	a005883a 	mov	r2,r20
 8017ca4:	18c01014 	ori	r3,r3,64
 8017ca8:	80c0030d 	sth	r3,12(r16)
 8017cac:	dfc00717 	ldw	ra,28(sp)
 8017cb0:	dd400617 	ldw	r21,24(sp)
 8017cb4:	dd000517 	ldw	r20,20(sp)
 8017cb8:	dcc00417 	ldw	r19,16(sp)
 8017cbc:	dc800317 	ldw	r18,12(sp)
 8017cc0:	dc400217 	ldw	r17,8(sp)
 8017cc4:	dc000117 	ldw	r16,4(sp)
 8017cc8:	dec00804 	addi	sp,sp,32
 8017ccc:	f800283a 	ret
 8017cd0:	800d883a 	mov	r6,r16
 8017cd4:	29403fcc 	andi	r5,r5,255
 8017cd8:	9809883a 	mov	r4,r19
 8017cdc:	8018ad80 	call	8018ad8 <__swbuf_r>
 8017ce0:	10bfffe0 	cmpeqi	r2,r2,-1
 8017ce4:	10803fcc 	andi	r2,r2,255
 8017ce8:	103fd626 	beq	r2,zero,8017c44 <__alt_data_end+0xf8017c44>
 8017cec:	00bfffc4 	movi	r2,-1
 8017cf0:	003fee06 	br	8017cac <__alt_data_end+0xf8017cac>
 8017cf4:	90ffffc4 	addi	r3,r18,-1
 8017cf8:	01003f84 	movi	r4,254
 8017cfc:	20ffbf36 	bltu	r4,r3,8017bfc <__alt_data_end+0xf8017bfc>
 8017d00:	900b883a 	mov	r5,r18
 8017d04:	dc800005 	stb	r18,0(sp)
 8017d08:	1029883a 	mov	r20,r2
 8017d0c:	003fc506 	br	8017c24 <__alt_data_end+0xf8017c24>
 8017d10:	800d883a 	mov	r6,r16
 8017d14:	a80b883a 	mov	r5,r21
 8017d18:	9809883a 	mov	r4,r19
 8017d1c:	8018ad80 	call	8018ad8 <__swbuf_r>
 8017d20:	10bfffe0 	cmpeqi	r2,r2,-1
 8017d24:	003fef06 	br	8017ce4 <__alt_data_end+0xf8017ce4>

08017d28 <_fputwc_r>:
 8017d28:	3080030b 	ldhu	r2,12(r6)
 8017d2c:	10c8000c 	andi	r3,r2,8192
 8017d30:	1800051e 	bne	r3,zero,8017d48 <_fputwc_r+0x20>
 8017d34:	30c01917 	ldw	r3,100(r6)
 8017d38:	10880014 	ori	r2,r2,8192
 8017d3c:	3080030d 	sth	r2,12(r6)
 8017d40:	18880014 	ori	r2,r3,8192
 8017d44:	30801915 	stw	r2,100(r6)
 8017d48:	8017bc41 	jmpi	8017bc4 <__fputwc>

08017d4c <fputwc>:
 8017d4c:	008200b4 	movhi	r2,2050
 8017d50:	defffc04 	addi	sp,sp,-16
 8017d54:	10881404 	addi	r2,r2,8272
 8017d58:	dc000115 	stw	r16,4(sp)
 8017d5c:	14000017 	ldw	r16,0(r2)
 8017d60:	dc400215 	stw	r17,8(sp)
 8017d64:	dfc00315 	stw	ra,12(sp)
 8017d68:	2023883a 	mov	r17,r4
 8017d6c:	80000226 	beq	r16,zero,8017d78 <fputwc+0x2c>
 8017d70:	80800e17 	ldw	r2,56(r16)
 8017d74:	10001026 	beq	r2,zero,8017db8 <fputwc+0x6c>
 8017d78:	2880030b 	ldhu	r2,12(r5)
 8017d7c:	10c8000c 	andi	r3,r2,8192
 8017d80:	1800051e 	bne	r3,zero,8017d98 <fputwc+0x4c>
 8017d84:	28c01917 	ldw	r3,100(r5)
 8017d88:	10880014 	ori	r2,r2,8192
 8017d8c:	2880030d 	sth	r2,12(r5)
 8017d90:	18880014 	ori	r2,r3,8192
 8017d94:	28801915 	stw	r2,100(r5)
 8017d98:	280d883a 	mov	r6,r5
 8017d9c:	8009883a 	mov	r4,r16
 8017da0:	880b883a 	mov	r5,r17
 8017da4:	dfc00317 	ldw	ra,12(sp)
 8017da8:	dc400217 	ldw	r17,8(sp)
 8017dac:	dc000117 	ldw	r16,4(sp)
 8017db0:	dec00404 	addi	sp,sp,16
 8017db4:	8017bc41 	jmpi	8017bc4 <__fputwc>
 8017db8:	8009883a 	mov	r4,r16
 8017dbc:	d9400015 	stw	r5,0(sp)
 8017dc0:	800e87c0 	call	800e87c <__sinit>
 8017dc4:	d9400017 	ldw	r5,0(sp)
 8017dc8:	003feb06 	br	8017d78 <__alt_data_end+0xf8017d78>

08017dcc <_fstat_r>:
 8017dcc:	defffd04 	addi	sp,sp,-12
 8017dd0:	2805883a 	mov	r2,r5
 8017dd4:	dc000015 	stw	r16,0(sp)
 8017dd8:	040200b4 	movhi	r16,2050
 8017ddc:	dc400115 	stw	r17,4(sp)
 8017de0:	840f2904 	addi	r16,r16,15524
 8017de4:	2023883a 	mov	r17,r4
 8017de8:	300b883a 	mov	r5,r6
 8017dec:	1009883a 	mov	r4,r2
 8017df0:	dfc00215 	stw	ra,8(sp)
 8017df4:	80000015 	stw	zero,0(r16)
 8017df8:	801c6ac0 	call	801c6ac <fstat>
 8017dfc:	00ffffc4 	movi	r3,-1
 8017e00:	10c00526 	beq	r2,r3,8017e18 <_fstat_r+0x4c>
 8017e04:	dfc00217 	ldw	ra,8(sp)
 8017e08:	dc400117 	ldw	r17,4(sp)
 8017e0c:	dc000017 	ldw	r16,0(sp)
 8017e10:	dec00304 	addi	sp,sp,12
 8017e14:	f800283a 	ret
 8017e18:	80c00017 	ldw	r3,0(r16)
 8017e1c:	183ff926 	beq	r3,zero,8017e04 <__alt_data_end+0xf8017e04>
 8017e20:	88c00015 	stw	r3,0(r17)
 8017e24:	003ff706 	br	8017e04 <__alt_data_end+0xf8017e04>

08017e28 <rshift>:
 8017e28:	2807d17a 	srai	r3,r5,5
 8017e2c:	20800417 	ldw	r2,16(r4)
 8017e30:	22000504 	addi	r8,r4,20
 8017e34:	1880250e 	bge	r3,r2,8017ecc <rshift+0xa4>
 8017e38:	1085883a 	add	r2,r2,r2
 8017e3c:	18c7883a 	add	r3,r3,r3
 8017e40:	1085883a 	add	r2,r2,r2
 8017e44:	18c7883a 	add	r3,r3,r3
 8017e48:	294007cc 	andi	r5,r5,31
 8017e4c:	4085883a 	add	r2,r8,r2
 8017e50:	40c7883a 	add	r3,r8,r3
 8017e54:	28002026 	beq	r5,zero,8017ed8 <rshift+0xb0>
 8017e58:	19800017 	ldw	r6,0(r3)
 8017e5c:	02c00804 	movi	r11,32
 8017e60:	19c00104 	addi	r7,r3,4
 8017e64:	5957c83a 	sub	r11,r11,r5
 8017e68:	314cd83a 	srl	r6,r6,r5
 8017e6c:	38802c2e 	bgeu	r7,r2,8017f20 <rshift+0xf8>
 8017e70:	4015883a 	mov	r10,r8
 8017e74:	3a400017 	ldw	r9,0(r7)
 8017e78:	52800104 	addi	r10,r10,4
 8017e7c:	39c00104 	addi	r7,r7,4
 8017e80:	4ad2983a 	sll	r9,r9,r11
 8017e84:	498cb03a 	or	r6,r9,r6
 8017e88:	51bfff15 	stw	r6,-4(r10)
 8017e8c:	39bfff17 	ldw	r6,-4(r7)
 8017e90:	314cd83a 	srl	r6,r6,r5
 8017e94:	38bff736 	bltu	r7,r2,8017e74 <__alt_data_end+0xf8017e74>
 8017e98:	10c7c83a 	sub	r3,r2,r3
 8017e9c:	18fffec4 	addi	r3,r3,-5
 8017ea0:	1806d0ba 	srli	r3,r3,2
 8017ea4:	18c00044 	addi	r3,r3,1
 8017ea8:	18c7883a 	add	r3,r3,r3
 8017eac:	18c7883a 	add	r3,r3,r3
 8017eb0:	40c7883a 	add	r3,r8,r3
 8017eb4:	19800015 	stw	r6,0(r3)
 8017eb8:	30000126 	beq	r6,zero,8017ec0 <rshift+0x98>
 8017ebc:	18c00104 	addi	r3,r3,4
 8017ec0:	1a05c83a 	sub	r2,r3,r8
 8017ec4:	1005d0ba 	srai	r2,r2,2
 8017ec8:	00001206 	br	8017f14 <rshift+0xec>
 8017ecc:	20000415 	stw	zero,16(r4)
 8017ed0:	20000515 	stw	zero,20(r4)
 8017ed4:	f800283a 	ret
 8017ed8:	18bffc2e 	bgeu	r3,r2,8017ecc <__alt_data_end+0xf8017ecc>
 8017edc:	180d883a 	mov	r6,r3
 8017ee0:	400b883a 	mov	r5,r8
 8017ee4:	31c00017 	ldw	r7,0(r6)
 8017ee8:	29400104 	addi	r5,r5,4
 8017eec:	31800104 	addi	r6,r6,4
 8017ef0:	29ffff15 	stw	r7,-4(r5)
 8017ef4:	30bffb36 	bltu	r6,r2,8017ee4 <__alt_data_end+0xf8017ee4>
 8017ef8:	00c6303a 	nor	r3,zero,r3
 8017efc:	1885883a 	add	r2,r3,r2
 8017f00:	1004d0ba 	srli	r2,r2,2
 8017f04:	10800044 	addi	r2,r2,1
 8017f08:	1085883a 	add	r2,r2,r2
 8017f0c:	1085883a 	add	r2,r2,r2
 8017f10:	1005d0ba 	srai	r2,r2,2
 8017f14:	20800415 	stw	r2,16(r4)
 8017f18:	103fed26 	beq	r2,zero,8017ed0 <__alt_data_end+0xf8017ed0>
 8017f1c:	f800283a 	ret
 8017f20:	4007883a 	mov	r3,r8
 8017f24:	003fe306 	br	8017eb4 <__alt_data_end+0xf8017eb4>

08017f28 <__gethex>:
 8017f28:	deffeb04 	addi	sp,sp,-84
 8017f2c:	dfc01415 	stw	ra,80(sp)
 8017f30:	dd801115 	stw	r22,68(sp)
 8017f34:	dcc00e15 	stw	r19,56(sp)
 8017f38:	dc800d15 	stw	r18,52(sp)
 8017f3c:	2827883a 	mov	r19,r5
 8017f40:	d9000115 	stw	r4,4(sp)
 8017f44:	d9800015 	stw	r6,0(sp)
 8017f48:	d9c00415 	stw	r7,16(sp)
 8017f4c:	df001315 	stw	fp,76(sp)
 8017f50:	ddc01215 	stw	r23,72(sp)
 8017f54:	dd401015 	stw	r21,64(sp)
 8017f58:	dd000f15 	stw	r20,60(sp)
 8017f5c:	dc400c15 	stw	r17,48(sp)
 8017f60:	dc000b15 	stw	r16,44(sp)
 8017f64:	800f6800 	call	800f680 <_localeconv_r>
 8017f68:	14800017 	ldw	r18,0(r2)
 8017f6c:	9009883a 	mov	r4,r18
 8017f70:	800526c0 	call	800526c <strlen>
 8017f74:	98c00017 	ldw	r3,0(r19)
 8017f78:	102d883a 	mov	r22,r2
 8017f7c:	9085883a 	add	r2,r18,r2
 8017f80:	10bfffc3 	ldbu	r2,-1(r2)
 8017f84:	19000083 	ldbu	r4,2(r3)
 8017f88:	d8800305 	stb	r2,12(sp)
 8017f8c:	00800c04 	movi	r2,48
 8017f90:	2081521e 	bne	r4,r2,80184dc <__gethex+0x5b4>
 8017f94:	017fff84 	movi	r5,-2
 8017f98:	188000c4 	addi	r2,r3,3
 8017f9c:	28cbc83a 	sub	r5,r5,r3
 8017fa0:	200d883a 	mov	r6,r4
 8017fa4:	28a3883a 	add	r17,r5,r2
 8017fa8:	102b883a 	mov	r21,r2
 8017fac:	10800044 	addi	r2,r2,1
 8017fb0:	113fffc3 	ldbu	r4,-1(r2)
 8017fb4:	21bffb26 	beq	r4,r6,8017fa4 <__alt_data_end+0xf8017fa4>
 8017fb8:	050200b4 	movhi	r20,2050
 8017fbc:	a5008f84 	addi	r20,r20,574
 8017fc0:	a109883a 	add	r4,r20,r4
 8017fc4:	20800003 	ldbu	r2,0(r4)
 8017fc8:	10008826 	beq	r2,zero,80181ec <__gethex+0x2c4>
 8017fcc:	a8800003 	ldbu	r2,0(r21)
 8017fd0:	0015883a 	mov	r10,zero
 8017fd4:	002f883a 	mov	r23,zero
 8017fd8:	a085883a 	add	r2,r20,r2
 8017fdc:	10800003 	ldbu	r2,0(r2)
 8017fe0:	a821883a 	mov	r16,r21
 8017fe4:	10000526 	beq	r2,zero,8017ffc <__gethex+0xd4>
 8017fe8:	84000044 	addi	r16,r16,1
 8017fec:	80800003 	ldbu	r2,0(r16)
 8017ff0:	a085883a 	add	r2,r20,r2
 8017ff4:	10800003 	ldbu	r2,0(r2)
 8017ff8:	103ffb1e 	bne	r2,zero,8017fe8 <__alt_data_end+0xf8017fe8>
 8017ffc:	b00d883a 	mov	r6,r22
 8018000:	900b883a 	mov	r5,r18
 8018004:	8009883a 	mov	r4,r16
 8018008:	da800a15 	stw	r10,40(sp)
 801800c:	8018a080 	call	8018a08 <strncmp>
 8018010:	da800a17 	ldw	r10,40(sp)
 8018014:	1000031e 	bne	r2,zero,8018024 <__gethex+0xfc>
 8018018:	b8015226 	beq	r23,zero,8018564 <__gethex+0x63c>
 801801c:	80800003 	ldbu	r2,0(r16)
 8018020:	00000206 	br	801802c <__gethex+0x104>
 8018024:	80800003 	ldbu	r2,0(r16)
 8018028:	b8011f26 	beq	r23,zero,80184a8 <__gethex+0x580>
 801802c:	85efc83a 	sub	r23,r16,r23
 8018030:	bdef883a 	add	r23,r23,r23
 8018034:	bdef883a 	add	r23,r23,r23
 8018038:	05efc83a 	sub	r23,zero,r23
 801803c:	10803fcc 	andi	r2,r2,255
 8018040:	01001404 	movi	r4,80
 8018044:	11008626 	beq	r2,r4,8018260 <__gethex+0x338>
 8018048:	01001c04 	movi	r4,112
 801804c:	11008426 	beq	r2,r4,8018260 <__gethex+0x338>
 8018050:	8039883a 	mov	fp,r16
 8018054:	9c000015 	stw	r16,0(r19)
 8018058:	5000711e 	bne	r10,zero,8018220 <__gethex+0x2f8>
 801805c:	e545c83a 	sub	r2,fp,r21
 8018060:	10bfffc4 	addi	r2,r2,-1
 8018064:	010001c4 	movi	r4,7
 8018068:	000b883a 	mov	r5,zero
 801806c:	2080030e 	bge	r4,r2,801807c <__gethex+0x154>
 8018070:	1005d07a 	srai	r2,r2,1
 8018074:	29400044 	addi	r5,r5,1
 8018078:	20bffd16 	blt	r4,r2,8018070 <__alt_data_end+0xf8018070>
 801807c:	d9000117 	ldw	r4,4(sp)
 8018080:	800fe780 	call	800fe78 <_Balloc>
 8018084:	10c00504 	addi	r3,r2,20
 8018088:	d8c00215 	stw	r3,8(sp)
 801808c:	1021883a 	mov	r16,r2
 8018090:	af01732e 	bgeu	r21,fp,8018660 <__gethex+0x738>
 8018094:	dc400303 	ldbu	r17,12(sp)
 8018098:	03400044 	movi	r13,1
 801809c:	1815883a 	mov	r10,r3
 80180a0:	0013883a 	mov	r9,zero
 80180a4:	0027883a 	mov	r19,zero
 80180a8:	6d9bc83a 	sub	r13,r13,r22
 80180ac:	02c00804 	movi	r11,32
 80180b0:	e0bfffc3 	ldbu	r2,-1(fp)
 80180b4:	e3bfffc4 	addi	r14,fp,-1
 80180b8:	88803026 	beq	r17,r2,801817c <__gethex+0x254>
 80180bc:	9ac04526 	beq	r19,r11,80181d4 <__gethex+0x2ac>
 80180c0:	980b883a 	mov	r5,r19
 80180c4:	9cc00104 	addi	r19,r19,4
 80180c8:	e13fffc3 	ldbu	r4,-1(fp)
 80180cc:	7039883a 	mov	fp,r14
 80180d0:	a109883a 	add	r4,r20,r4
 80180d4:	20800003 	ldbu	r2,0(r4)
 80180d8:	108003cc 	andi	r2,r2,15
 80180dc:	1144983a 	sll	r2,r2,r5
 80180e0:	4892b03a 	or	r9,r9,r2
 80180e4:	af3ff236 	bltu	r21,fp,80180b0 <__alt_data_end+0xf80180b0>
 80180e8:	d8c00217 	ldw	r3,8(sp)
 80180ec:	50800104 	addi	r2,r10,4
 80180f0:	52400015 	stw	r9,0(r10)
 80180f4:	10c5c83a 	sub	r2,r2,r3
 80180f8:	1005d0ba 	srai	r2,r2,2
 80180fc:	4809883a 	mov	r4,r9
 8018100:	80800415 	stw	r2,16(r16)
 8018104:	1022917a 	slli	r17,r2,5
 8018108:	801016c0 	call	801016c <__hi0bits>
 801810c:	d8c00017 	ldw	r3,0(sp)
 8018110:	8885c83a 	sub	r2,r17,r2
 8018114:	1c800017 	ldw	r18,0(r3)
 8018118:	9080c716 	blt	r18,r2,8018438 <__gethex+0x510>
 801811c:	1480e416 	blt	r2,r18,80184b0 <__gethex+0x588>
 8018120:	0027883a 	mov	r19,zero
 8018124:	d8c00017 	ldw	r3,0(sp)
 8018128:	18800217 	ldw	r2,8(r3)
 801812c:	15c08d16 	blt	r2,r23,8018364 <__gethex+0x43c>
 8018130:	d8c00017 	ldw	r3,0(sp)
 8018134:	18800117 	ldw	r2,4(r3)
 8018138:	b880aa0e 	bge	r23,r2,80183e4 <__gethex+0x4bc>
 801813c:	15efc83a 	sub	r23,r2,r23
 8018140:	bc80ed16 	blt	r23,r18,80184f8 <__gethex+0x5d0>
 8018144:	18c00317 	ldw	r3,12(r3)
 8018148:	01000084 	movi	r4,2
 801814c:	19014926 	beq	r3,r4,8018674 <__gethex+0x74c>
 8018150:	010000c4 	movi	r4,3
 8018154:	19012e26 	beq	r3,r4,8018610 <__gethex+0x6e8>
 8018158:	01000044 	movi	r4,1
 801815c:	19014826 	beq	r3,r4,8018680 <__gethex+0x758>
 8018160:	d9000117 	ldw	r4,4(sp)
 8018164:	800b883a 	mov	r5,r16
 8018168:	800ff200 	call	800ff20 <_Bfree>
 801816c:	d8801517 	ldw	r2,84(sp)
 8018170:	10000015 	stw	zero,0(r2)
 8018174:	00801404 	movi	r2,80
 8018178:	00002b06 	br	8018228 <__gethex+0x300>
 801817c:	735f883a 	add	r15,r14,r13
 8018180:	7d7fce36 	bltu	r15,r21,80180bc <__alt_data_end+0xf80180bc>
 8018184:	7809883a 	mov	r4,r15
 8018188:	b00d883a 	mov	r6,r22
 801818c:	900b883a 	mov	r5,r18
 8018190:	da400515 	stw	r9,20(sp)
 8018194:	da800a15 	stw	r10,40(sp)
 8018198:	dac00915 	stw	r11,36(sp)
 801819c:	db400815 	stw	r13,32(sp)
 80181a0:	db800615 	stw	r14,24(sp)
 80181a4:	dbc00715 	stw	r15,28(sp)
 80181a8:	8018a080 	call	8018a08 <strncmp>
 80181ac:	da400517 	ldw	r9,20(sp)
 80181b0:	da800a17 	ldw	r10,40(sp)
 80181b4:	dac00917 	ldw	r11,36(sp)
 80181b8:	db400817 	ldw	r13,32(sp)
 80181bc:	db800617 	ldw	r14,24(sp)
 80181c0:	dbc00717 	ldw	r15,28(sp)
 80181c4:	103fbd1e 	bne	r2,zero,80180bc <__alt_data_end+0xf80180bc>
 80181c8:	7839883a 	mov	fp,r15
 80181cc:	af3fb836 	bltu	r21,fp,80180b0 <__alt_data_end+0xf80180b0>
 80181d0:	003fc506 	br	80180e8 <__alt_data_end+0xf80180e8>
 80181d4:	04c00104 	movi	r19,4
 80181d8:	52400015 	stw	r9,0(r10)
 80181dc:	000b883a 	mov	r5,zero
 80181e0:	54d5883a 	add	r10,r10,r19
 80181e4:	0013883a 	mov	r9,zero
 80181e8:	003fb706 	br	80180c8 <__alt_data_end+0xf80180c8>
 80181ec:	b00d883a 	mov	r6,r22
 80181f0:	900b883a 	mov	r5,r18
 80181f4:	a809883a 	mov	r4,r21
 80181f8:	8018a080 	call	8018a08 <strncmp>
 80181fc:	10006426 	beq	r2,zero,8018390 <__gethex+0x468>
 8018200:	a8800003 	ldbu	r2,0(r21)
 8018204:	a821883a 	mov	r16,r21
 8018208:	10803fcc 	andi	r2,r2,255
 801820c:	01001404 	movi	r4,80
 8018210:	11001126 	beq	r2,r4,8018258 <__gethex+0x330>
 8018214:	01001c04 	movi	r4,112
 8018218:	11000f26 	beq	r2,r4,8018258 <__gethex+0x330>
 801821c:	9c000015 	stw	r16,0(r19)
 8018220:	8800831e 	bne	r17,zero,8018430 <__gethex+0x508>
 8018224:	00800184 	movi	r2,6
 8018228:	dfc01417 	ldw	ra,80(sp)
 801822c:	df001317 	ldw	fp,76(sp)
 8018230:	ddc01217 	ldw	r23,72(sp)
 8018234:	dd801117 	ldw	r22,68(sp)
 8018238:	dd401017 	ldw	r21,64(sp)
 801823c:	dd000f17 	ldw	r20,60(sp)
 8018240:	dcc00e17 	ldw	r19,56(sp)
 8018244:	dc800d17 	ldw	r18,52(sp)
 8018248:	dc400c17 	ldw	r17,48(sp)
 801824c:	dc000b17 	ldw	r16,44(sp)
 8018250:	dec01504 	addi	sp,sp,84
 8018254:	f800283a 	ret
 8018258:	002f883a 	mov	r23,zero
 801825c:	02800044 	movi	r10,1
 8018260:	80800043 	ldbu	r2,1(r16)
 8018264:	01400ac4 	movi	r5,43
 8018268:	11003fcc 	andi	r4,r2,255
 801826c:	21406e26 	beq	r4,r5,8018428 <__gethex+0x500>
 8018270:	01400b44 	movi	r5,45
 8018274:	21404226 	beq	r4,r5,8018380 <__gethex+0x458>
 8018278:	81400044 	addi	r5,r16,1
 801827c:	000d883a 	mov	r6,zero
 8018280:	10803fcc 	andi	r2,r2,255
 8018284:	a085883a 	add	r2,r20,r2
 8018288:	11000003 	ldbu	r4,0(r2)
 801828c:	03000604 	movi	r12,24
 8018290:	20bfffc4 	addi	r2,r4,-1
 8018294:	10803fcc 	andi	r2,r2,255
 8018298:	60bf6d36 	bltu	r12,r2,8018050 <__alt_data_end+0xf8018050>
 801829c:	2ac00043 	ldbu	r11,1(r5)
 80182a0:	20803fcc 	andi	r2,r4,255
 80182a4:	010200b4 	movhi	r4,2050
 80182a8:	21008f84 	addi	r4,r4,574
 80182ac:	22c9883a 	add	r4,r4,r11
 80182b0:	23400003 	ldbu	r13,0(r4)
 80182b4:	10bffc04 	addi	r2,r2,-16
 80182b8:	29400044 	addi	r5,r5,1
 80182bc:	693fffc4 	addi	r4,r13,-1
 80182c0:	21003fcc 	andi	r4,r4,255
 80182c4:	6b403fcc 	andi	r13,r13,255
 80182c8:	61000b36 	bltu	r12,r4,80182f8 <__gethex+0x3d0>
 80182cc:	29400044 	addi	r5,r5,1
 80182d0:	29000003 	ldbu	r4,0(r5)
 80182d4:	108002a4 	muli	r2,r2,10
 80182d8:	a109883a 	add	r4,r20,r4
 80182dc:	22c00003 	ldbu	r11,0(r4)
 80182e0:	1345883a 	add	r2,r2,r13
 80182e4:	10bffc04 	addi	r2,r2,-16
 80182e8:	593fffc4 	addi	r4,r11,-1
 80182ec:	21003fcc 	andi	r4,r4,255
 80182f0:	5b403fcc 	andi	r13,r11,255
 80182f4:	613ff52e 	bgeu	r12,r4,80182cc <__alt_data_end+0xf80182cc>
 80182f8:	30000126 	beq	r6,zero,8018300 <__gethex+0x3d8>
 80182fc:	0085c83a 	sub	r2,zero,r2
 8018300:	8039883a 	mov	fp,r16
 8018304:	b8af883a 	add	r23,r23,r2
 8018308:	2821883a 	mov	r16,r5
 801830c:	003f5106 	br	8018054 <__alt_data_end+0xf8018054>
 8018310:	80800217 	ldw	r2,8(r16)
 8018314:	e080f00e 	bge	fp,r2,80186d8 <__gethex+0x7b0>
 8018318:	e007883a 	mov	r3,fp
 801831c:	18800144 	addi	r2,r3,5
 8018320:	1085883a 	add	r2,r2,r2
 8018324:	18c00044 	addi	r3,r3,1
 8018328:	1085883a 	add	r2,r2,r2
 801832c:	8085883a 	add	r2,r16,r2
 8018330:	80c00415 	stw	r3,16(r16)
 8018334:	01000044 	movi	r4,1
 8018338:	11000015 	stw	r4,0(r2)
 801833c:	00800084 	movi	r2,2
 8018340:	8880d826 	beq	r17,r2,80186a4 <__gethex+0x77c>
 8018344:	e0c0ac0e 	bge	fp,r3,80185f8 <__gethex+0x6d0>
 8018348:	01400044 	movi	r5,1
 801834c:	8009883a 	mov	r4,r16
 8018350:	8017e280 	call	8017e28 <rshift>
 8018354:	d8c00017 	ldw	r3,0(sp)
 8018358:	bdc00044 	addi	r23,r23,1
 801835c:	18800217 	ldw	r2,8(r3)
 8018360:	15c0a70e 	bge	r2,r23,8018600 <__gethex+0x6d8>
 8018364:	d9000117 	ldw	r4,4(sp)
 8018368:	800b883a 	mov	r5,r16
 801836c:	800ff200 	call	800ff20 <_Bfree>
 8018370:	d9001517 	ldw	r4,84(sp)
 8018374:	008028c4 	movi	r2,163
 8018378:	20000015 	stw	zero,0(r4)
 801837c:	003faa06 	br	8018228 <__alt_data_end+0xf8018228>
 8018380:	01800044 	movi	r6,1
 8018384:	80800083 	ldbu	r2,2(r16)
 8018388:	81400084 	addi	r5,r16,2
 801838c:	003fbc06 	br	8018280 <__alt_data_end+0xf8018280>
 8018390:	ada1883a 	add	r16,r21,r22
 8018394:	81000003 	ldbu	r4,0(r16)
 8018398:	21403fcc 	andi	r5,r4,255
 801839c:	a145883a 	add	r2,r20,r5
 80183a0:	10800003 	ldbu	r2,0(r2)
 80183a4:	11803fcc 	andi	r6,r2,255
 80183a8:	30004f26 	beq	r6,zero,80184e8 <__gethex+0x5c0>
 80183ac:	00c00c04 	movi	r3,48
 80183b0:	802b883a 	mov	r21,r16
 80183b4:	28c0061e 	bne	r5,r3,80183d0 <__gethex+0x4a8>
 80183b8:	2809883a 	mov	r4,r5
 80183bc:	ad400044 	addi	r21,r21,1
 80183c0:	a8800003 	ldbu	r2,0(r21)
 80183c4:	113ffd26 	beq	r2,r4,80183bc <__alt_data_end+0xf80183bc>
 80183c8:	a085883a 	add	r2,r20,r2
 80183cc:	10800003 	ldbu	r2,0(r2)
 80183d0:	10803fcc 	andi	r2,r2,255
 80183d4:	1015003a 	cmpeq	r10,r2,zero
 80183d8:	802f883a 	mov	r23,r16
 80183dc:	04400044 	movi	r17,1
 80183e0:	003eff06 	br	8017fe0 <__alt_data_end+0xf8017fe0>
 80183e4:	04400044 	movi	r17,1
 80183e8:	98000926 	beq	r19,zero,8018410 <__gethex+0x4e8>
 80183ec:	d8c00017 	ldw	r3,0(sp)
 80183f0:	18800317 	ldw	r2,12(r3)
 80183f4:	00c00084 	movi	r3,2
 80183f8:	10c06826 	beq	r2,r3,801859c <__gethex+0x674>
 80183fc:	00c000c4 	movi	r3,3
 8018400:	10c06a26 	beq	r2,r3,80185ac <__gethex+0x684>
 8018404:	00c00044 	movi	r3,1
 8018408:	10c08d26 	beq	r2,r3,8018640 <__gethex+0x718>
 801840c:	8c400414 	ori	r17,r17,16
 8018410:	d9001517 	ldw	r4,84(sp)
 8018414:	d8c00417 	ldw	r3,16(sp)
 8018418:	8805883a 	mov	r2,r17
 801841c:	24000015 	stw	r16,0(r4)
 8018420:	1dc00015 	stw	r23,0(r3)
 8018424:	003f8006 	br	8018228 <__alt_data_end+0xf8018228>
 8018428:	000d883a 	mov	r6,zero
 801842c:	003fd506 	br	8018384 <__alt_data_end+0xf8018384>
 8018430:	0005883a 	mov	r2,zero
 8018434:	003f7c06 	br	8018228 <__alt_data_end+0xf8018228>
 8018438:	14a3c83a 	sub	r17,r2,r18
 801843c:	880b883a 	mov	r5,r17
 8018440:	8009883a 	mov	r4,r16
 8018444:	8010de80 	call	8010de8 <__any_on>
 8018448:	10002926 	beq	r2,zero,80184f0 <__gethex+0x5c8>
 801844c:	897fffc4 	addi	r5,r17,-1
 8018450:	2807d17a 	srai	r3,r5,5
 8018454:	d8800217 	ldw	r2,8(sp)
 8018458:	290007cc 	andi	r4,r5,31
 801845c:	18c7883a 	add	r3,r3,r3
 8018460:	18c7883a 	add	r3,r3,r3
 8018464:	04c00044 	movi	r19,1
 8018468:	10c7883a 	add	r3,r2,r3
 801846c:	9908983a 	sll	r4,r19,r4
 8018470:	18c00017 	ldw	r3,0(r3)
 8018474:	20c6703a 	and	r3,r4,r3
 8018478:	18000626 	beq	r3,zero,8018494 <__gethex+0x56c>
 801847c:	99407b0e 	bge	r19,r5,801866c <__gethex+0x744>
 8018480:	897fff84 	addi	r5,r17,-2
 8018484:	8009883a 	mov	r4,r16
 8018488:	8010de80 	call	8010de8 <__any_on>
 801848c:	10007726 	beq	r2,zero,801866c <__gethex+0x744>
 8018490:	04c000c4 	movi	r19,3
 8018494:	880b883a 	mov	r5,r17
 8018498:	8009883a 	mov	r4,r16
 801849c:	8017e280 	call	8017e28 <rshift>
 80184a0:	bc6f883a 	add	r23,r23,r17
 80184a4:	003f1f06 	br	8018124 <__alt_data_end+0xf8018124>
 80184a8:	002f883a 	mov	r23,zero
 80184ac:	003ee306 	br	801803c <__alt_data_end+0xf801803c>
 80184b0:	d9000117 	ldw	r4,4(sp)
 80184b4:	90a3c83a 	sub	r17,r18,r2
 80184b8:	800b883a 	mov	r5,r16
 80184bc:	880d883a 	mov	r6,r17
 80184c0:	80105f80 	call	80105f8 <__lshift>
 80184c4:	10c00504 	addi	r3,r2,20
 80184c8:	1021883a 	mov	r16,r2
 80184cc:	bc6fc83a 	sub	r23,r23,r17
 80184d0:	d8c00215 	stw	r3,8(sp)
 80184d4:	0027883a 	mov	r19,zero
 80184d8:	003f1206 	br	8018124 <__alt_data_end+0xf8018124>
 80184dc:	1d400084 	addi	r21,r3,2
 80184e0:	0023883a 	mov	r17,zero
 80184e4:	003eb406 	br	8017fb8 <__alt_data_end+0xf8017fb8>
 80184e8:	2005883a 	mov	r2,r4
 80184ec:	003f4606 	br	8018208 <__alt_data_end+0xf8018208>
 80184f0:	0027883a 	mov	r19,zero
 80184f4:	003fe706 	br	8018494 <__alt_data_end+0xf8018494>
 80184f8:	bc7fffc4 	addi	r17,r23,-1
 80184fc:	9800421e 	bne	r19,zero,8018608 <__gethex+0x6e0>
 8018500:	88000426 	beq	r17,zero,8018514 <__gethex+0x5ec>
 8018504:	880b883a 	mov	r5,r17
 8018508:	8009883a 	mov	r4,r16
 801850c:	8010de80 	call	8010de8 <__any_on>
 8018510:	1027883a 	mov	r19,r2
 8018514:	8805d17a 	srai	r2,r17,5
 8018518:	d8c00217 	ldw	r3,8(sp)
 801851c:	8c4007cc 	andi	r17,r17,31
 8018520:	1085883a 	add	r2,r2,r2
 8018524:	1085883a 	add	r2,r2,r2
 8018528:	1885883a 	add	r2,r3,r2
 801852c:	00c00044 	movi	r3,1
 8018530:	1c62983a 	sll	r17,r3,r17
 8018534:	10800017 	ldw	r2,0(r2)
 8018538:	8884703a 	and	r2,r17,r2
 801853c:	10000126 	beq	r2,zero,8018544 <__gethex+0x61c>
 8018540:	9cc00094 	ori	r19,r19,2
 8018544:	b80b883a 	mov	r5,r23
 8018548:	8009883a 	mov	r4,r16
 801854c:	8017e280 	call	8017e28 <rshift>
 8018550:	d8c00017 	ldw	r3,0(sp)
 8018554:	95e5c83a 	sub	r18,r18,r23
 8018558:	04400084 	movi	r17,2
 801855c:	1dc00117 	ldw	r23,4(r3)
 8018560:	003fa106 	br	80183e8 <__alt_data_end+0xf80183e8>
 8018564:	85af883a 	add	r23,r16,r22
 8018568:	b8800003 	ldbu	r2,0(r23)
 801856c:	b821883a 	mov	r16,r23
 8018570:	11003fcc 	andi	r4,r2,255
 8018574:	a109883a 	add	r4,r20,r4
 8018578:	21000003 	ldbu	r4,0(r4)
 801857c:	203eaa26 	beq	r4,zero,8018028 <__alt_data_end+0xf8018028>
 8018580:	84000044 	addi	r16,r16,1
 8018584:	80800003 	ldbu	r2,0(r16)
 8018588:	11003fcc 	andi	r4,r2,255
 801858c:	a109883a 	add	r4,r20,r4
 8018590:	21000003 	ldbu	r4,0(r4)
 8018594:	203ffa1e 	bne	r4,zero,8018580 <__alt_data_end+0xf8018580>
 8018598:	003ea306 	br	8018028 <__alt_data_end+0xf8018028>
 801859c:	d9001617 	ldw	r4,88(sp)
 80185a0:	00800044 	movi	r2,1
 80185a4:	1109c83a 	sub	r4,r2,r4
 80185a8:	d9001615 	stw	r4,88(sp)
 80185ac:	d8801617 	ldw	r2,88(sp)
 80185b0:	103f9626 	beq	r2,zero,801840c <__alt_data_end+0xf801840c>
 80185b4:	87000417 	ldw	fp,16(r16)
 80185b8:	d9800217 	ldw	r6,8(sp)
 80185bc:	013fffc4 	movi	r4,-1
 80185c0:	e727883a 	add	r19,fp,fp
 80185c4:	9ce7883a 	add	r19,r19,r19
 80185c8:	3005883a 	mov	r2,r6
 80185cc:	34cb883a 	add	r5,r6,r19
 80185d0:	00000306 	br	80185e0 <__gethex+0x6b8>
 80185d4:	10000015 	stw	zero,0(r2)
 80185d8:	10800104 	addi	r2,r2,4
 80185dc:	117f4c2e 	bgeu	r2,r5,8018310 <__alt_data_end+0xf8018310>
 80185e0:	10c00017 	ldw	r3,0(r2)
 80185e4:	193ffb26 	beq	r3,r4,80185d4 <__alt_data_end+0xf80185d4>
 80185e8:	18c00044 	addi	r3,r3,1
 80185ec:	10c00015 	stw	r3,0(r2)
 80185f0:	00800084 	movi	r2,2
 80185f4:	88802b26 	beq	r17,r2,80186a4 <__gethex+0x77c>
 80185f8:	948007cc 	andi	r18,r18,31
 80185fc:	90002f1e 	bne	r18,zero,80186bc <__gethex+0x794>
 8018600:	04400844 	movi	r17,33
 8018604:	003f8206 	br	8018410 <__alt_data_end+0xf8018410>
 8018608:	04c00044 	movi	r19,1
 801860c:	003fc106 	br	8018514 <__alt_data_end+0xf8018514>
 8018610:	d8c01617 	ldw	r3,88(sp)
 8018614:	183ed226 	beq	r3,zero,8018160 <__alt_data_end+0xf8018160>
 8018618:	d8c00417 	ldw	r3,16(sp)
 801861c:	d9001517 	ldw	r4,84(sp)
 8018620:	18800015 	stw	r2,0(r3)
 8018624:	d8c00217 	ldw	r3,8(sp)
 8018628:	00800044 	movi	r2,1
 801862c:	80800415 	stw	r2,16(r16)
 8018630:	18800015 	stw	r2,0(r3)
 8018634:	24000015 	stw	r16,0(r4)
 8018638:	00801884 	movi	r2,98
 801863c:	003efa06 	br	8018228 <__alt_data_end+0xf8018228>
 8018640:	9880008c 	andi	r2,r19,2
 8018644:	103f7126 	beq	r2,zero,801840c <__alt_data_end+0xf801840c>
 8018648:	d8c00217 	ldw	r3,8(sp)
 801864c:	18800017 	ldw	r2,0(r3)
 8018650:	9884b03a 	or	r2,r19,r2
 8018654:	1080004c 	andi	r2,r2,1
 8018658:	103fd61e 	bne	r2,zero,80185b4 <__alt_data_end+0xf80185b4>
 801865c:	003f6b06 	br	801840c <__alt_data_end+0xf801840c>
 8018660:	da800217 	ldw	r10,8(sp)
 8018664:	0013883a 	mov	r9,zero
 8018668:	003e9f06 	br	80180e8 <__alt_data_end+0xf80180e8>
 801866c:	04c00084 	movi	r19,2
 8018670:	003f8806 	br	8018494 <__alt_data_end+0xf8018494>
 8018674:	d9001617 	ldw	r4,88(sp)
 8018678:	203fe726 	beq	r4,zero,8018618 <__alt_data_end+0xf8018618>
 801867c:	003eb806 	br	8018160 <__alt_data_end+0xf8018160>
 8018680:	95feb71e 	bne	r18,r23,8018160 <__alt_data_end+0xf8018160>
 8018684:	1cbfe40e 	bge	r3,r18,8018618 <__alt_data_end+0xf8018618>
 8018688:	917fffc4 	addi	r5,r18,-1
 801868c:	8009883a 	mov	r4,r16
 8018690:	8010de80 	call	8010de8 <__any_on>
 8018694:	103eb226 	beq	r2,zero,8018160 <__alt_data_end+0xf8018160>
 8018698:	d8c00017 	ldw	r3,0(sp)
 801869c:	18800117 	ldw	r2,4(r3)
 80186a0:	003fdd06 	br	8018618 <__alt_data_end+0xf8018618>
 80186a4:	d8c00017 	ldw	r3,0(sp)
 80186a8:	18800017 	ldw	r2,0(r3)
 80186ac:	10bfffc4 	addi	r2,r2,-1
 80186b0:	90801c26 	beq	r18,r2,8018724 <__gethex+0x7fc>
 80186b4:	04400884 	movi	r17,34
 80186b8:	003f5506 	br	8018410 <__alt_data_end+0xf8018410>
 80186bc:	34c5883a 	add	r2,r6,r19
 80186c0:	113fff17 	ldw	r4,-4(r2)
 80186c4:	801016c0 	call	801016c <__hi0bits>
 80186c8:	00c00804 	movi	r3,32
 80186cc:	1ca5c83a 	sub	r18,r3,r18
 80186d0:	14bfcb0e 	bge	r2,r18,8018600 <__alt_data_end+0xf8018600>
 80186d4:	003f1c06 	br	8018348 <__alt_data_end+0xf8018348>
 80186d8:	81400117 	ldw	r5,4(r16)
 80186dc:	d9000117 	ldw	r4,4(sp)
 80186e0:	29400044 	addi	r5,r5,1
 80186e4:	800fe780 	call	800fe78 <_Balloc>
 80186e8:	81800417 	ldw	r6,16(r16)
 80186ec:	81400304 	addi	r5,r16,12
 80186f0:	11000304 	addi	r4,r2,12
 80186f4:	31800084 	addi	r6,r6,2
 80186f8:	318d883a 	add	r6,r6,r6
 80186fc:	318d883a 	add	r6,r6,r6
 8018700:	1029883a 	mov	r20,r2
 8018704:	800fbd40 	call	800fbd4 <memcpy>
 8018708:	d9000117 	ldw	r4,4(sp)
 801870c:	800b883a 	mov	r5,r16
 8018710:	a021883a 	mov	r16,r20
 8018714:	800ff200 	call	800ff20 <_Bfree>
 8018718:	a0c00417 	ldw	r3,16(r20)
 801871c:	a1800504 	addi	r6,r20,20
 8018720:	003efe06 	br	801831c <__alt_data_end+0xf801831c>
 8018724:	9005d17a 	srai	r2,r18,5
 8018728:	944007cc 	andi	r17,r18,31
 801872c:	1085883a 	add	r2,r2,r2
 8018730:	1085883a 	add	r2,r2,r2
 8018734:	3087883a 	add	r3,r6,r2
 8018738:	00800044 	movi	r2,1
 801873c:	1462983a 	sll	r17,r2,r17
 8018740:	18800017 	ldw	r2,0(r3)
 8018744:	8884703a 	and	r2,r17,r2
 8018748:	1022c03a 	cmpne	r17,r2,zero
 801874c:	00800884 	movi	r2,34
 8018750:	1463c83a 	sub	r17,r2,r17
 8018754:	003f2e06 	br	8018410 <__alt_data_end+0xf8018410>

08018758 <__hexnan>:
 8018758:	defff904 	addi	sp,sp,-28
 801875c:	dc800215 	stw	r18,8(sp)
 8018760:	2c800017 	ldw	r18,0(r5)
 8018764:	dfc00615 	stw	ra,24(sp)
 8018768:	dd400515 	stw	r21,20(sp)
 801876c:	901fd17a 	srai	r15,r18,5
 8018770:	dd000415 	stw	r20,16(sp)
 8018774:	dcc00315 	stw	r19,12(sp)
 8018778:	7bdf883a 	add	r15,r15,r15
 801877c:	7bdf883a 	add	r15,r15,r15
 8018780:	dc400115 	stw	r17,4(sp)
 8018784:	dc000015 	stw	r16,0(sp)
 8018788:	948007cc 	andi	r18,r18,31
 801878c:	33df883a 	add	r15,r6,r15
 8018790:	90000126 	beq	r18,zero,8018798 <__hexnan+0x40>
 8018794:	7bc00104 	addi	r15,r15,4
 8018798:	22000017 	ldw	r8,0(r4)
 801879c:	7affff04 	addi	r11,r15,-4
 80187a0:	038200b4 	movhi	r14,2050
 80187a4:	783fff15 	stw	zero,-4(r15)
 80187a8:	581b883a 	mov	r13,r11
 80187ac:	580b883a 	mov	r5,r11
 80187b0:	000f883a 	mov	r7,zero
 80187b4:	003f883a 	mov	ra,zero
 80187b8:	0019883a 	mov	r12,zero
 80187bc:	73808f84 	addi	r14,r14,574
 80187c0:	04400204 	movi	r17,8
 80187c4:	04000804 	movi	r16,32
 80187c8:	04c001c4 	movi	r19,7
 80187cc:	42000044 	addi	r8,r8,1
 80187d0:	40c00003 	ldbu	r3,0(r8)
 80187d4:	18001d26 	beq	r3,zero,801884c <__hexnan+0xf4>
 80187d8:	70c5883a 	add	r2,r14,r3
 80187dc:	10800003 	ldbu	r2,0(r2)
 80187e0:	12403fcc 	andi	r9,r2,255
 80187e4:	4800301e 	bne	r9,zero,80188a8 <__hexnan+0x150>
 80187e8:	80c04236 	bltu	r16,r3,80188f4 <__hexnan+0x19c>
 80187ec:	fb3ff70e 	bge	ra,r12,80187cc <__alt_data_end+0xf80187cc>
 80187f0:	2b40112e 	bgeu	r5,r13,8018838 <__hexnan+0xe0>
 80187f4:	99c01016 	blt	r19,r7,8018838 <__hexnan+0xe0>
 80187f8:	89e9c83a 	sub	r20,r17,r7
 80187fc:	a529883a 	add	r20,r20,r20
 8018800:	2a800017 	ldw	r10,0(r5)
 8018804:	a529883a 	add	r20,r20,r20
 8018808:	852bc83a 	sub	r21,r16,r20
 801880c:	28c00104 	addi	r3,r5,4
 8018810:	2805883a 	mov	r2,r5
 8018814:	19c00017 	ldw	r7,0(r3)
 8018818:	10800104 	addi	r2,r2,4
 801881c:	18c00104 	addi	r3,r3,4
 8018820:	3d52983a 	sll	r9,r7,r21
 8018824:	4a92b03a 	or	r9,r9,r10
 8018828:	3d14d83a 	srl	r10,r7,r20
 801882c:	127fff15 	stw	r9,-4(r2)
 8018830:	1abfff15 	stw	r10,-4(r3)
 8018834:	137ff736 	bltu	r2,r13,8018814 <__alt_data_end+0xf8018814>
 8018838:	31402836 	bltu	r6,r5,80188dc <__hexnan+0x184>
 801883c:	42000044 	addi	r8,r8,1
 8018840:	40c00003 	ldbu	r3,0(r8)
 8018844:	01c00204 	movi	r7,8
 8018848:	183fe31e 	bne	r3,zero,80187d8 <__alt_data_end+0xf80187d8>
 801884c:	60002b26 	beq	r12,zero,80188fc <__hexnan+0x1a4>
 8018850:	2b40022e 	bgeu	r5,r13,801885c <__hexnan+0x104>
 8018854:	008001c4 	movi	r2,7
 8018858:	11c0430e 	bge	r2,r7,8018968 <__hexnan+0x210>
 801885c:	3140312e 	bgeu	r6,r5,8018924 <__hexnan+0x1cc>
 8018860:	3007883a 	mov	r3,r6
 8018864:	29000017 	ldw	r4,0(r5)
 8018868:	18800104 	addi	r2,r3,4
 801886c:	29400104 	addi	r5,r5,4
 8018870:	19000015 	stw	r4,0(r3)
 8018874:	1007883a 	mov	r3,r2
 8018878:	597ffa2e 	bgeu	r11,r5,8018864 <__alt_data_end+0xf8018864>
 801887c:	10000015 	stw	zero,0(r2)
 8018880:	10800104 	addi	r2,r2,4
 8018884:	58bffd2e 	bgeu	r11,r2,801887c <__alt_data_end+0xf801887c>
 8018888:	78bfff17 	ldw	r2,-4(r15)
 801888c:	1000041e 	bne	r2,zero,80188a0 <__hexnan+0x148>
 8018890:	32c02d26 	beq	r6,r11,8018948 <__hexnan+0x1f0>
 8018894:	5affff04 	addi	r11,r11,-4
 8018898:	58800017 	ldw	r2,0(r11)
 801889c:	103ffc26 	beq	r2,zero,8018890 <__alt_data_end+0xf8018890>
 80188a0:	00800144 	movi	r2,5
 80188a4:	00001606 	br	8018900 <__hexnan+0x1a8>
 80188a8:	39c00044 	addi	r7,r7,1
 80188ac:	63000044 	addi	r12,r12,1
 80188b0:	89c0040e 	bge	r17,r7,80188c4 <__hexnan+0x16c>
 80188b4:	317fc52e 	bgeu	r6,r5,80187cc <__alt_data_end+0xf80187cc>
 80188b8:	283fff15 	stw	zero,-4(r5)
 80188bc:	01c00044 	movi	r7,1
 80188c0:	297fff04 	addi	r5,r5,-4
 80188c4:	28c00017 	ldw	r3,0(r5)
 80188c8:	108003cc 	andi	r2,r2,15
 80188cc:	1806913a 	slli	r3,r3,4
 80188d0:	1884b03a 	or	r2,r3,r2
 80188d4:	28800015 	stw	r2,0(r5)
 80188d8:	003fbc06 	br	80187cc <__alt_data_end+0xf80187cc>
 80188dc:	2b7fff04 	addi	r13,r5,-4
 80188e0:	283fff15 	stw	zero,-4(r5)
 80188e4:	603f883a 	mov	ra,r12
 80188e8:	680b883a 	mov	r5,r13
 80188ec:	000f883a 	mov	r7,zero
 80188f0:	003fb606 	br	80187cc <__alt_data_end+0xf80187cc>
 80188f4:	00800a44 	movi	r2,41
 80188f8:	18801726 	beq	r3,r2,8018958 <__hexnan+0x200>
 80188fc:	00800104 	movi	r2,4
 8018900:	dfc00617 	ldw	ra,24(sp)
 8018904:	dd400517 	ldw	r21,20(sp)
 8018908:	dd000417 	ldw	r20,16(sp)
 801890c:	dcc00317 	ldw	r19,12(sp)
 8018910:	dc800217 	ldw	r18,8(sp)
 8018914:	dc400117 	ldw	r17,4(sp)
 8018918:	dc000017 	ldw	r16,0(sp)
 801891c:	dec00704 	addi	sp,sp,28
 8018920:	f800283a 	ret
 8018924:	903fd826 	beq	r18,zero,8018888 <__alt_data_end+0xf8018888>
 8018928:	00c00804 	movi	r3,32
 801892c:	1ca5c83a 	sub	r18,r3,r18
 8018930:	00ffffc4 	movi	r3,-1
 8018934:	78bfff17 	ldw	r2,-4(r15)
 8018938:	1c86d83a 	srl	r3,r3,r18
 801893c:	1884703a 	and	r2,r3,r2
 8018940:	78bfff15 	stw	r2,-4(r15)
 8018944:	003fd106 	br	801888c <__alt_data_end+0xf801888c>
 8018948:	00800044 	movi	r2,1
 801894c:	58800015 	stw	r2,0(r11)
 8018950:	00800144 	movi	r2,5
 8018954:	003fea06 	br	8018900 <__alt_data_end+0xf8018900>
 8018958:	42000044 	addi	r8,r8,1
 801895c:	22000015 	stw	r8,0(r4)
 8018960:	603fbb1e 	bne	r12,zero,8018850 <__alt_data_end+0xf8018850>
 8018964:	003fe506 	br	80188fc <__alt_data_end+0xf80188fc>
 8018968:	02400204 	movi	r9,8
 801896c:	49d3c83a 	sub	r9,r9,r7
 8018970:	4a53883a 	add	r9,r9,r9
 8018974:	2a000017 	ldw	r8,0(r5)
 8018978:	4a53883a 	add	r9,r9,r9
 801897c:	02800804 	movi	r10,32
 8018980:	5255c83a 	sub	r10,r10,r9
 8018984:	28c00104 	addi	r3,r5,4
 8018988:	2805883a 	mov	r2,r5
 801898c:	19c00017 	ldw	r7,0(r3)
 8018990:	10800104 	addi	r2,r2,4
 8018994:	18c00104 	addi	r3,r3,4
 8018998:	3a88983a 	sll	r4,r7,r10
 801899c:	2208b03a 	or	r4,r4,r8
 80189a0:	3a50d83a 	srl	r8,r7,r9
 80189a4:	113fff15 	stw	r4,-4(r2)
 80189a8:	1a3fff15 	stw	r8,-4(r3)
 80189ac:	137ff736 	bltu	r2,r13,801898c <__alt_data_end+0xf801898c>
 80189b0:	003faa06 	br	801885c <__alt_data_end+0xf801885c>

080189b4 <_isatty_r>:
 80189b4:	defffd04 	addi	sp,sp,-12
 80189b8:	dc000015 	stw	r16,0(sp)
 80189bc:	040200b4 	movhi	r16,2050
 80189c0:	dc400115 	stw	r17,4(sp)
 80189c4:	840f2904 	addi	r16,r16,15524
 80189c8:	2023883a 	mov	r17,r4
 80189cc:	2809883a 	mov	r4,r5
 80189d0:	dfc00215 	stw	ra,8(sp)
 80189d4:	80000015 	stw	zero,0(r16)
 80189d8:	801c7b80 	call	801c7b8 <isatty>
 80189dc:	00ffffc4 	movi	r3,-1
 80189e0:	10c00526 	beq	r2,r3,80189f8 <_isatty_r+0x44>
 80189e4:	dfc00217 	ldw	ra,8(sp)
 80189e8:	dc400117 	ldw	r17,4(sp)
 80189ec:	dc000017 	ldw	r16,0(sp)
 80189f0:	dec00304 	addi	sp,sp,12
 80189f4:	f800283a 	ret
 80189f8:	80c00017 	ldw	r3,0(r16)
 80189fc:	183ff926 	beq	r3,zero,80189e4 <__alt_data_end+0xf80189e4>
 8018a00:	88c00015 	stw	r3,0(r17)
 8018a04:	003ff706 	br	80189e4 <__alt_data_end+0xf80189e4>

08018a08 <strncmp>:
 8018a08:	30003126 	beq	r6,zero,8018ad0 <strncmp+0xc8>
 8018a0c:	2144b03a 	or	r2,r4,r5
 8018a10:	108000cc 	andi	r2,r2,3
 8018a14:	10001e1e 	bne	r2,zero,8018a90 <strncmp+0x88>
 8018a18:	024000c4 	movi	r9,3
 8018a1c:	49801c2e 	bgeu	r9,r6,8018a90 <strncmp+0x88>
 8018a20:	20800017 	ldw	r2,0(r4)
 8018a24:	28c00017 	ldw	r3,0(r5)
 8018a28:	10c0191e 	bne	r2,r3,8018a90 <strncmp+0x88>
 8018a2c:	31bfff04 	addi	r6,r6,-4
 8018a30:	30002726 	beq	r6,zero,8018ad0 <strncmp+0xc8>
 8018a34:	02ffbff4 	movhi	r11,65279
 8018a38:	5affbfc4 	addi	r11,r11,-257
 8018a3c:	0086303a 	nor	r3,zero,r2
 8018a40:	02a02074 	movhi	r10,32897
 8018a44:	12c5883a 	add	r2,r2,r11
 8018a48:	52a02004 	addi	r10,r10,-32640
 8018a4c:	10c4703a 	and	r2,r2,r3
 8018a50:	1284703a 	and	r2,r2,r10
 8018a54:	10000b26 	beq	r2,zero,8018a84 <strncmp+0x7c>
 8018a58:	00001d06 	br	8018ad0 <strncmp+0xc8>
 8018a5c:	20c00017 	ldw	r3,0(r4)
 8018a60:	29c00017 	ldw	r7,0(r5)
 8018a64:	1ad1883a 	add	r8,r3,r11
 8018a68:	00c4303a 	nor	r2,zero,r3
 8018a6c:	4084703a 	and	r2,r8,r2
 8018a70:	1284703a 	and	r2,r2,r10
 8018a74:	19c0061e 	bne	r3,r7,8018a90 <strncmp+0x88>
 8018a78:	31bfff04 	addi	r6,r6,-4
 8018a7c:	30001426 	beq	r6,zero,8018ad0 <strncmp+0xc8>
 8018a80:	1000131e 	bne	r2,zero,8018ad0 <strncmp+0xc8>
 8018a84:	21000104 	addi	r4,r4,4
 8018a88:	29400104 	addi	r5,r5,4
 8018a8c:	49bff336 	bltu	r9,r6,8018a5c <__alt_data_end+0xf8018a5c>
 8018a90:	28800007 	ldb	r2,0(r5)
 8018a94:	20c00007 	ldb	r3,0(r4)
 8018a98:	31bfffc4 	addi	r6,r6,-1
 8018a9c:	10c0081e 	bne	r2,r3,8018ac0 <strncmp+0xb8>
 8018aa0:	30000b26 	beq	r6,zero,8018ad0 <strncmp+0xc8>
 8018aa4:	10000a26 	beq	r2,zero,8018ad0 <strncmp+0xc8>
 8018aa8:	21000044 	addi	r4,r4,1
 8018aac:	29400044 	addi	r5,r5,1
 8018ab0:	20800007 	ldb	r2,0(r4)
 8018ab4:	28c00007 	ldb	r3,0(r5)
 8018ab8:	31bfffc4 	addi	r6,r6,-1
 8018abc:	10fff826 	beq	r2,r3,8018aa0 <__alt_data_end+0xf8018aa0>
 8018ac0:	20800003 	ldbu	r2,0(r4)
 8018ac4:	28c00003 	ldbu	r3,0(r5)
 8018ac8:	10c5c83a 	sub	r2,r2,r3
 8018acc:	f800283a 	ret
 8018ad0:	0005883a 	mov	r2,zero
 8018ad4:	f800283a 	ret

08018ad8 <__swbuf_r>:
 8018ad8:	defffb04 	addi	sp,sp,-20
 8018adc:	dcc00315 	stw	r19,12(sp)
 8018ae0:	dc800215 	stw	r18,8(sp)
 8018ae4:	dc000015 	stw	r16,0(sp)
 8018ae8:	dfc00415 	stw	ra,16(sp)
 8018aec:	dc400115 	stw	r17,4(sp)
 8018af0:	2025883a 	mov	r18,r4
 8018af4:	2827883a 	mov	r19,r5
 8018af8:	3021883a 	mov	r16,r6
 8018afc:	20000226 	beq	r4,zero,8018b08 <__swbuf_r+0x30>
 8018b00:	20800e17 	ldw	r2,56(r4)
 8018b04:	10004226 	beq	r2,zero,8018c10 <__swbuf_r+0x138>
 8018b08:	80800617 	ldw	r2,24(r16)
 8018b0c:	8100030b 	ldhu	r4,12(r16)
 8018b10:	80800215 	stw	r2,8(r16)
 8018b14:	2080020c 	andi	r2,r4,8
 8018b18:	10003626 	beq	r2,zero,8018bf4 <__swbuf_r+0x11c>
 8018b1c:	80c00417 	ldw	r3,16(r16)
 8018b20:	18003426 	beq	r3,zero,8018bf4 <__swbuf_r+0x11c>
 8018b24:	2088000c 	andi	r2,r4,8192
 8018b28:	9c403fcc 	andi	r17,r19,255
 8018b2c:	10001a26 	beq	r2,zero,8018b98 <__swbuf_r+0xc0>
 8018b30:	80800017 	ldw	r2,0(r16)
 8018b34:	81000517 	ldw	r4,20(r16)
 8018b38:	10c7c83a 	sub	r3,r2,r3
 8018b3c:	1900200e 	bge	r3,r4,8018bc0 <__swbuf_r+0xe8>
 8018b40:	18c00044 	addi	r3,r3,1
 8018b44:	81000217 	ldw	r4,8(r16)
 8018b48:	11400044 	addi	r5,r2,1
 8018b4c:	81400015 	stw	r5,0(r16)
 8018b50:	213fffc4 	addi	r4,r4,-1
 8018b54:	81000215 	stw	r4,8(r16)
 8018b58:	14c00005 	stb	r19,0(r2)
 8018b5c:	80800517 	ldw	r2,20(r16)
 8018b60:	10c01e26 	beq	r2,r3,8018bdc <__swbuf_r+0x104>
 8018b64:	8080030b 	ldhu	r2,12(r16)
 8018b68:	1080004c 	andi	r2,r2,1
 8018b6c:	10000226 	beq	r2,zero,8018b78 <__swbuf_r+0xa0>
 8018b70:	00800284 	movi	r2,10
 8018b74:	88801926 	beq	r17,r2,8018bdc <__swbuf_r+0x104>
 8018b78:	8805883a 	mov	r2,r17
 8018b7c:	dfc00417 	ldw	ra,16(sp)
 8018b80:	dcc00317 	ldw	r19,12(sp)
 8018b84:	dc800217 	ldw	r18,8(sp)
 8018b88:	dc400117 	ldw	r17,4(sp)
 8018b8c:	dc000017 	ldw	r16,0(sp)
 8018b90:	dec00504 	addi	sp,sp,20
 8018b94:	f800283a 	ret
 8018b98:	81401917 	ldw	r5,100(r16)
 8018b9c:	00b7ffc4 	movi	r2,-8193
 8018ba0:	21080014 	ori	r4,r4,8192
 8018ba4:	2884703a 	and	r2,r5,r2
 8018ba8:	80801915 	stw	r2,100(r16)
 8018bac:	80800017 	ldw	r2,0(r16)
 8018bb0:	8100030d 	sth	r4,12(r16)
 8018bb4:	81000517 	ldw	r4,20(r16)
 8018bb8:	10c7c83a 	sub	r3,r2,r3
 8018bbc:	193fe016 	blt	r3,r4,8018b40 <__alt_data_end+0xf8018b40>
 8018bc0:	800b883a 	mov	r5,r16
 8018bc4:	9009883a 	mov	r4,r18
 8018bc8:	800e4a00 	call	800e4a0 <_fflush_r>
 8018bcc:	1000071e 	bne	r2,zero,8018bec <__swbuf_r+0x114>
 8018bd0:	80800017 	ldw	r2,0(r16)
 8018bd4:	00c00044 	movi	r3,1
 8018bd8:	003fda06 	br	8018b44 <__alt_data_end+0xf8018b44>
 8018bdc:	800b883a 	mov	r5,r16
 8018be0:	9009883a 	mov	r4,r18
 8018be4:	800e4a00 	call	800e4a0 <_fflush_r>
 8018be8:	103fe326 	beq	r2,zero,8018b78 <__alt_data_end+0xf8018b78>
 8018bec:	00bfffc4 	movi	r2,-1
 8018bf0:	003fe206 	br	8018b7c <__alt_data_end+0xf8018b7c>
 8018bf4:	800b883a 	mov	r5,r16
 8018bf8:	9009883a 	mov	r4,r18
 8018bfc:	800c8540 	call	800c854 <__swsetup_r>
 8018c00:	103ffa1e 	bne	r2,zero,8018bec <__alt_data_end+0xf8018bec>
 8018c04:	8100030b 	ldhu	r4,12(r16)
 8018c08:	80c00417 	ldw	r3,16(r16)
 8018c0c:	003fc506 	br	8018b24 <__alt_data_end+0xf8018b24>
 8018c10:	800e87c0 	call	800e87c <__sinit>
 8018c14:	003fbc06 	br	8018b08 <__alt_data_end+0xf8018b08>

08018c18 <__swbuf>:
 8018c18:	008200b4 	movhi	r2,2050
 8018c1c:	10881404 	addi	r2,r2,8272
 8018c20:	280d883a 	mov	r6,r5
 8018c24:	200b883a 	mov	r5,r4
 8018c28:	11000017 	ldw	r4,0(r2)
 8018c2c:	8018ad81 	jmpi	8018ad8 <__swbuf_r>

08018c30 <_wcrtomb_r>:
 8018c30:	defff604 	addi	sp,sp,-40
 8018c34:	008200b4 	movhi	r2,2050
 8018c38:	dc800815 	stw	r18,32(sp)
 8018c3c:	dc400715 	stw	r17,28(sp)
 8018c40:	dc000615 	stw	r16,24(sp)
 8018c44:	10881704 	addi	r2,r2,8284
 8018c48:	dfc00915 	stw	ra,36(sp)
 8018c4c:	2021883a 	mov	r16,r4
 8018c50:	3823883a 	mov	r17,r7
 8018c54:	14800017 	ldw	r18,0(r2)
 8018c58:	28001426 	beq	r5,zero,8018cac <_wcrtomb_r+0x7c>
 8018c5c:	d9400415 	stw	r5,16(sp)
 8018c60:	d9800515 	stw	r6,20(sp)
 8018c64:	800f6500 	call	800f650 <__locale_charset>
 8018c68:	d9800517 	ldw	r6,20(sp)
 8018c6c:	d9400417 	ldw	r5,16(sp)
 8018c70:	100f883a 	mov	r7,r2
 8018c74:	dc400015 	stw	r17,0(sp)
 8018c78:	8009883a 	mov	r4,r16
 8018c7c:	903ee83a 	callr	r18
 8018c80:	00ffffc4 	movi	r3,-1
 8018c84:	10c0031e 	bne	r2,r3,8018c94 <_wcrtomb_r+0x64>
 8018c88:	88000015 	stw	zero,0(r17)
 8018c8c:	00c02284 	movi	r3,138
 8018c90:	80c00015 	stw	r3,0(r16)
 8018c94:	dfc00917 	ldw	ra,36(sp)
 8018c98:	dc800817 	ldw	r18,32(sp)
 8018c9c:	dc400717 	ldw	r17,28(sp)
 8018ca0:	dc000617 	ldw	r16,24(sp)
 8018ca4:	dec00a04 	addi	sp,sp,40
 8018ca8:	f800283a 	ret
 8018cac:	800f6500 	call	800f650 <__locale_charset>
 8018cb0:	100f883a 	mov	r7,r2
 8018cb4:	dc400015 	stw	r17,0(sp)
 8018cb8:	000d883a 	mov	r6,zero
 8018cbc:	d9400104 	addi	r5,sp,4
 8018cc0:	8009883a 	mov	r4,r16
 8018cc4:	903ee83a 	callr	r18
 8018cc8:	003fed06 	br	8018c80 <__alt_data_end+0xf8018c80>

08018ccc <wcrtomb>:
 8018ccc:	defff604 	addi	sp,sp,-40
 8018cd0:	008200b4 	movhi	r2,2050
 8018cd4:	dc800615 	stw	r18,24(sp)
 8018cd8:	dc400515 	stw	r17,20(sp)
 8018cdc:	10881404 	addi	r2,r2,8272
 8018ce0:	dfc00915 	stw	ra,36(sp)
 8018ce4:	dd000815 	stw	r20,32(sp)
 8018ce8:	dcc00715 	stw	r19,28(sp)
 8018cec:	dc000415 	stw	r16,16(sp)
 8018cf0:	3025883a 	mov	r18,r6
 8018cf4:	14400017 	ldw	r17,0(r2)
 8018cf8:	20001926 	beq	r4,zero,8018d60 <wcrtomb+0x94>
 8018cfc:	008200b4 	movhi	r2,2050
 8018d00:	10881704 	addi	r2,r2,8284
 8018d04:	15000017 	ldw	r20,0(r2)
 8018d08:	2021883a 	mov	r16,r4
 8018d0c:	2827883a 	mov	r19,r5
 8018d10:	800f6500 	call	800f650 <__locale_charset>
 8018d14:	100f883a 	mov	r7,r2
 8018d18:	dc800015 	stw	r18,0(sp)
 8018d1c:	980d883a 	mov	r6,r19
 8018d20:	800b883a 	mov	r5,r16
 8018d24:	8809883a 	mov	r4,r17
 8018d28:	a03ee83a 	callr	r20
 8018d2c:	00ffffc4 	movi	r3,-1
 8018d30:	10c0031e 	bne	r2,r3,8018d40 <wcrtomb+0x74>
 8018d34:	90000015 	stw	zero,0(r18)
 8018d38:	00c02284 	movi	r3,138
 8018d3c:	88c00015 	stw	r3,0(r17)
 8018d40:	dfc00917 	ldw	ra,36(sp)
 8018d44:	dd000817 	ldw	r20,32(sp)
 8018d48:	dcc00717 	ldw	r19,28(sp)
 8018d4c:	dc800617 	ldw	r18,24(sp)
 8018d50:	dc400517 	ldw	r17,20(sp)
 8018d54:	dc000417 	ldw	r16,16(sp)
 8018d58:	dec00a04 	addi	sp,sp,40
 8018d5c:	f800283a 	ret
 8018d60:	008200b4 	movhi	r2,2050
 8018d64:	10881704 	addi	r2,r2,8284
 8018d68:	14000017 	ldw	r16,0(r2)
 8018d6c:	800f6500 	call	800f650 <__locale_charset>
 8018d70:	100f883a 	mov	r7,r2
 8018d74:	dc800015 	stw	r18,0(sp)
 8018d78:	000d883a 	mov	r6,zero
 8018d7c:	d9400104 	addi	r5,sp,4
 8018d80:	8809883a 	mov	r4,r17
 8018d84:	803ee83a 	callr	r16
 8018d88:	003fe806 	br	8018d2c <__alt_data_end+0xf8018d2c>

08018d8c <__ascii_wctomb>:
 8018d8c:	28000526 	beq	r5,zero,8018da4 <__ascii_wctomb+0x18>
 8018d90:	00803fc4 	movi	r2,255
 8018d94:	11800536 	bltu	r2,r6,8018dac <__ascii_wctomb+0x20>
 8018d98:	29800005 	stb	r6,0(r5)
 8018d9c:	00800044 	movi	r2,1
 8018da0:	f800283a 	ret
 8018da4:	0005883a 	mov	r2,zero
 8018da8:	f800283a 	ret
 8018dac:	00802284 	movi	r2,138
 8018db0:	20800015 	stw	r2,0(r4)
 8018db4:	00bfffc4 	movi	r2,-1
 8018db8:	f800283a 	ret

08018dbc <_wctomb_r>:
 8018dbc:	008200b4 	movhi	r2,2050
 8018dc0:	defff904 	addi	sp,sp,-28
 8018dc4:	10881704 	addi	r2,r2,8284
 8018dc8:	dfc00615 	stw	ra,24(sp)
 8018dcc:	dc400515 	stw	r17,20(sp)
 8018dd0:	dc000415 	stw	r16,16(sp)
 8018dd4:	3823883a 	mov	r17,r7
 8018dd8:	14000017 	ldw	r16,0(r2)
 8018ddc:	d9000115 	stw	r4,4(sp)
 8018de0:	d9400215 	stw	r5,8(sp)
 8018de4:	d9800315 	stw	r6,12(sp)
 8018de8:	800f6500 	call	800f650 <__locale_charset>
 8018dec:	d9800317 	ldw	r6,12(sp)
 8018df0:	d9400217 	ldw	r5,8(sp)
 8018df4:	d9000117 	ldw	r4,4(sp)
 8018df8:	100f883a 	mov	r7,r2
 8018dfc:	dc400015 	stw	r17,0(sp)
 8018e00:	803ee83a 	callr	r16
 8018e04:	dfc00617 	ldw	ra,24(sp)
 8018e08:	dc400517 	ldw	r17,20(sp)
 8018e0c:	dc000417 	ldw	r16,16(sp)
 8018e10:	dec00704 	addi	sp,sp,28
 8018e14:	f800283a 	ret

08018e18 <__muldi3>:
 8018e18:	223fffcc 	andi	r8,r4,65535
 8018e1c:	2006d43a 	srli	r3,r4,16
 8018e20:	32bfffcc 	andi	r10,r6,65535
 8018e24:	3012d43a 	srli	r9,r6,16
 8018e28:	4297383a 	mul	r11,r8,r10
 8018e2c:	1a95383a 	mul	r10,r3,r10
 8018e30:	4251383a 	mul	r8,r8,r9
 8018e34:	5804d43a 	srli	r2,r11,16
 8018e38:	4291883a 	add	r8,r8,r10
 8018e3c:	1205883a 	add	r2,r2,r8
 8018e40:	1a51383a 	mul	r8,r3,r9
 8018e44:	1280022e 	bgeu	r2,r10,8018e50 <__muldi3+0x38>
 8018e48:	00c00074 	movhi	r3,1
 8018e4c:	40d1883a 	add	r8,r8,r3
 8018e50:	1006d43a 	srli	r3,r2,16
 8018e54:	21cf383a 	mul	r7,r4,r7
 8018e58:	314b383a 	mul	r5,r6,r5
 8018e5c:	1004943a 	slli	r2,r2,16
 8018e60:	1a11883a 	add	r8,r3,r8
 8018e64:	5affffcc 	andi	r11,r11,65535
 8018e68:	3947883a 	add	r3,r7,r5
 8018e6c:	12c5883a 	add	r2,r2,r11
 8018e70:	1a07883a 	add	r3,r3,r8
 8018e74:	f800283a 	ret

08018e78 <__fixunsdfsi>:
 8018e78:	defffd04 	addi	sp,sp,-12
 8018e7c:	000d883a 	mov	r6,zero
 8018e80:	01d07834 	movhi	r7,16864
 8018e84:	dc400115 	stw	r17,4(sp)
 8018e88:	dc000015 	stw	r16,0(sp)
 8018e8c:	dfc00215 	stw	ra,8(sp)
 8018e90:	2023883a 	mov	r17,r4
 8018e94:	2821883a 	mov	r16,r5
 8018e98:	801adb40 	call	801adb4 <__gedf2>
 8018e9c:	1000080e 	bge	r2,zero,8018ec0 <__fixunsdfsi+0x48>
 8018ea0:	8809883a 	mov	r4,r17
 8018ea4:	800b883a 	mov	r5,r16
 8018ea8:	801bf980 	call	801bf98 <__fixdfsi>
 8018eac:	dfc00217 	ldw	ra,8(sp)
 8018eb0:	dc400117 	ldw	r17,4(sp)
 8018eb4:	dc000017 	ldw	r16,0(sp)
 8018eb8:	dec00304 	addi	sp,sp,12
 8018ebc:	f800283a 	ret
 8018ec0:	000d883a 	mov	r6,zero
 8018ec4:	01d07834 	movhi	r7,16864
 8018ec8:	8809883a 	mov	r4,r17
 8018ecc:	800b883a 	mov	r5,r16
 8018ed0:	801b69c0 	call	801b69c <__subdf3>
 8018ed4:	180b883a 	mov	r5,r3
 8018ed8:	1009883a 	mov	r4,r2
 8018edc:	801bf980 	call	801bf98 <__fixdfsi>
 8018ee0:	00e00034 	movhi	r3,32768
 8018ee4:	10c5883a 	add	r2,r2,r3
 8018ee8:	003ff006 	br	8018eac <__alt_data_end+0xf8018eac>

08018eec <__udivdi3>:
 8018eec:	defff504 	addi	sp,sp,-44
 8018ef0:	dcc00415 	stw	r19,16(sp)
 8018ef4:	dc000115 	stw	r16,4(sp)
 8018ef8:	dfc00a15 	stw	ra,40(sp)
 8018efc:	df000915 	stw	fp,36(sp)
 8018f00:	ddc00815 	stw	r23,32(sp)
 8018f04:	dd800715 	stw	r22,28(sp)
 8018f08:	dd400615 	stw	r21,24(sp)
 8018f0c:	dd000515 	stw	r20,20(sp)
 8018f10:	dc800315 	stw	r18,12(sp)
 8018f14:	dc400215 	stw	r17,8(sp)
 8018f18:	2027883a 	mov	r19,r4
 8018f1c:	2821883a 	mov	r16,r5
 8018f20:	3800411e 	bne	r7,zero,8019028 <__udivdi3+0x13c>
 8018f24:	3023883a 	mov	r17,r6
 8018f28:	2025883a 	mov	r18,r4
 8018f2c:	2980522e 	bgeu	r5,r6,8019078 <__udivdi3+0x18c>
 8018f30:	00bfffd4 	movui	r2,65535
 8018f34:	282d883a 	mov	r22,r5
 8018f38:	1180a836 	bltu	r2,r6,80191dc <__udivdi3+0x2f0>
 8018f3c:	00803fc4 	movi	r2,255
 8018f40:	1185803a 	cmpltu	r2,r2,r6
 8018f44:	100490fa 	slli	r2,r2,3
 8018f48:	3086d83a 	srl	r3,r6,r2
 8018f4c:	010200b4 	movhi	r4,2050
 8018f50:	2100cf84 	addi	r4,r4,830
 8018f54:	20c7883a 	add	r3,r4,r3
 8018f58:	18c00003 	ldbu	r3,0(r3)
 8018f5c:	1885883a 	add	r2,r3,r2
 8018f60:	00c00804 	movi	r3,32
 8018f64:	1887c83a 	sub	r3,r3,r2
 8018f68:	18000526 	beq	r3,zero,8018f80 <__udivdi3+0x94>
 8018f6c:	80e0983a 	sll	r16,r16,r3
 8018f70:	9884d83a 	srl	r2,r19,r2
 8018f74:	30e2983a 	sll	r17,r6,r3
 8018f78:	98e4983a 	sll	r18,r19,r3
 8018f7c:	142cb03a 	or	r22,r2,r16
 8018f80:	882ad43a 	srli	r21,r17,16
 8018f84:	b009883a 	mov	r4,r22
 8018f88:	8d3fffcc 	andi	r20,r17,65535
 8018f8c:	a80b883a 	mov	r5,r21
 8018f90:	8003a1c0 	call	8003a1c <__umodsi3>
 8018f94:	b009883a 	mov	r4,r22
 8018f98:	a80b883a 	mov	r5,r21
 8018f9c:	1027883a 	mov	r19,r2
 8018fa0:	80039b80 	call	80039b8 <__udivsi3>
 8018fa4:	102d883a 	mov	r22,r2
 8018fa8:	9826943a 	slli	r19,r19,16
 8018fac:	9004d43a 	srli	r2,r18,16
 8018fb0:	a5a1383a 	mul	r16,r20,r22
 8018fb4:	14c4b03a 	or	r2,r2,r19
 8018fb8:	1400052e 	bgeu	r2,r16,8018fd0 <__udivdi3+0xe4>
 8018fbc:	1445883a 	add	r2,r2,r17
 8018fc0:	b0ffffc4 	addi	r3,r22,-1
 8018fc4:	14400136 	bltu	r2,r17,8018fcc <__udivdi3+0xe0>
 8018fc8:	14012336 	bltu	r2,r16,8019458 <__udivdi3+0x56c>
 8018fcc:	182d883a 	mov	r22,r3
 8018fd0:	1421c83a 	sub	r16,r2,r16
 8018fd4:	a80b883a 	mov	r5,r21
 8018fd8:	8009883a 	mov	r4,r16
 8018fdc:	8003a1c0 	call	8003a1c <__umodsi3>
 8018fe0:	1027883a 	mov	r19,r2
 8018fe4:	a80b883a 	mov	r5,r21
 8018fe8:	8009883a 	mov	r4,r16
 8018fec:	80039b80 	call	80039b8 <__udivsi3>
 8018ff0:	9826943a 	slli	r19,r19,16
 8018ff4:	a0a9383a 	mul	r20,r20,r2
 8018ff8:	94bfffcc 	andi	r18,r18,65535
 8018ffc:	94e4b03a 	or	r18,r18,r19
 8019000:	9500052e 	bgeu	r18,r20,8019018 <__udivdi3+0x12c>
 8019004:	8ca5883a 	add	r18,r17,r18
 8019008:	10ffffc4 	addi	r3,r2,-1
 801900c:	9440f136 	bltu	r18,r17,80193d4 <__udivdi3+0x4e8>
 8019010:	9500f02e 	bgeu	r18,r20,80193d4 <__udivdi3+0x4e8>
 8019014:	10bfff84 	addi	r2,r2,-2
 8019018:	b00c943a 	slli	r6,r22,16
 801901c:	0007883a 	mov	r3,zero
 8019020:	3084b03a 	or	r2,r6,r2
 8019024:	00005906 	br	801918c <__udivdi3+0x2a0>
 8019028:	29c05636 	bltu	r5,r7,8019184 <__udivdi3+0x298>
 801902c:	00bfffd4 	movui	r2,65535
 8019030:	11c0622e 	bgeu	r2,r7,80191bc <__udivdi3+0x2d0>
 8019034:	00804034 	movhi	r2,256
 8019038:	10bfffc4 	addi	r2,r2,-1
 801903c:	11c0ee36 	bltu	r2,r7,80193f8 <__udivdi3+0x50c>
 8019040:	00800404 	movi	r2,16
 8019044:	3886d83a 	srl	r3,r7,r2
 8019048:	010200b4 	movhi	r4,2050
 801904c:	2100cf84 	addi	r4,r4,830
 8019050:	20c7883a 	add	r3,r4,r3
 8019054:	18c00003 	ldbu	r3,0(r3)
 8019058:	05400804 	movi	r21,32
 801905c:	1885883a 	add	r2,r3,r2
 8019060:	a8abc83a 	sub	r21,r21,r2
 8019064:	a800621e 	bne	r21,zero,80191f0 <__udivdi3+0x304>
 8019068:	3c00e936 	bltu	r7,r16,8019410 <__udivdi3+0x524>
 801906c:	9985403a 	cmpgeu	r2,r19,r6
 8019070:	0007883a 	mov	r3,zero
 8019074:	00004506 	br	801918c <__udivdi3+0x2a0>
 8019078:	3000041e 	bne	r6,zero,801908c <__udivdi3+0x1a0>
 801907c:	000b883a 	mov	r5,zero
 8019080:	01000044 	movi	r4,1
 8019084:	80039b80 	call	80039b8 <__udivsi3>
 8019088:	1023883a 	mov	r17,r2
 801908c:	00bfffd4 	movui	r2,65535
 8019090:	14404e2e 	bgeu	r2,r17,80191cc <__udivdi3+0x2e0>
 8019094:	00804034 	movhi	r2,256
 8019098:	10bfffc4 	addi	r2,r2,-1
 801909c:	1440d836 	bltu	r2,r17,8019400 <__udivdi3+0x514>
 80190a0:	00800404 	movi	r2,16
 80190a4:	8886d83a 	srl	r3,r17,r2
 80190a8:	010200b4 	movhi	r4,2050
 80190ac:	2100cf84 	addi	r4,r4,830
 80190b0:	20c7883a 	add	r3,r4,r3
 80190b4:	18c00003 	ldbu	r3,0(r3)
 80190b8:	1885883a 	add	r2,r3,r2
 80190bc:	00c00804 	movi	r3,32
 80190c0:	1887c83a 	sub	r3,r3,r2
 80190c4:	18008f1e 	bne	r3,zero,8019304 <__udivdi3+0x418>
 80190c8:	882ad43a 	srli	r21,r17,16
 80190cc:	8461c83a 	sub	r16,r16,r17
 80190d0:	8d3fffcc 	andi	r20,r17,65535
 80190d4:	00c00044 	movi	r3,1
 80190d8:	8009883a 	mov	r4,r16
 80190dc:	a80b883a 	mov	r5,r21
 80190e0:	d8c00015 	stw	r3,0(sp)
 80190e4:	8003a1c0 	call	8003a1c <__umodsi3>
 80190e8:	8009883a 	mov	r4,r16
 80190ec:	a80b883a 	mov	r5,r21
 80190f0:	1027883a 	mov	r19,r2
 80190f4:	80039b80 	call	80039b8 <__udivsi3>
 80190f8:	9826943a 	slli	r19,r19,16
 80190fc:	9008d43a 	srli	r4,r18,16
 8019100:	1521383a 	mul	r16,r2,r20
 8019104:	102d883a 	mov	r22,r2
 8019108:	24c8b03a 	or	r4,r4,r19
 801910c:	d8c00017 	ldw	r3,0(sp)
 8019110:	2400052e 	bgeu	r4,r16,8019128 <__udivdi3+0x23c>
 8019114:	2449883a 	add	r4,r4,r17
 8019118:	b0bfffc4 	addi	r2,r22,-1
 801911c:	24400136 	bltu	r4,r17,8019124 <__udivdi3+0x238>
 8019120:	2400ca36 	bltu	r4,r16,801944c <__udivdi3+0x560>
 8019124:	102d883a 	mov	r22,r2
 8019128:	2421c83a 	sub	r16,r4,r16
 801912c:	a80b883a 	mov	r5,r21
 8019130:	8009883a 	mov	r4,r16
 8019134:	d8c00015 	stw	r3,0(sp)
 8019138:	8003a1c0 	call	8003a1c <__umodsi3>
 801913c:	1027883a 	mov	r19,r2
 8019140:	a80b883a 	mov	r5,r21
 8019144:	8009883a 	mov	r4,r16
 8019148:	80039b80 	call	80039b8 <__udivsi3>
 801914c:	9826943a 	slli	r19,r19,16
 8019150:	1529383a 	mul	r20,r2,r20
 8019154:	94bfffcc 	andi	r18,r18,65535
 8019158:	94e4b03a 	or	r18,r18,r19
 801915c:	d8c00017 	ldw	r3,0(sp)
 8019160:	9500052e 	bgeu	r18,r20,8019178 <__udivdi3+0x28c>
 8019164:	8ca5883a 	add	r18,r17,r18
 8019168:	113fffc4 	addi	r4,r2,-1
 801916c:	94409736 	bltu	r18,r17,80193cc <__udivdi3+0x4e0>
 8019170:	9500962e 	bgeu	r18,r20,80193cc <__udivdi3+0x4e0>
 8019174:	10bfff84 	addi	r2,r2,-2
 8019178:	b00c943a 	slli	r6,r22,16
 801917c:	3084b03a 	or	r2,r6,r2
 8019180:	00000206 	br	801918c <__udivdi3+0x2a0>
 8019184:	0007883a 	mov	r3,zero
 8019188:	0005883a 	mov	r2,zero
 801918c:	dfc00a17 	ldw	ra,40(sp)
 8019190:	df000917 	ldw	fp,36(sp)
 8019194:	ddc00817 	ldw	r23,32(sp)
 8019198:	dd800717 	ldw	r22,28(sp)
 801919c:	dd400617 	ldw	r21,24(sp)
 80191a0:	dd000517 	ldw	r20,20(sp)
 80191a4:	dcc00417 	ldw	r19,16(sp)
 80191a8:	dc800317 	ldw	r18,12(sp)
 80191ac:	dc400217 	ldw	r17,8(sp)
 80191b0:	dc000117 	ldw	r16,4(sp)
 80191b4:	dec00b04 	addi	sp,sp,44
 80191b8:	f800283a 	ret
 80191bc:	00803fc4 	movi	r2,255
 80191c0:	11c5803a 	cmpltu	r2,r2,r7
 80191c4:	100490fa 	slli	r2,r2,3
 80191c8:	003f9e06 	br	8019044 <__alt_data_end+0xf8019044>
 80191cc:	00803fc4 	movi	r2,255
 80191d0:	1445803a 	cmpltu	r2,r2,r17
 80191d4:	100490fa 	slli	r2,r2,3
 80191d8:	003fb206 	br	80190a4 <__alt_data_end+0xf80190a4>
 80191dc:	00804034 	movhi	r2,256
 80191e0:	10bfffc4 	addi	r2,r2,-1
 80191e4:	11808836 	bltu	r2,r6,8019408 <__udivdi3+0x51c>
 80191e8:	00800404 	movi	r2,16
 80191ec:	003f5606 	br	8018f48 <__alt_data_end+0xf8018f48>
 80191f0:	30aed83a 	srl	r23,r6,r2
 80191f4:	3d4e983a 	sll	r7,r7,r21
 80191f8:	80acd83a 	srl	r22,r16,r2
 80191fc:	9884d83a 	srl	r2,r19,r2
 8019200:	3deeb03a 	or	r23,r7,r23
 8019204:	b824d43a 	srli	r18,r23,16
 8019208:	8560983a 	sll	r16,r16,r21
 801920c:	b009883a 	mov	r4,r22
 8019210:	900b883a 	mov	r5,r18
 8019214:	3568983a 	sll	r20,r6,r21
 8019218:	1420b03a 	or	r16,r2,r16
 801921c:	8003a1c0 	call	8003a1c <__umodsi3>
 8019220:	b009883a 	mov	r4,r22
 8019224:	900b883a 	mov	r5,r18
 8019228:	1023883a 	mov	r17,r2
 801922c:	80039b80 	call	80039b8 <__udivsi3>
 8019230:	8808943a 	slli	r4,r17,16
 8019234:	bf3fffcc 	andi	fp,r23,65535
 8019238:	8006d43a 	srli	r3,r16,16
 801923c:	e0a3383a 	mul	r17,fp,r2
 8019240:	100d883a 	mov	r6,r2
 8019244:	1906b03a 	or	r3,r3,r4
 8019248:	1c40042e 	bgeu	r3,r17,801925c <__udivdi3+0x370>
 801924c:	1dc7883a 	add	r3,r3,r23
 8019250:	10bfffc4 	addi	r2,r2,-1
 8019254:	1dc0752e 	bgeu	r3,r23,801942c <__udivdi3+0x540>
 8019258:	100d883a 	mov	r6,r2
 801925c:	1c63c83a 	sub	r17,r3,r17
 8019260:	900b883a 	mov	r5,r18
 8019264:	8809883a 	mov	r4,r17
 8019268:	d9800015 	stw	r6,0(sp)
 801926c:	8003a1c0 	call	8003a1c <__umodsi3>
 8019270:	102d883a 	mov	r22,r2
 8019274:	8809883a 	mov	r4,r17
 8019278:	900b883a 	mov	r5,r18
 801927c:	80039b80 	call	80039b8 <__udivsi3>
 8019280:	b02c943a 	slli	r22,r22,16
 8019284:	e089383a 	mul	r4,fp,r2
 8019288:	843fffcc 	andi	r16,r16,65535
 801928c:	85a0b03a 	or	r16,r16,r22
 8019290:	d9800017 	ldw	r6,0(sp)
 8019294:	8100042e 	bgeu	r16,r4,80192a8 <__udivdi3+0x3bc>
 8019298:	85e1883a 	add	r16,r16,r23
 801929c:	10ffffc4 	addi	r3,r2,-1
 80192a0:	85c05e2e 	bgeu	r16,r23,801941c <__udivdi3+0x530>
 80192a4:	1805883a 	mov	r2,r3
 80192a8:	300c943a 	slli	r6,r6,16
 80192ac:	a17fffcc 	andi	r5,r20,65535
 80192b0:	a028d43a 	srli	r20,r20,16
 80192b4:	3084b03a 	or	r2,r6,r2
 80192b8:	10ffffcc 	andi	r3,r2,65535
 80192bc:	100cd43a 	srli	r6,r2,16
 80192c0:	194f383a 	mul	r7,r3,r5
 80192c4:	1d07383a 	mul	r3,r3,r20
 80192c8:	314b383a 	mul	r5,r6,r5
 80192cc:	3810d43a 	srli	r8,r7,16
 80192d0:	8121c83a 	sub	r16,r16,r4
 80192d4:	1947883a 	add	r3,r3,r5
 80192d8:	40c7883a 	add	r3,r8,r3
 80192dc:	350d383a 	mul	r6,r6,r20
 80192e0:	1940022e 	bgeu	r3,r5,80192ec <__udivdi3+0x400>
 80192e4:	01000074 	movhi	r4,1
 80192e8:	310d883a 	add	r6,r6,r4
 80192ec:	1828d43a 	srli	r20,r3,16
 80192f0:	a18d883a 	add	r6,r20,r6
 80192f4:	81803e36 	bltu	r16,r6,80193f0 <__udivdi3+0x504>
 80192f8:	81803826 	beq	r16,r6,80193dc <__udivdi3+0x4f0>
 80192fc:	0007883a 	mov	r3,zero
 8019300:	003fa206 	br	801918c <__alt_data_end+0xf801918c>
 8019304:	88e2983a 	sll	r17,r17,r3
 8019308:	80a8d83a 	srl	r20,r16,r2
 801930c:	80e0983a 	sll	r16,r16,r3
 8019310:	882ad43a 	srli	r21,r17,16
 8019314:	9884d83a 	srl	r2,r19,r2
 8019318:	a009883a 	mov	r4,r20
 801931c:	a80b883a 	mov	r5,r21
 8019320:	142eb03a 	or	r23,r2,r16
 8019324:	98e4983a 	sll	r18,r19,r3
 8019328:	8003a1c0 	call	8003a1c <__umodsi3>
 801932c:	a009883a 	mov	r4,r20
 8019330:	a80b883a 	mov	r5,r21
 8019334:	1021883a 	mov	r16,r2
 8019338:	80039b80 	call	80039b8 <__udivsi3>
 801933c:	1039883a 	mov	fp,r2
 8019340:	8d3fffcc 	andi	r20,r17,65535
 8019344:	8020943a 	slli	r16,r16,16
 8019348:	b804d43a 	srli	r2,r23,16
 801934c:	a72d383a 	mul	r22,r20,fp
 8019350:	1404b03a 	or	r2,r2,r16
 8019354:	1580062e 	bgeu	r2,r22,8019370 <__udivdi3+0x484>
 8019358:	1445883a 	add	r2,r2,r17
 801935c:	e0ffffc4 	addi	r3,fp,-1
 8019360:	14403836 	bltu	r2,r17,8019444 <__udivdi3+0x558>
 8019364:	1580372e 	bgeu	r2,r22,8019444 <__udivdi3+0x558>
 8019368:	e73fff84 	addi	fp,fp,-2
 801936c:	1445883a 	add	r2,r2,r17
 8019370:	15adc83a 	sub	r22,r2,r22
 8019374:	a80b883a 	mov	r5,r21
 8019378:	b009883a 	mov	r4,r22
 801937c:	8003a1c0 	call	8003a1c <__umodsi3>
 8019380:	1027883a 	mov	r19,r2
 8019384:	b009883a 	mov	r4,r22
 8019388:	a80b883a 	mov	r5,r21
 801938c:	80039b80 	call	80039b8 <__udivsi3>
 8019390:	9826943a 	slli	r19,r19,16
 8019394:	a0a1383a 	mul	r16,r20,r2
 8019398:	b93fffcc 	andi	r4,r23,65535
 801939c:	24c8b03a 	or	r4,r4,r19
 80193a0:	2400062e 	bgeu	r4,r16,80193bc <__udivdi3+0x4d0>
 80193a4:	2449883a 	add	r4,r4,r17
 80193a8:	10ffffc4 	addi	r3,r2,-1
 80193ac:	24402336 	bltu	r4,r17,801943c <__udivdi3+0x550>
 80193b0:	2400222e 	bgeu	r4,r16,801943c <__udivdi3+0x550>
 80193b4:	10bfff84 	addi	r2,r2,-2
 80193b8:	2449883a 	add	r4,r4,r17
 80193bc:	e038943a 	slli	fp,fp,16
 80193c0:	2421c83a 	sub	r16,r4,r16
 80193c4:	e086b03a 	or	r3,fp,r2
 80193c8:	003f4306 	br	80190d8 <__alt_data_end+0xf80190d8>
 80193cc:	2005883a 	mov	r2,r4
 80193d0:	003f6906 	br	8019178 <__alt_data_end+0xf8019178>
 80193d4:	1805883a 	mov	r2,r3
 80193d8:	003f0f06 	br	8019018 <__alt_data_end+0xf8019018>
 80193dc:	1806943a 	slli	r3,r3,16
 80193e0:	9d66983a 	sll	r19,r19,r21
 80193e4:	39ffffcc 	andi	r7,r7,65535
 80193e8:	19c7883a 	add	r3,r3,r7
 80193ec:	98ffc32e 	bgeu	r19,r3,80192fc <__alt_data_end+0xf80192fc>
 80193f0:	10bfffc4 	addi	r2,r2,-1
 80193f4:	003fc106 	br	80192fc <__alt_data_end+0xf80192fc>
 80193f8:	00800604 	movi	r2,24
 80193fc:	003f1106 	br	8019044 <__alt_data_end+0xf8019044>
 8019400:	00800604 	movi	r2,24
 8019404:	003f2706 	br	80190a4 <__alt_data_end+0xf80190a4>
 8019408:	00800604 	movi	r2,24
 801940c:	003ece06 	br	8018f48 <__alt_data_end+0xf8018f48>
 8019410:	0007883a 	mov	r3,zero
 8019414:	00800044 	movi	r2,1
 8019418:	003f5c06 	br	801918c <__alt_data_end+0xf801918c>
 801941c:	813fa12e 	bgeu	r16,r4,80192a4 <__alt_data_end+0xf80192a4>
 8019420:	10bfff84 	addi	r2,r2,-2
 8019424:	85e1883a 	add	r16,r16,r23
 8019428:	003f9f06 	br	80192a8 <__alt_data_end+0xf80192a8>
 801942c:	1c7f8a2e 	bgeu	r3,r17,8019258 <__alt_data_end+0xf8019258>
 8019430:	31bfff84 	addi	r6,r6,-2
 8019434:	1dc7883a 	add	r3,r3,r23
 8019438:	003f8806 	br	801925c <__alt_data_end+0xf801925c>
 801943c:	1805883a 	mov	r2,r3
 8019440:	003fde06 	br	80193bc <__alt_data_end+0xf80193bc>
 8019444:	1839883a 	mov	fp,r3
 8019448:	003fc906 	br	8019370 <__alt_data_end+0xf8019370>
 801944c:	b5bfff84 	addi	r22,r22,-2
 8019450:	2449883a 	add	r4,r4,r17
 8019454:	003f3406 	br	8019128 <__alt_data_end+0xf8019128>
 8019458:	b5bfff84 	addi	r22,r22,-2
 801945c:	1445883a 	add	r2,r2,r17
 8019460:	003edb06 	br	8018fd0 <__alt_data_end+0xf8018fd0>

08019464 <__umoddi3>:
 8019464:	defff404 	addi	sp,sp,-48
 8019468:	df000a15 	stw	fp,40(sp)
 801946c:	dc400315 	stw	r17,12(sp)
 8019470:	dc000215 	stw	r16,8(sp)
 8019474:	dfc00b15 	stw	ra,44(sp)
 8019478:	ddc00915 	stw	r23,36(sp)
 801947c:	dd800815 	stw	r22,32(sp)
 8019480:	dd400715 	stw	r21,28(sp)
 8019484:	dd000615 	stw	r20,24(sp)
 8019488:	dcc00515 	stw	r19,20(sp)
 801948c:	dc800415 	stw	r18,16(sp)
 8019490:	2021883a 	mov	r16,r4
 8019494:	2823883a 	mov	r17,r5
 8019498:	2839883a 	mov	fp,r5
 801949c:	38003c1e 	bne	r7,zero,8019590 <__umoddi3+0x12c>
 80194a0:	3027883a 	mov	r19,r6
 80194a4:	2029883a 	mov	r20,r4
 80194a8:	2980512e 	bgeu	r5,r6,80195f0 <__umoddi3+0x18c>
 80194ac:	00bfffd4 	movui	r2,65535
 80194b0:	11809a36 	bltu	r2,r6,801971c <__umoddi3+0x2b8>
 80194b4:	01003fc4 	movi	r4,255
 80194b8:	2189803a 	cmpltu	r4,r4,r6
 80194bc:	200890fa 	slli	r4,r4,3
 80194c0:	3104d83a 	srl	r2,r6,r4
 80194c4:	00c200b4 	movhi	r3,2050
 80194c8:	18c0cf84 	addi	r3,r3,830
 80194cc:	1885883a 	add	r2,r3,r2
 80194d0:	10c00003 	ldbu	r3,0(r2)
 80194d4:	00800804 	movi	r2,32
 80194d8:	1909883a 	add	r4,r3,r4
 80194dc:	1125c83a 	sub	r18,r2,r4
 80194e0:	90000526 	beq	r18,zero,80194f8 <__umoddi3+0x94>
 80194e4:	8ca2983a 	sll	r17,r17,r18
 80194e8:	8108d83a 	srl	r4,r16,r4
 80194ec:	34a6983a 	sll	r19,r6,r18
 80194f0:	84a8983a 	sll	r20,r16,r18
 80194f4:	2478b03a 	or	fp,r4,r17
 80194f8:	982ed43a 	srli	r23,r19,16
 80194fc:	e009883a 	mov	r4,fp
 8019500:	9dbfffcc 	andi	r22,r19,65535
 8019504:	b80b883a 	mov	r5,r23
 8019508:	8003a1c0 	call	8003a1c <__umodsi3>
 801950c:	e009883a 	mov	r4,fp
 8019510:	b80b883a 	mov	r5,r23
 8019514:	102b883a 	mov	r21,r2
 8019518:	80039b80 	call	80039b8 <__udivsi3>
 801951c:	a806943a 	slli	r3,r21,16
 8019520:	a008d43a 	srli	r4,r20,16
 8019524:	b085383a 	mul	r2,r22,r2
 8019528:	20c8b03a 	or	r4,r4,r3
 801952c:	2080032e 	bgeu	r4,r2,801953c <__umoddi3+0xd8>
 8019530:	24c9883a 	add	r4,r4,r19
 8019534:	24c00136 	bltu	r4,r19,801953c <__umoddi3+0xd8>
 8019538:	20811036 	bltu	r4,r2,801997c <__umoddi3+0x518>
 801953c:	20abc83a 	sub	r21,r4,r2
 8019540:	b80b883a 	mov	r5,r23
 8019544:	a809883a 	mov	r4,r21
 8019548:	8003a1c0 	call	8003a1c <__umodsi3>
 801954c:	1023883a 	mov	r17,r2
 8019550:	b80b883a 	mov	r5,r23
 8019554:	a809883a 	mov	r4,r21
 8019558:	80039b80 	call	80039b8 <__udivsi3>
 801955c:	8822943a 	slli	r17,r17,16
 8019560:	b085383a 	mul	r2,r22,r2
 8019564:	a0ffffcc 	andi	r3,r20,65535
 8019568:	1c46b03a 	or	r3,r3,r17
 801956c:	1880042e 	bgeu	r3,r2,8019580 <__umoddi3+0x11c>
 8019570:	1cc7883a 	add	r3,r3,r19
 8019574:	1cc00236 	bltu	r3,r19,8019580 <__umoddi3+0x11c>
 8019578:	1880012e 	bgeu	r3,r2,8019580 <__umoddi3+0x11c>
 801957c:	1cc7883a 	add	r3,r3,r19
 8019580:	1885c83a 	sub	r2,r3,r2
 8019584:	1484d83a 	srl	r2,r2,r18
 8019588:	0007883a 	mov	r3,zero
 801958c:	00004f06 	br	80196cc <__umoddi3+0x268>
 8019590:	29c04c36 	bltu	r5,r7,80196c4 <__umoddi3+0x260>
 8019594:	00bfffd4 	movui	r2,65535
 8019598:	11c0582e 	bgeu	r2,r7,80196fc <__umoddi3+0x298>
 801959c:	00804034 	movhi	r2,256
 80195a0:	10bfffc4 	addi	r2,r2,-1
 80195a4:	11c0e736 	bltu	r2,r7,8019944 <__umoddi3+0x4e0>
 80195a8:	01000404 	movi	r4,16
 80195ac:	3904d83a 	srl	r2,r7,r4
 80195b0:	00c200b4 	movhi	r3,2050
 80195b4:	18c0cf84 	addi	r3,r3,830
 80195b8:	1885883a 	add	r2,r3,r2
 80195bc:	14c00003 	ldbu	r19,0(r2)
 80195c0:	00c00804 	movi	r3,32
 80195c4:	9927883a 	add	r19,r19,r4
 80195c8:	1ce9c83a 	sub	r20,r3,r19
 80195cc:	a000581e 	bne	r20,zero,8019730 <__umoddi3+0x2cc>
 80195d0:	3c400136 	bltu	r7,r17,80195d8 <__umoddi3+0x174>
 80195d4:	8180eb36 	bltu	r16,r6,8019984 <__umoddi3+0x520>
 80195d8:	8185c83a 	sub	r2,r16,r6
 80195dc:	89e3c83a 	sub	r17,r17,r7
 80195e0:	8089803a 	cmpltu	r4,r16,r2
 80195e4:	8939c83a 	sub	fp,r17,r4
 80195e8:	e007883a 	mov	r3,fp
 80195ec:	00003706 	br	80196cc <__umoddi3+0x268>
 80195f0:	3000041e 	bne	r6,zero,8019604 <__umoddi3+0x1a0>
 80195f4:	000b883a 	mov	r5,zero
 80195f8:	01000044 	movi	r4,1
 80195fc:	80039b80 	call	80039b8 <__udivsi3>
 8019600:	1027883a 	mov	r19,r2
 8019604:	00bfffd4 	movui	r2,65535
 8019608:	14c0402e 	bgeu	r2,r19,801970c <__umoddi3+0x2a8>
 801960c:	00804034 	movhi	r2,256
 8019610:	10bfffc4 	addi	r2,r2,-1
 8019614:	14c0cd36 	bltu	r2,r19,801994c <__umoddi3+0x4e8>
 8019618:	00800404 	movi	r2,16
 801961c:	9886d83a 	srl	r3,r19,r2
 8019620:	010200b4 	movhi	r4,2050
 8019624:	2100cf84 	addi	r4,r4,830
 8019628:	20c7883a 	add	r3,r4,r3
 801962c:	18c00003 	ldbu	r3,0(r3)
 8019630:	1887883a 	add	r3,r3,r2
 8019634:	00800804 	movi	r2,32
 8019638:	10e5c83a 	sub	r18,r2,r3
 801963c:	9000901e 	bne	r18,zero,8019880 <__umoddi3+0x41c>
 8019640:	982cd43a 	srli	r22,r19,16
 8019644:	8ce3c83a 	sub	r17,r17,r19
 8019648:	9d7fffcc 	andi	r21,r19,65535
 801964c:	b00b883a 	mov	r5,r22
 8019650:	8809883a 	mov	r4,r17
 8019654:	8003a1c0 	call	8003a1c <__umodsi3>
 8019658:	8809883a 	mov	r4,r17
 801965c:	b00b883a 	mov	r5,r22
 8019660:	1021883a 	mov	r16,r2
 8019664:	80039b80 	call	80039b8 <__udivsi3>
 8019668:	8006943a 	slli	r3,r16,16
 801966c:	a008d43a 	srli	r4,r20,16
 8019670:	1545383a 	mul	r2,r2,r21
 8019674:	20c8b03a 	or	r4,r4,r3
 8019678:	2080042e 	bgeu	r4,r2,801968c <__umoddi3+0x228>
 801967c:	24c9883a 	add	r4,r4,r19
 8019680:	24c00236 	bltu	r4,r19,801968c <__umoddi3+0x228>
 8019684:	2080012e 	bgeu	r4,r2,801968c <__umoddi3+0x228>
 8019688:	24c9883a 	add	r4,r4,r19
 801968c:	20a1c83a 	sub	r16,r4,r2
 8019690:	b00b883a 	mov	r5,r22
 8019694:	8009883a 	mov	r4,r16
 8019698:	8003a1c0 	call	8003a1c <__umodsi3>
 801969c:	1023883a 	mov	r17,r2
 80196a0:	b00b883a 	mov	r5,r22
 80196a4:	8009883a 	mov	r4,r16
 80196a8:	80039b80 	call	80039b8 <__udivsi3>
 80196ac:	8822943a 	slli	r17,r17,16
 80196b0:	1545383a 	mul	r2,r2,r21
 80196b4:	a53fffcc 	andi	r20,r20,65535
 80196b8:	a446b03a 	or	r3,r20,r17
 80196bc:	18bfb02e 	bgeu	r3,r2,8019580 <__alt_data_end+0xf8019580>
 80196c0:	003fab06 	br	8019570 <__alt_data_end+0xf8019570>
 80196c4:	2005883a 	mov	r2,r4
 80196c8:	2807883a 	mov	r3,r5
 80196cc:	dfc00b17 	ldw	ra,44(sp)
 80196d0:	df000a17 	ldw	fp,40(sp)
 80196d4:	ddc00917 	ldw	r23,36(sp)
 80196d8:	dd800817 	ldw	r22,32(sp)
 80196dc:	dd400717 	ldw	r21,28(sp)
 80196e0:	dd000617 	ldw	r20,24(sp)
 80196e4:	dcc00517 	ldw	r19,20(sp)
 80196e8:	dc800417 	ldw	r18,16(sp)
 80196ec:	dc400317 	ldw	r17,12(sp)
 80196f0:	dc000217 	ldw	r16,8(sp)
 80196f4:	dec00c04 	addi	sp,sp,48
 80196f8:	f800283a 	ret
 80196fc:	04c03fc4 	movi	r19,255
 8019700:	99c9803a 	cmpltu	r4,r19,r7
 8019704:	200890fa 	slli	r4,r4,3
 8019708:	003fa806 	br	80195ac <__alt_data_end+0xf80195ac>
 801970c:	00803fc4 	movi	r2,255
 8019710:	14c5803a 	cmpltu	r2,r2,r19
 8019714:	100490fa 	slli	r2,r2,3
 8019718:	003fc006 	br	801961c <__alt_data_end+0xf801961c>
 801971c:	00804034 	movhi	r2,256
 8019720:	10bfffc4 	addi	r2,r2,-1
 8019724:	11808b36 	bltu	r2,r6,8019954 <__umoddi3+0x4f0>
 8019728:	01000404 	movi	r4,16
 801972c:	003f6406 	br	80194c0 <__alt_data_end+0xf80194c0>
 8019730:	34c4d83a 	srl	r2,r6,r19
 8019734:	3d0e983a 	sll	r7,r7,r20
 8019738:	8cf8d83a 	srl	fp,r17,r19
 801973c:	8d10983a 	sll	r8,r17,r20
 8019740:	38aab03a 	or	r21,r7,r2
 8019744:	a82cd43a 	srli	r22,r21,16
 8019748:	84e2d83a 	srl	r17,r16,r19
 801974c:	e009883a 	mov	r4,fp
 8019750:	b00b883a 	mov	r5,r22
 8019754:	8a22b03a 	or	r17,r17,r8
 8019758:	3524983a 	sll	r18,r6,r20
 801975c:	8003a1c0 	call	8003a1c <__umodsi3>
 8019760:	e009883a 	mov	r4,fp
 8019764:	b00b883a 	mov	r5,r22
 8019768:	102f883a 	mov	r23,r2
 801976c:	80039b80 	call	80039b8 <__udivsi3>
 8019770:	100d883a 	mov	r6,r2
 8019774:	b808943a 	slli	r4,r23,16
 8019778:	aa3fffcc 	andi	r8,r21,65535
 801977c:	8804d43a 	srli	r2,r17,16
 8019780:	41af383a 	mul	r23,r8,r6
 8019784:	8520983a 	sll	r16,r16,r20
 8019788:	1104b03a 	or	r2,r2,r4
 801978c:	15c0042e 	bgeu	r2,r23,80197a0 <__umoddi3+0x33c>
 8019790:	1545883a 	add	r2,r2,r21
 8019794:	30ffffc4 	addi	r3,r6,-1
 8019798:	1540742e 	bgeu	r2,r21,801996c <__umoddi3+0x508>
 801979c:	180d883a 	mov	r6,r3
 80197a0:	15efc83a 	sub	r23,r2,r23
 80197a4:	b00b883a 	mov	r5,r22
 80197a8:	b809883a 	mov	r4,r23
 80197ac:	d9800115 	stw	r6,4(sp)
 80197b0:	da000015 	stw	r8,0(sp)
 80197b4:	8003a1c0 	call	8003a1c <__umodsi3>
 80197b8:	b00b883a 	mov	r5,r22
 80197bc:	b809883a 	mov	r4,r23
 80197c0:	1039883a 	mov	fp,r2
 80197c4:	80039b80 	call	80039b8 <__udivsi3>
 80197c8:	da000017 	ldw	r8,0(sp)
 80197cc:	e038943a 	slli	fp,fp,16
 80197d0:	100b883a 	mov	r5,r2
 80197d4:	4089383a 	mul	r4,r8,r2
 80197d8:	8a3fffcc 	andi	r8,r17,65535
 80197dc:	4710b03a 	or	r8,r8,fp
 80197e0:	d9800117 	ldw	r6,4(sp)
 80197e4:	4100042e 	bgeu	r8,r4,80197f8 <__umoddi3+0x394>
 80197e8:	4551883a 	add	r8,r8,r21
 80197ec:	10bfffc4 	addi	r2,r2,-1
 80197f0:	45405a2e 	bgeu	r8,r21,801995c <__umoddi3+0x4f8>
 80197f4:	100b883a 	mov	r5,r2
 80197f8:	300c943a 	slli	r6,r6,16
 80197fc:	91ffffcc 	andi	r7,r18,65535
 8019800:	9004d43a 	srli	r2,r18,16
 8019804:	314cb03a 	or	r6,r6,r5
 8019808:	317fffcc 	andi	r5,r6,65535
 801980c:	300cd43a 	srli	r6,r6,16
 8019810:	29d3383a 	mul	r9,r5,r7
 8019814:	288b383a 	mul	r5,r5,r2
 8019818:	31cf383a 	mul	r7,r6,r7
 801981c:	4806d43a 	srli	r3,r9,16
 8019820:	4111c83a 	sub	r8,r8,r4
 8019824:	29cb883a 	add	r5,r5,r7
 8019828:	194b883a 	add	r5,r3,r5
 801982c:	3085383a 	mul	r2,r6,r2
 8019830:	29c0022e 	bgeu	r5,r7,801983c <__umoddi3+0x3d8>
 8019834:	00c00074 	movhi	r3,1
 8019838:	10c5883a 	add	r2,r2,r3
 801983c:	2808d43a 	srli	r4,r5,16
 8019840:	280a943a 	slli	r5,r5,16
 8019844:	4a7fffcc 	andi	r9,r9,65535
 8019848:	2085883a 	add	r2,r4,r2
 801984c:	2a4b883a 	add	r5,r5,r9
 8019850:	40803636 	bltu	r8,r2,801992c <__umoddi3+0x4c8>
 8019854:	40804d26 	beq	r8,r2,801998c <__umoddi3+0x528>
 8019858:	4089c83a 	sub	r4,r8,r2
 801985c:	280f883a 	mov	r7,r5
 8019860:	81cfc83a 	sub	r7,r16,r7
 8019864:	81c7803a 	cmpltu	r3,r16,r7
 8019868:	20c7c83a 	sub	r3,r4,r3
 801986c:	1cc4983a 	sll	r2,r3,r19
 8019870:	3d0ed83a 	srl	r7,r7,r20
 8019874:	1d06d83a 	srl	r3,r3,r20
 8019878:	11c4b03a 	or	r2,r2,r7
 801987c:	003f9306 	br	80196cc <__alt_data_end+0xf80196cc>
 8019880:	9ca6983a 	sll	r19,r19,r18
 8019884:	88e8d83a 	srl	r20,r17,r3
 8019888:	80c4d83a 	srl	r2,r16,r3
 801988c:	982cd43a 	srli	r22,r19,16
 8019890:	8ca2983a 	sll	r17,r17,r18
 8019894:	a009883a 	mov	r4,r20
 8019898:	b00b883a 	mov	r5,r22
 801989c:	1478b03a 	or	fp,r2,r17
 80198a0:	8003a1c0 	call	8003a1c <__umodsi3>
 80198a4:	a009883a 	mov	r4,r20
 80198a8:	b00b883a 	mov	r5,r22
 80198ac:	1023883a 	mov	r17,r2
 80198b0:	80039b80 	call	80039b8 <__udivsi3>
 80198b4:	9d7fffcc 	andi	r21,r19,65535
 80198b8:	880a943a 	slli	r5,r17,16
 80198bc:	e008d43a 	srli	r4,fp,16
 80198c0:	a885383a 	mul	r2,r21,r2
 80198c4:	84a8983a 	sll	r20,r16,r18
 80198c8:	2148b03a 	or	r4,r4,r5
 80198cc:	2080042e 	bgeu	r4,r2,80198e0 <__umoddi3+0x47c>
 80198d0:	24c9883a 	add	r4,r4,r19
 80198d4:	24c00236 	bltu	r4,r19,80198e0 <__umoddi3+0x47c>
 80198d8:	2080012e 	bgeu	r4,r2,80198e0 <__umoddi3+0x47c>
 80198dc:	24c9883a 	add	r4,r4,r19
 80198e0:	20a3c83a 	sub	r17,r4,r2
 80198e4:	b00b883a 	mov	r5,r22
 80198e8:	8809883a 	mov	r4,r17
 80198ec:	8003a1c0 	call	8003a1c <__umodsi3>
 80198f0:	102f883a 	mov	r23,r2
 80198f4:	8809883a 	mov	r4,r17
 80198f8:	b00b883a 	mov	r5,r22
 80198fc:	80039b80 	call	80039b8 <__udivsi3>
 8019900:	b82e943a 	slli	r23,r23,16
 8019904:	a885383a 	mul	r2,r21,r2
 8019908:	e13fffcc 	andi	r4,fp,65535
 801990c:	25c8b03a 	or	r4,r4,r23
 8019910:	2080042e 	bgeu	r4,r2,8019924 <__umoddi3+0x4c0>
 8019914:	24c9883a 	add	r4,r4,r19
 8019918:	24c00236 	bltu	r4,r19,8019924 <__umoddi3+0x4c0>
 801991c:	2080012e 	bgeu	r4,r2,8019924 <__umoddi3+0x4c0>
 8019920:	24c9883a 	add	r4,r4,r19
 8019924:	20a3c83a 	sub	r17,r4,r2
 8019928:	003f4806 	br	801964c <__alt_data_end+0xf801964c>
 801992c:	2c8fc83a 	sub	r7,r5,r18
 8019930:	1545c83a 	sub	r2,r2,r21
 8019934:	29cb803a 	cmpltu	r5,r5,r7
 8019938:	1145c83a 	sub	r2,r2,r5
 801993c:	4089c83a 	sub	r4,r8,r2
 8019940:	003fc706 	br	8019860 <__alt_data_end+0xf8019860>
 8019944:	01000604 	movi	r4,24
 8019948:	003f1806 	br	80195ac <__alt_data_end+0xf80195ac>
 801994c:	00800604 	movi	r2,24
 8019950:	003f3206 	br	801961c <__alt_data_end+0xf801961c>
 8019954:	01000604 	movi	r4,24
 8019958:	003ed906 	br	80194c0 <__alt_data_end+0xf80194c0>
 801995c:	413fa52e 	bgeu	r8,r4,80197f4 <__alt_data_end+0xf80197f4>
 8019960:	297fff84 	addi	r5,r5,-2
 8019964:	4551883a 	add	r8,r8,r21
 8019968:	003fa306 	br	80197f8 <__alt_data_end+0xf80197f8>
 801996c:	15ff8b2e 	bgeu	r2,r23,801979c <__alt_data_end+0xf801979c>
 8019970:	31bfff84 	addi	r6,r6,-2
 8019974:	1545883a 	add	r2,r2,r21
 8019978:	003f8906 	br	80197a0 <__alt_data_end+0xf80197a0>
 801997c:	24c9883a 	add	r4,r4,r19
 8019980:	003eee06 	br	801953c <__alt_data_end+0xf801953c>
 8019984:	8005883a 	mov	r2,r16
 8019988:	003f1706 	br	80195e8 <__alt_data_end+0xf80195e8>
 801998c:	817fe736 	bltu	r16,r5,801992c <__alt_data_end+0xf801992c>
 8019990:	280f883a 	mov	r7,r5
 8019994:	0009883a 	mov	r4,zero
 8019998:	003fb106 	br	8019860 <__alt_data_end+0xf8019860>

0801999c <__eqsf2>:
 801999c:	2006d5fa 	srli	r3,r4,23
 80199a0:	280cd5fa 	srli	r6,r5,23
 80199a4:	01c02034 	movhi	r7,128
 80199a8:	39ffffc4 	addi	r7,r7,-1
 80199ac:	18c03fcc 	andi	r3,r3,255
 80199b0:	02003fc4 	movi	r8,255
 80199b4:	3904703a 	and	r2,r7,r4
 80199b8:	31803fcc 	andi	r6,r6,255
 80199bc:	394e703a 	and	r7,r7,r5
 80199c0:	2008d7fa 	srli	r4,r4,31
 80199c4:	280ad7fa 	srli	r5,r5,31
 80199c8:	1a000d26 	beq	r3,r8,8019a00 <__eqsf2+0x64>
 80199cc:	02003fc4 	movi	r8,255
 80199d0:	32000826 	beq	r6,r8,80199f4 <__eqsf2+0x58>
 80199d4:	19800226 	beq	r3,r6,80199e0 <__eqsf2+0x44>
 80199d8:	00800044 	movi	r2,1
 80199dc:	f800283a 	ret
 80199e0:	11fffd1e 	bne	r2,r7,80199d8 <__alt_data_end+0xf80199d8>
 80199e4:	21400926 	beq	r4,r5,8019a0c <__eqsf2+0x70>
 80199e8:	183ffb1e 	bne	r3,zero,80199d8 <__alt_data_end+0xf80199d8>
 80199ec:	1004c03a 	cmpne	r2,r2,zero
 80199f0:	f800283a 	ret
 80199f4:	383ff726 	beq	r7,zero,80199d4 <__alt_data_end+0xf80199d4>
 80199f8:	00800044 	movi	r2,1
 80199fc:	f800283a 	ret
 8019a00:	103ff226 	beq	r2,zero,80199cc <__alt_data_end+0xf80199cc>
 8019a04:	00800044 	movi	r2,1
 8019a08:	f800283a 	ret
 8019a0c:	0005883a 	mov	r2,zero
 8019a10:	f800283a 	ret

08019a14 <__gesf2>:
 8019a14:	2004d5fa 	srli	r2,r4,23
 8019a18:	2806d5fa 	srli	r3,r5,23
 8019a1c:	01802034 	movhi	r6,128
 8019a20:	31bfffc4 	addi	r6,r6,-1
 8019a24:	10803fcc 	andi	r2,r2,255
 8019a28:	01c03fc4 	movi	r7,255
 8019a2c:	3110703a 	and	r8,r6,r4
 8019a30:	18c03fcc 	andi	r3,r3,255
 8019a34:	314c703a 	and	r6,r6,r5
 8019a38:	2008d7fa 	srli	r4,r4,31
 8019a3c:	280ad7fa 	srli	r5,r5,31
 8019a40:	11c01926 	beq	r2,r7,8019aa8 <__gesf2+0x94>
 8019a44:	01c03fc4 	movi	r7,255
 8019a48:	19c00f26 	beq	r3,r7,8019a88 <__gesf2+0x74>
 8019a4c:	1000061e 	bne	r2,zero,8019a68 <__gesf2+0x54>
 8019a50:	400f003a 	cmpeq	r7,r8,zero
 8019a54:	1800071e 	bne	r3,zero,8019a74 <__gesf2+0x60>
 8019a58:	3000061e 	bne	r6,zero,8019a74 <__gesf2+0x60>
 8019a5c:	0005883a 	mov	r2,zero
 8019a60:	40000e1e 	bne	r8,zero,8019a9c <__gesf2+0x88>
 8019a64:	f800283a 	ret
 8019a68:	18000a1e 	bne	r3,zero,8019a94 <__gesf2+0x80>
 8019a6c:	30000b26 	beq	r6,zero,8019a9c <__gesf2+0x88>
 8019a70:	000f883a 	mov	r7,zero
 8019a74:	29403fcc 	andi	r5,r5,255
 8019a78:	38000726 	beq	r7,zero,8019a98 <__gesf2+0x84>
 8019a7c:	28000826 	beq	r5,zero,8019aa0 <__gesf2+0x8c>
 8019a80:	00800044 	movi	r2,1
 8019a84:	f800283a 	ret
 8019a88:	303ff026 	beq	r6,zero,8019a4c <__alt_data_end+0xf8019a4c>
 8019a8c:	00bfff84 	movi	r2,-2
 8019a90:	f800283a 	ret
 8019a94:	29403fcc 	andi	r5,r5,255
 8019a98:	21400526 	beq	r4,r5,8019ab0 <__gesf2+0x9c>
 8019a9c:	203ff826 	beq	r4,zero,8019a80 <__alt_data_end+0xf8019a80>
 8019aa0:	00bfffc4 	movi	r2,-1
 8019aa4:	f800283a 	ret
 8019aa8:	403fe626 	beq	r8,zero,8019a44 <__alt_data_end+0xf8019a44>
 8019aac:	003ff706 	br	8019a8c <__alt_data_end+0xf8019a8c>
 8019ab0:	18bffa16 	blt	r3,r2,8019a9c <__alt_data_end+0xf8019a9c>
 8019ab4:	10c00216 	blt	r2,r3,8019ac0 <__gesf2+0xac>
 8019ab8:	323ff836 	bltu	r6,r8,8019a9c <__alt_data_end+0xf8019a9c>
 8019abc:	4180022e 	bgeu	r8,r6,8019ac8 <__gesf2+0xb4>
 8019ac0:	203fef1e 	bne	r4,zero,8019a80 <__alt_data_end+0xf8019a80>
 8019ac4:	003ff606 	br	8019aa0 <__alt_data_end+0xf8019aa0>
 8019ac8:	0005883a 	mov	r2,zero
 8019acc:	f800283a 	ret

08019ad0 <__lesf2>:
 8019ad0:	2004d5fa 	srli	r2,r4,23
 8019ad4:	280cd5fa 	srli	r6,r5,23
 8019ad8:	00c02034 	movhi	r3,128
 8019adc:	18ffffc4 	addi	r3,r3,-1
 8019ae0:	10803fcc 	andi	r2,r2,255
 8019ae4:	01c03fc4 	movi	r7,255
 8019ae8:	1910703a 	and	r8,r3,r4
 8019aec:	31803fcc 	andi	r6,r6,255
 8019af0:	1946703a 	and	r3,r3,r5
 8019af4:	2008d7fa 	srli	r4,r4,31
 8019af8:	280ad7fa 	srli	r5,r5,31
 8019afc:	11c01b26 	beq	r2,r7,8019b6c <__lesf2+0x9c>
 8019b00:	01c03fc4 	movi	r7,255
 8019b04:	31c01126 	beq	r6,r7,8019b4c <__lesf2+0x7c>
 8019b08:	1000071e 	bne	r2,zero,8019b28 <__lesf2+0x58>
 8019b0c:	400f003a 	cmpeq	r7,r8,zero
 8019b10:	21003fcc 	andi	r4,r4,255
 8019b14:	3000081e 	bne	r6,zero,8019b38 <__lesf2+0x68>
 8019b18:	1800071e 	bne	r3,zero,8019b38 <__lesf2+0x68>
 8019b1c:	0005883a 	mov	r2,zero
 8019b20:	40000f1e 	bne	r8,zero,8019b60 <__lesf2+0x90>
 8019b24:	f800283a 	ret
 8019b28:	21003fcc 	andi	r4,r4,255
 8019b2c:	30000a1e 	bne	r6,zero,8019b58 <__lesf2+0x88>
 8019b30:	18000b26 	beq	r3,zero,8019b60 <__lesf2+0x90>
 8019b34:	000f883a 	mov	r7,zero
 8019b38:	29403fcc 	andi	r5,r5,255
 8019b3c:	38000726 	beq	r7,zero,8019b5c <__lesf2+0x8c>
 8019b40:	28000826 	beq	r5,zero,8019b64 <__lesf2+0x94>
 8019b44:	00800044 	movi	r2,1
 8019b48:	f800283a 	ret
 8019b4c:	183fee26 	beq	r3,zero,8019b08 <__alt_data_end+0xf8019b08>
 8019b50:	00800084 	movi	r2,2
 8019b54:	f800283a 	ret
 8019b58:	29403fcc 	andi	r5,r5,255
 8019b5c:	21400626 	beq	r4,r5,8019b78 <__lesf2+0xa8>
 8019b60:	203ff826 	beq	r4,zero,8019b44 <__alt_data_end+0xf8019b44>
 8019b64:	00bfffc4 	movi	r2,-1
 8019b68:	f800283a 	ret
 8019b6c:	403fe426 	beq	r8,zero,8019b00 <__alt_data_end+0xf8019b00>
 8019b70:	00800084 	movi	r2,2
 8019b74:	f800283a 	ret
 8019b78:	30bff916 	blt	r6,r2,8019b60 <__alt_data_end+0xf8019b60>
 8019b7c:	11800216 	blt	r2,r6,8019b88 <__lesf2+0xb8>
 8019b80:	1a3ff736 	bltu	r3,r8,8019b60 <__alt_data_end+0xf8019b60>
 8019b84:	40c0022e 	bgeu	r8,r3,8019b90 <__lesf2+0xc0>
 8019b88:	203fee1e 	bne	r4,zero,8019b44 <__alt_data_end+0xf8019b44>
 8019b8c:	003ff506 	br	8019b64 <__alt_data_end+0xf8019b64>
 8019b90:	0005883a 	mov	r2,zero
 8019b94:	f800283a 	ret

08019b98 <__adddf3>:
 8019b98:	02c00434 	movhi	r11,16
 8019b9c:	5affffc4 	addi	r11,r11,-1
 8019ba0:	2806d7fa 	srli	r3,r5,31
 8019ba4:	2ad4703a 	and	r10,r5,r11
 8019ba8:	3ad2703a 	and	r9,r7,r11
 8019bac:	3804d53a 	srli	r2,r7,20
 8019bb0:	3018d77a 	srli	r12,r6,29
 8019bb4:	280ad53a 	srli	r5,r5,20
 8019bb8:	501490fa 	slli	r10,r10,3
 8019bbc:	2010d77a 	srli	r8,r4,29
 8019bc0:	481290fa 	slli	r9,r9,3
 8019bc4:	380ed7fa 	srli	r7,r7,31
 8019bc8:	defffb04 	addi	sp,sp,-20
 8019bcc:	dc800215 	stw	r18,8(sp)
 8019bd0:	dc400115 	stw	r17,4(sp)
 8019bd4:	dc000015 	stw	r16,0(sp)
 8019bd8:	dfc00415 	stw	ra,16(sp)
 8019bdc:	dcc00315 	stw	r19,12(sp)
 8019be0:	1c803fcc 	andi	r18,r3,255
 8019be4:	2c01ffcc 	andi	r16,r5,2047
 8019be8:	5210b03a 	or	r8,r10,r8
 8019bec:	202290fa 	slli	r17,r4,3
 8019bf0:	1081ffcc 	andi	r2,r2,2047
 8019bf4:	4b12b03a 	or	r9,r9,r12
 8019bf8:	300c90fa 	slli	r6,r6,3
 8019bfc:	91c07526 	beq	r18,r7,8019dd4 <__adddf3+0x23c>
 8019c00:	8087c83a 	sub	r3,r16,r2
 8019c04:	00c0ab0e 	bge	zero,r3,8019eb4 <__adddf3+0x31c>
 8019c08:	10002a1e 	bne	r2,zero,8019cb4 <__adddf3+0x11c>
 8019c0c:	4984b03a 	or	r2,r9,r6
 8019c10:	1000961e 	bne	r2,zero,8019e6c <__adddf3+0x2d4>
 8019c14:	888001cc 	andi	r2,r17,7
 8019c18:	10000726 	beq	r2,zero,8019c38 <__adddf3+0xa0>
 8019c1c:	888003cc 	andi	r2,r17,15
 8019c20:	00c00104 	movi	r3,4
 8019c24:	10c00426 	beq	r2,r3,8019c38 <__adddf3+0xa0>
 8019c28:	88c7883a 	add	r3,r17,r3
 8019c2c:	1c63803a 	cmpltu	r17,r3,r17
 8019c30:	4451883a 	add	r8,r8,r17
 8019c34:	1823883a 	mov	r17,r3
 8019c38:	4080202c 	andhi	r2,r8,128
 8019c3c:	10005926 	beq	r2,zero,8019da4 <__adddf3+0x20c>
 8019c40:	84000044 	addi	r16,r16,1
 8019c44:	0081ffc4 	movi	r2,2047
 8019c48:	8080ba26 	beq	r16,r2,8019f34 <__adddf3+0x39c>
 8019c4c:	00bfe034 	movhi	r2,65408
 8019c50:	10bfffc4 	addi	r2,r2,-1
 8019c54:	4090703a 	and	r8,r8,r2
 8019c58:	4004977a 	slli	r2,r8,29
 8019c5c:	4010927a 	slli	r8,r8,9
 8019c60:	8822d0fa 	srli	r17,r17,3
 8019c64:	8401ffcc 	andi	r16,r16,2047
 8019c68:	4010d33a 	srli	r8,r8,12
 8019c6c:	9007883a 	mov	r3,r18
 8019c70:	1444b03a 	or	r2,r2,r17
 8019c74:	8401ffcc 	andi	r16,r16,2047
 8019c78:	8020953a 	slli	r16,r16,20
 8019c7c:	18c03fcc 	andi	r3,r3,255
 8019c80:	01000434 	movhi	r4,16
 8019c84:	213fffc4 	addi	r4,r4,-1
 8019c88:	180697fa 	slli	r3,r3,31
 8019c8c:	4110703a 	and	r8,r8,r4
 8019c90:	4410b03a 	or	r8,r8,r16
 8019c94:	40c6b03a 	or	r3,r8,r3
 8019c98:	dfc00417 	ldw	ra,16(sp)
 8019c9c:	dcc00317 	ldw	r19,12(sp)
 8019ca0:	dc800217 	ldw	r18,8(sp)
 8019ca4:	dc400117 	ldw	r17,4(sp)
 8019ca8:	dc000017 	ldw	r16,0(sp)
 8019cac:	dec00504 	addi	sp,sp,20
 8019cb0:	f800283a 	ret
 8019cb4:	0081ffc4 	movi	r2,2047
 8019cb8:	80bfd626 	beq	r16,r2,8019c14 <__alt_data_end+0xf8019c14>
 8019cbc:	4a402034 	orhi	r9,r9,128
 8019cc0:	00800e04 	movi	r2,56
 8019cc4:	10c09f16 	blt	r2,r3,8019f44 <__adddf3+0x3ac>
 8019cc8:	008007c4 	movi	r2,31
 8019ccc:	10c0c216 	blt	r2,r3,8019fd8 <__adddf3+0x440>
 8019cd0:	00800804 	movi	r2,32
 8019cd4:	10c5c83a 	sub	r2,r2,r3
 8019cd8:	488a983a 	sll	r5,r9,r2
 8019cdc:	30c8d83a 	srl	r4,r6,r3
 8019ce0:	3084983a 	sll	r2,r6,r2
 8019ce4:	48c6d83a 	srl	r3,r9,r3
 8019ce8:	290cb03a 	or	r6,r5,r4
 8019cec:	1004c03a 	cmpne	r2,r2,zero
 8019cf0:	308cb03a 	or	r6,r6,r2
 8019cf4:	898dc83a 	sub	r6,r17,r6
 8019cf8:	89a3803a 	cmpltu	r17,r17,r6
 8019cfc:	40d1c83a 	sub	r8,r8,r3
 8019d00:	4451c83a 	sub	r8,r8,r17
 8019d04:	3023883a 	mov	r17,r6
 8019d08:	4080202c 	andhi	r2,r8,128
 8019d0c:	10002326 	beq	r2,zero,8019d9c <__adddf3+0x204>
 8019d10:	04c02034 	movhi	r19,128
 8019d14:	9cffffc4 	addi	r19,r19,-1
 8019d18:	44e6703a 	and	r19,r8,r19
 8019d1c:	98007626 	beq	r19,zero,8019ef8 <__adddf3+0x360>
 8019d20:	9809883a 	mov	r4,r19
 8019d24:	801c3440 	call	801c344 <__clzsi2>
 8019d28:	10fffe04 	addi	r3,r2,-8
 8019d2c:	010007c4 	movi	r4,31
 8019d30:	20c07716 	blt	r4,r3,8019f10 <__adddf3+0x378>
 8019d34:	00800804 	movi	r2,32
 8019d38:	10c5c83a 	sub	r2,r2,r3
 8019d3c:	8884d83a 	srl	r2,r17,r2
 8019d40:	98d0983a 	sll	r8,r19,r3
 8019d44:	88e2983a 	sll	r17,r17,r3
 8019d48:	1204b03a 	or	r2,r2,r8
 8019d4c:	1c007416 	blt	r3,r16,8019f20 <__adddf3+0x388>
 8019d50:	1c21c83a 	sub	r16,r3,r16
 8019d54:	82000044 	addi	r8,r16,1
 8019d58:	00c007c4 	movi	r3,31
 8019d5c:	1a009116 	blt	r3,r8,8019fa4 <__adddf3+0x40c>
 8019d60:	00c00804 	movi	r3,32
 8019d64:	1a07c83a 	sub	r3,r3,r8
 8019d68:	8a08d83a 	srl	r4,r17,r8
 8019d6c:	88e2983a 	sll	r17,r17,r3
 8019d70:	10c6983a 	sll	r3,r2,r3
 8019d74:	1210d83a 	srl	r8,r2,r8
 8019d78:	8804c03a 	cmpne	r2,r17,zero
 8019d7c:	1906b03a 	or	r3,r3,r4
 8019d80:	18a2b03a 	or	r17,r3,r2
 8019d84:	0021883a 	mov	r16,zero
 8019d88:	003fa206 	br	8019c14 <__alt_data_end+0xf8019c14>
 8019d8c:	1890b03a 	or	r8,r3,r2
 8019d90:	40017d26 	beq	r8,zero,801a388 <__adddf3+0x7f0>
 8019d94:	1011883a 	mov	r8,r2
 8019d98:	1823883a 	mov	r17,r3
 8019d9c:	888001cc 	andi	r2,r17,7
 8019da0:	103f9e1e 	bne	r2,zero,8019c1c <__alt_data_end+0xf8019c1c>
 8019da4:	4004977a 	slli	r2,r8,29
 8019da8:	8822d0fa 	srli	r17,r17,3
 8019dac:	4010d0fa 	srli	r8,r8,3
 8019db0:	9007883a 	mov	r3,r18
 8019db4:	1444b03a 	or	r2,r2,r17
 8019db8:	0101ffc4 	movi	r4,2047
 8019dbc:	81002426 	beq	r16,r4,8019e50 <__adddf3+0x2b8>
 8019dc0:	8120703a 	and	r16,r16,r4
 8019dc4:	01000434 	movhi	r4,16
 8019dc8:	213fffc4 	addi	r4,r4,-1
 8019dcc:	4110703a 	and	r8,r8,r4
 8019dd0:	003fa806 	br	8019c74 <__alt_data_end+0xf8019c74>
 8019dd4:	8089c83a 	sub	r4,r16,r2
 8019dd8:	01005e0e 	bge	zero,r4,8019f54 <__adddf3+0x3bc>
 8019ddc:	10002b26 	beq	r2,zero,8019e8c <__adddf3+0x2f4>
 8019de0:	0081ffc4 	movi	r2,2047
 8019de4:	80bf8b26 	beq	r16,r2,8019c14 <__alt_data_end+0xf8019c14>
 8019de8:	4a402034 	orhi	r9,r9,128
 8019dec:	00800e04 	movi	r2,56
 8019df0:	1100a40e 	bge	r2,r4,801a084 <__adddf3+0x4ec>
 8019df4:	498cb03a 	or	r6,r9,r6
 8019df8:	300ac03a 	cmpne	r5,r6,zero
 8019dfc:	0013883a 	mov	r9,zero
 8019e00:	2c4b883a 	add	r5,r5,r17
 8019e04:	2c63803a 	cmpltu	r17,r5,r17
 8019e08:	4a11883a 	add	r8,r9,r8
 8019e0c:	8a11883a 	add	r8,r17,r8
 8019e10:	2823883a 	mov	r17,r5
 8019e14:	4080202c 	andhi	r2,r8,128
 8019e18:	103fe026 	beq	r2,zero,8019d9c <__alt_data_end+0xf8019d9c>
 8019e1c:	84000044 	addi	r16,r16,1
 8019e20:	0081ffc4 	movi	r2,2047
 8019e24:	8080d226 	beq	r16,r2,801a170 <__adddf3+0x5d8>
 8019e28:	00bfe034 	movhi	r2,65408
 8019e2c:	10bfffc4 	addi	r2,r2,-1
 8019e30:	4090703a 	and	r8,r8,r2
 8019e34:	880ad07a 	srli	r5,r17,1
 8019e38:	400897fa 	slli	r4,r8,31
 8019e3c:	88c0004c 	andi	r3,r17,1
 8019e40:	28e2b03a 	or	r17,r5,r3
 8019e44:	4010d07a 	srli	r8,r8,1
 8019e48:	2462b03a 	or	r17,r4,r17
 8019e4c:	003f7106 	br	8019c14 <__alt_data_end+0xf8019c14>
 8019e50:	4088b03a 	or	r4,r8,r2
 8019e54:	20014526 	beq	r4,zero,801a36c <__adddf3+0x7d4>
 8019e58:	01000434 	movhi	r4,16
 8019e5c:	42000234 	orhi	r8,r8,8
 8019e60:	213fffc4 	addi	r4,r4,-1
 8019e64:	4110703a 	and	r8,r8,r4
 8019e68:	003f8206 	br	8019c74 <__alt_data_end+0xf8019c74>
 8019e6c:	18ffffc4 	addi	r3,r3,-1
 8019e70:	1800491e 	bne	r3,zero,8019f98 <__adddf3+0x400>
 8019e74:	898bc83a 	sub	r5,r17,r6
 8019e78:	8963803a 	cmpltu	r17,r17,r5
 8019e7c:	4251c83a 	sub	r8,r8,r9
 8019e80:	4451c83a 	sub	r8,r8,r17
 8019e84:	2823883a 	mov	r17,r5
 8019e88:	003f9f06 	br	8019d08 <__alt_data_end+0xf8019d08>
 8019e8c:	4984b03a 	or	r2,r9,r6
 8019e90:	103f6026 	beq	r2,zero,8019c14 <__alt_data_end+0xf8019c14>
 8019e94:	213fffc4 	addi	r4,r4,-1
 8019e98:	2000931e 	bne	r4,zero,801a0e8 <__adddf3+0x550>
 8019e9c:	898d883a 	add	r6,r17,r6
 8019ea0:	3463803a 	cmpltu	r17,r6,r17
 8019ea4:	4251883a 	add	r8,r8,r9
 8019ea8:	8a11883a 	add	r8,r17,r8
 8019eac:	3023883a 	mov	r17,r6
 8019eb0:	003fd806 	br	8019e14 <__alt_data_end+0xf8019e14>
 8019eb4:	1800541e 	bne	r3,zero,801a008 <__adddf3+0x470>
 8019eb8:	80800044 	addi	r2,r16,1
 8019ebc:	1081ffcc 	andi	r2,r2,2047
 8019ec0:	00c00044 	movi	r3,1
 8019ec4:	1880a00e 	bge	r3,r2,801a148 <__adddf3+0x5b0>
 8019ec8:	8989c83a 	sub	r4,r17,r6
 8019ecc:	8905803a 	cmpltu	r2,r17,r4
 8019ed0:	4267c83a 	sub	r19,r8,r9
 8019ed4:	98a7c83a 	sub	r19,r19,r2
 8019ed8:	9880202c 	andhi	r2,r19,128
 8019edc:	10006326 	beq	r2,zero,801a06c <__adddf3+0x4d4>
 8019ee0:	3463c83a 	sub	r17,r6,r17
 8019ee4:	4a07c83a 	sub	r3,r9,r8
 8019ee8:	344d803a 	cmpltu	r6,r6,r17
 8019eec:	19a7c83a 	sub	r19,r3,r6
 8019ef0:	3825883a 	mov	r18,r7
 8019ef4:	983f8a1e 	bne	r19,zero,8019d20 <__alt_data_end+0xf8019d20>
 8019ef8:	8809883a 	mov	r4,r17
 8019efc:	801c3440 	call	801c344 <__clzsi2>
 8019f00:	10800804 	addi	r2,r2,32
 8019f04:	10fffe04 	addi	r3,r2,-8
 8019f08:	010007c4 	movi	r4,31
 8019f0c:	20ff890e 	bge	r4,r3,8019d34 <__alt_data_end+0xf8019d34>
 8019f10:	10bff604 	addi	r2,r2,-40
 8019f14:	8884983a 	sll	r2,r17,r2
 8019f18:	0023883a 	mov	r17,zero
 8019f1c:	1c3f8c0e 	bge	r3,r16,8019d50 <__alt_data_end+0xf8019d50>
 8019f20:	023fe034 	movhi	r8,65408
 8019f24:	423fffc4 	addi	r8,r8,-1
 8019f28:	80e1c83a 	sub	r16,r16,r3
 8019f2c:	1210703a 	and	r8,r2,r8
 8019f30:	003f3806 	br	8019c14 <__alt_data_end+0xf8019c14>
 8019f34:	9007883a 	mov	r3,r18
 8019f38:	0011883a 	mov	r8,zero
 8019f3c:	0005883a 	mov	r2,zero
 8019f40:	003f4c06 	br	8019c74 <__alt_data_end+0xf8019c74>
 8019f44:	498cb03a 	or	r6,r9,r6
 8019f48:	300cc03a 	cmpne	r6,r6,zero
 8019f4c:	0007883a 	mov	r3,zero
 8019f50:	003f6806 	br	8019cf4 <__alt_data_end+0xf8019cf4>
 8019f54:	20009c1e 	bne	r4,zero,801a1c8 <__adddf3+0x630>
 8019f58:	80800044 	addi	r2,r16,1
 8019f5c:	1141ffcc 	andi	r5,r2,2047
 8019f60:	01000044 	movi	r4,1
 8019f64:	2140670e 	bge	r4,r5,801a104 <__adddf3+0x56c>
 8019f68:	0101ffc4 	movi	r4,2047
 8019f6c:	11007f26 	beq	r2,r4,801a16c <__adddf3+0x5d4>
 8019f70:	898d883a 	add	r6,r17,r6
 8019f74:	4247883a 	add	r3,r8,r9
 8019f78:	3451803a 	cmpltu	r8,r6,r17
 8019f7c:	40d1883a 	add	r8,r8,r3
 8019f80:	402297fa 	slli	r17,r8,31
 8019f84:	300cd07a 	srli	r6,r6,1
 8019f88:	4010d07a 	srli	r8,r8,1
 8019f8c:	1021883a 	mov	r16,r2
 8019f90:	89a2b03a 	or	r17,r17,r6
 8019f94:	003f1f06 	br	8019c14 <__alt_data_end+0xf8019c14>
 8019f98:	0081ffc4 	movi	r2,2047
 8019f9c:	80bf481e 	bne	r16,r2,8019cc0 <__alt_data_end+0xf8019cc0>
 8019fa0:	003f1c06 	br	8019c14 <__alt_data_end+0xf8019c14>
 8019fa4:	843ff844 	addi	r16,r16,-31
 8019fa8:	01000804 	movi	r4,32
 8019fac:	1406d83a 	srl	r3,r2,r16
 8019fb0:	41005026 	beq	r8,r4,801a0f4 <__adddf3+0x55c>
 8019fb4:	01001004 	movi	r4,64
 8019fb8:	2211c83a 	sub	r8,r4,r8
 8019fbc:	1204983a 	sll	r2,r2,r8
 8019fc0:	88a2b03a 	or	r17,r17,r2
 8019fc4:	8822c03a 	cmpne	r17,r17,zero
 8019fc8:	1c62b03a 	or	r17,r3,r17
 8019fcc:	0011883a 	mov	r8,zero
 8019fd0:	0021883a 	mov	r16,zero
 8019fd4:	003f7106 	br	8019d9c <__alt_data_end+0xf8019d9c>
 8019fd8:	193ff804 	addi	r4,r3,-32
 8019fdc:	00800804 	movi	r2,32
 8019fe0:	4908d83a 	srl	r4,r9,r4
 8019fe4:	18804526 	beq	r3,r2,801a0fc <__adddf3+0x564>
 8019fe8:	00801004 	movi	r2,64
 8019fec:	10c5c83a 	sub	r2,r2,r3
 8019ff0:	4886983a 	sll	r3,r9,r2
 8019ff4:	198cb03a 	or	r6,r3,r6
 8019ff8:	300cc03a 	cmpne	r6,r6,zero
 8019ffc:	218cb03a 	or	r6,r4,r6
 801a000:	0007883a 	mov	r3,zero
 801a004:	003f3b06 	br	8019cf4 <__alt_data_end+0xf8019cf4>
 801a008:	80002a26 	beq	r16,zero,801a0b4 <__adddf3+0x51c>
 801a00c:	0101ffc4 	movi	r4,2047
 801a010:	11006826 	beq	r2,r4,801a1b4 <__adddf3+0x61c>
 801a014:	00c7c83a 	sub	r3,zero,r3
 801a018:	42002034 	orhi	r8,r8,128
 801a01c:	01000e04 	movi	r4,56
 801a020:	20c07c16 	blt	r4,r3,801a214 <__adddf3+0x67c>
 801a024:	010007c4 	movi	r4,31
 801a028:	20c0da16 	blt	r4,r3,801a394 <__adddf3+0x7fc>
 801a02c:	01000804 	movi	r4,32
 801a030:	20c9c83a 	sub	r4,r4,r3
 801a034:	4114983a 	sll	r10,r8,r4
 801a038:	88cad83a 	srl	r5,r17,r3
 801a03c:	8908983a 	sll	r4,r17,r4
 801a040:	40c6d83a 	srl	r3,r8,r3
 801a044:	5162b03a 	or	r17,r10,r5
 801a048:	2008c03a 	cmpne	r4,r4,zero
 801a04c:	8922b03a 	or	r17,r17,r4
 801a050:	3463c83a 	sub	r17,r6,r17
 801a054:	48c7c83a 	sub	r3,r9,r3
 801a058:	344d803a 	cmpltu	r6,r6,r17
 801a05c:	1991c83a 	sub	r8,r3,r6
 801a060:	1021883a 	mov	r16,r2
 801a064:	3825883a 	mov	r18,r7
 801a068:	003f2706 	br	8019d08 <__alt_data_end+0xf8019d08>
 801a06c:	24d0b03a 	or	r8,r4,r19
 801a070:	40001b1e 	bne	r8,zero,801a0e0 <__adddf3+0x548>
 801a074:	0005883a 	mov	r2,zero
 801a078:	0007883a 	mov	r3,zero
 801a07c:	0021883a 	mov	r16,zero
 801a080:	003f4d06 	br	8019db8 <__alt_data_end+0xf8019db8>
 801a084:	008007c4 	movi	r2,31
 801a088:	11003c16 	blt	r2,r4,801a17c <__adddf3+0x5e4>
 801a08c:	00800804 	movi	r2,32
 801a090:	1105c83a 	sub	r2,r2,r4
 801a094:	488e983a 	sll	r7,r9,r2
 801a098:	310ad83a 	srl	r5,r6,r4
 801a09c:	3084983a 	sll	r2,r6,r2
 801a0a0:	4912d83a 	srl	r9,r9,r4
 801a0a4:	394ab03a 	or	r5,r7,r5
 801a0a8:	1004c03a 	cmpne	r2,r2,zero
 801a0ac:	288ab03a 	or	r5,r5,r2
 801a0b0:	003f5306 	br	8019e00 <__alt_data_end+0xf8019e00>
 801a0b4:	4448b03a 	or	r4,r8,r17
 801a0b8:	20003e26 	beq	r4,zero,801a1b4 <__adddf3+0x61c>
 801a0bc:	00c6303a 	nor	r3,zero,r3
 801a0c0:	18003a1e 	bne	r3,zero,801a1ac <__adddf3+0x614>
 801a0c4:	3463c83a 	sub	r17,r6,r17
 801a0c8:	4a07c83a 	sub	r3,r9,r8
 801a0cc:	344d803a 	cmpltu	r6,r6,r17
 801a0d0:	1991c83a 	sub	r8,r3,r6
 801a0d4:	1021883a 	mov	r16,r2
 801a0d8:	3825883a 	mov	r18,r7
 801a0dc:	003f0a06 	br	8019d08 <__alt_data_end+0xf8019d08>
 801a0e0:	2023883a 	mov	r17,r4
 801a0e4:	003f0d06 	br	8019d1c <__alt_data_end+0xf8019d1c>
 801a0e8:	0081ffc4 	movi	r2,2047
 801a0ec:	80bf3f1e 	bne	r16,r2,8019dec <__alt_data_end+0xf8019dec>
 801a0f0:	003ec806 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a0f4:	0005883a 	mov	r2,zero
 801a0f8:	003fb106 	br	8019fc0 <__alt_data_end+0xf8019fc0>
 801a0fc:	0007883a 	mov	r3,zero
 801a100:	003fbc06 	br	8019ff4 <__alt_data_end+0xf8019ff4>
 801a104:	4444b03a 	or	r2,r8,r17
 801a108:	8000871e 	bne	r16,zero,801a328 <__adddf3+0x790>
 801a10c:	1000ba26 	beq	r2,zero,801a3f8 <__adddf3+0x860>
 801a110:	4984b03a 	or	r2,r9,r6
 801a114:	103ebf26 	beq	r2,zero,8019c14 <__alt_data_end+0xf8019c14>
 801a118:	8985883a 	add	r2,r17,r6
 801a11c:	4247883a 	add	r3,r8,r9
 801a120:	1451803a 	cmpltu	r8,r2,r17
 801a124:	40d1883a 	add	r8,r8,r3
 801a128:	40c0202c 	andhi	r3,r8,128
 801a12c:	1023883a 	mov	r17,r2
 801a130:	183f1a26 	beq	r3,zero,8019d9c <__alt_data_end+0xf8019d9c>
 801a134:	00bfe034 	movhi	r2,65408
 801a138:	10bfffc4 	addi	r2,r2,-1
 801a13c:	2021883a 	mov	r16,r4
 801a140:	4090703a 	and	r8,r8,r2
 801a144:	003eb306 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a148:	4444b03a 	or	r2,r8,r17
 801a14c:	8000291e 	bne	r16,zero,801a1f4 <__adddf3+0x65c>
 801a150:	10004b1e 	bne	r2,zero,801a280 <__adddf3+0x6e8>
 801a154:	4990b03a 	or	r8,r9,r6
 801a158:	40008b26 	beq	r8,zero,801a388 <__adddf3+0x7f0>
 801a15c:	4811883a 	mov	r8,r9
 801a160:	3023883a 	mov	r17,r6
 801a164:	3825883a 	mov	r18,r7
 801a168:	003eaa06 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a16c:	1021883a 	mov	r16,r2
 801a170:	0011883a 	mov	r8,zero
 801a174:	0005883a 	mov	r2,zero
 801a178:	003f0f06 	br	8019db8 <__alt_data_end+0xf8019db8>
 801a17c:	217ff804 	addi	r5,r4,-32
 801a180:	00800804 	movi	r2,32
 801a184:	494ad83a 	srl	r5,r9,r5
 801a188:	20807d26 	beq	r4,r2,801a380 <__adddf3+0x7e8>
 801a18c:	00801004 	movi	r2,64
 801a190:	1109c83a 	sub	r4,r2,r4
 801a194:	4912983a 	sll	r9,r9,r4
 801a198:	498cb03a 	or	r6,r9,r6
 801a19c:	300cc03a 	cmpne	r6,r6,zero
 801a1a0:	298ab03a 	or	r5,r5,r6
 801a1a4:	0013883a 	mov	r9,zero
 801a1a8:	003f1506 	br	8019e00 <__alt_data_end+0xf8019e00>
 801a1ac:	0101ffc4 	movi	r4,2047
 801a1b0:	113f9a1e 	bne	r2,r4,801a01c <__alt_data_end+0xf801a01c>
 801a1b4:	4811883a 	mov	r8,r9
 801a1b8:	3023883a 	mov	r17,r6
 801a1bc:	1021883a 	mov	r16,r2
 801a1c0:	3825883a 	mov	r18,r7
 801a1c4:	003e9306 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a1c8:	8000161e 	bne	r16,zero,801a224 <__adddf3+0x68c>
 801a1cc:	444ab03a 	or	r5,r8,r17
 801a1d0:	28005126 	beq	r5,zero,801a318 <__adddf3+0x780>
 801a1d4:	0108303a 	nor	r4,zero,r4
 801a1d8:	20004d1e 	bne	r4,zero,801a310 <__adddf3+0x778>
 801a1dc:	89a3883a 	add	r17,r17,r6
 801a1e0:	4253883a 	add	r9,r8,r9
 801a1e4:	898d803a 	cmpltu	r6,r17,r6
 801a1e8:	3251883a 	add	r8,r6,r9
 801a1ec:	1021883a 	mov	r16,r2
 801a1f0:	003f0806 	br	8019e14 <__alt_data_end+0xf8019e14>
 801a1f4:	1000301e 	bne	r2,zero,801a2b8 <__adddf3+0x720>
 801a1f8:	4984b03a 	or	r2,r9,r6
 801a1fc:	10007126 	beq	r2,zero,801a3c4 <__adddf3+0x82c>
 801a200:	4811883a 	mov	r8,r9
 801a204:	3023883a 	mov	r17,r6
 801a208:	3825883a 	mov	r18,r7
 801a20c:	0401ffc4 	movi	r16,2047
 801a210:	003e8006 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a214:	4462b03a 	or	r17,r8,r17
 801a218:	8822c03a 	cmpne	r17,r17,zero
 801a21c:	0007883a 	mov	r3,zero
 801a220:	003f8b06 	br	801a050 <__alt_data_end+0xf801a050>
 801a224:	0141ffc4 	movi	r5,2047
 801a228:	11403b26 	beq	r2,r5,801a318 <__adddf3+0x780>
 801a22c:	0109c83a 	sub	r4,zero,r4
 801a230:	42002034 	orhi	r8,r8,128
 801a234:	01400e04 	movi	r5,56
 801a238:	29006716 	blt	r5,r4,801a3d8 <__adddf3+0x840>
 801a23c:	014007c4 	movi	r5,31
 801a240:	29007016 	blt	r5,r4,801a404 <__adddf3+0x86c>
 801a244:	01400804 	movi	r5,32
 801a248:	290bc83a 	sub	r5,r5,r4
 801a24c:	4154983a 	sll	r10,r8,r5
 801a250:	890ed83a 	srl	r7,r17,r4
 801a254:	894a983a 	sll	r5,r17,r5
 801a258:	4108d83a 	srl	r4,r8,r4
 801a25c:	51e2b03a 	or	r17,r10,r7
 801a260:	280ac03a 	cmpne	r5,r5,zero
 801a264:	8962b03a 	or	r17,r17,r5
 801a268:	89a3883a 	add	r17,r17,r6
 801a26c:	2253883a 	add	r9,r4,r9
 801a270:	898d803a 	cmpltu	r6,r17,r6
 801a274:	3251883a 	add	r8,r6,r9
 801a278:	1021883a 	mov	r16,r2
 801a27c:	003ee506 	br	8019e14 <__alt_data_end+0xf8019e14>
 801a280:	4984b03a 	or	r2,r9,r6
 801a284:	103e6326 	beq	r2,zero,8019c14 <__alt_data_end+0xf8019c14>
 801a288:	8987c83a 	sub	r3,r17,r6
 801a28c:	88c9803a 	cmpltu	r4,r17,r3
 801a290:	4245c83a 	sub	r2,r8,r9
 801a294:	1105c83a 	sub	r2,r2,r4
 801a298:	1100202c 	andhi	r4,r2,128
 801a29c:	203ebb26 	beq	r4,zero,8019d8c <__alt_data_end+0xf8019d8c>
 801a2a0:	3463c83a 	sub	r17,r6,r17
 801a2a4:	4a07c83a 	sub	r3,r9,r8
 801a2a8:	344d803a 	cmpltu	r6,r6,r17
 801a2ac:	1991c83a 	sub	r8,r3,r6
 801a2b0:	3825883a 	mov	r18,r7
 801a2b4:	003e5706 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a2b8:	4984b03a 	or	r2,r9,r6
 801a2bc:	10002e26 	beq	r2,zero,801a378 <__adddf3+0x7e0>
 801a2c0:	4004d0fa 	srli	r2,r8,3
 801a2c4:	8822d0fa 	srli	r17,r17,3
 801a2c8:	4010977a 	slli	r8,r8,29
 801a2cc:	10c0022c 	andhi	r3,r2,8
 801a2d0:	4462b03a 	or	r17,r8,r17
 801a2d4:	18000826 	beq	r3,zero,801a2f8 <__adddf3+0x760>
 801a2d8:	4808d0fa 	srli	r4,r9,3
 801a2dc:	20c0022c 	andhi	r3,r4,8
 801a2e0:	1800051e 	bne	r3,zero,801a2f8 <__adddf3+0x760>
 801a2e4:	300cd0fa 	srli	r6,r6,3
 801a2e8:	4806977a 	slli	r3,r9,29
 801a2ec:	2005883a 	mov	r2,r4
 801a2f0:	3825883a 	mov	r18,r7
 801a2f4:	19a2b03a 	or	r17,r3,r6
 801a2f8:	8810d77a 	srli	r8,r17,29
 801a2fc:	100490fa 	slli	r2,r2,3
 801a300:	882290fa 	slli	r17,r17,3
 801a304:	0401ffc4 	movi	r16,2047
 801a308:	4090b03a 	or	r8,r8,r2
 801a30c:	003e4106 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a310:	0141ffc4 	movi	r5,2047
 801a314:	117fc71e 	bne	r2,r5,801a234 <__alt_data_end+0xf801a234>
 801a318:	4811883a 	mov	r8,r9
 801a31c:	3023883a 	mov	r17,r6
 801a320:	1021883a 	mov	r16,r2
 801a324:	003e3b06 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a328:	10002f26 	beq	r2,zero,801a3e8 <__adddf3+0x850>
 801a32c:	4984b03a 	or	r2,r9,r6
 801a330:	10001126 	beq	r2,zero,801a378 <__adddf3+0x7e0>
 801a334:	4004d0fa 	srli	r2,r8,3
 801a338:	8822d0fa 	srli	r17,r17,3
 801a33c:	4010977a 	slli	r8,r8,29
 801a340:	10c0022c 	andhi	r3,r2,8
 801a344:	4462b03a 	or	r17,r8,r17
 801a348:	183feb26 	beq	r3,zero,801a2f8 <__alt_data_end+0xf801a2f8>
 801a34c:	4808d0fa 	srli	r4,r9,3
 801a350:	20c0022c 	andhi	r3,r4,8
 801a354:	183fe81e 	bne	r3,zero,801a2f8 <__alt_data_end+0xf801a2f8>
 801a358:	300cd0fa 	srli	r6,r6,3
 801a35c:	4806977a 	slli	r3,r9,29
 801a360:	2005883a 	mov	r2,r4
 801a364:	19a2b03a 	or	r17,r3,r6
 801a368:	003fe306 	br	801a2f8 <__alt_data_end+0xf801a2f8>
 801a36c:	0011883a 	mov	r8,zero
 801a370:	0005883a 	mov	r2,zero
 801a374:	003e3f06 	br	8019c74 <__alt_data_end+0xf8019c74>
 801a378:	0401ffc4 	movi	r16,2047
 801a37c:	003e2506 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a380:	0013883a 	mov	r9,zero
 801a384:	003f8406 	br	801a198 <__alt_data_end+0xf801a198>
 801a388:	0005883a 	mov	r2,zero
 801a38c:	0007883a 	mov	r3,zero
 801a390:	003e8906 	br	8019db8 <__alt_data_end+0xf8019db8>
 801a394:	197ff804 	addi	r5,r3,-32
 801a398:	01000804 	movi	r4,32
 801a39c:	414ad83a 	srl	r5,r8,r5
 801a3a0:	19002426 	beq	r3,r4,801a434 <__adddf3+0x89c>
 801a3a4:	01001004 	movi	r4,64
 801a3a8:	20c7c83a 	sub	r3,r4,r3
 801a3ac:	40c6983a 	sll	r3,r8,r3
 801a3b0:	1c46b03a 	or	r3,r3,r17
 801a3b4:	1806c03a 	cmpne	r3,r3,zero
 801a3b8:	28e2b03a 	or	r17,r5,r3
 801a3bc:	0007883a 	mov	r3,zero
 801a3c0:	003f2306 	br	801a050 <__alt_data_end+0xf801a050>
 801a3c4:	0007883a 	mov	r3,zero
 801a3c8:	5811883a 	mov	r8,r11
 801a3cc:	00bfffc4 	movi	r2,-1
 801a3d0:	0401ffc4 	movi	r16,2047
 801a3d4:	003e7806 	br	8019db8 <__alt_data_end+0xf8019db8>
 801a3d8:	4462b03a 	or	r17,r8,r17
 801a3dc:	8822c03a 	cmpne	r17,r17,zero
 801a3e0:	0009883a 	mov	r4,zero
 801a3e4:	003fa006 	br	801a268 <__alt_data_end+0xf801a268>
 801a3e8:	4811883a 	mov	r8,r9
 801a3ec:	3023883a 	mov	r17,r6
 801a3f0:	0401ffc4 	movi	r16,2047
 801a3f4:	003e0706 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a3f8:	4811883a 	mov	r8,r9
 801a3fc:	3023883a 	mov	r17,r6
 801a400:	003e0406 	br	8019c14 <__alt_data_end+0xf8019c14>
 801a404:	21fff804 	addi	r7,r4,-32
 801a408:	01400804 	movi	r5,32
 801a40c:	41ced83a 	srl	r7,r8,r7
 801a410:	21400a26 	beq	r4,r5,801a43c <__adddf3+0x8a4>
 801a414:	01401004 	movi	r5,64
 801a418:	2909c83a 	sub	r4,r5,r4
 801a41c:	4108983a 	sll	r4,r8,r4
 801a420:	2448b03a 	or	r4,r4,r17
 801a424:	2008c03a 	cmpne	r4,r4,zero
 801a428:	3922b03a 	or	r17,r7,r4
 801a42c:	0009883a 	mov	r4,zero
 801a430:	003f8d06 	br	801a268 <__alt_data_end+0xf801a268>
 801a434:	0007883a 	mov	r3,zero
 801a438:	003fdd06 	br	801a3b0 <__alt_data_end+0xf801a3b0>
 801a43c:	0009883a 	mov	r4,zero
 801a440:	003ff706 	br	801a420 <__alt_data_end+0xf801a420>

0801a444 <__divdf3>:
 801a444:	defff204 	addi	sp,sp,-56
 801a448:	dd400915 	stw	r21,36(sp)
 801a44c:	282ad53a 	srli	r21,r5,20
 801a450:	dd000815 	stw	r20,32(sp)
 801a454:	2828d7fa 	srli	r20,r5,31
 801a458:	dc000415 	stw	r16,16(sp)
 801a45c:	04000434 	movhi	r16,16
 801a460:	df000c15 	stw	fp,48(sp)
 801a464:	843fffc4 	addi	r16,r16,-1
 801a468:	dfc00d15 	stw	ra,52(sp)
 801a46c:	ddc00b15 	stw	r23,44(sp)
 801a470:	dd800a15 	stw	r22,40(sp)
 801a474:	dcc00715 	stw	r19,28(sp)
 801a478:	dc800615 	stw	r18,24(sp)
 801a47c:	dc400515 	stw	r17,20(sp)
 801a480:	ad41ffcc 	andi	r21,r21,2047
 801a484:	2c20703a 	and	r16,r5,r16
 801a488:	a7003fcc 	andi	fp,r20,255
 801a48c:	a8006126 	beq	r21,zero,801a614 <__divdf3+0x1d0>
 801a490:	0081ffc4 	movi	r2,2047
 801a494:	2025883a 	mov	r18,r4
 801a498:	a8803726 	beq	r21,r2,801a578 <__divdf3+0x134>
 801a49c:	80800434 	orhi	r2,r16,16
 801a4a0:	100490fa 	slli	r2,r2,3
 801a4a4:	2020d77a 	srli	r16,r4,29
 801a4a8:	202490fa 	slli	r18,r4,3
 801a4ac:	ad7f0044 	addi	r21,r21,-1023
 801a4b0:	80a0b03a 	or	r16,r16,r2
 801a4b4:	0027883a 	mov	r19,zero
 801a4b8:	0013883a 	mov	r9,zero
 801a4bc:	3804d53a 	srli	r2,r7,20
 801a4c0:	382cd7fa 	srli	r22,r7,31
 801a4c4:	04400434 	movhi	r17,16
 801a4c8:	8c7fffc4 	addi	r17,r17,-1
 801a4cc:	1081ffcc 	andi	r2,r2,2047
 801a4d0:	3011883a 	mov	r8,r6
 801a4d4:	3c62703a 	and	r17,r7,r17
 801a4d8:	b5c03fcc 	andi	r23,r22,255
 801a4dc:	10006c26 	beq	r2,zero,801a690 <__divdf3+0x24c>
 801a4e0:	00c1ffc4 	movi	r3,2047
 801a4e4:	10c06426 	beq	r2,r3,801a678 <__divdf3+0x234>
 801a4e8:	88c00434 	orhi	r3,r17,16
 801a4ec:	180690fa 	slli	r3,r3,3
 801a4f0:	3022d77a 	srli	r17,r6,29
 801a4f4:	301090fa 	slli	r8,r6,3
 801a4f8:	10bf0044 	addi	r2,r2,-1023
 801a4fc:	88e2b03a 	or	r17,r17,r3
 801a500:	000f883a 	mov	r7,zero
 801a504:	a58cf03a 	xor	r6,r20,r22
 801a508:	3cc8b03a 	or	r4,r7,r19
 801a50c:	a8abc83a 	sub	r21,r21,r2
 801a510:	008003c4 	movi	r2,15
 801a514:	3007883a 	mov	r3,r6
 801a518:	34c03fcc 	andi	r19,r6,255
 801a51c:	11009036 	bltu	r2,r4,801a760 <__divdf3+0x31c>
 801a520:	200890ba 	slli	r4,r4,2
 801a524:	008200b4 	movhi	r2,2050
 801a528:	10a94e04 	addi	r2,r2,-23240
 801a52c:	2089883a 	add	r4,r4,r2
 801a530:	20800017 	ldw	r2,0(r4)
 801a534:	1000683a 	jmp	r2
 801a538:	0801a760 	cmpeqi	zero,at,1693
 801a53c:	0801a5b0 	cmpltui	zero,at,1686
 801a540:	0801a750 	cmplti	zero,at,1693
 801a544:	0801a5a4 	muli	zero,at,1686
 801a548:	0801a750 	cmplti	zero,at,1693
 801a54c:	0801a724 	muli	zero,at,1692
 801a550:	0801a750 	cmplti	zero,at,1693
 801a554:	0801a5a4 	muli	zero,at,1686
 801a558:	0801a5b0 	cmpltui	zero,at,1686
 801a55c:	0801a5b0 	cmpltui	zero,at,1686
 801a560:	0801a724 	muli	zero,at,1692
 801a564:	0801a5a4 	muli	zero,at,1686
 801a568:	0801a594 	ori	zero,at,1686
 801a56c:	0801a594 	ori	zero,at,1686
 801a570:	0801a594 	ori	zero,at,1686
 801a574:	0801aa44 	addi	zero,at,1705
 801a578:	2404b03a 	or	r2,r4,r16
 801a57c:	1000661e 	bne	r2,zero,801a718 <__divdf3+0x2d4>
 801a580:	04c00204 	movi	r19,8
 801a584:	0021883a 	mov	r16,zero
 801a588:	0025883a 	mov	r18,zero
 801a58c:	02400084 	movi	r9,2
 801a590:	003fca06 	br	801a4bc <__alt_data_end+0xf801a4bc>
 801a594:	8023883a 	mov	r17,r16
 801a598:	9011883a 	mov	r8,r18
 801a59c:	e02f883a 	mov	r23,fp
 801a5a0:	480f883a 	mov	r7,r9
 801a5a4:	00800084 	movi	r2,2
 801a5a8:	3881311e 	bne	r7,r2,801aa70 <__divdf3+0x62c>
 801a5ac:	b827883a 	mov	r19,r23
 801a5b0:	98c0004c 	andi	r3,r19,1
 801a5b4:	0081ffc4 	movi	r2,2047
 801a5b8:	000b883a 	mov	r5,zero
 801a5bc:	0025883a 	mov	r18,zero
 801a5c0:	1004953a 	slli	r2,r2,20
 801a5c4:	18c03fcc 	andi	r3,r3,255
 801a5c8:	04400434 	movhi	r17,16
 801a5cc:	8c7fffc4 	addi	r17,r17,-1
 801a5d0:	180697fa 	slli	r3,r3,31
 801a5d4:	2c4a703a 	and	r5,r5,r17
 801a5d8:	288ab03a 	or	r5,r5,r2
 801a5dc:	28c6b03a 	or	r3,r5,r3
 801a5e0:	9005883a 	mov	r2,r18
 801a5e4:	dfc00d17 	ldw	ra,52(sp)
 801a5e8:	df000c17 	ldw	fp,48(sp)
 801a5ec:	ddc00b17 	ldw	r23,44(sp)
 801a5f0:	dd800a17 	ldw	r22,40(sp)
 801a5f4:	dd400917 	ldw	r21,36(sp)
 801a5f8:	dd000817 	ldw	r20,32(sp)
 801a5fc:	dcc00717 	ldw	r19,28(sp)
 801a600:	dc800617 	ldw	r18,24(sp)
 801a604:	dc400517 	ldw	r17,20(sp)
 801a608:	dc000417 	ldw	r16,16(sp)
 801a60c:	dec00e04 	addi	sp,sp,56
 801a610:	f800283a 	ret
 801a614:	2404b03a 	or	r2,r4,r16
 801a618:	2027883a 	mov	r19,r4
 801a61c:	10003926 	beq	r2,zero,801a704 <__divdf3+0x2c0>
 801a620:	80012e26 	beq	r16,zero,801aadc <__divdf3+0x698>
 801a624:	8009883a 	mov	r4,r16
 801a628:	d9800315 	stw	r6,12(sp)
 801a62c:	d9c00215 	stw	r7,8(sp)
 801a630:	801c3440 	call	801c344 <__clzsi2>
 801a634:	d9800317 	ldw	r6,12(sp)
 801a638:	d9c00217 	ldw	r7,8(sp)
 801a63c:	113ffd44 	addi	r4,r2,-11
 801a640:	00c00704 	movi	r3,28
 801a644:	19012116 	blt	r3,r4,801aacc <__divdf3+0x688>
 801a648:	00c00744 	movi	r3,29
 801a64c:	147ffe04 	addi	r17,r2,-8
 801a650:	1907c83a 	sub	r3,r3,r4
 801a654:	8460983a 	sll	r16,r16,r17
 801a658:	98c6d83a 	srl	r3,r19,r3
 801a65c:	9c64983a 	sll	r18,r19,r17
 801a660:	1c20b03a 	or	r16,r3,r16
 801a664:	1080fcc4 	addi	r2,r2,1011
 801a668:	00abc83a 	sub	r21,zero,r2
 801a66c:	0027883a 	mov	r19,zero
 801a670:	0013883a 	mov	r9,zero
 801a674:	003f9106 	br	801a4bc <__alt_data_end+0xf801a4bc>
 801a678:	3446b03a 	or	r3,r6,r17
 801a67c:	18001f1e 	bne	r3,zero,801a6fc <__divdf3+0x2b8>
 801a680:	0023883a 	mov	r17,zero
 801a684:	0011883a 	mov	r8,zero
 801a688:	01c00084 	movi	r7,2
 801a68c:	003f9d06 	br	801a504 <__alt_data_end+0xf801a504>
 801a690:	3446b03a 	or	r3,r6,r17
 801a694:	18001526 	beq	r3,zero,801a6ec <__divdf3+0x2a8>
 801a698:	88011b26 	beq	r17,zero,801ab08 <__divdf3+0x6c4>
 801a69c:	8809883a 	mov	r4,r17
 801a6a0:	d9800315 	stw	r6,12(sp)
 801a6a4:	da400115 	stw	r9,4(sp)
 801a6a8:	801c3440 	call	801c344 <__clzsi2>
 801a6ac:	d9800317 	ldw	r6,12(sp)
 801a6b0:	da400117 	ldw	r9,4(sp)
 801a6b4:	113ffd44 	addi	r4,r2,-11
 801a6b8:	00c00704 	movi	r3,28
 801a6bc:	19010e16 	blt	r3,r4,801aaf8 <__divdf3+0x6b4>
 801a6c0:	00c00744 	movi	r3,29
 801a6c4:	123ffe04 	addi	r8,r2,-8
 801a6c8:	1907c83a 	sub	r3,r3,r4
 801a6cc:	8a22983a 	sll	r17,r17,r8
 801a6d0:	30c6d83a 	srl	r3,r6,r3
 801a6d4:	3210983a 	sll	r8,r6,r8
 801a6d8:	1c62b03a 	or	r17,r3,r17
 801a6dc:	1080fcc4 	addi	r2,r2,1011
 801a6e0:	0085c83a 	sub	r2,zero,r2
 801a6e4:	000f883a 	mov	r7,zero
 801a6e8:	003f8606 	br	801a504 <__alt_data_end+0xf801a504>
 801a6ec:	0023883a 	mov	r17,zero
 801a6f0:	0011883a 	mov	r8,zero
 801a6f4:	01c00044 	movi	r7,1
 801a6f8:	003f8206 	br	801a504 <__alt_data_end+0xf801a504>
 801a6fc:	01c000c4 	movi	r7,3
 801a700:	003f8006 	br	801a504 <__alt_data_end+0xf801a504>
 801a704:	04c00104 	movi	r19,4
 801a708:	0021883a 	mov	r16,zero
 801a70c:	0025883a 	mov	r18,zero
 801a710:	02400044 	movi	r9,1
 801a714:	003f6906 	br	801a4bc <__alt_data_end+0xf801a4bc>
 801a718:	04c00304 	movi	r19,12
 801a71c:	024000c4 	movi	r9,3
 801a720:	003f6606 	br	801a4bc <__alt_data_end+0xf801a4bc>
 801a724:	01400434 	movhi	r5,16
 801a728:	0007883a 	mov	r3,zero
 801a72c:	297fffc4 	addi	r5,r5,-1
 801a730:	04bfffc4 	movi	r18,-1
 801a734:	0081ffc4 	movi	r2,2047
 801a738:	003fa106 	br	801a5c0 <__alt_data_end+0xf801a5c0>
 801a73c:	00c00044 	movi	r3,1
 801a740:	1887c83a 	sub	r3,r3,r2
 801a744:	01000e04 	movi	r4,56
 801a748:	20c1210e 	bge	r4,r3,801abd0 <__divdf3+0x78c>
 801a74c:	98c0004c 	andi	r3,r19,1
 801a750:	0005883a 	mov	r2,zero
 801a754:	000b883a 	mov	r5,zero
 801a758:	0025883a 	mov	r18,zero
 801a75c:	003f9806 	br	801a5c0 <__alt_data_end+0xf801a5c0>
 801a760:	8c00fd36 	bltu	r17,r16,801ab58 <__divdf3+0x714>
 801a764:	8440fb26 	beq	r16,r17,801ab54 <__divdf3+0x710>
 801a768:	8007883a 	mov	r3,r16
 801a76c:	ad7fffc4 	addi	r21,r21,-1
 801a770:	0021883a 	mov	r16,zero
 801a774:	4004d63a 	srli	r2,r8,24
 801a778:	8822923a 	slli	r17,r17,8
 801a77c:	1809883a 	mov	r4,r3
 801a780:	402c923a 	slli	r22,r8,8
 801a784:	88b8b03a 	or	fp,r17,r2
 801a788:	e028d43a 	srli	r20,fp,16
 801a78c:	d8c00015 	stw	r3,0(sp)
 801a790:	e5ffffcc 	andi	r23,fp,65535
 801a794:	a00b883a 	mov	r5,r20
 801a798:	80039b80 	call	80039b8 <__udivsi3>
 801a79c:	d8c00017 	ldw	r3,0(sp)
 801a7a0:	a00b883a 	mov	r5,r20
 801a7a4:	d8800315 	stw	r2,12(sp)
 801a7a8:	1809883a 	mov	r4,r3
 801a7ac:	8003a1c0 	call	8003a1c <__umodsi3>
 801a7b0:	d9800317 	ldw	r6,12(sp)
 801a7b4:	1006943a 	slli	r3,r2,16
 801a7b8:	9004d43a 	srli	r2,r18,16
 801a7bc:	b9a3383a 	mul	r17,r23,r6
 801a7c0:	10c4b03a 	or	r2,r2,r3
 801a7c4:	1440062e 	bgeu	r2,r17,801a7e0 <__divdf3+0x39c>
 801a7c8:	1705883a 	add	r2,r2,fp
 801a7cc:	30ffffc4 	addi	r3,r6,-1
 801a7d0:	1700ee36 	bltu	r2,fp,801ab8c <__divdf3+0x748>
 801a7d4:	1440ed2e 	bgeu	r2,r17,801ab8c <__divdf3+0x748>
 801a7d8:	31bfff84 	addi	r6,r6,-2
 801a7dc:	1705883a 	add	r2,r2,fp
 801a7e0:	1463c83a 	sub	r17,r2,r17
 801a7e4:	a00b883a 	mov	r5,r20
 801a7e8:	8809883a 	mov	r4,r17
 801a7ec:	d9800315 	stw	r6,12(sp)
 801a7f0:	80039b80 	call	80039b8 <__udivsi3>
 801a7f4:	a00b883a 	mov	r5,r20
 801a7f8:	8809883a 	mov	r4,r17
 801a7fc:	d8800215 	stw	r2,8(sp)
 801a800:	8003a1c0 	call	8003a1c <__umodsi3>
 801a804:	d9c00217 	ldw	r7,8(sp)
 801a808:	1004943a 	slli	r2,r2,16
 801a80c:	94bfffcc 	andi	r18,r18,65535
 801a810:	b9d1383a 	mul	r8,r23,r7
 801a814:	90a4b03a 	or	r18,r18,r2
 801a818:	d9800317 	ldw	r6,12(sp)
 801a81c:	9200062e 	bgeu	r18,r8,801a838 <__divdf3+0x3f4>
 801a820:	9725883a 	add	r18,r18,fp
 801a824:	38bfffc4 	addi	r2,r7,-1
 801a828:	9700d636 	bltu	r18,fp,801ab84 <__divdf3+0x740>
 801a82c:	9200d52e 	bgeu	r18,r8,801ab84 <__divdf3+0x740>
 801a830:	39ffff84 	addi	r7,r7,-2
 801a834:	9725883a 	add	r18,r18,fp
 801a838:	3004943a 	slli	r2,r6,16
 801a83c:	b012d43a 	srli	r9,r22,16
 801a840:	b1bfffcc 	andi	r6,r22,65535
 801a844:	11e2b03a 	or	r17,r2,r7
 801a848:	8806d43a 	srli	r3,r17,16
 801a84c:	893fffcc 	andi	r4,r17,65535
 801a850:	218b383a 	mul	r5,r4,r6
 801a854:	30c5383a 	mul	r2,r6,r3
 801a858:	2249383a 	mul	r4,r4,r9
 801a85c:	280ed43a 	srli	r7,r5,16
 801a860:	9225c83a 	sub	r18,r18,r8
 801a864:	2089883a 	add	r4,r4,r2
 801a868:	3909883a 	add	r4,r7,r4
 801a86c:	1a47383a 	mul	r3,r3,r9
 801a870:	2080022e 	bgeu	r4,r2,801a87c <__divdf3+0x438>
 801a874:	00800074 	movhi	r2,1
 801a878:	1887883a 	add	r3,r3,r2
 801a87c:	2004d43a 	srli	r2,r4,16
 801a880:	2008943a 	slli	r4,r4,16
 801a884:	297fffcc 	andi	r5,r5,65535
 801a888:	10c7883a 	add	r3,r2,r3
 801a88c:	2149883a 	add	r4,r4,r5
 801a890:	90c0a536 	bltu	r18,r3,801ab28 <__divdf3+0x6e4>
 801a894:	90c0bf26 	beq	r18,r3,801ab94 <__divdf3+0x750>
 801a898:	90c7c83a 	sub	r3,r18,r3
 801a89c:	810fc83a 	sub	r7,r16,r4
 801a8a0:	81e5803a 	cmpltu	r18,r16,r7
 801a8a4:	1ca5c83a 	sub	r18,r3,r18
 801a8a8:	e480c126 	beq	fp,r18,801abb0 <__divdf3+0x76c>
 801a8ac:	a00b883a 	mov	r5,r20
 801a8b0:	9009883a 	mov	r4,r18
 801a8b4:	d9800315 	stw	r6,12(sp)
 801a8b8:	d9c00215 	stw	r7,8(sp)
 801a8bc:	da400115 	stw	r9,4(sp)
 801a8c0:	80039b80 	call	80039b8 <__udivsi3>
 801a8c4:	a00b883a 	mov	r5,r20
 801a8c8:	9009883a 	mov	r4,r18
 801a8cc:	d8800015 	stw	r2,0(sp)
 801a8d0:	8003a1c0 	call	8003a1c <__umodsi3>
 801a8d4:	d9c00217 	ldw	r7,8(sp)
 801a8d8:	da000017 	ldw	r8,0(sp)
 801a8dc:	1006943a 	slli	r3,r2,16
 801a8e0:	3804d43a 	srli	r2,r7,16
 801a8e4:	ba21383a 	mul	r16,r23,r8
 801a8e8:	d9800317 	ldw	r6,12(sp)
 801a8ec:	10c4b03a 	or	r2,r2,r3
 801a8f0:	da400117 	ldw	r9,4(sp)
 801a8f4:	1400062e 	bgeu	r2,r16,801a910 <__divdf3+0x4cc>
 801a8f8:	1705883a 	add	r2,r2,fp
 801a8fc:	40ffffc4 	addi	r3,r8,-1
 801a900:	1700ad36 	bltu	r2,fp,801abb8 <__divdf3+0x774>
 801a904:	1400ac2e 	bgeu	r2,r16,801abb8 <__divdf3+0x774>
 801a908:	423fff84 	addi	r8,r8,-2
 801a90c:	1705883a 	add	r2,r2,fp
 801a910:	1421c83a 	sub	r16,r2,r16
 801a914:	a00b883a 	mov	r5,r20
 801a918:	8009883a 	mov	r4,r16
 801a91c:	d9800315 	stw	r6,12(sp)
 801a920:	d9c00215 	stw	r7,8(sp)
 801a924:	da000015 	stw	r8,0(sp)
 801a928:	da400115 	stw	r9,4(sp)
 801a92c:	80039b80 	call	80039b8 <__udivsi3>
 801a930:	8009883a 	mov	r4,r16
 801a934:	a00b883a 	mov	r5,r20
 801a938:	1025883a 	mov	r18,r2
 801a93c:	8003a1c0 	call	8003a1c <__umodsi3>
 801a940:	d9c00217 	ldw	r7,8(sp)
 801a944:	1004943a 	slli	r2,r2,16
 801a948:	bcaf383a 	mul	r23,r23,r18
 801a94c:	393fffcc 	andi	r4,r7,65535
 801a950:	2088b03a 	or	r4,r4,r2
 801a954:	d9800317 	ldw	r6,12(sp)
 801a958:	da000017 	ldw	r8,0(sp)
 801a95c:	da400117 	ldw	r9,4(sp)
 801a960:	25c0062e 	bgeu	r4,r23,801a97c <__divdf3+0x538>
 801a964:	2709883a 	add	r4,r4,fp
 801a968:	90bfffc4 	addi	r2,r18,-1
 801a96c:	27009436 	bltu	r4,fp,801abc0 <__divdf3+0x77c>
 801a970:	25c0932e 	bgeu	r4,r23,801abc0 <__divdf3+0x77c>
 801a974:	94bfff84 	addi	r18,r18,-2
 801a978:	2709883a 	add	r4,r4,fp
 801a97c:	4004943a 	slli	r2,r8,16
 801a980:	25efc83a 	sub	r23,r4,r23
 801a984:	1490b03a 	or	r8,r2,r18
 801a988:	4008d43a 	srli	r4,r8,16
 801a98c:	40ffffcc 	andi	r3,r8,65535
 801a990:	30c5383a 	mul	r2,r6,r3
 801a994:	1a47383a 	mul	r3,r3,r9
 801a998:	310d383a 	mul	r6,r6,r4
 801a99c:	100ad43a 	srli	r5,r2,16
 801a9a0:	4913383a 	mul	r9,r9,r4
 801a9a4:	1987883a 	add	r3,r3,r6
 801a9a8:	28c7883a 	add	r3,r5,r3
 801a9ac:	1980022e 	bgeu	r3,r6,801a9b8 <__divdf3+0x574>
 801a9b0:	01000074 	movhi	r4,1
 801a9b4:	4913883a 	add	r9,r9,r4
 801a9b8:	1808d43a 	srli	r4,r3,16
 801a9bc:	1806943a 	slli	r3,r3,16
 801a9c0:	10bfffcc 	andi	r2,r2,65535
 801a9c4:	2253883a 	add	r9,r4,r9
 801a9c8:	1887883a 	add	r3,r3,r2
 801a9cc:	ba403836 	bltu	r23,r9,801aab0 <__divdf3+0x66c>
 801a9d0:	ba403626 	beq	r23,r9,801aaac <__divdf3+0x668>
 801a9d4:	42000054 	ori	r8,r8,1
 801a9d8:	a880ffc4 	addi	r2,r21,1023
 801a9dc:	00bf570e 	bge	zero,r2,801a73c <__alt_data_end+0xf801a73c>
 801a9e0:	40c001cc 	andi	r3,r8,7
 801a9e4:	18000726 	beq	r3,zero,801aa04 <__divdf3+0x5c0>
 801a9e8:	40c003cc 	andi	r3,r8,15
 801a9ec:	01000104 	movi	r4,4
 801a9f0:	19000426 	beq	r3,r4,801aa04 <__divdf3+0x5c0>
 801a9f4:	4107883a 	add	r3,r8,r4
 801a9f8:	1a11803a 	cmpltu	r8,r3,r8
 801a9fc:	8a23883a 	add	r17,r17,r8
 801aa00:	1811883a 	mov	r8,r3
 801aa04:	88c0402c 	andhi	r3,r17,256
 801aa08:	18000426 	beq	r3,zero,801aa1c <__divdf3+0x5d8>
 801aa0c:	00ffc034 	movhi	r3,65280
 801aa10:	18ffffc4 	addi	r3,r3,-1
 801aa14:	a8810004 	addi	r2,r21,1024
 801aa18:	88e2703a 	and	r17,r17,r3
 801aa1c:	00c1ff84 	movi	r3,2046
 801aa20:	18bee316 	blt	r3,r2,801a5b0 <__alt_data_end+0xf801a5b0>
 801aa24:	8824977a 	slli	r18,r17,29
 801aa28:	4010d0fa 	srli	r8,r8,3
 801aa2c:	8822927a 	slli	r17,r17,9
 801aa30:	1081ffcc 	andi	r2,r2,2047
 801aa34:	9224b03a 	or	r18,r18,r8
 801aa38:	880ad33a 	srli	r5,r17,12
 801aa3c:	98c0004c 	andi	r3,r19,1
 801aa40:	003edf06 	br	801a5c0 <__alt_data_end+0xf801a5c0>
 801aa44:	8080022c 	andhi	r2,r16,8
 801aa48:	10001226 	beq	r2,zero,801aa94 <__divdf3+0x650>
 801aa4c:	8880022c 	andhi	r2,r17,8
 801aa50:	1000101e 	bne	r2,zero,801aa94 <__divdf3+0x650>
 801aa54:	00800434 	movhi	r2,16
 801aa58:	89400234 	orhi	r5,r17,8
 801aa5c:	10bfffc4 	addi	r2,r2,-1
 801aa60:	b007883a 	mov	r3,r22
 801aa64:	288a703a 	and	r5,r5,r2
 801aa68:	4025883a 	mov	r18,r8
 801aa6c:	003f3106 	br	801a734 <__alt_data_end+0xf801a734>
 801aa70:	008000c4 	movi	r2,3
 801aa74:	3880a626 	beq	r7,r2,801ad10 <__divdf3+0x8cc>
 801aa78:	00800044 	movi	r2,1
 801aa7c:	3880521e 	bne	r7,r2,801abc8 <__divdf3+0x784>
 801aa80:	b807883a 	mov	r3,r23
 801aa84:	0005883a 	mov	r2,zero
 801aa88:	000b883a 	mov	r5,zero
 801aa8c:	0025883a 	mov	r18,zero
 801aa90:	003ecb06 	br	801a5c0 <__alt_data_end+0xf801a5c0>
 801aa94:	00800434 	movhi	r2,16
 801aa98:	81400234 	orhi	r5,r16,8
 801aa9c:	10bfffc4 	addi	r2,r2,-1
 801aaa0:	a007883a 	mov	r3,r20
 801aaa4:	288a703a 	and	r5,r5,r2
 801aaa8:	003f2206 	br	801a734 <__alt_data_end+0xf801a734>
 801aaac:	183fca26 	beq	r3,zero,801a9d8 <__alt_data_end+0xf801a9d8>
 801aab0:	e5ef883a 	add	r23,fp,r23
 801aab4:	40bfffc4 	addi	r2,r8,-1
 801aab8:	bf00392e 	bgeu	r23,fp,801aba0 <__divdf3+0x75c>
 801aabc:	1011883a 	mov	r8,r2
 801aac0:	ba7fc41e 	bne	r23,r9,801a9d4 <__alt_data_end+0xf801a9d4>
 801aac4:	b0ffc31e 	bne	r22,r3,801a9d4 <__alt_data_end+0xf801a9d4>
 801aac8:	003fc306 	br	801a9d8 <__alt_data_end+0xf801a9d8>
 801aacc:	143ff604 	addi	r16,r2,-40
 801aad0:	9c20983a 	sll	r16,r19,r16
 801aad4:	0025883a 	mov	r18,zero
 801aad8:	003ee206 	br	801a664 <__alt_data_end+0xf801a664>
 801aadc:	d9800315 	stw	r6,12(sp)
 801aae0:	d9c00215 	stw	r7,8(sp)
 801aae4:	801c3440 	call	801c344 <__clzsi2>
 801aae8:	10800804 	addi	r2,r2,32
 801aaec:	d9c00217 	ldw	r7,8(sp)
 801aaf0:	d9800317 	ldw	r6,12(sp)
 801aaf4:	003ed106 	br	801a63c <__alt_data_end+0xf801a63c>
 801aaf8:	147ff604 	addi	r17,r2,-40
 801aafc:	3462983a 	sll	r17,r6,r17
 801ab00:	0011883a 	mov	r8,zero
 801ab04:	003ef506 	br	801a6dc <__alt_data_end+0xf801a6dc>
 801ab08:	3009883a 	mov	r4,r6
 801ab0c:	d9800315 	stw	r6,12(sp)
 801ab10:	da400115 	stw	r9,4(sp)
 801ab14:	801c3440 	call	801c344 <__clzsi2>
 801ab18:	10800804 	addi	r2,r2,32
 801ab1c:	da400117 	ldw	r9,4(sp)
 801ab20:	d9800317 	ldw	r6,12(sp)
 801ab24:	003ee306 	br	801a6b4 <__alt_data_end+0xf801a6b4>
 801ab28:	85a1883a 	add	r16,r16,r22
 801ab2c:	8585803a 	cmpltu	r2,r16,r22
 801ab30:	1705883a 	add	r2,r2,fp
 801ab34:	14a5883a 	add	r18,r2,r18
 801ab38:	88bfffc4 	addi	r2,r17,-1
 801ab3c:	e4800c2e 	bgeu	fp,r18,801ab70 <__divdf3+0x72c>
 801ab40:	90c03e36 	bltu	r18,r3,801ac3c <__divdf3+0x7f8>
 801ab44:	1c806926 	beq	r3,r18,801acec <__divdf3+0x8a8>
 801ab48:	90c7c83a 	sub	r3,r18,r3
 801ab4c:	1023883a 	mov	r17,r2
 801ab50:	003f5206 	br	801a89c <__alt_data_end+0xf801a89c>
 801ab54:	923f0436 	bltu	r18,r8,801a768 <__alt_data_end+0xf801a768>
 801ab58:	800897fa 	slli	r4,r16,31
 801ab5c:	9004d07a 	srli	r2,r18,1
 801ab60:	8006d07a 	srli	r3,r16,1
 801ab64:	902097fa 	slli	r16,r18,31
 801ab68:	20a4b03a 	or	r18,r4,r2
 801ab6c:	003f0106 	br	801a774 <__alt_data_end+0xf801a774>
 801ab70:	e4bff51e 	bne	fp,r18,801ab48 <__alt_data_end+0xf801ab48>
 801ab74:	85bff22e 	bgeu	r16,r22,801ab40 <__alt_data_end+0xf801ab40>
 801ab78:	e0c7c83a 	sub	r3,fp,r3
 801ab7c:	1023883a 	mov	r17,r2
 801ab80:	003f4606 	br	801a89c <__alt_data_end+0xf801a89c>
 801ab84:	100f883a 	mov	r7,r2
 801ab88:	003f2b06 	br	801a838 <__alt_data_end+0xf801a838>
 801ab8c:	180d883a 	mov	r6,r3
 801ab90:	003f1306 	br	801a7e0 <__alt_data_end+0xf801a7e0>
 801ab94:	813fe436 	bltu	r16,r4,801ab28 <__alt_data_end+0xf801ab28>
 801ab98:	0007883a 	mov	r3,zero
 801ab9c:	003f3f06 	br	801a89c <__alt_data_end+0xf801a89c>
 801aba0:	ba402c36 	bltu	r23,r9,801ac54 <__divdf3+0x810>
 801aba4:	4dc05426 	beq	r9,r23,801acf8 <__divdf3+0x8b4>
 801aba8:	1011883a 	mov	r8,r2
 801abac:	003f8906 	br	801a9d4 <__alt_data_end+0xf801a9d4>
 801abb0:	023fffc4 	movi	r8,-1
 801abb4:	003f8806 	br	801a9d8 <__alt_data_end+0xf801a9d8>
 801abb8:	1811883a 	mov	r8,r3
 801abbc:	003f5406 	br	801a910 <__alt_data_end+0xf801a910>
 801abc0:	1025883a 	mov	r18,r2
 801abc4:	003f6d06 	br	801a97c <__alt_data_end+0xf801a97c>
 801abc8:	b827883a 	mov	r19,r23
 801abcc:	003f8206 	br	801a9d8 <__alt_data_end+0xf801a9d8>
 801abd0:	010007c4 	movi	r4,31
 801abd4:	20c02616 	blt	r4,r3,801ac70 <__divdf3+0x82c>
 801abd8:	00800804 	movi	r2,32
 801abdc:	10c5c83a 	sub	r2,r2,r3
 801abe0:	888a983a 	sll	r5,r17,r2
 801abe4:	40c8d83a 	srl	r4,r8,r3
 801abe8:	4084983a 	sll	r2,r8,r2
 801abec:	88e2d83a 	srl	r17,r17,r3
 801abf0:	2906b03a 	or	r3,r5,r4
 801abf4:	1004c03a 	cmpne	r2,r2,zero
 801abf8:	1886b03a 	or	r3,r3,r2
 801abfc:	188001cc 	andi	r2,r3,7
 801ac00:	10000726 	beq	r2,zero,801ac20 <__divdf3+0x7dc>
 801ac04:	188003cc 	andi	r2,r3,15
 801ac08:	01000104 	movi	r4,4
 801ac0c:	11000426 	beq	r2,r4,801ac20 <__divdf3+0x7dc>
 801ac10:	1805883a 	mov	r2,r3
 801ac14:	10c00104 	addi	r3,r2,4
 801ac18:	1885803a 	cmpltu	r2,r3,r2
 801ac1c:	88a3883a 	add	r17,r17,r2
 801ac20:	8880202c 	andhi	r2,r17,128
 801ac24:	10002726 	beq	r2,zero,801acc4 <__divdf3+0x880>
 801ac28:	98c0004c 	andi	r3,r19,1
 801ac2c:	00800044 	movi	r2,1
 801ac30:	000b883a 	mov	r5,zero
 801ac34:	0025883a 	mov	r18,zero
 801ac38:	003e6106 	br	801a5c0 <__alt_data_end+0xf801a5c0>
 801ac3c:	85a1883a 	add	r16,r16,r22
 801ac40:	8585803a 	cmpltu	r2,r16,r22
 801ac44:	1705883a 	add	r2,r2,fp
 801ac48:	14a5883a 	add	r18,r2,r18
 801ac4c:	8c7fff84 	addi	r17,r17,-2
 801ac50:	003f1106 	br	801a898 <__alt_data_end+0xf801a898>
 801ac54:	b589883a 	add	r4,r22,r22
 801ac58:	25ad803a 	cmpltu	r22,r4,r22
 801ac5c:	b739883a 	add	fp,r22,fp
 801ac60:	40bfff84 	addi	r2,r8,-2
 801ac64:	bf2f883a 	add	r23,r23,fp
 801ac68:	202d883a 	mov	r22,r4
 801ac6c:	003f9306 	br	801aabc <__alt_data_end+0xf801aabc>
 801ac70:	013ff844 	movi	r4,-31
 801ac74:	2085c83a 	sub	r2,r4,r2
 801ac78:	8888d83a 	srl	r4,r17,r2
 801ac7c:	00800804 	movi	r2,32
 801ac80:	18802126 	beq	r3,r2,801ad08 <__divdf3+0x8c4>
 801ac84:	00801004 	movi	r2,64
 801ac88:	10c5c83a 	sub	r2,r2,r3
 801ac8c:	8884983a 	sll	r2,r17,r2
 801ac90:	1204b03a 	or	r2,r2,r8
 801ac94:	1004c03a 	cmpne	r2,r2,zero
 801ac98:	2084b03a 	or	r2,r4,r2
 801ac9c:	144001cc 	andi	r17,r2,7
 801aca0:	88000d1e 	bne	r17,zero,801acd8 <__divdf3+0x894>
 801aca4:	000b883a 	mov	r5,zero
 801aca8:	1024d0fa 	srli	r18,r2,3
 801acac:	98c0004c 	andi	r3,r19,1
 801acb0:	0005883a 	mov	r2,zero
 801acb4:	9464b03a 	or	r18,r18,r17
 801acb8:	003e4106 	br	801a5c0 <__alt_data_end+0xf801a5c0>
 801acbc:	1007883a 	mov	r3,r2
 801acc0:	0023883a 	mov	r17,zero
 801acc4:	880a927a 	slli	r5,r17,9
 801acc8:	1805883a 	mov	r2,r3
 801accc:	8822977a 	slli	r17,r17,29
 801acd0:	280ad33a 	srli	r5,r5,12
 801acd4:	003ff406 	br	801aca8 <__alt_data_end+0xf801aca8>
 801acd8:	10c003cc 	andi	r3,r2,15
 801acdc:	01000104 	movi	r4,4
 801ace0:	193ff626 	beq	r3,r4,801acbc <__alt_data_end+0xf801acbc>
 801ace4:	0023883a 	mov	r17,zero
 801ace8:	003fca06 	br	801ac14 <__alt_data_end+0xf801ac14>
 801acec:	813fd336 	bltu	r16,r4,801ac3c <__alt_data_end+0xf801ac3c>
 801acf0:	1023883a 	mov	r17,r2
 801acf4:	003fa806 	br	801ab98 <__alt_data_end+0xf801ab98>
 801acf8:	b0ffd636 	bltu	r22,r3,801ac54 <__alt_data_end+0xf801ac54>
 801acfc:	1011883a 	mov	r8,r2
 801ad00:	b0ff341e 	bne	r22,r3,801a9d4 <__alt_data_end+0xf801a9d4>
 801ad04:	003f3406 	br	801a9d8 <__alt_data_end+0xf801a9d8>
 801ad08:	0005883a 	mov	r2,zero
 801ad0c:	003fe006 	br	801ac90 <__alt_data_end+0xf801ac90>
 801ad10:	00800434 	movhi	r2,16
 801ad14:	89400234 	orhi	r5,r17,8
 801ad18:	10bfffc4 	addi	r2,r2,-1
 801ad1c:	b807883a 	mov	r3,r23
 801ad20:	288a703a 	and	r5,r5,r2
 801ad24:	4025883a 	mov	r18,r8
 801ad28:	003e8206 	br	801a734 <__alt_data_end+0xf801a734>

0801ad2c <__eqdf2>:
 801ad2c:	2804d53a 	srli	r2,r5,20
 801ad30:	3806d53a 	srli	r3,r7,20
 801ad34:	02000434 	movhi	r8,16
 801ad38:	423fffc4 	addi	r8,r8,-1
 801ad3c:	1081ffcc 	andi	r2,r2,2047
 801ad40:	0281ffc4 	movi	r10,2047
 801ad44:	2a12703a 	and	r9,r5,r8
 801ad48:	18c1ffcc 	andi	r3,r3,2047
 801ad4c:	3a10703a 	and	r8,r7,r8
 801ad50:	280ad7fa 	srli	r5,r5,31
 801ad54:	380ed7fa 	srli	r7,r7,31
 801ad58:	12801026 	beq	r2,r10,801ad9c <__eqdf2+0x70>
 801ad5c:	0281ffc4 	movi	r10,2047
 801ad60:	1a800a26 	beq	r3,r10,801ad8c <__eqdf2+0x60>
 801ad64:	10c00226 	beq	r2,r3,801ad70 <__eqdf2+0x44>
 801ad68:	00800044 	movi	r2,1
 801ad6c:	f800283a 	ret
 801ad70:	4a3ffd1e 	bne	r9,r8,801ad68 <__alt_data_end+0xf801ad68>
 801ad74:	21bffc1e 	bne	r4,r6,801ad68 <__alt_data_end+0xf801ad68>
 801ad78:	29c00c26 	beq	r5,r7,801adac <__eqdf2+0x80>
 801ad7c:	103ffa1e 	bne	r2,zero,801ad68 <__alt_data_end+0xf801ad68>
 801ad80:	2244b03a 	or	r2,r4,r9
 801ad84:	1004c03a 	cmpne	r2,r2,zero
 801ad88:	f800283a 	ret
 801ad8c:	3214b03a 	or	r10,r6,r8
 801ad90:	503ff426 	beq	r10,zero,801ad64 <__alt_data_end+0xf801ad64>
 801ad94:	00800044 	movi	r2,1
 801ad98:	f800283a 	ret
 801ad9c:	2254b03a 	or	r10,r4,r9
 801ada0:	503fee26 	beq	r10,zero,801ad5c <__alt_data_end+0xf801ad5c>
 801ada4:	00800044 	movi	r2,1
 801ada8:	f800283a 	ret
 801adac:	0005883a 	mov	r2,zero
 801adb0:	f800283a 	ret

0801adb4 <__gedf2>:
 801adb4:	2804d53a 	srli	r2,r5,20
 801adb8:	3806d53a 	srli	r3,r7,20
 801adbc:	02000434 	movhi	r8,16
 801adc0:	423fffc4 	addi	r8,r8,-1
 801adc4:	1081ffcc 	andi	r2,r2,2047
 801adc8:	0241ffc4 	movi	r9,2047
 801adcc:	2a14703a 	and	r10,r5,r8
 801add0:	18c1ffcc 	andi	r3,r3,2047
 801add4:	3a10703a 	and	r8,r7,r8
 801add8:	280ad7fa 	srli	r5,r5,31
 801addc:	380ed7fa 	srli	r7,r7,31
 801ade0:	12401d26 	beq	r2,r9,801ae58 <__gedf2+0xa4>
 801ade4:	0241ffc4 	movi	r9,2047
 801ade8:	1a401226 	beq	r3,r9,801ae34 <__gedf2+0x80>
 801adec:	1000081e 	bne	r2,zero,801ae10 <__gedf2+0x5c>
 801adf0:	2296b03a 	or	r11,r4,r10
 801adf4:	5813003a 	cmpeq	r9,r11,zero
 801adf8:	1800091e 	bne	r3,zero,801ae20 <__gedf2+0x6c>
 801adfc:	3218b03a 	or	r12,r6,r8
 801ae00:	6000071e 	bne	r12,zero,801ae20 <__gedf2+0x6c>
 801ae04:	0005883a 	mov	r2,zero
 801ae08:	5800101e 	bne	r11,zero,801ae4c <__gedf2+0x98>
 801ae0c:	f800283a 	ret
 801ae10:	18000c1e 	bne	r3,zero,801ae44 <__gedf2+0x90>
 801ae14:	3212b03a 	or	r9,r6,r8
 801ae18:	48000c26 	beq	r9,zero,801ae4c <__gedf2+0x98>
 801ae1c:	0013883a 	mov	r9,zero
 801ae20:	39c03fcc 	andi	r7,r7,255
 801ae24:	48000826 	beq	r9,zero,801ae48 <__gedf2+0x94>
 801ae28:	38000926 	beq	r7,zero,801ae50 <__gedf2+0x9c>
 801ae2c:	00800044 	movi	r2,1
 801ae30:	f800283a 	ret
 801ae34:	3212b03a 	or	r9,r6,r8
 801ae38:	483fec26 	beq	r9,zero,801adec <__alt_data_end+0xf801adec>
 801ae3c:	00bfff84 	movi	r2,-2
 801ae40:	f800283a 	ret
 801ae44:	39c03fcc 	andi	r7,r7,255
 801ae48:	29c00626 	beq	r5,r7,801ae64 <__gedf2+0xb0>
 801ae4c:	283ff726 	beq	r5,zero,801ae2c <__alt_data_end+0xf801ae2c>
 801ae50:	00bfffc4 	movi	r2,-1
 801ae54:	f800283a 	ret
 801ae58:	2292b03a 	or	r9,r4,r10
 801ae5c:	483fe126 	beq	r9,zero,801ade4 <__alt_data_end+0xf801ade4>
 801ae60:	003ff606 	br	801ae3c <__alt_data_end+0xf801ae3c>
 801ae64:	18bff916 	blt	r3,r2,801ae4c <__alt_data_end+0xf801ae4c>
 801ae68:	10c00316 	blt	r2,r3,801ae78 <__gedf2+0xc4>
 801ae6c:	42bff736 	bltu	r8,r10,801ae4c <__alt_data_end+0xf801ae4c>
 801ae70:	52000326 	beq	r10,r8,801ae80 <__gedf2+0xcc>
 801ae74:	5200042e 	bgeu	r10,r8,801ae88 <__gedf2+0xd4>
 801ae78:	283fec1e 	bne	r5,zero,801ae2c <__alt_data_end+0xf801ae2c>
 801ae7c:	003ff406 	br	801ae50 <__alt_data_end+0xf801ae50>
 801ae80:	313ff236 	bltu	r6,r4,801ae4c <__alt_data_end+0xf801ae4c>
 801ae84:	21bffc36 	bltu	r4,r6,801ae78 <__alt_data_end+0xf801ae78>
 801ae88:	0005883a 	mov	r2,zero
 801ae8c:	f800283a 	ret

0801ae90 <__ledf2>:
 801ae90:	2804d53a 	srli	r2,r5,20
 801ae94:	3810d53a 	srli	r8,r7,20
 801ae98:	00c00434 	movhi	r3,16
 801ae9c:	18ffffc4 	addi	r3,r3,-1
 801aea0:	1081ffcc 	andi	r2,r2,2047
 801aea4:	0241ffc4 	movi	r9,2047
 801aea8:	28d4703a 	and	r10,r5,r3
 801aeac:	4201ffcc 	andi	r8,r8,2047
 801aeb0:	38c6703a 	and	r3,r7,r3
 801aeb4:	280ad7fa 	srli	r5,r5,31
 801aeb8:	380ed7fa 	srli	r7,r7,31
 801aebc:	12401f26 	beq	r2,r9,801af3c <__ledf2+0xac>
 801aec0:	0241ffc4 	movi	r9,2047
 801aec4:	42401426 	beq	r8,r9,801af18 <__ledf2+0x88>
 801aec8:	1000091e 	bne	r2,zero,801aef0 <__ledf2+0x60>
 801aecc:	2296b03a 	or	r11,r4,r10
 801aed0:	5813003a 	cmpeq	r9,r11,zero
 801aed4:	29403fcc 	andi	r5,r5,255
 801aed8:	40000a1e 	bne	r8,zero,801af04 <__ledf2+0x74>
 801aedc:	30d8b03a 	or	r12,r6,r3
 801aee0:	6000081e 	bne	r12,zero,801af04 <__ledf2+0x74>
 801aee4:	0005883a 	mov	r2,zero
 801aee8:	5800111e 	bne	r11,zero,801af30 <__ledf2+0xa0>
 801aeec:	f800283a 	ret
 801aef0:	29403fcc 	andi	r5,r5,255
 801aef4:	40000c1e 	bne	r8,zero,801af28 <__ledf2+0x98>
 801aef8:	30d2b03a 	or	r9,r6,r3
 801aefc:	48000c26 	beq	r9,zero,801af30 <__ledf2+0xa0>
 801af00:	0013883a 	mov	r9,zero
 801af04:	39c03fcc 	andi	r7,r7,255
 801af08:	48000826 	beq	r9,zero,801af2c <__ledf2+0x9c>
 801af0c:	38001126 	beq	r7,zero,801af54 <__ledf2+0xc4>
 801af10:	00800044 	movi	r2,1
 801af14:	f800283a 	ret
 801af18:	30d2b03a 	or	r9,r6,r3
 801af1c:	483fea26 	beq	r9,zero,801aec8 <__alt_data_end+0xf801aec8>
 801af20:	00800084 	movi	r2,2
 801af24:	f800283a 	ret
 801af28:	39c03fcc 	andi	r7,r7,255
 801af2c:	39400726 	beq	r7,r5,801af4c <__ledf2+0xbc>
 801af30:	2800081e 	bne	r5,zero,801af54 <__ledf2+0xc4>
 801af34:	00800044 	movi	r2,1
 801af38:	f800283a 	ret
 801af3c:	2292b03a 	or	r9,r4,r10
 801af40:	483fdf26 	beq	r9,zero,801aec0 <__alt_data_end+0xf801aec0>
 801af44:	00800084 	movi	r2,2
 801af48:	f800283a 	ret
 801af4c:	4080030e 	bge	r8,r2,801af5c <__ledf2+0xcc>
 801af50:	383fef26 	beq	r7,zero,801af10 <__alt_data_end+0xf801af10>
 801af54:	00bfffc4 	movi	r2,-1
 801af58:	f800283a 	ret
 801af5c:	123feb16 	blt	r2,r8,801af0c <__alt_data_end+0xf801af0c>
 801af60:	1abff336 	bltu	r3,r10,801af30 <__alt_data_end+0xf801af30>
 801af64:	50c00326 	beq	r10,r3,801af74 <__ledf2+0xe4>
 801af68:	50c0042e 	bgeu	r10,r3,801af7c <__ledf2+0xec>
 801af6c:	283fe81e 	bne	r5,zero,801af10 <__alt_data_end+0xf801af10>
 801af70:	003ff806 	br	801af54 <__alt_data_end+0xf801af54>
 801af74:	313fee36 	bltu	r6,r4,801af30 <__alt_data_end+0xf801af30>
 801af78:	21bffc36 	bltu	r4,r6,801af6c <__alt_data_end+0xf801af6c>
 801af7c:	0005883a 	mov	r2,zero
 801af80:	f800283a 	ret

0801af84 <__muldf3>:
 801af84:	defff304 	addi	sp,sp,-52
 801af88:	2804d53a 	srli	r2,r5,20
 801af8c:	dd800915 	stw	r22,36(sp)
 801af90:	282cd7fa 	srli	r22,r5,31
 801af94:	dc000315 	stw	r16,12(sp)
 801af98:	04000434 	movhi	r16,16
 801af9c:	dd400815 	stw	r21,32(sp)
 801afa0:	dc800515 	stw	r18,20(sp)
 801afa4:	843fffc4 	addi	r16,r16,-1
 801afa8:	dfc00c15 	stw	ra,48(sp)
 801afac:	df000b15 	stw	fp,44(sp)
 801afb0:	ddc00a15 	stw	r23,40(sp)
 801afb4:	dd000715 	stw	r20,28(sp)
 801afb8:	dcc00615 	stw	r19,24(sp)
 801afbc:	dc400415 	stw	r17,16(sp)
 801afc0:	1481ffcc 	andi	r18,r2,2047
 801afc4:	2c20703a 	and	r16,r5,r16
 801afc8:	b02b883a 	mov	r21,r22
 801afcc:	b2403fcc 	andi	r9,r22,255
 801afd0:	90006026 	beq	r18,zero,801b154 <__muldf3+0x1d0>
 801afd4:	0081ffc4 	movi	r2,2047
 801afd8:	2029883a 	mov	r20,r4
 801afdc:	90803626 	beq	r18,r2,801b0b8 <__muldf3+0x134>
 801afe0:	80800434 	orhi	r2,r16,16
 801afe4:	100490fa 	slli	r2,r2,3
 801afe8:	2020d77a 	srli	r16,r4,29
 801afec:	202890fa 	slli	r20,r4,3
 801aff0:	94bf0044 	addi	r18,r18,-1023
 801aff4:	80a0b03a 	or	r16,r16,r2
 801aff8:	0027883a 	mov	r19,zero
 801affc:	0039883a 	mov	fp,zero
 801b000:	3804d53a 	srli	r2,r7,20
 801b004:	382ed7fa 	srli	r23,r7,31
 801b008:	04400434 	movhi	r17,16
 801b00c:	8c7fffc4 	addi	r17,r17,-1
 801b010:	1081ffcc 	andi	r2,r2,2047
 801b014:	3011883a 	mov	r8,r6
 801b018:	3c62703a 	and	r17,r7,r17
 801b01c:	ba803fcc 	andi	r10,r23,255
 801b020:	10006d26 	beq	r2,zero,801b1d8 <__muldf3+0x254>
 801b024:	00c1ffc4 	movi	r3,2047
 801b028:	10c06526 	beq	r2,r3,801b1c0 <__muldf3+0x23c>
 801b02c:	88c00434 	orhi	r3,r17,16
 801b030:	180690fa 	slli	r3,r3,3
 801b034:	3022d77a 	srli	r17,r6,29
 801b038:	301090fa 	slli	r8,r6,3
 801b03c:	10bf0044 	addi	r2,r2,-1023
 801b040:	88e2b03a 	or	r17,r17,r3
 801b044:	000b883a 	mov	r5,zero
 801b048:	9085883a 	add	r2,r18,r2
 801b04c:	2cc8b03a 	or	r4,r5,r19
 801b050:	00c003c4 	movi	r3,15
 801b054:	bdacf03a 	xor	r22,r23,r22
 801b058:	12c00044 	addi	r11,r2,1
 801b05c:	19009936 	bltu	r3,r4,801b2c4 <__muldf3+0x340>
 801b060:	200890ba 	slli	r4,r4,2
 801b064:	00c200b4 	movhi	r3,2050
 801b068:	18ec1e04 	addi	r3,r3,-20360
 801b06c:	20c9883a 	add	r4,r4,r3
 801b070:	20c00017 	ldw	r3,0(r4)
 801b074:	1800683a 	jmp	r3
 801b078:	0801b2c4 	addi	zero,at,1739
 801b07c:	0801b0d8 	cmpnei	zero,at,1731
 801b080:	0801b0d8 	cmpnei	zero,at,1731
 801b084:	0801b0d4 	ori	zero,at,1731
 801b088:	0801b2a0 	cmpeqi	zero,at,1738
 801b08c:	0801b2a0 	cmpeqi	zero,at,1738
 801b090:	0801b288 	cmpgei	zero,at,1738
 801b094:	0801b0d4 	ori	zero,at,1731
 801b098:	0801b2a0 	cmpeqi	zero,at,1738
 801b09c:	0801b288 	cmpgei	zero,at,1738
 801b0a0:	0801b2a0 	cmpeqi	zero,at,1738
 801b0a4:	0801b0d4 	ori	zero,at,1731
 801b0a8:	0801b2b0 	cmpltui	zero,at,1738
 801b0ac:	0801b2b0 	cmpltui	zero,at,1738
 801b0b0:	0801b2b0 	cmpltui	zero,at,1738
 801b0b4:	0801b4cc 	andi	zero,at,1747
 801b0b8:	2404b03a 	or	r2,r4,r16
 801b0bc:	10006f1e 	bne	r2,zero,801b27c <__muldf3+0x2f8>
 801b0c0:	04c00204 	movi	r19,8
 801b0c4:	0021883a 	mov	r16,zero
 801b0c8:	0029883a 	mov	r20,zero
 801b0cc:	07000084 	movi	fp,2
 801b0d0:	003fcb06 	br	801b000 <__alt_data_end+0xf801b000>
 801b0d4:	502d883a 	mov	r22,r10
 801b0d8:	00800084 	movi	r2,2
 801b0dc:	28805726 	beq	r5,r2,801b23c <__muldf3+0x2b8>
 801b0e0:	008000c4 	movi	r2,3
 801b0e4:	28816626 	beq	r5,r2,801b680 <__muldf3+0x6fc>
 801b0e8:	00800044 	movi	r2,1
 801b0ec:	2881411e 	bne	r5,r2,801b5f4 <__muldf3+0x670>
 801b0f0:	b02b883a 	mov	r21,r22
 801b0f4:	0005883a 	mov	r2,zero
 801b0f8:	000b883a 	mov	r5,zero
 801b0fc:	0029883a 	mov	r20,zero
 801b100:	1004953a 	slli	r2,r2,20
 801b104:	a8c03fcc 	andi	r3,r21,255
 801b108:	04400434 	movhi	r17,16
 801b10c:	8c7fffc4 	addi	r17,r17,-1
 801b110:	180697fa 	slli	r3,r3,31
 801b114:	2c4a703a 	and	r5,r5,r17
 801b118:	288ab03a 	or	r5,r5,r2
 801b11c:	28c6b03a 	or	r3,r5,r3
 801b120:	a005883a 	mov	r2,r20
 801b124:	dfc00c17 	ldw	ra,48(sp)
 801b128:	df000b17 	ldw	fp,44(sp)
 801b12c:	ddc00a17 	ldw	r23,40(sp)
 801b130:	dd800917 	ldw	r22,36(sp)
 801b134:	dd400817 	ldw	r21,32(sp)
 801b138:	dd000717 	ldw	r20,28(sp)
 801b13c:	dcc00617 	ldw	r19,24(sp)
 801b140:	dc800517 	ldw	r18,20(sp)
 801b144:	dc400417 	ldw	r17,16(sp)
 801b148:	dc000317 	ldw	r16,12(sp)
 801b14c:	dec00d04 	addi	sp,sp,52
 801b150:	f800283a 	ret
 801b154:	2404b03a 	or	r2,r4,r16
 801b158:	2027883a 	mov	r19,r4
 801b15c:	10004226 	beq	r2,zero,801b268 <__muldf3+0x2e4>
 801b160:	8000fc26 	beq	r16,zero,801b554 <__muldf3+0x5d0>
 801b164:	8009883a 	mov	r4,r16
 801b168:	d9800215 	stw	r6,8(sp)
 801b16c:	d9c00015 	stw	r7,0(sp)
 801b170:	da400115 	stw	r9,4(sp)
 801b174:	801c3440 	call	801c344 <__clzsi2>
 801b178:	d9800217 	ldw	r6,8(sp)
 801b17c:	d9c00017 	ldw	r7,0(sp)
 801b180:	da400117 	ldw	r9,4(sp)
 801b184:	113ffd44 	addi	r4,r2,-11
 801b188:	00c00704 	movi	r3,28
 801b18c:	1900ed16 	blt	r3,r4,801b544 <__muldf3+0x5c0>
 801b190:	00c00744 	movi	r3,29
 801b194:	147ffe04 	addi	r17,r2,-8
 801b198:	1907c83a 	sub	r3,r3,r4
 801b19c:	8460983a 	sll	r16,r16,r17
 801b1a0:	98c6d83a 	srl	r3,r19,r3
 801b1a4:	9c68983a 	sll	r20,r19,r17
 801b1a8:	1c20b03a 	or	r16,r3,r16
 801b1ac:	1080fcc4 	addi	r2,r2,1011
 801b1b0:	00a5c83a 	sub	r18,zero,r2
 801b1b4:	0027883a 	mov	r19,zero
 801b1b8:	0039883a 	mov	fp,zero
 801b1bc:	003f9006 	br	801b000 <__alt_data_end+0xf801b000>
 801b1c0:	3446b03a 	or	r3,r6,r17
 801b1c4:	1800261e 	bne	r3,zero,801b260 <__muldf3+0x2dc>
 801b1c8:	0023883a 	mov	r17,zero
 801b1cc:	0011883a 	mov	r8,zero
 801b1d0:	01400084 	movi	r5,2
 801b1d4:	003f9c06 	br	801b048 <__alt_data_end+0xf801b048>
 801b1d8:	3446b03a 	or	r3,r6,r17
 801b1dc:	18001c26 	beq	r3,zero,801b250 <__muldf3+0x2cc>
 801b1e0:	8800ce26 	beq	r17,zero,801b51c <__muldf3+0x598>
 801b1e4:	8809883a 	mov	r4,r17
 801b1e8:	d9800215 	stw	r6,8(sp)
 801b1ec:	da400115 	stw	r9,4(sp)
 801b1f0:	da800015 	stw	r10,0(sp)
 801b1f4:	801c3440 	call	801c344 <__clzsi2>
 801b1f8:	d9800217 	ldw	r6,8(sp)
 801b1fc:	da400117 	ldw	r9,4(sp)
 801b200:	da800017 	ldw	r10,0(sp)
 801b204:	113ffd44 	addi	r4,r2,-11
 801b208:	00c00704 	movi	r3,28
 801b20c:	1900bf16 	blt	r3,r4,801b50c <__muldf3+0x588>
 801b210:	00c00744 	movi	r3,29
 801b214:	123ffe04 	addi	r8,r2,-8
 801b218:	1907c83a 	sub	r3,r3,r4
 801b21c:	8a22983a 	sll	r17,r17,r8
 801b220:	30c6d83a 	srl	r3,r6,r3
 801b224:	3210983a 	sll	r8,r6,r8
 801b228:	1c62b03a 	or	r17,r3,r17
 801b22c:	1080fcc4 	addi	r2,r2,1011
 801b230:	0085c83a 	sub	r2,zero,r2
 801b234:	000b883a 	mov	r5,zero
 801b238:	003f8306 	br	801b048 <__alt_data_end+0xf801b048>
 801b23c:	b02b883a 	mov	r21,r22
 801b240:	0081ffc4 	movi	r2,2047
 801b244:	000b883a 	mov	r5,zero
 801b248:	0029883a 	mov	r20,zero
 801b24c:	003fac06 	br	801b100 <__alt_data_end+0xf801b100>
 801b250:	0023883a 	mov	r17,zero
 801b254:	0011883a 	mov	r8,zero
 801b258:	01400044 	movi	r5,1
 801b25c:	003f7a06 	br	801b048 <__alt_data_end+0xf801b048>
 801b260:	014000c4 	movi	r5,3
 801b264:	003f7806 	br	801b048 <__alt_data_end+0xf801b048>
 801b268:	04c00104 	movi	r19,4
 801b26c:	0021883a 	mov	r16,zero
 801b270:	0029883a 	mov	r20,zero
 801b274:	07000044 	movi	fp,1
 801b278:	003f6106 	br	801b000 <__alt_data_end+0xf801b000>
 801b27c:	04c00304 	movi	r19,12
 801b280:	070000c4 	movi	fp,3
 801b284:	003f5e06 	br	801b000 <__alt_data_end+0xf801b000>
 801b288:	01400434 	movhi	r5,16
 801b28c:	002b883a 	mov	r21,zero
 801b290:	297fffc4 	addi	r5,r5,-1
 801b294:	053fffc4 	movi	r20,-1
 801b298:	0081ffc4 	movi	r2,2047
 801b29c:	003f9806 	br	801b100 <__alt_data_end+0xf801b100>
 801b2a0:	8023883a 	mov	r17,r16
 801b2a4:	a011883a 	mov	r8,r20
 801b2a8:	e00b883a 	mov	r5,fp
 801b2ac:	003f8a06 	br	801b0d8 <__alt_data_end+0xf801b0d8>
 801b2b0:	8023883a 	mov	r17,r16
 801b2b4:	a011883a 	mov	r8,r20
 801b2b8:	482d883a 	mov	r22,r9
 801b2bc:	e00b883a 	mov	r5,fp
 801b2c0:	003f8506 	br	801b0d8 <__alt_data_end+0xf801b0d8>
 801b2c4:	a00ad43a 	srli	r5,r20,16
 801b2c8:	401ad43a 	srli	r13,r8,16
 801b2cc:	a53fffcc 	andi	r20,r20,65535
 801b2d0:	423fffcc 	andi	r8,r8,65535
 801b2d4:	4519383a 	mul	r12,r8,r20
 801b2d8:	4147383a 	mul	r3,r8,r5
 801b2dc:	6d09383a 	mul	r4,r13,r20
 801b2e0:	600cd43a 	srli	r6,r12,16
 801b2e4:	2b5d383a 	mul	r14,r5,r13
 801b2e8:	20c9883a 	add	r4,r4,r3
 801b2ec:	310d883a 	add	r6,r6,r4
 801b2f0:	30c0022e 	bgeu	r6,r3,801b2fc <__muldf3+0x378>
 801b2f4:	00c00074 	movhi	r3,1
 801b2f8:	70dd883a 	add	r14,r14,r3
 801b2fc:	8826d43a 	srli	r19,r17,16
 801b300:	8bffffcc 	andi	r15,r17,65535
 801b304:	7d23383a 	mul	r17,r15,r20
 801b308:	7949383a 	mul	r4,r15,r5
 801b30c:	9d29383a 	mul	r20,r19,r20
 801b310:	8814d43a 	srli	r10,r17,16
 801b314:	3012943a 	slli	r9,r6,16
 801b318:	a129883a 	add	r20,r20,r4
 801b31c:	633fffcc 	andi	r12,r12,65535
 801b320:	5515883a 	add	r10,r10,r20
 801b324:	3006d43a 	srli	r3,r6,16
 801b328:	4b13883a 	add	r9,r9,r12
 801b32c:	2ccb383a 	mul	r5,r5,r19
 801b330:	5100022e 	bgeu	r10,r4,801b33c <__muldf3+0x3b8>
 801b334:	01000074 	movhi	r4,1
 801b338:	290b883a 	add	r5,r5,r4
 801b33c:	802ad43a 	srli	r21,r16,16
 801b340:	843fffcc 	andi	r16,r16,65535
 801b344:	440d383a 	mul	r6,r8,r16
 801b348:	4565383a 	mul	r18,r8,r21
 801b34c:	8349383a 	mul	r4,r16,r13
 801b350:	500e943a 	slli	r7,r10,16
 801b354:	3010d43a 	srli	r8,r6,16
 801b358:	5028d43a 	srli	r20,r10,16
 801b35c:	2489883a 	add	r4,r4,r18
 801b360:	8abfffcc 	andi	r10,r17,65535
 801b364:	3a95883a 	add	r10,r7,r10
 801b368:	4119883a 	add	r12,r8,r4
 801b36c:	a169883a 	add	r20,r20,r5
 801b370:	1a87883a 	add	r3,r3,r10
 801b374:	6d5b383a 	mul	r13,r13,r21
 801b378:	6480022e 	bgeu	r12,r18,801b384 <__muldf3+0x400>
 801b37c:	01000074 	movhi	r4,1
 801b380:	691b883a 	add	r13,r13,r4
 801b384:	7c25383a 	mul	r18,r15,r16
 801b388:	7d4b383a 	mul	r5,r15,r21
 801b38c:	84cf383a 	mul	r7,r16,r19
 801b390:	901ed43a 	srli	r15,r18,16
 801b394:	6008d43a 	srli	r4,r12,16
 801b398:	6010943a 	slli	r8,r12,16
 801b39c:	394f883a 	add	r7,r7,r5
 801b3a0:	333fffcc 	andi	r12,r6,65535
 801b3a4:	79df883a 	add	r15,r15,r7
 801b3a8:	235b883a 	add	r13,r4,r13
 801b3ac:	9d63383a 	mul	r17,r19,r21
 801b3b0:	4309883a 	add	r4,r8,r12
 801b3b4:	7940022e 	bgeu	r15,r5,801b3c0 <__muldf3+0x43c>
 801b3b8:	01400074 	movhi	r5,1
 801b3bc:	8963883a 	add	r17,r17,r5
 801b3c0:	780a943a 	slli	r5,r15,16
 801b3c4:	91bfffcc 	andi	r6,r18,65535
 801b3c8:	70c7883a 	add	r3,r14,r3
 801b3cc:	298d883a 	add	r6,r5,r6
 801b3d0:	1a8f803a 	cmpltu	r7,r3,r10
 801b3d4:	350b883a 	add	r5,r6,r20
 801b3d8:	20c7883a 	add	r3,r4,r3
 801b3dc:	3955883a 	add	r10,r7,r5
 801b3e0:	1909803a 	cmpltu	r4,r3,r4
 801b3e4:	6a91883a 	add	r8,r13,r10
 801b3e8:	780cd43a 	srli	r6,r15,16
 801b3ec:	2219883a 	add	r12,r4,r8
 801b3f0:	2d0b803a 	cmpltu	r5,r5,r20
 801b3f4:	51cf803a 	cmpltu	r7,r10,r7
 801b3f8:	29ceb03a 	or	r7,r5,r7
 801b3fc:	4351803a 	cmpltu	r8,r8,r13
 801b400:	610b803a 	cmpltu	r5,r12,r4
 801b404:	4148b03a 	or	r4,r8,r5
 801b408:	398f883a 	add	r7,r7,r6
 801b40c:	3909883a 	add	r4,r7,r4
 801b410:	1810927a 	slli	r8,r3,9
 801b414:	2449883a 	add	r4,r4,r17
 801b418:	2008927a 	slli	r4,r4,9
 801b41c:	6022d5fa 	srli	r17,r12,23
 801b420:	1806d5fa 	srli	r3,r3,23
 801b424:	4252b03a 	or	r9,r8,r9
 801b428:	600a927a 	slli	r5,r12,9
 801b42c:	4810c03a 	cmpne	r8,r9,zero
 801b430:	2462b03a 	or	r17,r4,r17
 801b434:	40c6b03a 	or	r3,r8,r3
 801b438:	8900402c 	andhi	r4,r17,256
 801b43c:	1950b03a 	or	r8,r3,r5
 801b440:	20000726 	beq	r4,zero,801b460 <__muldf3+0x4dc>
 801b444:	4006d07a 	srli	r3,r8,1
 801b448:	880497fa 	slli	r2,r17,31
 801b44c:	4200004c 	andi	r8,r8,1
 801b450:	8822d07a 	srli	r17,r17,1
 801b454:	1a10b03a 	or	r8,r3,r8
 801b458:	1210b03a 	or	r8,r2,r8
 801b45c:	5805883a 	mov	r2,r11
 801b460:	1140ffc4 	addi	r5,r2,1023
 801b464:	0140440e 	bge	zero,r5,801b578 <__muldf3+0x5f4>
 801b468:	40c001cc 	andi	r3,r8,7
 801b46c:	18000726 	beq	r3,zero,801b48c <__muldf3+0x508>
 801b470:	40c003cc 	andi	r3,r8,15
 801b474:	01000104 	movi	r4,4
 801b478:	19000426 	beq	r3,r4,801b48c <__muldf3+0x508>
 801b47c:	4107883a 	add	r3,r8,r4
 801b480:	1a11803a 	cmpltu	r8,r3,r8
 801b484:	8a23883a 	add	r17,r17,r8
 801b488:	1811883a 	mov	r8,r3
 801b48c:	88c0402c 	andhi	r3,r17,256
 801b490:	18000426 	beq	r3,zero,801b4a4 <__muldf3+0x520>
 801b494:	11410004 	addi	r5,r2,1024
 801b498:	00bfc034 	movhi	r2,65280
 801b49c:	10bfffc4 	addi	r2,r2,-1
 801b4a0:	88a2703a 	and	r17,r17,r2
 801b4a4:	0081ff84 	movi	r2,2046
 801b4a8:	117f6416 	blt	r2,r5,801b23c <__alt_data_end+0xf801b23c>
 801b4ac:	8828977a 	slli	r20,r17,29
 801b4b0:	4010d0fa 	srli	r8,r8,3
 801b4b4:	8822927a 	slli	r17,r17,9
 801b4b8:	2881ffcc 	andi	r2,r5,2047
 801b4bc:	a228b03a 	or	r20,r20,r8
 801b4c0:	880ad33a 	srli	r5,r17,12
 801b4c4:	b02b883a 	mov	r21,r22
 801b4c8:	003f0d06 	br	801b100 <__alt_data_end+0xf801b100>
 801b4cc:	8080022c 	andhi	r2,r16,8
 801b4d0:	10000926 	beq	r2,zero,801b4f8 <__muldf3+0x574>
 801b4d4:	8880022c 	andhi	r2,r17,8
 801b4d8:	1000071e 	bne	r2,zero,801b4f8 <__muldf3+0x574>
 801b4dc:	00800434 	movhi	r2,16
 801b4e0:	89400234 	orhi	r5,r17,8
 801b4e4:	10bfffc4 	addi	r2,r2,-1
 801b4e8:	b82b883a 	mov	r21,r23
 801b4ec:	288a703a 	and	r5,r5,r2
 801b4f0:	4029883a 	mov	r20,r8
 801b4f4:	003f6806 	br	801b298 <__alt_data_end+0xf801b298>
 801b4f8:	00800434 	movhi	r2,16
 801b4fc:	81400234 	orhi	r5,r16,8
 801b500:	10bfffc4 	addi	r2,r2,-1
 801b504:	288a703a 	and	r5,r5,r2
 801b508:	003f6306 	br	801b298 <__alt_data_end+0xf801b298>
 801b50c:	147ff604 	addi	r17,r2,-40
 801b510:	3462983a 	sll	r17,r6,r17
 801b514:	0011883a 	mov	r8,zero
 801b518:	003f4406 	br	801b22c <__alt_data_end+0xf801b22c>
 801b51c:	3009883a 	mov	r4,r6
 801b520:	d9800215 	stw	r6,8(sp)
 801b524:	da400115 	stw	r9,4(sp)
 801b528:	da800015 	stw	r10,0(sp)
 801b52c:	801c3440 	call	801c344 <__clzsi2>
 801b530:	10800804 	addi	r2,r2,32
 801b534:	da800017 	ldw	r10,0(sp)
 801b538:	da400117 	ldw	r9,4(sp)
 801b53c:	d9800217 	ldw	r6,8(sp)
 801b540:	003f3006 	br	801b204 <__alt_data_end+0xf801b204>
 801b544:	143ff604 	addi	r16,r2,-40
 801b548:	9c20983a 	sll	r16,r19,r16
 801b54c:	0029883a 	mov	r20,zero
 801b550:	003f1606 	br	801b1ac <__alt_data_end+0xf801b1ac>
 801b554:	d9800215 	stw	r6,8(sp)
 801b558:	d9c00015 	stw	r7,0(sp)
 801b55c:	da400115 	stw	r9,4(sp)
 801b560:	801c3440 	call	801c344 <__clzsi2>
 801b564:	10800804 	addi	r2,r2,32
 801b568:	da400117 	ldw	r9,4(sp)
 801b56c:	d9c00017 	ldw	r7,0(sp)
 801b570:	d9800217 	ldw	r6,8(sp)
 801b574:	003f0306 	br	801b184 <__alt_data_end+0xf801b184>
 801b578:	00c00044 	movi	r3,1
 801b57c:	1947c83a 	sub	r3,r3,r5
 801b580:	00800e04 	movi	r2,56
 801b584:	10feda16 	blt	r2,r3,801b0f0 <__alt_data_end+0xf801b0f0>
 801b588:	008007c4 	movi	r2,31
 801b58c:	10c01b16 	blt	r2,r3,801b5fc <__muldf3+0x678>
 801b590:	00800804 	movi	r2,32
 801b594:	10c5c83a 	sub	r2,r2,r3
 801b598:	888a983a 	sll	r5,r17,r2
 801b59c:	40c8d83a 	srl	r4,r8,r3
 801b5a0:	4084983a 	sll	r2,r8,r2
 801b5a4:	88e2d83a 	srl	r17,r17,r3
 801b5a8:	2906b03a 	or	r3,r5,r4
 801b5ac:	1004c03a 	cmpne	r2,r2,zero
 801b5b0:	1886b03a 	or	r3,r3,r2
 801b5b4:	188001cc 	andi	r2,r3,7
 801b5b8:	10000726 	beq	r2,zero,801b5d8 <__muldf3+0x654>
 801b5bc:	188003cc 	andi	r2,r3,15
 801b5c0:	01000104 	movi	r4,4
 801b5c4:	11000426 	beq	r2,r4,801b5d8 <__muldf3+0x654>
 801b5c8:	1805883a 	mov	r2,r3
 801b5cc:	10c00104 	addi	r3,r2,4
 801b5d0:	1885803a 	cmpltu	r2,r3,r2
 801b5d4:	88a3883a 	add	r17,r17,r2
 801b5d8:	8880202c 	andhi	r2,r17,128
 801b5dc:	10001c26 	beq	r2,zero,801b650 <__muldf3+0x6cc>
 801b5e0:	b02b883a 	mov	r21,r22
 801b5e4:	00800044 	movi	r2,1
 801b5e8:	000b883a 	mov	r5,zero
 801b5ec:	0029883a 	mov	r20,zero
 801b5f0:	003ec306 	br	801b100 <__alt_data_end+0xf801b100>
 801b5f4:	5805883a 	mov	r2,r11
 801b5f8:	003f9906 	br	801b460 <__alt_data_end+0xf801b460>
 801b5fc:	00bff844 	movi	r2,-31
 801b600:	1145c83a 	sub	r2,r2,r5
 801b604:	8888d83a 	srl	r4,r17,r2
 801b608:	00800804 	movi	r2,32
 801b60c:	18801a26 	beq	r3,r2,801b678 <__muldf3+0x6f4>
 801b610:	00801004 	movi	r2,64
 801b614:	10c5c83a 	sub	r2,r2,r3
 801b618:	8884983a 	sll	r2,r17,r2
 801b61c:	1204b03a 	or	r2,r2,r8
 801b620:	1004c03a 	cmpne	r2,r2,zero
 801b624:	2084b03a 	or	r2,r4,r2
 801b628:	144001cc 	andi	r17,r2,7
 801b62c:	88000d1e 	bne	r17,zero,801b664 <__muldf3+0x6e0>
 801b630:	000b883a 	mov	r5,zero
 801b634:	1028d0fa 	srli	r20,r2,3
 801b638:	b02b883a 	mov	r21,r22
 801b63c:	0005883a 	mov	r2,zero
 801b640:	a468b03a 	or	r20,r20,r17
 801b644:	003eae06 	br	801b100 <__alt_data_end+0xf801b100>
 801b648:	1007883a 	mov	r3,r2
 801b64c:	0023883a 	mov	r17,zero
 801b650:	880a927a 	slli	r5,r17,9
 801b654:	1805883a 	mov	r2,r3
 801b658:	8822977a 	slli	r17,r17,29
 801b65c:	280ad33a 	srli	r5,r5,12
 801b660:	003ff406 	br	801b634 <__alt_data_end+0xf801b634>
 801b664:	10c003cc 	andi	r3,r2,15
 801b668:	01000104 	movi	r4,4
 801b66c:	193ff626 	beq	r3,r4,801b648 <__alt_data_end+0xf801b648>
 801b670:	0023883a 	mov	r17,zero
 801b674:	003fd506 	br	801b5cc <__alt_data_end+0xf801b5cc>
 801b678:	0005883a 	mov	r2,zero
 801b67c:	003fe706 	br	801b61c <__alt_data_end+0xf801b61c>
 801b680:	00800434 	movhi	r2,16
 801b684:	89400234 	orhi	r5,r17,8
 801b688:	10bfffc4 	addi	r2,r2,-1
 801b68c:	b02b883a 	mov	r21,r22
 801b690:	288a703a 	and	r5,r5,r2
 801b694:	4029883a 	mov	r20,r8
 801b698:	003eff06 	br	801b298 <__alt_data_end+0xf801b298>

0801b69c <__subdf3>:
 801b69c:	02000434 	movhi	r8,16
 801b6a0:	423fffc4 	addi	r8,r8,-1
 801b6a4:	defffb04 	addi	sp,sp,-20
 801b6a8:	2a14703a 	and	r10,r5,r8
 801b6ac:	3812d53a 	srli	r9,r7,20
 801b6b0:	3a10703a 	and	r8,r7,r8
 801b6b4:	2006d77a 	srli	r3,r4,29
 801b6b8:	3004d77a 	srli	r2,r6,29
 801b6bc:	dc000015 	stw	r16,0(sp)
 801b6c0:	501490fa 	slli	r10,r10,3
 801b6c4:	2820d53a 	srli	r16,r5,20
 801b6c8:	401090fa 	slli	r8,r8,3
 801b6cc:	dc800215 	stw	r18,8(sp)
 801b6d0:	dc400115 	stw	r17,4(sp)
 801b6d4:	dfc00415 	stw	ra,16(sp)
 801b6d8:	202290fa 	slli	r17,r4,3
 801b6dc:	dcc00315 	stw	r19,12(sp)
 801b6e0:	4a41ffcc 	andi	r9,r9,2047
 801b6e4:	0101ffc4 	movi	r4,2047
 801b6e8:	2824d7fa 	srli	r18,r5,31
 801b6ec:	8401ffcc 	andi	r16,r16,2047
 801b6f0:	50c6b03a 	or	r3,r10,r3
 801b6f4:	380ed7fa 	srli	r7,r7,31
 801b6f8:	408ab03a 	or	r5,r8,r2
 801b6fc:	300c90fa 	slli	r6,r6,3
 801b700:	49009626 	beq	r9,r4,801b95c <__subdf3+0x2c0>
 801b704:	39c0005c 	xori	r7,r7,1
 801b708:	8245c83a 	sub	r2,r16,r9
 801b70c:	3c807426 	beq	r7,r18,801b8e0 <__subdf3+0x244>
 801b710:	0080af0e 	bge	zero,r2,801b9d0 <__subdf3+0x334>
 801b714:	48002a1e 	bne	r9,zero,801b7c0 <__subdf3+0x124>
 801b718:	2988b03a 	or	r4,r5,r6
 801b71c:	20009a1e 	bne	r4,zero,801b988 <__subdf3+0x2ec>
 801b720:	888001cc 	andi	r2,r17,7
 801b724:	10000726 	beq	r2,zero,801b744 <__subdf3+0xa8>
 801b728:	888003cc 	andi	r2,r17,15
 801b72c:	01000104 	movi	r4,4
 801b730:	11000426 	beq	r2,r4,801b744 <__subdf3+0xa8>
 801b734:	890b883a 	add	r5,r17,r4
 801b738:	2c63803a 	cmpltu	r17,r5,r17
 801b73c:	1c47883a 	add	r3,r3,r17
 801b740:	2823883a 	mov	r17,r5
 801b744:	1880202c 	andhi	r2,r3,128
 801b748:	10005926 	beq	r2,zero,801b8b0 <__subdf3+0x214>
 801b74c:	84000044 	addi	r16,r16,1
 801b750:	0081ffc4 	movi	r2,2047
 801b754:	8080be26 	beq	r16,r2,801ba50 <__subdf3+0x3b4>
 801b758:	017fe034 	movhi	r5,65408
 801b75c:	297fffc4 	addi	r5,r5,-1
 801b760:	1946703a 	and	r3,r3,r5
 801b764:	1804977a 	slli	r2,r3,29
 801b768:	1806927a 	slli	r3,r3,9
 801b76c:	8822d0fa 	srli	r17,r17,3
 801b770:	8401ffcc 	andi	r16,r16,2047
 801b774:	180ad33a 	srli	r5,r3,12
 801b778:	9100004c 	andi	r4,r18,1
 801b77c:	1444b03a 	or	r2,r2,r17
 801b780:	80c1ffcc 	andi	r3,r16,2047
 801b784:	1820953a 	slli	r16,r3,20
 801b788:	20c03fcc 	andi	r3,r4,255
 801b78c:	180897fa 	slli	r4,r3,31
 801b790:	00c00434 	movhi	r3,16
 801b794:	18ffffc4 	addi	r3,r3,-1
 801b798:	28c6703a 	and	r3,r5,r3
 801b79c:	1c06b03a 	or	r3,r3,r16
 801b7a0:	1906b03a 	or	r3,r3,r4
 801b7a4:	dfc00417 	ldw	ra,16(sp)
 801b7a8:	dcc00317 	ldw	r19,12(sp)
 801b7ac:	dc800217 	ldw	r18,8(sp)
 801b7b0:	dc400117 	ldw	r17,4(sp)
 801b7b4:	dc000017 	ldw	r16,0(sp)
 801b7b8:	dec00504 	addi	sp,sp,20
 801b7bc:	f800283a 	ret
 801b7c0:	0101ffc4 	movi	r4,2047
 801b7c4:	813fd626 	beq	r16,r4,801b720 <__alt_data_end+0xf801b720>
 801b7c8:	29402034 	orhi	r5,r5,128
 801b7cc:	01000e04 	movi	r4,56
 801b7d0:	2080a316 	blt	r4,r2,801ba60 <__subdf3+0x3c4>
 801b7d4:	010007c4 	movi	r4,31
 801b7d8:	2080c616 	blt	r4,r2,801baf4 <__subdf3+0x458>
 801b7dc:	01000804 	movi	r4,32
 801b7e0:	2089c83a 	sub	r4,r4,r2
 801b7e4:	2910983a 	sll	r8,r5,r4
 801b7e8:	308ed83a 	srl	r7,r6,r2
 801b7ec:	3108983a 	sll	r4,r6,r4
 801b7f0:	2884d83a 	srl	r2,r5,r2
 801b7f4:	41ccb03a 	or	r6,r8,r7
 801b7f8:	2008c03a 	cmpne	r4,r4,zero
 801b7fc:	310cb03a 	or	r6,r6,r4
 801b800:	898dc83a 	sub	r6,r17,r6
 801b804:	89a3803a 	cmpltu	r17,r17,r6
 801b808:	1887c83a 	sub	r3,r3,r2
 801b80c:	1c47c83a 	sub	r3,r3,r17
 801b810:	3023883a 	mov	r17,r6
 801b814:	1880202c 	andhi	r2,r3,128
 801b818:	10002326 	beq	r2,zero,801b8a8 <__subdf3+0x20c>
 801b81c:	04c02034 	movhi	r19,128
 801b820:	9cffffc4 	addi	r19,r19,-1
 801b824:	1ce6703a 	and	r19,r3,r19
 801b828:	98007a26 	beq	r19,zero,801ba14 <__subdf3+0x378>
 801b82c:	9809883a 	mov	r4,r19
 801b830:	801c3440 	call	801c344 <__clzsi2>
 801b834:	113ffe04 	addi	r4,r2,-8
 801b838:	00c007c4 	movi	r3,31
 801b83c:	19007b16 	blt	r3,r4,801ba2c <__subdf3+0x390>
 801b840:	00800804 	movi	r2,32
 801b844:	1105c83a 	sub	r2,r2,r4
 801b848:	8884d83a 	srl	r2,r17,r2
 801b84c:	9906983a 	sll	r3,r19,r4
 801b850:	8922983a 	sll	r17,r17,r4
 801b854:	10c4b03a 	or	r2,r2,r3
 801b858:	24007816 	blt	r4,r16,801ba3c <__subdf3+0x3a0>
 801b85c:	2421c83a 	sub	r16,r4,r16
 801b860:	80c00044 	addi	r3,r16,1
 801b864:	010007c4 	movi	r4,31
 801b868:	20c09516 	blt	r4,r3,801bac0 <__subdf3+0x424>
 801b86c:	01400804 	movi	r5,32
 801b870:	28cbc83a 	sub	r5,r5,r3
 801b874:	88c8d83a 	srl	r4,r17,r3
 801b878:	8962983a 	sll	r17,r17,r5
 801b87c:	114a983a 	sll	r5,r2,r5
 801b880:	10c6d83a 	srl	r3,r2,r3
 801b884:	8804c03a 	cmpne	r2,r17,zero
 801b888:	290ab03a 	or	r5,r5,r4
 801b88c:	28a2b03a 	or	r17,r5,r2
 801b890:	0021883a 	mov	r16,zero
 801b894:	003fa206 	br	801b720 <__alt_data_end+0xf801b720>
 801b898:	2090b03a 	or	r8,r4,r2
 801b89c:	40018e26 	beq	r8,zero,801bed8 <__subdf3+0x83c>
 801b8a0:	1007883a 	mov	r3,r2
 801b8a4:	2023883a 	mov	r17,r4
 801b8a8:	888001cc 	andi	r2,r17,7
 801b8ac:	103f9e1e 	bne	r2,zero,801b728 <__alt_data_end+0xf801b728>
 801b8b0:	1804977a 	slli	r2,r3,29
 801b8b4:	8822d0fa 	srli	r17,r17,3
 801b8b8:	1810d0fa 	srli	r8,r3,3
 801b8bc:	9100004c 	andi	r4,r18,1
 801b8c0:	1444b03a 	or	r2,r2,r17
 801b8c4:	00c1ffc4 	movi	r3,2047
 801b8c8:	80c02826 	beq	r16,r3,801b96c <__subdf3+0x2d0>
 801b8cc:	01400434 	movhi	r5,16
 801b8d0:	297fffc4 	addi	r5,r5,-1
 801b8d4:	80e0703a 	and	r16,r16,r3
 801b8d8:	414a703a 	and	r5,r8,r5
 801b8dc:	003fa806 	br	801b780 <__alt_data_end+0xf801b780>
 801b8e0:	0080630e 	bge	zero,r2,801ba70 <__subdf3+0x3d4>
 801b8e4:	48003026 	beq	r9,zero,801b9a8 <__subdf3+0x30c>
 801b8e8:	0101ffc4 	movi	r4,2047
 801b8ec:	813f8c26 	beq	r16,r4,801b720 <__alt_data_end+0xf801b720>
 801b8f0:	29402034 	orhi	r5,r5,128
 801b8f4:	01000e04 	movi	r4,56
 801b8f8:	2080a90e 	bge	r4,r2,801bba0 <__subdf3+0x504>
 801b8fc:	298cb03a 	or	r6,r5,r6
 801b900:	3012c03a 	cmpne	r9,r6,zero
 801b904:	0005883a 	mov	r2,zero
 801b908:	4c53883a 	add	r9,r9,r17
 801b90c:	4c63803a 	cmpltu	r17,r9,r17
 801b910:	10c7883a 	add	r3,r2,r3
 801b914:	88c7883a 	add	r3,r17,r3
 801b918:	4823883a 	mov	r17,r9
 801b91c:	1880202c 	andhi	r2,r3,128
 801b920:	1000d026 	beq	r2,zero,801bc64 <__subdf3+0x5c8>
 801b924:	84000044 	addi	r16,r16,1
 801b928:	0081ffc4 	movi	r2,2047
 801b92c:	8080fe26 	beq	r16,r2,801bd28 <__subdf3+0x68c>
 801b930:	00bfe034 	movhi	r2,65408
 801b934:	10bfffc4 	addi	r2,r2,-1
 801b938:	1886703a 	and	r3,r3,r2
 801b93c:	880ad07a 	srli	r5,r17,1
 801b940:	180497fa 	slli	r2,r3,31
 801b944:	8900004c 	andi	r4,r17,1
 801b948:	2922b03a 	or	r17,r5,r4
 801b94c:	1806d07a 	srli	r3,r3,1
 801b950:	1462b03a 	or	r17,r2,r17
 801b954:	3825883a 	mov	r18,r7
 801b958:	003f7106 	br	801b720 <__alt_data_end+0xf801b720>
 801b95c:	2984b03a 	or	r2,r5,r6
 801b960:	103f6826 	beq	r2,zero,801b704 <__alt_data_end+0xf801b704>
 801b964:	39c03fcc 	andi	r7,r7,255
 801b968:	003f6706 	br	801b708 <__alt_data_end+0xf801b708>
 801b96c:	4086b03a 	or	r3,r8,r2
 801b970:	18015226 	beq	r3,zero,801bebc <__subdf3+0x820>
 801b974:	00c00434 	movhi	r3,16
 801b978:	41400234 	orhi	r5,r8,8
 801b97c:	18ffffc4 	addi	r3,r3,-1
 801b980:	28ca703a 	and	r5,r5,r3
 801b984:	003f7e06 	br	801b780 <__alt_data_end+0xf801b780>
 801b988:	10bfffc4 	addi	r2,r2,-1
 801b98c:	1000491e 	bne	r2,zero,801bab4 <__subdf3+0x418>
 801b990:	898fc83a 	sub	r7,r17,r6
 801b994:	89e3803a 	cmpltu	r17,r17,r7
 801b998:	1947c83a 	sub	r3,r3,r5
 801b99c:	1c47c83a 	sub	r3,r3,r17
 801b9a0:	3823883a 	mov	r17,r7
 801b9a4:	003f9b06 	br	801b814 <__alt_data_end+0xf801b814>
 801b9a8:	2988b03a 	or	r4,r5,r6
 801b9ac:	203f5c26 	beq	r4,zero,801b720 <__alt_data_end+0xf801b720>
 801b9b0:	10bfffc4 	addi	r2,r2,-1
 801b9b4:	1000931e 	bne	r2,zero,801bc04 <__subdf3+0x568>
 801b9b8:	898d883a 	add	r6,r17,r6
 801b9bc:	3463803a 	cmpltu	r17,r6,r17
 801b9c0:	1947883a 	add	r3,r3,r5
 801b9c4:	88c7883a 	add	r3,r17,r3
 801b9c8:	3023883a 	mov	r17,r6
 801b9cc:	003fd306 	br	801b91c <__alt_data_end+0xf801b91c>
 801b9d0:	1000541e 	bne	r2,zero,801bb24 <__subdf3+0x488>
 801b9d4:	80800044 	addi	r2,r16,1
 801b9d8:	1081ffcc 	andi	r2,r2,2047
 801b9dc:	01000044 	movi	r4,1
 801b9e0:	2080a20e 	bge	r4,r2,801bc6c <__subdf3+0x5d0>
 801b9e4:	8989c83a 	sub	r4,r17,r6
 801b9e8:	8905803a 	cmpltu	r2,r17,r4
 801b9ec:	1967c83a 	sub	r19,r3,r5
 801b9f0:	98a7c83a 	sub	r19,r19,r2
 801b9f4:	9880202c 	andhi	r2,r19,128
 801b9f8:	10006326 	beq	r2,zero,801bb88 <__subdf3+0x4ec>
 801b9fc:	3463c83a 	sub	r17,r6,r17
 801ba00:	28c7c83a 	sub	r3,r5,r3
 801ba04:	344d803a 	cmpltu	r6,r6,r17
 801ba08:	19a7c83a 	sub	r19,r3,r6
 801ba0c:	3825883a 	mov	r18,r7
 801ba10:	983f861e 	bne	r19,zero,801b82c <__alt_data_end+0xf801b82c>
 801ba14:	8809883a 	mov	r4,r17
 801ba18:	801c3440 	call	801c344 <__clzsi2>
 801ba1c:	10800804 	addi	r2,r2,32
 801ba20:	113ffe04 	addi	r4,r2,-8
 801ba24:	00c007c4 	movi	r3,31
 801ba28:	193f850e 	bge	r3,r4,801b840 <__alt_data_end+0xf801b840>
 801ba2c:	10bff604 	addi	r2,r2,-40
 801ba30:	8884983a 	sll	r2,r17,r2
 801ba34:	0023883a 	mov	r17,zero
 801ba38:	243f880e 	bge	r4,r16,801b85c <__alt_data_end+0xf801b85c>
 801ba3c:	00ffe034 	movhi	r3,65408
 801ba40:	18ffffc4 	addi	r3,r3,-1
 801ba44:	8121c83a 	sub	r16,r16,r4
 801ba48:	10c6703a 	and	r3,r2,r3
 801ba4c:	003f3406 	br	801b720 <__alt_data_end+0xf801b720>
 801ba50:	9100004c 	andi	r4,r18,1
 801ba54:	000b883a 	mov	r5,zero
 801ba58:	0005883a 	mov	r2,zero
 801ba5c:	003f4806 	br	801b780 <__alt_data_end+0xf801b780>
 801ba60:	298cb03a 	or	r6,r5,r6
 801ba64:	300cc03a 	cmpne	r6,r6,zero
 801ba68:	0005883a 	mov	r2,zero
 801ba6c:	003f6406 	br	801b800 <__alt_data_end+0xf801b800>
 801ba70:	10009a1e 	bne	r2,zero,801bcdc <__subdf3+0x640>
 801ba74:	82400044 	addi	r9,r16,1
 801ba78:	4881ffcc 	andi	r2,r9,2047
 801ba7c:	02800044 	movi	r10,1
 801ba80:	5080670e 	bge	r10,r2,801bc20 <__subdf3+0x584>
 801ba84:	0081ffc4 	movi	r2,2047
 801ba88:	4880af26 	beq	r9,r2,801bd48 <__subdf3+0x6ac>
 801ba8c:	898d883a 	add	r6,r17,r6
 801ba90:	1945883a 	add	r2,r3,r5
 801ba94:	3447803a 	cmpltu	r3,r6,r17
 801ba98:	1887883a 	add	r3,r3,r2
 801ba9c:	182297fa 	slli	r17,r3,31
 801baa0:	300cd07a 	srli	r6,r6,1
 801baa4:	1806d07a 	srli	r3,r3,1
 801baa8:	4821883a 	mov	r16,r9
 801baac:	89a2b03a 	or	r17,r17,r6
 801bab0:	003f1b06 	br	801b720 <__alt_data_end+0xf801b720>
 801bab4:	0101ffc4 	movi	r4,2047
 801bab8:	813f441e 	bne	r16,r4,801b7cc <__alt_data_end+0xf801b7cc>
 801babc:	003f1806 	br	801b720 <__alt_data_end+0xf801b720>
 801bac0:	843ff844 	addi	r16,r16,-31
 801bac4:	01400804 	movi	r5,32
 801bac8:	1408d83a 	srl	r4,r2,r16
 801bacc:	19405026 	beq	r3,r5,801bc10 <__subdf3+0x574>
 801bad0:	01401004 	movi	r5,64
 801bad4:	28c7c83a 	sub	r3,r5,r3
 801bad8:	10c4983a 	sll	r2,r2,r3
 801badc:	88a2b03a 	or	r17,r17,r2
 801bae0:	8822c03a 	cmpne	r17,r17,zero
 801bae4:	2462b03a 	or	r17,r4,r17
 801bae8:	0007883a 	mov	r3,zero
 801baec:	0021883a 	mov	r16,zero
 801baf0:	003f6d06 	br	801b8a8 <__alt_data_end+0xf801b8a8>
 801baf4:	11fff804 	addi	r7,r2,-32
 801baf8:	01000804 	movi	r4,32
 801bafc:	29ced83a 	srl	r7,r5,r7
 801bb00:	11004526 	beq	r2,r4,801bc18 <__subdf3+0x57c>
 801bb04:	01001004 	movi	r4,64
 801bb08:	2089c83a 	sub	r4,r4,r2
 801bb0c:	2904983a 	sll	r2,r5,r4
 801bb10:	118cb03a 	or	r6,r2,r6
 801bb14:	300cc03a 	cmpne	r6,r6,zero
 801bb18:	398cb03a 	or	r6,r7,r6
 801bb1c:	0005883a 	mov	r2,zero
 801bb20:	003f3706 	br	801b800 <__alt_data_end+0xf801b800>
 801bb24:	80002a26 	beq	r16,zero,801bbd0 <__subdf3+0x534>
 801bb28:	0101ffc4 	movi	r4,2047
 801bb2c:	49006626 	beq	r9,r4,801bcc8 <__subdf3+0x62c>
 801bb30:	0085c83a 	sub	r2,zero,r2
 801bb34:	18c02034 	orhi	r3,r3,128
 801bb38:	01000e04 	movi	r4,56
 801bb3c:	20807e16 	blt	r4,r2,801bd38 <__subdf3+0x69c>
 801bb40:	010007c4 	movi	r4,31
 801bb44:	2080e716 	blt	r4,r2,801bee4 <__subdf3+0x848>
 801bb48:	01000804 	movi	r4,32
 801bb4c:	2089c83a 	sub	r4,r4,r2
 801bb50:	1914983a 	sll	r10,r3,r4
 801bb54:	8890d83a 	srl	r8,r17,r2
 801bb58:	8908983a 	sll	r4,r17,r4
 801bb5c:	1884d83a 	srl	r2,r3,r2
 801bb60:	5222b03a 	or	r17,r10,r8
 801bb64:	2006c03a 	cmpne	r3,r4,zero
 801bb68:	88e2b03a 	or	r17,r17,r3
 801bb6c:	3463c83a 	sub	r17,r6,r17
 801bb70:	2885c83a 	sub	r2,r5,r2
 801bb74:	344d803a 	cmpltu	r6,r6,r17
 801bb78:	1187c83a 	sub	r3,r2,r6
 801bb7c:	4821883a 	mov	r16,r9
 801bb80:	3825883a 	mov	r18,r7
 801bb84:	003f2306 	br	801b814 <__alt_data_end+0xf801b814>
 801bb88:	24d0b03a 	or	r8,r4,r19
 801bb8c:	40001b1e 	bne	r8,zero,801bbfc <__subdf3+0x560>
 801bb90:	0005883a 	mov	r2,zero
 801bb94:	0009883a 	mov	r4,zero
 801bb98:	0021883a 	mov	r16,zero
 801bb9c:	003f4906 	br	801b8c4 <__alt_data_end+0xf801b8c4>
 801bba0:	010007c4 	movi	r4,31
 801bba4:	20803a16 	blt	r4,r2,801bc90 <__subdf3+0x5f4>
 801bba8:	01000804 	movi	r4,32
 801bbac:	2089c83a 	sub	r4,r4,r2
 801bbb0:	2912983a 	sll	r9,r5,r4
 801bbb4:	3090d83a 	srl	r8,r6,r2
 801bbb8:	3108983a 	sll	r4,r6,r4
 801bbbc:	2884d83a 	srl	r2,r5,r2
 801bbc0:	4a12b03a 	or	r9,r9,r8
 801bbc4:	2008c03a 	cmpne	r4,r4,zero
 801bbc8:	4912b03a 	or	r9,r9,r4
 801bbcc:	003f4e06 	br	801b908 <__alt_data_end+0xf801b908>
 801bbd0:	1c48b03a 	or	r4,r3,r17
 801bbd4:	20003c26 	beq	r4,zero,801bcc8 <__subdf3+0x62c>
 801bbd8:	0084303a 	nor	r2,zero,r2
 801bbdc:	1000381e 	bne	r2,zero,801bcc0 <__subdf3+0x624>
 801bbe0:	3463c83a 	sub	r17,r6,r17
 801bbe4:	28c5c83a 	sub	r2,r5,r3
 801bbe8:	344d803a 	cmpltu	r6,r6,r17
 801bbec:	1187c83a 	sub	r3,r2,r6
 801bbf0:	4821883a 	mov	r16,r9
 801bbf4:	3825883a 	mov	r18,r7
 801bbf8:	003f0606 	br	801b814 <__alt_data_end+0xf801b814>
 801bbfc:	2023883a 	mov	r17,r4
 801bc00:	003f0906 	br	801b828 <__alt_data_end+0xf801b828>
 801bc04:	0101ffc4 	movi	r4,2047
 801bc08:	813f3a1e 	bne	r16,r4,801b8f4 <__alt_data_end+0xf801b8f4>
 801bc0c:	003ec406 	br	801b720 <__alt_data_end+0xf801b720>
 801bc10:	0005883a 	mov	r2,zero
 801bc14:	003fb106 	br	801badc <__alt_data_end+0xf801badc>
 801bc18:	0005883a 	mov	r2,zero
 801bc1c:	003fbc06 	br	801bb10 <__alt_data_end+0xf801bb10>
 801bc20:	1c44b03a 	or	r2,r3,r17
 801bc24:	80008e1e 	bne	r16,zero,801be60 <__subdf3+0x7c4>
 801bc28:	1000c826 	beq	r2,zero,801bf4c <__subdf3+0x8b0>
 801bc2c:	2984b03a 	or	r2,r5,r6
 801bc30:	103ebb26 	beq	r2,zero,801b720 <__alt_data_end+0xf801b720>
 801bc34:	8989883a 	add	r4,r17,r6
 801bc38:	1945883a 	add	r2,r3,r5
 801bc3c:	2447803a 	cmpltu	r3,r4,r17
 801bc40:	1887883a 	add	r3,r3,r2
 801bc44:	1880202c 	andhi	r2,r3,128
 801bc48:	2023883a 	mov	r17,r4
 801bc4c:	103f1626 	beq	r2,zero,801b8a8 <__alt_data_end+0xf801b8a8>
 801bc50:	00bfe034 	movhi	r2,65408
 801bc54:	10bfffc4 	addi	r2,r2,-1
 801bc58:	5021883a 	mov	r16,r10
 801bc5c:	1886703a 	and	r3,r3,r2
 801bc60:	003eaf06 	br	801b720 <__alt_data_end+0xf801b720>
 801bc64:	3825883a 	mov	r18,r7
 801bc68:	003f0f06 	br	801b8a8 <__alt_data_end+0xf801b8a8>
 801bc6c:	1c44b03a 	or	r2,r3,r17
 801bc70:	8000251e 	bne	r16,zero,801bd08 <__subdf3+0x66c>
 801bc74:	1000661e 	bne	r2,zero,801be10 <__subdf3+0x774>
 801bc78:	2990b03a 	or	r8,r5,r6
 801bc7c:	40009626 	beq	r8,zero,801bed8 <__subdf3+0x83c>
 801bc80:	2807883a 	mov	r3,r5
 801bc84:	3023883a 	mov	r17,r6
 801bc88:	3825883a 	mov	r18,r7
 801bc8c:	003ea406 	br	801b720 <__alt_data_end+0xf801b720>
 801bc90:	127ff804 	addi	r9,r2,-32
 801bc94:	01000804 	movi	r4,32
 801bc98:	2a52d83a 	srl	r9,r5,r9
 801bc9c:	11008c26 	beq	r2,r4,801bed0 <__subdf3+0x834>
 801bca0:	01001004 	movi	r4,64
 801bca4:	2085c83a 	sub	r2,r4,r2
 801bca8:	2884983a 	sll	r2,r5,r2
 801bcac:	118cb03a 	or	r6,r2,r6
 801bcb0:	300cc03a 	cmpne	r6,r6,zero
 801bcb4:	4992b03a 	or	r9,r9,r6
 801bcb8:	0005883a 	mov	r2,zero
 801bcbc:	003f1206 	br	801b908 <__alt_data_end+0xf801b908>
 801bcc0:	0101ffc4 	movi	r4,2047
 801bcc4:	493f9c1e 	bne	r9,r4,801bb38 <__alt_data_end+0xf801bb38>
 801bcc8:	2807883a 	mov	r3,r5
 801bccc:	3023883a 	mov	r17,r6
 801bcd0:	4821883a 	mov	r16,r9
 801bcd4:	3825883a 	mov	r18,r7
 801bcd8:	003e9106 	br	801b720 <__alt_data_end+0xf801b720>
 801bcdc:	80001f1e 	bne	r16,zero,801bd5c <__subdf3+0x6c0>
 801bce0:	1c48b03a 	or	r4,r3,r17
 801bce4:	20005a26 	beq	r4,zero,801be50 <__subdf3+0x7b4>
 801bce8:	0084303a 	nor	r2,zero,r2
 801bcec:	1000561e 	bne	r2,zero,801be48 <__subdf3+0x7ac>
 801bcf0:	89a3883a 	add	r17,r17,r6
 801bcf4:	1945883a 	add	r2,r3,r5
 801bcf8:	898d803a 	cmpltu	r6,r17,r6
 801bcfc:	3087883a 	add	r3,r6,r2
 801bd00:	4821883a 	mov	r16,r9
 801bd04:	003f0506 	br	801b91c <__alt_data_end+0xf801b91c>
 801bd08:	10002b1e 	bne	r2,zero,801bdb8 <__subdf3+0x71c>
 801bd0c:	2984b03a 	or	r2,r5,r6
 801bd10:	10008026 	beq	r2,zero,801bf14 <__subdf3+0x878>
 801bd14:	2807883a 	mov	r3,r5
 801bd18:	3023883a 	mov	r17,r6
 801bd1c:	3825883a 	mov	r18,r7
 801bd20:	0401ffc4 	movi	r16,2047
 801bd24:	003e7e06 	br	801b720 <__alt_data_end+0xf801b720>
 801bd28:	3809883a 	mov	r4,r7
 801bd2c:	0011883a 	mov	r8,zero
 801bd30:	0005883a 	mov	r2,zero
 801bd34:	003ee306 	br	801b8c4 <__alt_data_end+0xf801b8c4>
 801bd38:	1c62b03a 	or	r17,r3,r17
 801bd3c:	8822c03a 	cmpne	r17,r17,zero
 801bd40:	0005883a 	mov	r2,zero
 801bd44:	003f8906 	br	801bb6c <__alt_data_end+0xf801bb6c>
 801bd48:	3809883a 	mov	r4,r7
 801bd4c:	4821883a 	mov	r16,r9
 801bd50:	0011883a 	mov	r8,zero
 801bd54:	0005883a 	mov	r2,zero
 801bd58:	003eda06 	br	801b8c4 <__alt_data_end+0xf801b8c4>
 801bd5c:	0101ffc4 	movi	r4,2047
 801bd60:	49003b26 	beq	r9,r4,801be50 <__subdf3+0x7b4>
 801bd64:	0085c83a 	sub	r2,zero,r2
 801bd68:	18c02034 	orhi	r3,r3,128
 801bd6c:	01000e04 	movi	r4,56
 801bd70:	20806e16 	blt	r4,r2,801bf2c <__subdf3+0x890>
 801bd74:	010007c4 	movi	r4,31
 801bd78:	20807716 	blt	r4,r2,801bf58 <__subdf3+0x8bc>
 801bd7c:	01000804 	movi	r4,32
 801bd80:	2089c83a 	sub	r4,r4,r2
 801bd84:	1914983a 	sll	r10,r3,r4
 801bd88:	8890d83a 	srl	r8,r17,r2
 801bd8c:	8908983a 	sll	r4,r17,r4
 801bd90:	1884d83a 	srl	r2,r3,r2
 801bd94:	5222b03a 	or	r17,r10,r8
 801bd98:	2006c03a 	cmpne	r3,r4,zero
 801bd9c:	88e2b03a 	or	r17,r17,r3
 801bda0:	89a3883a 	add	r17,r17,r6
 801bda4:	1145883a 	add	r2,r2,r5
 801bda8:	898d803a 	cmpltu	r6,r17,r6
 801bdac:	3087883a 	add	r3,r6,r2
 801bdb0:	4821883a 	mov	r16,r9
 801bdb4:	003ed906 	br	801b91c <__alt_data_end+0xf801b91c>
 801bdb8:	2984b03a 	or	r2,r5,r6
 801bdbc:	10004226 	beq	r2,zero,801bec8 <__subdf3+0x82c>
 801bdc0:	1808d0fa 	srli	r4,r3,3
 801bdc4:	8822d0fa 	srli	r17,r17,3
 801bdc8:	1806977a 	slli	r3,r3,29
 801bdcc:	2080022c 	andhi	r2,r4,8
 801bdd0:	1c62b03a 	or	r17,r3,r17
 801bdd4:	10000826 	beq	r2,zero,801bdf8 <__subdf3+0x75c>
 801bdd8:	2812d0fa 	srli	r9,r5,3
 801bddc:	4880022c 	andhi	r2,r9,8
 801bde0:	1000051e 	bne	r2,zero,801bdf8 <__subdf3+0x75c>
 801bde4:	300cd0fa 	srli	r6,r6,3
 801bde8:	2804977a 	slli	r2,r5,29
 801bdec:	4809883a 	mov	r4,r9
 801bdf0:	3825883a 	mov	r18,r7
 801bdf4:	11a2b03a 	or	r17,r2,r6
 801bdf8:	8806d77a 	srli	r3,r17,29
 801bdfc:	200890fa 	slli	r4,r4,3
 801be00:	882290fa 	slli	r17,r17,3
 801be04:	0401ffc4 	movi	r16,2047
 801be08:	1906b03a 	or	r3,r3,r4
 801be0c:	003e4406 	br	801b720 <__alt_data_end+0xf801b720>
 801be10:	2984b03a 	or	r2,r5,r6
 801be14:	103e4226 	beq	r2,zero,801b720 <__alt_data_end+0xf801b720>
 801be18:	8989c83a 	sub	r4,r17,r6
 801be1c:	8911803a 	cmpltu	r8,r17,r4
 801be20:	1945c83a 	sub	r2,r3,r5
 801be24:	1205c83a 	sub	r2,r2,r8
 801be28:	1200202c 	andhi	r8,r2,128
 801be2c:	403e9a26 	beq	r8,zero,801b898 <__alt_data_end+0xf801b898>
 801be30:	3463c83a 	sub	r17,r6,r17
 801be34:	28c5c83a 	sub	r2,r5,r3
 801be38:	344d803a 	cmpltu	r6,r6,r17
 801be3c:	1187c83a 	sub	r3,r2,r6
 801be40:	3825883a 	mov	r18,r7
 801be44:	003e3606 	br	801b720 <__alt_data_end+0xf801b720>
 801be48:	0101ffc4 	movi	r4,2047
 801be4c:	493fc71e 	bne	r9,r4,801bd6c <__alt_data_end+0xf801bd6c>
 801be50:	2807883a 	mov	r3,r5
 801be54:	3023883a 	mov	r17,r6
 801be58:	4821883a 	mov	r16,r9
 801be5c:	003e3006 	br	801b720 <__alt_data_end+0xf801b720>
 801be60:	10003626 	beq	r2,zero,801bf3c <__subdf3+0x8a0>
 801be64:	2984b03a 	or	r2,r5,r6
 801be68:	10001726 	beq	r2,zero,801bec8 <__subdf3+0x82c>
 801be6c:	1808d0fa 	srli	r4,r3,3
 801be70:	8822d0fa 	srli	r17,r17,3
 801be74:	1806977a 	slli	r3,r3,29
 801be78:	2080022c 	andhi	r2,r4,8
 801be7c:	1c62b03a 	or	r17,r3,r17
 801be80:	10000726 	beq	r2,zero,801bea0 <__subdf3+0x804>
 801be84:	2812d0fa 	srli	r9,r5,3
 801be88:	4880022c 	andhi	r2,r9,8
 801be8c:	1000041e 	bne	r2,zero,801bea0 <__subdf3+0x804>
 801be90:	300cd0fa 	srli	r6,r6,3
 801be94:	2804977a 	slli	r2,r5,29
 801be98:	4809883a 	mov	r4,r9
 801be9c:	11a2b03a 	or	r17,r2,r6
 801bea0:	8806d77a 	srli	r3,r17,29
 801bea4:	200890fa 	slli	r4,r4,3
 801bea8:	882290fa 	slli	r17,r17,3
 801beac:	3825883a 	mov	r18,r7
 801beb0:	1906b03a 	or	r3,r3,r4
 801beb4:	0401ffc4 	movi	r16,2047
 801beb8:	003e1906 	br	801b720 <__alt_data_end+0xf801b720>
 801bebc:	000b883a 	mov	r5,zero
 801bec0:	0005883a 	mov	r2,zero
 801bec4:	003e2e06 	br	801b780 <__alt_data_end+0xf801b780>
 801bec8:	0401ffc4 	movi	r16,2047
 801becc:	003e1406 	br	801b720 <__alt_data_end+0xf801b720>
 801bed0:	0005883a 	mov	r2,zero
 801bed4:	003f7506 	br	801bcac <__alt_data_end+0xf801bcac>
 801bed8:	0005883a 	mov	r2,zero
 801bedc:	0009883a 	mov	r4,zero
 801bee0:	003e7806 	br	801b8c4 <__alt_data_end+0xf801b8c4>
 801bee4:	123ff804 	addi	r8,r2,-32
 801bee8:	01000804 	movi	r4,32
 801beec:	1a10d83a 	srl	r8,r3,r8
 801bef0:	11002526 	beq	r2,r4,801bf88 <__subdf3+0x8ec>
 801bef4:	01001004 	movi	r4,64
 801bef8:	2085c83a 	sub	r2,r4,r2
 801befc:	1884983a 	sll	r2,r3,r2
 801bf00:	1444b03a 	or	r2,r2,r17
 801bf04:	1004c03a 	cmpne	r2,r2,zero
 801bf08:	40a2b03a 	or	r17,r8,r2
 801bf0c:	0005883a 	mov	r2,zero
 801bf10:	003f1606 	br	801bb6c <__alt_data_end+0xf801bb6c>
 801bf14:	02000434 	movhi	r8,16
 801bf18:	0009883a 	mov	r4,zero
 801bf1c:	423fffc4 	addi	r8,r8,-1
 801bf20:	00bfffc4 	movi	r2,-1
 801bf24:	0401ffc4 	movi	r16,2047
 801bf28:	003e6606 	br	801b8c4 <__alt_data_end+0xf801b8c4>
 801bf2c:	1c62b03a 	or	r17,r3,r17
 801bf30:	8822c03a 	cmpne	r17,r17,zero
 801bf34:	0005883a 	mov	r2,zero
 801bf38:	003f9906 	br	801bda0 <__alt_data_end+0xf801bda0>
 801bf3c:	2807883a 	mov	r3,r5
 801bf40:	3023883a 	mov	r17,r6
 801bf44:	0401ffc4 	movi	r16,2047
 801bf48:	003df506 	br	801b720 <__alt_data_end+0xf801b720>
 801bf4c:	2807883a 	mov	r3,r5
 801bf50:	3023883a 	mov	r17,r6
 801bf54:	003df206 	br	801b720 <__alt_data_end+0xf801b720>
 801bf58:	123ff804 	addi	r8,r2,-32
 801bf5c:	01000804 	movi	r4,32
 801bf60:	1a10d83a 	srl	r8,r3,r8
 801bf64:	11000a26 	beq	r2,r4,801bf90 <__subdf3+0x8f4>
 801bf68:	01001004 	movi	r4,64
 801bf6c:	2085c83a 	sub	r2,r4,r2
 801bf70:	1884983a 	sll	r2,r3,r2
 801bf74:	1444b03a 	or	r2,r2,r17
 801bf78:	1004c03a 	cmpne	r2,r2,zero
 801bf7c:	40a2b03a 	or	r17,r8,r2
 801bf80:	0005883a 	mov	r2,zero
 801bf84:	003f8606 	br	801bda0 <__alt_data_end+0xf801bda0>
 801bf88:	0005883a 	mov	r2,zero
 801bf8c:	003fdc06 	br	801bf00 <__alt_data_end+0xf801bf00>
 801bf90:	0005883a 	mov	r2,zero
 801bf94:	003ff706 	br	801bf74 <__alt_data_end+0xf801bf74>

0801bf98 <__fixdfsi>:
 801bf98:	280cd53a 	srli	r6,r5,20
 801bf9c:	00c00434 	movhi	r3,16
 801bfa0:	18ffffc4 	addi	r3,r3,-1
 801bfa4:	3181ffcc 	andi	r6,r6,2047
 801bfa8:	01c0ff84 	movi	r7,1022
 801bfac:	28c6703a 	and	r3,r5,r3
 801bfb0:	280ad7fa 	srli	r5,r5,31
 801bfb4:	3980120e 	bge	r7,r6,801c000 <__fixdfsi+0x68>
 801bfb8:	00810744 	movi	r2,1053
 801bfbc:	11800c16 	blt	r2,r6,801bff0 <__fixdfsi+0x58>
 801bfc0:	00810cc4 	movi	r2,1075
 801bfc4:	1185c83a 	sub	r2,r2,r6
 801bfc8:	01c007c4 	movi	r7,31
 801bfcc:	18c00434 	orhi	r3,r3,16
 801bfd0:	38800d16 	blt	r7,r2,801c008 <__fixdfsi+0x70>
 801bfd4:	31befb44 	addi	r6,r6,-1043
 801bfd8:	2084d83a 	srl	r2,r4,r2
 801bfdc:	1986983a 	sll	r3,r3,r6
 801bfe0:	1884b03a 	or	r2,r3,r2
 801bfe4:	28000726 	beq	r5,zero,801c004 <__fixdfsi+0x6c>
 801bfe8:	0085c83a 	sub	r2,zero,r2
 801bfec:	f800283a 	ret
 801bff0:	00a00034 	movhi	r2,32768
 801bff4:	10bfffc4 	addi	r2,r2,-1
 801bff8:	2885883a 	add	r2,r5,r2
 801bffc:	f800283a 	ret
 801c000:	0005883a 	mov	r2,zero
 801c004:	f800283a 	ret
 801c008:	008104c4 	movi	r2,1043
 801c00c:	1185c83a 	sub	r2,r2,r6
 801c010:	1884d83a 	srl	r2,r3,r2
 801c014:	003ff306 	br	801bfe4 <__alt_data_end+0xf801bfe4>

0801c018 <__floatsidf>:
 801c018:	defffd04 	addi	sp,sp,-12
 801c01c:	dfc00215 	stw	ra,8(sp)
 801c020:	dc400115 	stw	r17,4(sp)
 801c024:	dc000015 	stw	r16,0(sp)
 801c028:	20002b26 	beq	r4,zero,801c0d8 <__floatsidf+0xc0>
 801c02c:	2023883a 	mov	r17,r4
 801c030:	2020d7fa 	srli	r16,r4,31
 801c034:	20002d16 	blt	r4,zero,801c0ec <__floatsidf+0xd4>
 801c038:	8809883a 	mov	r4,r17
 801c03c:	801c3440 	call	801c344 <__clzsi2>
 801c040:	01410784 	movi	r5,1054
 801c044:	288bc83a 	sub	r5,r5,r2
 801c048:	01010cc4 	movi	r4,1075
 801c04c:	2149c83a 	sub	r4,r4,r5
 801c050:	00c007c4 	movi	r3,31
 801c054:	1900160e 	bge	r3,r4,801c0b0 <__floatsidf+0x98>
 801c058:	00c104c4 	movi	r3,1043
 801c05c:	1947c83a 	sub	r3,r3,r5
 801c060:	88c6983a 	sll	r3,r17,r3
 801c064:	00800434 	movhi	r2,16
 801c068:	10bfffc4 	addi	r2,r2,-1
 801c06c:	1886703a 	and	r3,r3,r2
 801c070:	2941ffcc 	andi	r5,r5,2047
 801c074:	800d883a 	mov	r6,r16
 801c078:	0005883a 	mov	r2,zero
 801c07c:	280a953a 	slli	r5,r5,20
 801c080:	31803fcc 	andi	r6,r6,255
 801c084:	01000434 	movhi	r4,16
 801c088:	300c97fa 	slli	r6,r6,31
 801c08c:	213fffc4 	addi	r4,r4,-1
 801c090:	1906703a 	and	r3,r3,r4
 801c094:	1946b03a 	or	r3,r3,r5
 801c098:	1986b03a 	or	r3,r3,r6
 801c09c:	dfc00217 	ldw	ra,8(sp)
 801c0a0:	dc400117 	ldw	r17,4(sp)
 801c0a4:	dc000017 	ldw	r16,0(sp)
 801c0a8:	dec00304 	addi	sp,sp,12
 801c0ac:	f800283a 	ret
 801c0b0:	00c002c4 	movi	r3,11
 801c0b4:	1887c83a 	sub	r3,r3,r2
 801c0b8:	88c6d83a 	srl	r3,r17,r3
 801c0bc:	8904983a 	sll	r2,r17,r4
 801c0c0:	01000434 	movhi	r4,16
 801c0c4:	213fffc4 	addi	r4,r4,-1
 801c0c8:	2941ffcc 	andi	r5,r5,2047
 801c0cc:	1906703a 	and	r3,r3,r4
 801c0d0:	800d883a 	mov	r6,r16
 801c0d4:	003fe906 	br	801c07c <__alt_data_end+0xf801c07c>
 801c0d8:	000d883a 	mov	r6,zero
 801c0dc:	000b883a 	mov	r5,zero
 801c0e0:	0007883a 	mov	r3,zero
 801c0e4:	0005883a 	mov	r2,zero
 801c0e8:	003fe406 	br	801c07c <__alt_data_end+0xf801c07c>
 801c0ec:	0123c83a 	sub	r17,zero,r4
 801c0f0:	003fd106 	br	801c038 <__alt_data_end+0xf801c038>

0801c0f4 <__floatunsidf>:
 801c0f4:	defffe04 	addi	sp,sp,-8
 801c0f8:	dc000015 	stw	r16,0(sp)
 801c0fc:	dfc00115 	stw	ra,4(sp)
 801c100:	2021883a 	mov	r16,r4
 801c104:	20002226 	beq	r4,zero,801c190 <__floatunsidf+0x9c>
 801c108:	801c3440 	call	801c344 <__clzsi2>
 801c10c:	01010784 	movi	r4,1054
 801c110:	2089c83a 	sub	r4,r4,r2
 801c114:	01810cc4 	movi	r6,1075
 801c118:	310dc83a 	sub	r6,r6,r4
 801c11c:	00c007c4 	movi	r3,31
 801c120:	1980120e 	bge	r3,r6,801c16c <__floatunsidf+0x78>
 801c124:	00c104c4 	movi	r3,1043
 801c128:	1907c83a 	sub	r3,r3,r4
 801c12c:	80ca983a 	sll	r5,r16,r3
 801c130:	00800434 	movhi	r2,16
 801c134:	10bfffc4 	addi	r2,r2,-1
 801c138:	2101ffcc 	andi	r4,r4,2047
 801c13c:	0021883a 	mov	r16,zero
 801c140:	288a703a 	and	r5,r5,r2
 801c144:	2008953a 	slli	r4,r4,20
 801c148:	00c00434 	movhi	r3,16
 801c14c:	18ffffc4 	addi	r3,r3,-1
 801c150:	28c6703a 	and	r3,r5,r3
 801c154:	8005883a 	mov	r2,r16
 801c158:	1906b03a 	or	r3,r3,r4
 801c15c:	dfc00117 	ldw	ra,4(sp)
 801c160:	dc000017 	ldw	r16,0(sp)
 801c164:	dec00204 	addi	sp,sp,8
 801c168:	f800283a 	ret
 801c16c:	00c002c4 	movi	r3,11
 801c170:	188bc83a 	sub	r5,r3,r2
 801c174:	814ad83a 	srl	r5,r16,r5
 801c178:	00c00434 	movhi	r3,16
 801c17c:	18ffffc4 	addi	r3,r3,-1
 801c180:	81a0983a 	sll	r16,r16,r6
 801c184:	2101ffcc 	andi	r4,r4,2047
 801c188:	28ca703a 	and	r5,r5,r3
 801c18c:	003fed06 	br	801c144 <__alt_data_end+0xf801c144>
 801c190:	0009883a 	mov	r4,zero
 801c194:	000b883a 	mov	r5,zero
 801c198:	003fea06 	br	801c144 <__alt_data_end+0xf801c144>

0801c19c <__truncdfsf2>:
 801c19c:	2810d53a 	srli	r8,r5,20
 801c1a0:	01c00434 	movhi	r7,16
 801c1a4:	39ffffc4 	addi	r7,r7,-1
 801c1a8:	29ce703a 	and	r7,r5,r7
 801c1ac:	4201ffcc 	andi	r8,r8,2047
 801c1b0:	380e90fa 	slli	r7,r7,3
 801c1b4:	200cd77a 	srli	r6,r4,29
 801c1b8:	42400044 	addi	r9,r8,1
 801c1bc:	4a41ffcc 	andi	r9,r9,2047
 801c1c0:	00c00044 	movi	r3,1
 801c1c4:	280ad7fa 	srli	r5,r5,31
 801c1c8:	31ceb03a 	or	r7,r6,r7
 801c1cc:	200490fa 	slli	r2,r4,3
 801c1d0:	1a40230e 	bge	r3,r9,801c260 <__truncdfsf2+0xc4>
 801c1d4:	40ff2004 	addi	r3,r8,-896
 801c1d8:	01803f84 	movi	r6,254
 801c1dc:	30c01516 	blt	r6,r3,801c234 <__truncdfsf2+0x98>
 801c1e0:	00c0380e 	bge	zero,r3,801c2c4 <__truncdfsf2+0x128>
 801c1e4:	200c91ba 	slli	r6,r4,6
 801c1e8:	380e90fa 	slli	r7,r7,3
 801c1ec:	1004d77a 	srli	r2,r2,29
 801c1f0:	300cc03a 	cmpne	r6,r6,zero
 801c1f4:	31ccb03a 	or	r6,r6,r7
 801c1f8:	308cb03a 	or	r6,r6,r2
 801c1fc:	308001cc 	andi	r2,r6,7
 801c200:	10000426 	beq	r2,zero,801c214 <__truncdfsf2+0x78>
 801c204:	308003cc 	andi	r2,r6,15
 801c208:	01000104 	movi	r4,4
 801c20c:	11000126 	beq	r2,r4,801c214 <__truncdfsf2+0x78>
 801c210:	31800104 	addi	r6,r6,4
 801c214:	3081002c 	andhi	r2,r6,1024
 801c218:	10001626 	beq	r2,zero,801c274 <__truncdfsf2+0xd8>
 801c21c:	18c00044 	addi	r3,r3,1
 801c220:	00803fc4 	movi	r2,255
 801c224:	18800326 	beq	r3,r2,801c234 <__truncdfsf2+0x98>
 801c228:	300c91ba 	slli	r6,r6,6
 801c22c:	300cd27a 	srli	r6,r6,9
 801c230:	00000206 	br	801c23c <__truncdfsf2+0xa0>
 801c234:	00ffffc4 	movi	r3,-1
 801c238:	000d883a 	mov	r6,zero
 801c23c:	18c03fcc 	andi	r3,r3,255
 801c240:	180895fa 	slli	r4,r3,23
 801c244:	00c02034 	movhi	r3,128
 801c248:	280a97fa 	slli	r5,r5,31
 801c24c:	18ffffc4 	addi	r3,r3,-1
 801c250:	30c6703a 	and	r3,r6,r3
 801c254:	1906b03a 	or	r3,r3,r4
 801c258:	1944b03a 	or	r2,r3,r5
 801c25c:	f800283a 	ret
 801c260:	40000b1e 	bne	r8,zero,801c290 <__truncdfsf2+0xf4>
 801c264:	388cb03a 	or	r6,r7,r2
 801c268:	0007883a 	mov	r3,zero
 801c26c:	30000426 	beq	r6,zero,801c280 <__truncdfsf2+0xe4>
 801c270:	01800144 	movi	r6,5
 801c274:	00803fc4 	movi	r2,255
 801c278:	300cd0fa 	srli	r6,r6,3
 801c27c:	18800a26 	beq	r3,r2,801c2a8 <__truncdfsf2+0x10c>
 801c280:	00802034 	movhi	r2,128
 801c284:	10bfffc4 	addi	r2,r2,-1
 801c288:	308c703a 	and	r6,r6,r2
 801c28c:	003feb06 	br	801c23c <__alt_data_end+0xf801c23c>
 801c290:	3888b03a 	or	r4,r7,r2
 801c294:	203fe726 	beq	r4,zero,801c234 <__alt_data_end+0xf801c234>
 801c298:	380c90fa 	slli	r6,r7,3
 801c29c:	00c03fc4 	movi	r3,255
 801c2a0:	31808034 	orhi	r6,r6,512
 801c2a4:	003fd506 	br	801c1fc <__alt_data_end+0xf801c1fc>
 801c2a8:	303fe226 	beq	r6,zero,801c234 <__alt_data_end+0xf801c234>
 801c2ac:	00802034 	movhi	r2,128
 801c2b0:	31801034 	orhi	r6,r6,64
 801c2b4:	10bfffc4 	addi	r2,r2,-1
 801c2b8:	00ffffc4 	movi	r3,-1
 801c2bc:	308c703a 	and	r6,r6,r2
 801c2c0:	003fde06 	br	801c23c <__alt_data_end+0xf801c23c>
 801c2c4:	013ffa44 	movi	r4,-23
 801c2c8:	19000e16 	blt	r3,r4,801c304 <__truncdfsf2+0x168>
 801c2cc:	01000784 	movi	r4,30
 801c2d0:	20c9c83a 	sub	r4,r4,r3
 801c2d4:	018007c4 	movi	r6,31
 801c2d8:	39c02034 	orhi	r7,r7,128
 801c2dc:	31000b16 	blt	r6,r4,801c30c <__truncdfsf2+0x170>
 801c2e0:	423f2084 	addi	r8,r8,-894
 801c2e4:	120c983a 	sll	r6,r2,r8
 801c2e8:	3a0e983a 	sll	r7,r7,r8
 801c2ec:	1104d83a 	srl	r2,r2,r4
 801c2f0:	300cc03a 	cmpne	r6,r6,zero
 801c2f4:	31ceb03a 	or	r7,r6,r7
 801c2f8:	388cb03a 	or	r6,r7,r2
 801c2fc:	0007883a 	mov	r3,zero
 801c300:	003fbe06 	br	801c1fc <__alt_data_end+0xf801c1fc>
 801c304:	0007883a 	mov	r3,zero
 801c308:	003fd906 	br	801c270 <__alt_data_end+0xf801c270>
 801c30c:	01bfff84 	movi	r6,-2
 801c310:	30cdc83a 	sub	r6,r6,r3
 801c314:	00c00804 	movi	r3,32
 801c318:	398cd83a 	srl	r6,r7,r6
 801c31c:	20c00726 	beq	r4,r3,801c33c <__truncdfsf2+0x1a0>
 801c320:	423f2884 	addi	r8,r8,-862
 801c324:	3a0e983a 	sll	r7,r7,r8
 801c328:	3884b03a 	or	r2,r7,r2
 801c32c:	1004c03a 	cmpne	r2,r2,zero
 801c330:	118cb03a 	or	r6,r2,r6
 801c334:	0007883a 	mov	r3,zero
 801c338:	003fb006 	br	801c1fc <__alt_data_end+0xf801c1fc>
 801c33c:	000f883a 	mov	r7,zero
 801c340:	003ff906 	br	801c328 <__alt_data_end+0xf801c328>

0801c344 <__clzsi2>:
 801c344:	00bfffd4 	movui	r2,65535
 801c348:	11000536 	bltu	r2,r4,801c360 <__clzsi2+0x1c>
 801c34c:	00803fc4 	movi	r2,255
 801c350:	11000f36 	bltu	r2,r4,801c390 <__clzsi2+0x4c>
 801c354:	00800804 	movi	r2,32
 801c358:	0007883a 	mov	r3,zero
 801c35c:	00000506 	br	801c374 <__clzsi2+0x30>
 801c360:	00804034 	movhi	r2,256
 801c364:	10bfffc4 	addi	r2,r2,-1
 801c368:	11000c2e 	bgeu	r2,r4,801c39c <__clzsi2+0x58>
 801c36c:	00800204 	movi	r2,8
 801c370:	00c00604 	movi	r3,24
 801c374:	20c8d83a 	srl	r4,r4,r3
 801c378:	00c200b4 	movhi	r3,2050
 801c37c:	18c0cf84 	addi	r3,r3,830
 801c380:	1909883a 	add	r4,r3,r4
 801c384:	20c00003 	ldbu	r3,0(r4)
 801c388:	10c5c83a 	sub	r2,r2,r3
 801c38c:	f800283a 	ret
 801c390:	00800604 	movi	r2,24
 801c394:	00c00204 	movi	r3,8
 801c398:	003ff606 	br	801c374 <__alt_data_end+0xf801c374>
 801c39c:	00800404 	movi	r2,16
 801c3a0:	1007883a 	mov	r3,r2
 801c3a4:	003ff306 	br	801c374 <__alt_data_end+0xf801c374>

0801c3a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801c3a8:	defffe04 	addi	sp,sp,-8
 801c3ac:	dfc00115 	stw	ra,4(sp)
 801c3b0:	df000015 	stw	fp,0(sp)
 801c3b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801c3b8:	d0a02017 	ldw	r2,-32640(gp)
 801c3bc:	10000326 	beq	r2,zero,801c3cc <alt_get_errno+0x24>
 801c3c0:	d0a02017 	ldw	r2,-32640(gp)
 801c3c4:	103ee83a 	callr	r2
 801c3c8:	00000106 	br	801c3d0 <alt_get_errno+0x28>
 801c3cc:	d0a72c04 	addi	r2,gp,-25424
}
 801c3d0:	e037883a 	mov	sp,fp
 801c3d4:	dfc00117 	ldw	ra,4(sp)
 801c3d8:	df000017 	ldw	fp,0(sp)
 801c3dc:	dec00204 	addi	sp,sp,8
 801c3e0:	f800283a 	ret

0801c3e4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 801c3e4:	defffb04 	addi	sp,sp,-20
 801c3e8:	dfc00415 	stw	ra,16(sp)
 801c3ec:	df000315 	stw	fp,12(sp)
 801c3f0:	df000304 	addi	fp,sp,12
 801c3f4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 801c3f8:	e0bfff17 	ldw	r2,-4(fp)
 801c3fc:	10000616 	blt	r2,zero,801c418 <close+0x34>
 801c400:	e0bfff17 	ldw	r2,-4(fp)
 801c404:	10c00324 	muli	r3,r2,12
 801c408:	008200b4 	movhi	r2,2050
 801c40c:	10835404 	addi	r2,r2,3408
 801c410:	1885883a 	add	r2,r3,r2
 801c414:	00000106 	br	801c41c <close+0x38>
 801c418:	0005883a 	mov	r2,zero
 801c41c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 801c420:	e0bffd17 	ldw	r2,-12(fp)
 801c424:	10001926 	beq	r2,zero,801c48c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 801c428:	e0bffd17 	ldw	r2,-12(fp)
 801c42c:	10800017 	ldw	r2,0(r2)
 801c430:	10800417 	ldw	r2,16(r2)
 801c434:	10000626 	beq	r2,zero,801c450 <close+0x6c>
 801c438:	e0bffd17 	ldw	r2,-12(fp)
 801c43c:	10800017 	ldw	r2,0(r2)
 801c440:	10800417 	ldw	r2,16(r2)
 801c444:	e13ffd17 	ldw	r4,-12(fp)
 801c448:	103ee83a 	callr	r2
 801c44c:	00000106 	br	801c454 <close+0x70>
 801c450:	0005883a 	mov	r2,zero
 801c454:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 801c458:	e13fff17 	ldw	r4,-4(fp)
 801c45c:	801d0140 	call	801d014 <alt_release_fd>
    if (rval < 0)
 801c460:	e0bffe17 	ldw	r2,-8(fp)
 801c464:	1000070e 	bge	r2,zero,801c484 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 801c468:	801c3a80 	call	801c3a8 <alt_get_errno>
 801c46c:	1007883a 	mov	r3,r2
 801c470:	e0bffe17 	ldw	r2,-8(fp)
 801c474:	0085c83a 	sub	r2,zero,r2
 801c478:	18800015 	stw	r2,0(r3)
      return -1;
 801c47c:	00bfffc4 	movi	r2,-1
 801c480:	00000706 	br	801c4a0 <close+0xbc>
    }
    return 0;
 801c484:	0005883a 	mov	r2,zero
 801c488:	00000506 	br	801c4a0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801c48c:	801c3a80 	call	801c3a8 <alt_get_errno>
 801c490:	1007883a 	mov	r3,r2
 801c494:	00801444 	movi	r2,81
 801c498:	18800015 	stw	r2,0(r3)
    return -1;
 801c49c:	00bfffc4 	movi	r2,-1
  }
}
 801c4a0:	e037883a 	mov	sp,fp
 801c4a4:	dfc00117 	ldw	ra,4(sp)
 801c4a8:	df000017 	ldw	fp,0(sp)
 801c4ac:	dec00204 	addi	sp,sp,8
 801c4b0:	f800283a 	ret

0801c4b4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 801c4b4:	defffc04 	addi	sp,sp,-16
 801c4b8:	df000315 	stw	fp,12(sp)
 801c4bc:	df000304 	addi	fp,sp,12
 801c4c0:	e13ffd15 	stw	r4,-12(fp)
 801c4c4:	e17ffe15 	stw	r5,-8(fp)
 801c4c8:	e1bfff15 	stw	r6,-4(fp)
  return len;
 801c4cc:	e0bfff17 	ldw	r2,-4(fp)
}
 801c4d0:	e037883a 	mov	sp,fp
 801c4d4:	df000017 	ldw	fp,0(sp)
 801c4d8:	dec00104 	addi	sp,sp,4
 801c4dc:	f800283a 	ret

0801c4e0 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 801c4e0:	defffd04 	addi	sp,sp,-12
 801c4e4:	df000215 	stw	fp,8(sp)
 801c4e8:	df000204 	addi	fp,sp,8
 801c4ec:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 801c4f0:	0001883a 	nop
 801c4f4:	e0bfff17 	ldw	r2,-4(fp)
 801c4f8:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 801c4fc:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 801c500:	10000226 	beq	r2,zero,801c50c <_exit+0x2c>
    ALT_SIM_FAIL();
 801c504:	002af070 	cmpltui	zero,zero,43969
 801c508:	00000106 	br	801c510 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 801c50c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 801c510:	003fff06 	br	801c510 <__alt_data_end+0xf801c510>

0801c514 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801c514:	defffe04 	addi	sp,sp,-8
 801c518:	dfc00115 	stw	ra,4(sp)
 801c51c:	df000015 	stw	fp,0(sp)
 801c520:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801c524:	d0a02017 	ldw	r2,-32640(gp)
 801c528:	10000326 	beq	r2,zero,801c538 <alt_get_errno+0x24>
 801c52c:	d0a02017 	ldw	r2,-32640(gp)
 801c530:	103ee83a 	callr	r2
 801c534:	00000106 	br	801c53c <alt_get_errno+0x28>
 801c538:	d0a72c04 	addi	r2,gp,-25424
}
 801c53c:	e037883a 	mov	sp,fp
 801c540:	dfc00117 	ldw	ra,4(sp)
 801c544:	df000017 	ldw	fp,0(sp)
 801c548:	dec00204 	addi	sp,sp,8
 801c54c:	f800283a 	ret

0801c550 <fcntl>:
 *
 * ALT_FCNTL is mapped onto the fcntl() system call in alt_syscall.h
 */
 
int ALT_FCNTL (int file, int cmd, ...)
{ 
 801c550:	defff704 	addi	sp,sp,-36
 801c554:	dfc00615 	stw	ra,24(sp)
 801c558:	df000515 	stw	fp,20(sp)
 801c55c:	df000504 	addi	fp,sp,20
 801c560:	e13ffe15 	stw	r4,-8(fp)
 801c564:	e17fff15 	stw	r5,-4(fp)
 801c568:	e1800215 	stw	r6,8(fp)
 801c56c:	e1c00315 	stw	r7,12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801c570:	e0bffe17 	ldw	r2,-8(fp)
 801c574:	10000616 	blt	r2,zero,801c590 <fcntl+0x40>
 801c578:	e0bffe17 	ldw	r2,-8(fp)
 801c57c:	10c00324 	muli	r3,r2,12
 801c580:	008200b4 	movhi	r2,2050
 801c584:	10835404 	addi	r2,r2,3408
 801c588:	1885883a 	add	r2,r3,r2
 801c58c:	00000106 	br	801c594 <fcntl+0x44>
 801c590:	0005883a 	mov	r2,zero
 801c594:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801c598:	e0bffb17 	ldw	r2,-20(fp)
 801c59c:	10002a26 	beq	r2,zero,801c648 <fcntl+0xf8>
  {
    switch (cmd)
 801c5a0:	e0bfff17 	ldw	r2,-4(fp)
 801c5a4:	10c000e0 	cmpeqi	r3,r2,3
 801c5a8:	1800031e 	bne	r3,zero,801c5b8 <fcntl+0x68>
 801c5ac:	10800120 	cmpeqi	r2,r2,4
 801c5b0:	1000071e 	bne	r2,zero,801c5d0 <fcntl+0x80>
 801c5b4:	00001e06 	br	801c630 <fcntl+0xe0>
    {
    case F_GETFL:
      return fd->fd_flags & ~((alt_u32) ALT_FD_FLAGS_MASK);
 801c5b8:	e0bffb17 	ldw	r2,-20(fp)
 801c5bc:	10c00217 	ldw	r3,8(r2)
 801c5c0:	00900034 	movhi	r2,16384
 801c5c4:	10bfffc4 	addi	r2,r2,-1
 801c5c8:	1884703a 	and	r2,r3,r2
 801c5cc:	00002306 	br	801c65c <fcntl+0x10c>
    case F_SETFL:
      va_start(argp, cmd);
 801c5d0:	e0800204 	addi	r2,fp,8
 801c5d4:	e0bffd15 	stw	r2,-12(fp)
      flags = va_arg(argp, long);
 801c5d8:	e0bffd17 	ldw	r2,-12(fp)
 801c5dc:	10c00104 	addi	r3,r2,4
 801c5e0:	e0fffd15 	stw	r3,-12(fp)
 801c5e4:	10800017 	ldw	r2,0(r2)
 801c5e8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags &= ~ALT_FCNTL_FLAGS_MASK;
 801c5ec:	e0bffb17 	ldw	r2,-20(fp)
 801c5f0:	10c00217 	ldw	r3,8(r2)
 801c5f4:	00affdc4 	movi	r2,-16393
 801c5f8:	1886703a 	and	r3,r3,r2
 801c5fc:	e0bffb17 	ldw	r2,-20(fp)
 801c600:	10c00215 	stw	r3,8(r2)
      fd->fd_flags |= (flags & ALT_FCNTL_FLAGS_MASK);
 801c604:	e0bffb17 	ldw	r2,-20(fp)
 801c608:	10800217 	ldw	r2,8(r2)
 801c60c:	1007883a 	mov	r3,r2
 801c610:	e0bffc17 	ldw	r2,-16(fp)
 801c614:	1090020c 	andi	r2,r2,16392
 801c618:	1884b03a 	or	r2,r3,r2
 801c61c:	1007883a 	mov	r3,r2
 801c620:	e0bffb17 	ldw	r2,-20(fp)
 801c624:	10c00215 	stw	r3,8(r2)
      va_end(argp);
      return 0;
 801c628:	0005883a 	mov	r2,zero
 801c62c:	00000b06 	br	801c65c <fcntl+0x10c>
    default:
      ALT_ERRNO = EINVAL;
 801c630:	801c5140 	call	801c514 <alt_get_errno>
 801c634:	1007883a 	mov	r3,r2
 801c638:	00800584 	movi	r2,22
 801c63c:	18800015 	stw	r2,0(r3)
      return -1;
 801c640:	00bfffc4 	movi	r2,-1
 801c644:	00000506 	br	801c65c <fcntl+0x10c>
    }
  }

  ALT_ERRNO = EBADFD;
 801c648:	801c5140 	call	801c514 <alt_get_errno>
 801c64c:	1007883a 	mov	r3,r2
 801c650:	00801444 	movi	r2,81
 801c654:	18800015 	stw	r2,0(r3)
  return -1;
 801c658:	00bfffc4 	movi	r2,-1
}
 801c65c:	e037883a 	mov	sp,fp
 801c660:	dfc00117 	ldw	ra,4(sp)
 801c664:	df000017 	ldw	fp,0(sp)
 801c668:	dec00404 	addi	sp,sp,16
 801c66c:	f800283a 	ret

0801c670 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801c670:	defffe04 	addi	sp,sp,-8
 801c674:	dfc00115 	stw	ra,4(sp)
 801c678:	df000015 	stw	fp,0(sp)
 801c67c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801c680:	d0a02017 	ldw	r2,-32640(gp)
 801c684:	10000326 	beq	r2,zero,801c694 <alt_get_errno+0x24>
 801c688:	d0a02017 	ldw	r2,-32640(gp)
 801c68c:	103ee83a 	callr	r2
 801c690:	00000106 	br	801c698 <alt_get_errno+0x28>
 801c694:	d0a72c04 	addi	r2,gp,-25424
}
 801c698:	e037883a 	mov	sp,fp
 801c69c:	dfc00117 	ldw	ra,4(sp)
 801c6a0:	df000017 	ldw	fp,0(sp)
 801c6a4:	dec00204 	addi	sp,sp,8
 801c6a8:	f800283a 	ret

0801c6ac <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 801c6ac:	defffb04 	addi	sp,sp,-20
 801c6b0:	dfc00415 	stw	ra,16(sp)
 801c6b4:	df000315 	stw	fp,12(sp)
 801c6b8:	df000304 	addi	fp,sp,12
 801c6bc:	e13ffe15 	stw	r4,-8(fp)
 801c6c0:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801c6c4:	e0bffe17 	ldw	r2,-8(fp)
 801c6c8:	10000616 	blt	r2,zero,801c6e4 <fstat+0x38>
 801c6cc:	e0bffe17 	ldw	r2,-8(fp)
 801c6d0:	10c00324 	muli	r3,r2,12
 801c6d4:	008200b4 	movhi	r2,2050
 801c6d8:	10835404 	addi	r2,r2,3408
 801c6dc:	1885883a 	add	r2,r3,r2
 801c6e0:	00000106 	br	801c6e8 <fstat+0x3c>
 801c6e4:	0005883a 	mov	r2,zero
 801c6e8:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 801c6ec:	e0bffd17 	ldw	r2,-12(fp)
 801c6f0:	10001026 	beq	r2,zero,801c734 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 801c6f4:	e0bffd17 	ldw	r2,-12(fp)
 801c6f8:	10800017 	ldw	r2,0(r2)
 801c6fc:	10800817 	ldw	r2,32(r2)
 801c700:	10000726 	beq	r2,zero,801c720 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 801c704:	e0bffd17 	ldw	r2,-12(fp)
 801c708:	10800017 	ldw	r2,0(r2)
 801c70c:	10800817 	ldw	r2,32(r2)
 801c710:	e17fff17 	ldw	r5,-4(fp)
 801c714:	e13ffd17 	ldw	r4,-12(fp)
 801c718:	103ee83a 	callr	r2
 801c71c:	00000a06 	br	801c748 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 801c720:	e0bfff17 	ldw	r2,-4(fp)
 801c724:	00c80004 	movi	r3,8192
 801c728:	10c00115 	stw	r3,4(r2)
      return 0;
 801c72c:	0005883a 	mov	r2,zero
 801c730:	00000506 	br	801c748 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801c734:	801c6700 	call	801c670 <alt_get_errno>
 801c738:	1007883a 	mov	r3,r2
 801c73c:	00801444 	movi	r2,81
 801c740:	18800015 	stw	r2,0(r3)
    return -1;
 801c744:	00bfffc4 	movi	r2,-1
  }
}
 801c748:	e037883a 	mov	sp,fp
 801c74c:	dfc00117 	ldw	ra,4(sp)
 801c750:	df000017 	ldw	fp,0(sp)
 801c754:	dec00204 	addi	sp,sp,8
 801c758:	f800283a 	ret

0801c75c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
 801c75c:	deffff04 	addi	sp,sp,-4
 801c760:	df000015 	stw	fp,0(sp)
 801c764:	d839883a 	mov	fp,sp
  return 0;
 801c768:	0005883a 	mov	r2,zero
}
 801c76c:	e037883a 	mov	sp,fp
 801c770:	df000017 	ldw	fp,0(sp)
 801c774:	dec00104 	addi	sp,sp,4
 801c778:	f800283a 	ret

0801c77c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801c77c:	defffe04 	addi	sp,sp,-8
 801c780:	dfc00115 	stw	ra,4(sp)
 801c784:	df000015 	stw	fp,0(sp)
 801c788:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801c78c:	d0a02017 	ldw	r2,-32640(gp)
 801c790:	10000326 	beq	r2,zero,801c7a0 <alt_get_errno+0x24>
 801c794:	d0a02017 	ldw	r2,-32640(gp)
 801c798:	103ee83a 	callr	r2
 801c79c:	00000106 	br	801c7a4 <alt_get_errno+0x28>
 801c7a0:	d0a72c04 	addi	r2,gp,-25424
}
 801c7a4:	e037883a 	mov	sp,fp
 801c7a8:	dfc00117 	ldw	ra,4(sp)
 801c7ac:	df000017 	ldw	fp,0(sp)
 801c7b0:	dec00204 	addi	sp,sp,8
 801c7b4:	f800283a 	ret

0801c7b8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 801c7b8:	deffed04 	addi	sp,sp,-76
 801c7bc:	dfc01215 	stw	ra,72(sp)
 801c7c0:	df001115 	stw	fp,68(sp)
 801c7c4:	df001104 	addi	fp,sp,68
 801c7c8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801c7cc:	e0bfff17 	ldw	r2,-4(fp)
 801c7d0:	10000616 	blt	r2,zero,801c7ec <isatty+0x34>
 801c7d4:	e0bfff17 	ldw	r2,-4(fp)
 801c7d8:	10c00324 	muli	r3,r2,12
 801c7dc:	008200b4 	movhi	r2,2050
 801c7e0:	10835404 	addi	r2,r2,3408
 801c7e4:	1885883a 	add	r2,r3,r2
 801c7e8:	00000106 	br	801c7f0 <isatty+0x38>
 801c7ec:	0005883a 	mov	r2,zero
 801c7f0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 801c7f4:	e0bfef17 	ldw	r2,-68(fp)
 801c7f8:	10000e26 	beq	r2,zero,801c834 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 801c7fc:	e0bfef17 	ldw	r2,-68(fp)
 801c800:	10800017 	ldw	r2,0(r2)
 801c804:	10800817 	ldw	r2,32(r2)
 801c808:	1000021e 	bne	r2,zero,801c814 <isatty+0x5c>
    {
      return 1;
 801c80c:	00800044 	movi	r2,1
 801c810:	00000d06 	br	801c848 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 801c814:	e0bff004 	addi	r2,fp,-64
 801c818:	100b883a 	mov	r5,r2
 801c81c:	e13fff17 	ldw	r4,-4(fp)
 801c820:	801c6ac0 	call	801c6ac <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 801c824:	e0bff117 	ldw	r2,-60(fp)
 801c828:	10880020 	cmpeqi	r2,r2,8192
 801c82c:	10803fcc 	andi	r2,r2,255
 801c830:	00000506 	br	801c848 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 801c834:	801c77c0 	call	801c77c <alt_get_errno>
 801c838:	1007883a 	mov	r3,r2
 801c83c:	00801444 	movi	r2,81
 801c840:	18800015 	stw	r2,0(r3)
    return 0;
 801c844:	0005883a 	mov	r2,zero
  }
}
 801c848:	e037883a 	mov	sp,fp
 801c84c:	dfc00117 	ldw	ra,4(sp)
 801c850:	df000017 	ldw	fp,0(sp)
 801c854:	dec00204 	addi	sp,sp,8
 801c858:	f800283a 	ret

0801c85c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801c85c:	defffe04 	addi	sp,sp,-8
 801c860:	dfc00115 	stw	ra,4(sp)
 801c864:	df000015 	stw	fp,0(sp)
 801c868:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801c86c:	d0a02017 	ldw	r2,-32640(gp)
 801c870:	10000326 	beq	r2,zero,801c880 <alt_get_errno+0x24>
 801c874:	d0a02017 	ldw	r2,-32640(gp)
 801c878:	103ee83a 	callr	r2
 801c87c:	00000106 	br	801c884 <alt_get_errno+0x28>
 801c880:	d0a72c04 	addi	r2,gp,-25424
}
 801c884:	e037883a 	mov	sp,fp
 801c888:	dfc00117 	ldw	ra,4(sp)
 801c88c:	df000017 	ldw	fp,0(sp)
 801c890:	dec00204 	addi	sp,sp,8
 801c894:	f800283a 	ret

0801c898 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
 801c898:	defffb04 	addi	sp,sp,-20
 801c89c:	dfc00415 	stw	ra,16(sp)
 801c8a0:	df000315 	stw	fp,12(sp)
 801c8a4:	df000304 	addi	fp,sp,12
 801c8a8:	e13ffe15 	stw	r4,-8(fp)
 801c8ac:	e17fff15 	stw	r5,-4(fp)
  int status = 0;
 801c8b0:	e03ffd15 	stw	zero,-12(fp)

  if (pid <= 0)
 801c8b4:	e0bffe17 	ldw	r2,-8(fp)
 801c8b8:	00802f16 	blt	zero,r2,801c978 <kill+0xe0>
  {
    switch (sig)
 801c8bc:	e0bfff17 	ldw	r2,-4(fp)
 801c8c0:	10800828 	cmpgeui	r2,r2,32
 801c8c4:	1000291e 	bne	r2,zero,801c96c <kill+0xd4>
 801c8c8:	e0bfff17 	ldw	r2,-4(fp)
 801c8cc:	100690ba 	slli	r3,r2,2
 801c8d0:	008200b4 	movhi	r2,2050
 801c8d4:	10b23904 	addi	r2,r2,-14108
 801c8d8:	1885883a 	add	r2,r3,r2
 801c8dc:	10800017 	ldw	r2,0(r2)
 801c8e0:	1000683a 	jmp	r2
 801c8e4:	0801c98c 	andi	zero,at,1830
 801c8e8:	0801c96c 	andhi	zero,at,1829
 801c8ec:	0801c96c 	andhi	zero,at,1829
 801c8f0:	0801c964 	muli	zero,at,1829
 801c8f4:	0801c964 	muli	zero,at,1829
 801c8f8:	0801c964 	muli	zero,at,1829
 801c8fc:	0801c964 	muli	zero,at,1829
 801c900:	0801c96c 	andhi	zero,at,1829
 801c904:	0801c964 	muli	zero,at,1829
 801c908:	0801c964 	muli	zero,at,1829
 801c90c:	0801c964 	muli	zero,at,1829
 801c910:	0801c964 	muli	zero,at,1829
 801c914:	0801c964 	muli	zero,at,1829
 801c918:	0801c964 	muli	zero,at,1829
 801c91c:	0801c964 	muli	zero,at,1829
 801c920:	0801c964 	muli	zero,at,1829
 801c924:	0801c98c 	andi	zero,at,1830
 801c928:	0801c96c 	andhi	zero,at,1829
 801c92c:	0801c96c 	andhi	zero,at,1829
 801c930:	0801c96c 	andhi	zero,at,1829
 801c934:	0801c98c 	andi	zero,at,1830
 801c938:	0801c96c 	andhi	zero,at,1829
 801c93c:	0801c96c 	andhi	zero,at,1829
 801c940:	0801c964 	muli	zero,at,1829
 801c944:	0801c964 	muli	zero,at,1829
 801c948:	0801c964 	muli	zero,at,1829
 801c94c:	0801c964 	muli	zero,at,1829
 801c950:	0801c964 	muli	zero,at,1829
 801c954:	0801c96c 	andhi	zero,at,1829
 801c958:	0801c96c 	andhi	zero,at,1829
 801c95c:	0801c964 	muli	zero,at,1829
 801c960:	0801c964 	muli	zero,at,1829
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
 801c964:	0009883a 	mov	r4,zero
 801c968:	801c4e00 	call	801c4e0 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
 801c96c:	00800584 	movi	r2,22
 801c970:	e0bffd15 	stw	r2,-12(fp)
 801c974:	00000606 	br	801c990 <kill+0xf8>
    }
  }

  else if (pid > 0)
 801c978:	e0bffe17 	ldw	r2,-8(fp)
 801c97c:	0080040e 	bge	zero,r2,801c990 <kill+0xf8>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
 801c980:	008000c4 	movi	r2,3
 801c984:	e0bffd15 	stw	r2,-12(fp)
 801c988:	00000106 	br	801c990 <kill+0xf8>
    {
    case 0:

      /* The null signal is used to check that a pid is valid. */

      break;
 801c98c:	0001883a 	nop
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  }

  if (status)
 801c990:	e0bffd17 	ldw	r2,-12(fp)
 801c994:	10000626 	beq	r2,zero,801c9b0 <kill+0x118>
  {
    ALT_ERRNO = status;
 801c998:	801c85c0 	call	801c85c <alt_get_errno>
 801c99c:	1007883a 	mov	r3,r2
 801c9a0:	e0bffd17 	ldw	r2,-12(fp)
 801c9a4:	18800015 	stw	r2,0(r3)
    return -1;
 801c9a8:	00bfffc4 	movi	r2,-1
 801c9ac:	00000106 	br	801c9b4 <kill+0x11c>
  }

  return 0;
 801c9b0:	0005883a 	mov	r2,zero
}
 801c9b4:	e037883a 	mov	sp,fp
 801c9b8:	dfc00117 	ldw	ra,4(sp)
 801c9bc:	df000017 	ldw	fp,0(sp)
 801c9c0:	dec00204 	addi	sp,sp,8
 801c9c4:	f800283a 	ret

0801c9c8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 801c9c8:	defffc04 	addi	sp,sp,-16
 801c9cc:	df000315 	stw	fp,12(sp)
 801c9d0:	df000304 	addi	fp,sp,12
 801c9d4:	e13ffd15 	stw	r4,-12(fp)
 801c9d8:	e17ffe15 	stw	r5,-8(fp)
 801c9dc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 801c9e0:	e0fffe17 	ldw	r3,-8(fp)
 801c9e4:	e0bffd17 	ldw	r2,-12(fp)
 801c9e8:	18800c26 	beq	r3,r2,801ca1c <alt_load_section+0x54>
  {
    while( to != end )
 801c9ec:	00000806 	br	801ca10 <alt_load_section+0x48>
    {
      *to++ = *from++;
 801c9f0:	e0bffe17 	ldw	r2,-8(fp)
 801c9f4:	10c00104 	addi	r3,r2,4
 801c9f8:	e0fffe15 	stw	r3,-8(fp)
 801c9fc:	e0fffd17 	ldw	r3,-12(fp)
 801ca00:	19000104 	addi	r4,r3,4
 801ca04:	e13ffd15 	stw	r4,-12(fp)
 801ca08:	18c00017 	ldw	r3,0(r3)
 801ca0c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 801ca10:	e0fffe17 	ldw	r3,-8(fp)
 801ca14:	e0bfff17 	ldw	r2,-4(fp)
 801ca18:	18bff51e 	bne	r3,r2,801c9f0 <__alt_data_end+0xf801c9f0>
    {
      *to++ = *from++;
    }
  }
}
 801ca1c:	0001883a 	nop
 801ca20:	e037883a 	mov	sp,fp
 801ca24:	df000017 	ldw	fp,0(sp)
 801ca28:	dec00104 	addi	sp,sp,4
 801ca2c:	f800283a 	ret

0801ca30 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 801ca30:	defffe04 	addi	sp,sp,-8
 801ca34:	dfc00115 	stw	ra,4(sp)
 801ca38:	df000015 	stw	fp,0(sp)
 801ca3c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 801ca40:	018200b4 	movhi	r6,2050
 801ca44:	31882204 	addi	r6,r6,8328
 801ca48:	014200b4 	movhi	r5,2050
 801ca4c:	29412104 	addi	r5,r5,1156
 801ca50:	010200b4 	movhi	r4,2050
 801ca54:	21082204 	addi	r4,r4,8328
 801ca58:	801c9c80 	call	801c9c8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 801ca5c:	01820034 	movhi	r6,2048
 801ca60:	31809104 	addi	r6,r6,580
 801ca64:	01420034 	movhi	r5,2048
 801ca68:	29400804 	addi	r5,r5,32
 801ca6c:	01020034 	movhi	r4,2048
 801ca70:	21000804 	addi	r4,r4,32
 801ca74:	801c9c80 	call	801c9c8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 801ca78:	018200b4 	movhi	r6,2050
 801ca7c:	31812104 	addi	r6,r6,1156
 801ca80:	014200b4 	movhi	r5,2050
 801ca84:	297e4504 	addi	r5,r5,-1772
 801ca88:	010200b4 	movhi	r4,2050
 801ca8c:	213e4504 	addi	r4,r4,-1772
 801ca90:	801c9c80 	call	801c9c8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 801ca94:	801ebd00 	call	801ebd0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 801ca98:	801eff40 	call	801eff4 <alt_icache_flush_all>
}
 801ca9c:	0001883a 	nop
 801caa0:	e037883a 	mov	sp,fp
 801caa4:	dfc00117 	ldw	ra,4(sp)
 801caa8:	df000017 	ldw	fp,0(sp)
 801caac:	dec00204 	addi	sp,sp,8
 801cab0:	f800283a 	ret

0801cab4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801cab4:	defffe04 	addi	sp,sp,-8
 801cab8:	dfc00115 	stw	ra,4(sp)
 801cabc:	df000015 	stw	fp,0(sp)
 801cac0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801cac4:	d0a02017 	ldw	r2,-32640(gp)
 801cac8:	10000326 	beq	r2,zero,801cad8 <alt_get_errno+0x24>
 801cacc:	d0a02017 	ldw	r2,-32640(gp)
 801cad0:	103ee83a 	callr	r2
 801cad4:	00000106 	br	801cadc <alt_get_errno+0x28>
 801cad8:	d0a72c04 	addi	r2,gp,-25424
}
 801cadc:	e037883a 	mov	sp,fp
 801cae0:	dfc00117 	ldw	ra,4(sp)
 801cae4:	df000017 	ldw	fp,0(sp)
 801cae8:	dec00204 	addi	sp,sp,8
 801caec:	f800283a 	ret

0801caf0 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 801caf0:	defff904 	addi	sp,sp,-28
 801caf4:	dfc00615 	stw	ra,24(sp)
 801caf8:	df000515 	stw	fp,20(sp)
 801cafc:	df000504 	addi	fp,sp,20
 801cb00:	e13ffd15 	stw	r4,-12(fp)
 801cb04:	e17ffe15 	stw	r5,-8(fp)
 801cb08:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 801cb0c:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801cb10:	e0bffd17 	ldw	r2,-12(fp)
 801cb14:	10000616 	blt	r2,zero,801cb30 <lseek+0x40>
 801cb18:	e0bffd17 	ldw	r2,-12(fp)
 801cb1c:	10c00324 	muli	r3,r2,12
 801cb20:	008200b4 	movhi	r2,2050
 801cb24:	10835404 	addi	r2,r2,3408
 801cb28:	1885883a 	add	r2,r3,r2
 801cb2c:	00000106 	br	801cb34 <lseek+0x44>
 801cb30:	0005883a 	mov	r2,zero
 801cb34:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 801cb38:	e0bffc17 	ldw	r2,-16(fp)
 801cb3c:	10001026 	beq	r2,zero,801cb80 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 801cb40:	e0bffc17 	ldw	r2,-16(fp)
 801cb44:	10800017 	ldw	r2,0(r2)
 801cb48:	10800717 	ldw	r2,28(r2)
 801cb4c:	10000926 	beq	r2,zero,801cb74 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 801cb50:	e0bffc17 	ldw	r2,-16(fp)
 801cb54:	10800017 	ldw	r2,0(r2)
 801cb58:	10800717 	ldw	r2,28(r2)
 801cb5c:	e1bfff17 	ldw	r6,-4(fp)
 801cb60:	e17ffe17 	ldw	r5,-8(fp)
 801cb64:	e13ffc17 	ldw	r4,-16(fp)
 801cb68:	103ee83a 	callr	r2
 801cb6c:	e0bffb15 	stw	r2,-20(fp)
 801cb70:	00000506 	br	801cb88 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 801cb74:	00bfde84 	movi	r2,-134
 801cb78:	e0bffb15 	stw	r2,-20(fp)
 801cb7c:	00000206 	br	801cb88 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 801cb80:	00bfebc4 	movi	r2,-81
 801cb84:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 801cb88:	e0bffb17 	ldw	r2,-20(fp)
 801cb8c:	1000070e 	bge	r2,zero,801cbac <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 801cb90:	801cab40 	call	801cab4 <alt_get_errno>
 801cb94:	1007883a 	mov	r3,r2
 801cb98:	e0bffb17 	ldw	r2,-20(fp)
 801cb9c:	0085c83a 	sub	r2,zero,r2
 801cba0:	18800015 	stw	r2,0(r3)
    rc = -1;
 801cba4:	00bfffc4 	movi	r2,-1
 801cba8:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 801cbac:	e0bffb17 	ldw	r2,-20(fp)
}
 801cbb0:	e037883a 	mov	sp,fp
 801cbb4:	dfc00117 	ldw	ra,4(sp)
 801cbb8:	df000017 	ldw	fp,0(sp)
 801cbbc:	dec00204 	addi	sp,sp,8
 801cbc0:	f800283a 	ret

0801cbc4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 801cbc4:	defffd04 	addi	sp,sp,-12
 801cbc8:	dfc00215 	stw	ra,8(sp)
 801cbcc:	df000115 	stw	fp,4(sp)
 801cbd0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 801cbd4:	0009883a 	mov	r4,zero
 801cbd8:	801d4640 	call	801d464 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 801cbdc:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 801cbe0:	801d49c0 	call	801d49c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 801cbe4:	018200b4 	movhi	r6,2050
 801cbe8:	31811304 	addi	r6,r6,1100
 801cbec:	014200b4 	movhi	r5,2050
 801cbf0:	29411304 	addi	r5,r5,1100
 801cbf4:	010200b4 	movhi	r4,2050
 801cbf8:	21011304 	addi	r4,r4,1100
 801cbfc:	801f38c0 	call	801f38c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 801cc00:	801ecf80 	call	801ecf8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 801cc04:	010200b4 	movhi	r4,2050
 801cc08:	213b5604 	addi	r4,r4,-4776
 801cc0c:	801f5580 	call	801f558 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 801cc10:	d0a73017 	ldw	r2,-25408(gp)
 801cc14:	d0e73117 	ldw	r3,-25404(gp)
 801cc18:	d1273217 	ldw	r4,-25400(gp)
 801cc1c:	200d883a 	mov	r6,r4
 801cc20:	180b883a 	mov	r5,r3
 801cc24:	1009883a 	mov	r4,r2
 801cc28:	80013300 	call	8001330 <main>
 801cc2c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 801cc30:	01000044 	movi	r4,1
 801cc34:	801c3e40 	call	801c3e4 <close>
  exit (result);
 801cc38:	e13fff17 	ldw	r4,-4(fp)
 801cc3c:	801f56c0 	call	801f56c <exit>

0801cc40 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 801cc40:	defffe04 	addi	sp,sp,-8
 801cc44:	df000115 	stw	fp,4(sp)
 801cc48:	df000104 	addi	fp,sp,4
 801cc4c:	e13fff15 	stw	r4,-4(fp)
}
 801cc50:	0001883a 	nop
 801cc54:	e037883a 	mov	sp,fp
 801cc58:	df000017 	ldw	fp,0(sp)
 801cc5c:	dec00104 	addi	sp,sp,4
 801cc60:	f800283a 	ret

0801cc64 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 801cc64:	defffe04 	addi	sp,sp,-8
 801cc68:	df000115 	stw	fp,4(sp)
 801cc6c:	df000104 	addi	fp,sp,4
 801cc70:	e13fff15 	stw	r4,-4(fp)
}
 801cc74:	0001883a 	nop
 801cc78:	e037883a 	mov	sp,fp
 801cc7c:	df000017 	ldw	fp,0(sp)
 801cc80:	dec00104 	addi	sp,sp,4
 801cc84:	f800283a 	ret

0801cc88 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801cc88:	defffe04 	addi	sp,sp,-8
 801cc8c:	dfc00115 	stw	ra,4(sp)
 801cc90:	df000015 	stw	fp,0(sp)
 801cc94:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801cc98:	d0a02017 	ldw	r2,-32640(gp)
 801cc9c:	10000326 	beq	r2,zero,801ccac <alt_get_errno+0x24>
 801cca0:	d0a02017 	ldw	r2,-32640(gp)
 801cca4:	103ee83a 	callr	r2
 801cca8:	00000106 	br	801ccb0 <alt_get_errno+0x28>
 801ccac:	d0a72c04 	addi	r2,gp,-25424
}
 801ccb0:	e037883a 	mov	sp,fp
 801ccb4:	dfc00117 	ldw	ra,4(sp)
 801ccb8:	df000017 	ldw	fp,0(sp)
 801ccbc:	dec00204 	addi	sp,sp,8
 801ccc0:	f800283a 	ret

0801ccc4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 801ccc4:	defffd04 	addi	sp,sp,-12
 801ccc8:	df000215 	stw	fp,8(sp)
 801cccc:	df000204 	addi	fp,sp,8
 801ccd0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 801ccd4:	e0bfff17 	ldw	r2,-4(fp)
 801ccd8:	10800217 	ldw	r2,8(r2)
 801ccdc:	10d00034 	orhi	r3,r2,16384
 801cce0:	e0bfff17 	ldw	r2,-4(fp)
 801cce4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801cce8:	e03ffe15 	stw	zero,-8(fp)
 801ccec:	00001d06 	br	801cd64 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 801ccf0:	008200b4 	movhi	r2,2050
 801ccf4:	10835404 	addi	r2,r2,3408
 801ccf8:	e0fffe17 	ldw	r3,-8(fp)
 801ccfc:	18c00324 	muli	r3,r3,12
 801cd00:	10c5883a 	add	r2,r2,r3
 801cd04:	10c00017 	ldw	r3,0(r2)
 801cd08:	e0bfff17 	ldw	r2,-4(fp)
 801cd0c:	10800017 	ldw	r2,0(r2)
 801cd10:	1880111e 	bne	r3,r2,801cd58 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 801cd14:	008200b4 	movhi	r2,2050
 801cd18:	10835404 	addi	r2,r2,3408
 801cd1c:	e0fffe17 	ldw	r3,-8(fp)
 801cd20:	18c00324 	muli	r3,r3,12
 801cd24:	10c5883a 	add	r2,r2,r3
 801cd28:	10800204 	addi	r2,r2,8
 801cd2c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 801cd30:	1000090e 	bge	r2,zero,801cd58 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 801cd34:	e0bffe17 	ldw	r2,-8(fp)
 801cd38:	10c00324 	muli	r3,r2,12
 801cd3c:	008200b4 	movhi	r2,2050
 801cd40:	10835404 	addi	r2,r2,3408
 801cd44:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 801cd48:	e0bfff17 	ldw	r2,-4(fp)
 801cd4c:	18800226 	beq	r3,r2,801cd58 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 801cd50:	00bffcc4 	movi	r2,-13
 801cd54:	00000806 	br	801cd78 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 801cd58:	e0bffe17 	ldw	r2,-8(fp)
 801cd5c:	10800044 	addi	r2,r2,1
 801cd60:	e0bffe15 	stw	r2,-8(fp)
 801cd64:	d0a01f17 	ldw	r2,-32644(gp)
 801cd68:	1007883a 	mov	r3,r2
 801cd6c:	e0bffe17 	ldw	r2,-8(fp)
 801cd70:	18bfdf2e 	bgeu	r3,r2,801ccf0 <__alt_data_end+0xf801ccf0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 801cd74:	0005883a 	mov	r2,zero
}
 801cd78:	e037883a 	mov	sp,fp
 801cd7c:	df000017 	ldw	fp,0(sp)
 801cd80:	dec00104 	addi	sp,sp,4
 801cd84:	f800283a 	ret

0801cd88 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 801cd88:	defff604 	addi	sp,sp,-40
 801cd8c:	dfc00915 	stw	ra,36(sp)
 801cd90:	df000815 	stw	fp,32(sp)
 801cd94:	df000804 	addi	fp,sp,32
 801cd98:	e13ffd15 	stw	r4,-12(fp)
 801cd9c:	e17ffe15 	stw	r5,-8(fp)
 801cda0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 801cda4:	00bfffc4 	movi	r2,-1
 801cda8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 801cdac:	00bffb44 	movi	r2,-19
 801cdb0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 801cdb4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 801cdb8:	d1601d04 	addi	r5,gp,-32652
 801cdbc:	e13ffd17 	ldw	r4,-12(fp)
 801cdc0:	801edb80 	call	801edb8 <alt_find_dev>
 801cdc4:	e0bff815 	stw	r2,-32(fp)
 801cdc8:	e0bff817 	ldw	r2,-32(fp)
 801cdcc:	1000051e 	bne	r2,zero,801cde4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 801cdd0:	e13ffd17 	ldw	r4,-12(fp)
 801cdd4:	801ee480 	call	801ee48 <alt_find_file>
 801cdd8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 801cddc:	00800044 	movi	r2,1
 801cde0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 801cde4:	e0bff817 	ldw	r2,-32(fp)
 801cde8:	10002926 	beq	r2,zero,801ce90 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 801cdec:	e13ff817 	ldw	r4,-32(fp)
 801cdf0:	801ef500 	call	801ef50 <alt_get_fd>
 801cdf4:	e0bff915 	stw	r2,-28(fp)
 801cdf8:	e0bff917 	ldw	r2,-28(fp)
 801cdfc:	1000030e 	bge	r2,zero,801ce0c <open+0x84>
    {
      status = index;
 801ce00:	e0bff917 	ldw	r2,-28(fp)
 801ce04:	e0bffa15 	stw	r2,-24(fp)
 801ce08:	00002306 	br	801ce98 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 801ce0c:	e0bff917 	ldw	r2,-28(fp)
 801ce10:	10c00324 	muli	r3,r2,12
 801ce14:	008200b4 	movhi	r2,2050
 801ce18:	10835404 	addi	r2,r2,3408
 801ce1c:	1885883a 	add	r2,r3,r2
 801ce20:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 801ce24:	e0fffe17 	ldw	r3,-8(fp)
 801ce28:	00900034 	movhi	r2,16384
 801ce2c:	10bfffc4 	addi	r2,r2,-1
 801ce30:	1886703a 	and	r3,r3,r2
 801ce34:	e0bffc17 	ldw	r2,-16(fp)
 801ce38:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 801ce3c:	e0bffb17 	ldw	r2,-20(fp)
 801ce40:	1000051e 	bne	r2,zero,801ce58 <open+0xd0>
 801ce44:	e13ffc17 	ldw	r4,-16(fp)
 801ce48:	801ccc40 	call	801ccc4 <alt_file_locked>
 801ce4c:	e0bffa15 	stw	r2,-24(fp)
 801ce50:	e0bffa17 	ldw	r2,-24(fp)
 801ce54:	10001016 	blt	r2,zero,801ce98 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 801ce58:	e0bff817 	ldw	r2,-32(fp)
 801ce5c:	10800317 	ldw	r2,12(r2)
 801ce60:	10000826 	beq	r2,zero,801ce84 <open+0xfc>
 801ce64:	e0bff817 	ldw	r2,-32(fp)
 801ce68:	10800317 	ldw	r2,12(r2)
 801ce6c:	e1ffff17 	ldw	r7,-4(fp)
 801ce70:	e1bffe17 	ldw	r6,-8(fp)
 801ce74:	e17ffd17 	ldw	r5,-12(fp)
 801ce78:	e13ffc17 	ldw	r4,-16(fp)
 801ce7c:	103ee83a 	callr	r2
 801ce80:	00000106 	br	801ce88 <open+0x100>
 801ce84:	0005883a 	mov	r2,zero
 801ce88:	e0bffa15 	stw	r2,-24(fp)
 801ce8c:	00000206 	br	801ce98 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 801ce90:	00bffb44 	movi	r2,-19
 801ce94:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 801ce98:	e0bffa17 	ldw	r2,-24(fp)
 801ce9c:	1000090e 	bge	r2,zero,801cec4 <open+0x13c>
  {
    alt_release_fd (index);  
 801cea0:	e13ff917 	ldw	r4,-28(fp)
 801cea4:	801d0140 	call	801d014 <alt_release_fd>
    ALT_ERRNO = -status;
 801cea8:	801cc880 	call	801cc88 <alt_get_errno>
 801ceac:	1007883a 	mov	r3,r2
 801ceb0:	e0bffa17 	ldw	r2,-24(fp)
 801ceb4:	0085c83a 	sub	r2,zero,r2
 801ceb8:	18800015 	stw	r2,0(r3)
    return -1;
 801cebc:	00bfffc4 	movi	r2,-1
 801cec0:	00000106 	br	801cec8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 801cec4:	e0bff917 	ldw	r2,-28(fp)
}
 801cec8:	e037883a 	mov	sp,fp
 801cecc:	dfc00117 	ldw	ra,4(sp)
 801ced0:	df000017 	ldw	fp,0(sp)
 801ced4:	dec00204 	addi	sp,sp,8
 801ced8:	f800283a 	ret

0801cedc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801cedc:	defffe04 	addi	sp,sp,-8
 801cee0:	dfc00115 	stw	ra,4(sp)
 801cee4:	df000015 	stw	fp,0(sp)
 801cee8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801ceec:	d0a02017 	ldw	r2,-32640(gp)
 801cef0:	10000326 	beq	r2,zero,801cf00 <alt_get_errno+0x24>
 801cef4:	d0a02017 	ldw	r2,-32640(gp)
 801cef8:	103ee83a 	callr	r2
 801cefc:	00000106 	br	801cf04 <alt_get_errno+0x28>
 801cf00:	d0a72c04 	addi	r2,gp,-25424
}
 801cf04:	e037883a 	mov	sp,fp
 801cf08:	dfc00117 	ldw	ra,4(sp)
 801cf0c:	df000017 	ldw	fp,0(sp)
 801cf10:	dec00204 	addi	sp,sp,8
 801cf14:	f800283a 	ret

0801cf18 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 801cf18:	defff904 	addi	sp,sp,-28
 801cf1c:	dfc00615 	stw	ra,24(sp)
 801cf20:	df000515 	stw	fp,20(sp)
 801cf24:	df000504 	addi	fp,sp,20
 801cf28:	e13ffd15 	stw	r4,-12(fp)
 801cf2c:	e17ffe15 	stw	r5,-8(fp)
 801cf30:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801cf34:	e0bffd17 	ldw	r2,-12(fp)
 801cf38:	10000616 	blt	r2,zero,801cf54 <read+0x3c>
 801cf3c:	e0bffd17 	ldw	r2,-12(fp)
 801cf40:	10c00324 	muli	r3,r2,12
 801cf44:	008200b4 	movhi	r2,2050
 801cf48:	10835404 	addi	r2,r2,3408
 801cf4c:	1885883a 	add	r2,r3,r2
 801cf50:	00000106 	br	801cf58 <read+0x40>
 801cf54:	0005883a 	mov	r2,zero
 801cf58:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801cf5c:	e0bffb17 	ldw	r2,-20(fp)
 801cf60:	10002226 	beq	r2,zero,801cfec <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801cf64:	e0bffb17 	ldw	r2,-20(fp)
 801cf68:	10800217 	ldw	r2,8(r2)
 801cf6c:	108000cc 	andi	r2,r2,3
 801cf70:	10800060 	cmpeqi	r2,r2,1
 801cf74:	1000181e 	bne	r2,zero,801cfd8 <read+0xc0>
        (fd->dev->read))
 801cf78:	e0bffb17 	ldw	r2,-20(fp)
 801cf7c:	10800017 	ldw	r2,0(r2)
 801cf80:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 801cf84:	10001426 	beq	r2,zero,801cfd8 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 801cf88:	e0bffb17 	ldw	r2,-20(fp)
 801cf8c:	10800017 	ldw	r2,0(r2)
 801cf90:	10800517 	ldw	r2,20(r2)
 801cf94:	e0ffff17 	ldw	r3,-4(fp)
 801cf98:	180d883a 	mov	r6,r3
 801cf9c:	e17ffe17 	ldw	r5,-8(fp)
 801cfa0:	e13ffb17 	ldw	r4,-20(fp)
 801cfa4:	103ee83a 	callr	r2
 801cfa8:	e0bffc15 	stw	r2,-16(fp)
 801cfac:	e0bffc17 	ldw	r2,-16(fp)
 801cfb0:	1000070e 	bge	r2,zero,801cfd0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 801cfb4:	801cedc0 	call	801cedc <alt_get_errno>
 801cfb8:	1007883a 	mov	r3,r2
 801cfbc:	e0bffc17 	ldw	r2,-16(fp)
 801cfc0:	0085c83a 	sub	r2,zero,r2
 801cfc4:	18800015 	stw	r2,0(r3)
          return -1;
 801cfc8:	00bfffc4 	movi	r2,-1
 801cfcc:	00000c06 	br	801d000 <read+0xe8>
        }
        return rval;
 801cfd0:	e0bffc17 	ldw	r2,-16(fp)
 801cfd4:	00000a06 	br	801d000 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 801cfd8:	801cedc0 	call	801cedc <alt_get_errno>
 801cfdc:	1007883a 	mov	r3,r2
 801cfe0:	00800344 	movi	r2,13
 801cfe4:	18800015 	stw	r2,0(r3)
 801cfe8:	00000406 	br	801cffc <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 801cfec:	801cedc0 	call	801cedc <alt_get_errno>
 801cff0:	1007883a 	mov	r3,r2
 801cff4:	00801444 	movi	r2,81
 801cff8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801cffc:	00bfffc4 	movi	r2,-1
}
 801d000:	e037883a 	mov	sp,fp
 801d004:	dfc00117 	ldw	ra,4(sp)
 801d008:	df000017 	ldw	fp,0(sp)
 801d00c:	dec00204 	addi	sp,sp,8
 801d010:	f800283a 	ret

0801d014 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 801d014:	defffe04 	addi	sp,sp,-8
 801d018:	df000115 	stw	fp,4(sp)
 801d01c:	df000104 	addi	fp,sp,4
 801d020:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 801d024:	e0bfff17 	ldw	r2,-4(fp)
 801d028:	108000d0 	cmplti	r2,r2,3
 801d02c:	10000d1e 	bne	r2,zero,801d064 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 801d030:	008200b4 	movhi	r2,2050
 801d034:	10835404 	addi	r2,r2,3408
 801d038:	e0ffff17 	ldw	r3,-4(fp)
 801d03c:	18c00324 	muli	r3,r3,12
 801d040:	10c5883a 	add	r2,r2,r3
 801d044:	10800204 	addi	r2,r2,8
 801d048:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 801d04c:	008200b4 	movhi	r2,2050
 801d050:	10835404 	addi	r2,r2,3408
 801d054:	e0ffff17 	ldw	r3,-4(fp)
 801d058:	18c00324 	muli	r3,r3,12
 801d05c:	10c5883a 	add	r2,r2,r3
 801d060:	10000015 	stw	zero,0(r2)
  }
}
 801d064:	0001883a 	nop
 801d068:	e037883a 	mov	sp,fp
 801d06c:	df000017 	ldw	fp,0(sp)
 801d070:	dec00104 	addi	sp,sp,4
 801d074:	f800283a 	ret

0801d078 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 801d078:	defff904 	addi	sp,sp,-28
 801d07c:	df000615 	stw	fp,24(sp)
 801d080:	df000604 	addi	fp,sp,24
 801d084:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801d088:	0005303a 	rdctl	r2,status
 801d08c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801d090:	e0fffe17 	ldw	r3,-8(fp)
 801d094:	00bfff84 	movi	r2,-2
 801d098:	1884703a 	and	r2,r3,r2
 801d09c:	1001703a 	wrctl	status,r2
  
  return context;
 801d0a0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 801d0a4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 801d0a8:	d0a02117 	ldw	r2,-32636(gp)
 801d0ac:	10c000c4 	addi	r3,r2,3
 801d0b0:	00bfff04 	movi	r2,-4
 801d0b4:	1884703a 	and	r2,r3,r2
 801d0b8:	d0a02115 	stw	r2,-32636(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 801d0bc:	d0e02117 	ldw	r3,-32636(gp)
 801d0c0:	e0bfff17 	ldw	r2,-4(fp)
 801d0c4:	1887883a 	add	r3,r3,r2
 801d0c8:	00840034 	movhi	r2,4096
 801d0cc:	10800004 	addi	r2,r2,0
 801d0d0:	10c0062e 	bgeu	r2,r3,801d0ec <sbrk+0x74>
 801d0d4:	e0bffb17 	ldw	r2,-20(fp)
 801d0d8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801d0dc:	e0bffa17 	ldw	r2,-24(fp)
 801d0e0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 801d0e4:	00bfffc4 	movi	r2,-1
 801d0e8:	00000b06 	br	801d118 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 801d0ec:	d0a02117 	ldw	r2,-32636(gp)
 801d0f0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 801d0f4:	d0e02117 	ldw	r3,-32636(gp)
 801d0f8:	e0bfff17 	ldw	r2,-4(fp)
 801d0fc:	1885883a 	add	r2,r3,r2
 801d100:	d0a02115 	stw	r2,-32636(gp)
 801d104:	e0bffb17 	ldw	r2,-20(fp)
 801d108:	e0bffc15 	stw	r2,-16(fp)
 801d10c:	e0bffc17 	ldw	r2,-16(fp)
 801d110:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 801d114:	e0bffd17 	ldw	r2,-12(fp)
} 
 801d118:	e037883a 	mov	sp,fp
 801d11c:	df000017 	ldw	fp,0(sp)
 801d120:	dec00104 	addi	sp,sp,4
 801d124:	f800283a 	ret

0801d128 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 801d128:	defffa04 	addi	sp,sp,-24
 801d12c:	df000515 	stw	fp,20(sp)
 801d130:	df000504 	addi	fp,sp,20
 801d134:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801d138:	0005303a 	rdctl	r2,status
 801d13c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801d140:	e0fffc17 	ldw	r3,-16(fp)
 801d144:	00bfff84 	movi	r2,-2
 801d148:	1884703a 	and	r2,r3,r2
 801d14c:	1001703a 	wrctl	status,r2
  
  return context;
 801d150:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 801d154:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 801d158:	e0bfff17 	ldw	r2,-4(fp)
 801d15c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 801d160:	e0bffd17 	ldw	r2,-12(fp)
 801d164:	10800017 	ldw	r2,0(r2)
 801d168:	e0fffd17 	ldw	r3,-12(fp)
 801d16c:	18c00117 	ldw	r3,4(r3)
 801d170:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 801d174:	e0bffd17 	ldw	r2,-12(fp)
 801d178:	10800117 	ldw	r2,4(r2)
 801d17c:	e0fffd17 	ldw	r3,-12(fp)
 801d180:	18c00017 	ldw	r3,0(r3)
 801d184:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 801d188:	e0bffd17 	ldw	r2,-12(fp)
 801d18c:	e0fffd17 	ldw	r3,-12(fp)
 801d190:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 801d194:	e0bffd17 	ldw	r2,-12(fp)
 801d198:	e0fffd17 	ldw	r3,-12(fp)
 801d19c:	10c00015 	stw	r3,0(r2)
 801d1a0:	e0bffb17 	ldw	r2,-20(fp)
 801d1a4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801d1a8:	e0bffe17 	ldw	r2,-8(fp)
 801d1ac:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 801d1b0:	0001883a 	nop
 801d1b4:	e037883a 	mov	sp,fp
 801d1b8:	df000017 	ldw	fp,0(sp)
 801d1bc:	dec00104 	addi	sp,sp,4
 801d1c0:	f800283a 	ret

0801d1c4 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 801d1c4:	defffb04 	addi	sp,sp,-20
 801d1c8:	dfc00415 	stw	ra,16(sp)
 801d1cc:	df000315 	stw	fp,12(sp)
 801d1d0:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 801d1d4:	d0a02217 	ldw	r2,-32632(gp)
 801d1d8:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 801d1dc:	d0a73417 	ldw	r2,-25392(gp)
 801d1e0:	10800044 	addi	r2,r2,1
 801d1e4:	d0a73415 	stw	r2,-25392(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 801d1e8:	00002e06 	br	801d2a4 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 801d1ec:	e0bffd17 	ldw	r2,-12(fp)
 801d1f0:	10800017 	ldw	r2,0(r2)
 801d1f4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 801d1f8:	e0bffd17 	ldw	r2,-12(fp)
 801d1fc:	10800403 	ldbu	r2,16(r2)
 801d200:	10803fcc 	andi	r2,r2,255
 801d204:	10000426 	beq	r2,zero,801d218 <alt_tick+0x54>
 801d208:	d0a73417 	ldw	r2,-25392(gp)
 801d20c:	1000021e 	bne	r2,zero,801d218 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 801d210:	e0bffd17 	ldw	r2,-12(fp)
 801d214:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 801d218:	e0bffd17 	ldw	r2,-12(fp)
 801d21c:	10800217 	ldw	r2,8(r2)
 801d220:	d0e73417 	ldw	r3,-25392(gp)
 801d224:	18801d36 	bltu	r3,r2,801d29c <alt_tick+0xd8>
 801d228:	e0bffd17 	ldw	r2,-12(fp)
 801d22c:	10800403 	ldbu	r2,16(r2)
 801d230:	10803fcc 	andi	r2,r2,255
 801d234:	1000191e 	bne	r2,zero,801d29c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 801d238:	e0bffd17 	ldw	r2,-12(fp)
 801d23c:	10800317 	ldw	r2,12(r2)
 801d240:	e0fffd17 	ldw	r3,-12(fp)
 801d244:	18c00517 	ldw	r3,20(r3)
 801d248:	1809883a 	mov	r4,r3
 801d24c:	103ee83a 	callr	r2
 801d250:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 801d254:	e0bfff17 	ldw	r2,-4(fp)
 801d258:	1000031e 	bne	r2,zero,801d268 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 801d25c:	e13ffd17 	ldw	r4,-12(fp)
 801d260:	801d1280 	call	801d128 <alt_alarm_stop>
 801d264:	00000d06 	br	801d29c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 801d268:	e0bffd17 	ldw	r2,-12(fp)
 801d26c:	10c00217 	ldw	r3,8(r2)
 801d270:	e0bfff17 	ldw	r2,-4(fp)
 801d274:	1887883a 	add	r3,r3,r2
 801d278:	e0bffd17 	ldw	r2,-12(fp)
 801d27c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 801d280:	e0bffd17 	ldw	r2,-12(fp)
 801d284:	10c00217 	ldw	r3,8(r2)
 801d288:	d0a73417 	ldw	r2,-25392(gp)
 801d28c:	1880032e 	bgeu	r3,r2,801d29c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 801d290:	e0bffd17 	ldw	r2,-12(fp)
 801d294:	00c00044 	movi	r3,1
 801d298:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 801d29c:	e0bffe17 	ldw	r2,-8(fp)
 801d2a0:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 801d2a4:	e0fffd17 	ldw	r3,-12(fp)
 801d2a8:	d0a02204 	addi	r2,gp,-32632
 801d2ac:	18bfcf1e 	bne	r3,r2,801d1ec <__alt_data_end+0xf801d1ec>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 801d2b0:	0001883a 	nop
}
 801d2b4:	0001883a 	nop
 801d2b8:	e037883a 	mov	sp,fp
 801d2bc:	dfc00117 	ldw	ra,4(sp)
 801d2c0:	df000017 	ldw	fp,0(sp)
 801d2c4:	dec00204 	addi	sp,sp,8
 801d2c8:	f800283a 	ret

0801d2cc <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 801d2cc:	defffd04 	addi	sp,sp,-12
 801d2d0:	dfc00215 	stw	ra,8(sp)
 801d2d4:	df000115 	stw	fp,4(sp)
 801d2d8:	df000104 	addi	fp,sp,4
 801d2dc:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 801d2e0:	e13fff17 	ldw	r4,-4(fp)
 801d2e4:	801ea780 	call	801ea78 <alt_busy_sleep>
}
 801d2e8:	e037883a 	mov	sp,fp
 801d2ec:	dfc00117 	ldw	ra,4(sp)
 801d2f0:	df000017 	ldw	fp,0(sp)
 801d2f4:	dec00204 	addi	sp,sp,8
 801d2f8:	f800283a 	ret

0801d2fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801d2fc:	defffe04 	addi	sp,sp,-8
 801d300:	dfc00115 	stw	ra,4(sp)
 801d304:	df000015 	stw	fp,0(sp)
 801d308:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801d30c:	d0a02017 	ldw	r2,-32640(gp)
 801d310:	10000326 	beq	r2,zero,801d320 <alt_get_errno+0x24>
 801d314:	d0a02017 	ldw	r2,-32640(gp)
 801d318:	103ee83a 	callr	r2
 801d31c:	00000106 	br	801d324 <alt_get_errno+0x28>
 801d320:	d0a72c04 	addi	r2,gp,-25424
}
 801d324:	e037883a 	mov	sp,fp
 801d328:	dfc00117 	ldw	ra,4(sp)
 801d32c:	df000017 	ldw	fp,0(sp)
 801d330:	dec00204 	addi	sp,sp,8
 801d334:	f800283a 	ret

0801d338 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 801d338:	defff904 	addi	sp,sp,-28
 801d33c:	dfc00615 	stw	ra,24(sp)
 801d340:	df000515 	stw	fp,20(sp)
 801d344:	df000504 	addi	fp,sp,20
 801d348:	e13ffd15 	stw	r4,-12(fp)
 801d34c:	e17ffe15 	stw	r5,-8(fp)
 801d350:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 801d354:	e0bffd17 	ldw	r2,-12(fp)
 801d358:	10000616 	blt	r2,zero,801d374 <write+0x3c>
 801d35c:	e0bffd17 	ldw	r2,-12(fp)
 801d360:	10c00324 	muli	r3,r2,12
 801d364:	008200b4 	movhi	r2,2050
 801d368:	10835404 	addi	r2,r2,3408
 801d36c:	1885883a 	add	r2,r3,r2
 801d370:	00000106 	br	801d378 <write+0x40>
 801d374:	0005883a 	mov	r2,zero
 801d378:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 801d37c:	e0bffb17 	ldw	r2,-20(fp)
 801d380:	10002126 	beq	r2,zero,801d408 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 801d384:	e0bffb17 	ldw	r2,-20(fp)
 801d388:	10800217 	ldw	r2,8(r2)
 801d38c:	108000cc 	andi	r2,r2,3
 801d390:	10001826 	beq	r2,zero,801d3f4 <write+0xbc>
 801d394:	e0bffb17 	ldw	r2,-20(fp)
 801d398:	10800017 	ldw	r2,0(r2)
 801d39c:	10800617 	ldw	r2,24(r2)
 801d3a0:	10001426 	beq	r2,zero,801d3f4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 801d3a4:	e0bffb17 	ldw	r2,-20(fp)
 801d3a8:	10800017 	ldw	r2,0(r2)
 801d3ac:	10800617 	ldw	r2,24(r2)
 801d3b0:	e0ffff17 	ldw	r3,-4(fp)
 801d3b4:	180d883a 	mov	r6,r3
 801d3b8:	e17ffe17 	ldw	r5,-8(fp)
 801d3bc:	e13ffb17 	ldw	r4,-20(fp)
 801d3c0:	103ee83a 	callr	r2
 801d3c4:	e0bffc15 	stw	r2,-16(fp)
 801d3c8:	e0bffc17 	ldw	r2,-16(fp)
 801d3cc:	1000070e 	bge	r2,zero,801d3ec <write+0xb4>
      {
        ALT_ERRNO = -rval;
 801d3d0:	801d2fc0 	call	801d2fc <alt_get_errno>
 801d3d4:	1007883a 	mov	r3,r2
 801d3d8:	e0bffc17 	ldw	r2,-16(fp)
 801d3dc:	0085c83a 	sub	r2,zero,r2
 801d3e0:	18800015 	stw	r2,0(r3)
        return -1;
 801d3e4:	00bfffc4 	movi	r2,-1
 801d3e8:	00000c06 	br	801d41c <write+0xe4>
      }
      return rval;
 801d3ec:	e0bffc17 	ldw	r2,-16(fp)
 801d3f0:	00000a06 	br	801d41c <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 801d3f4:	801d2fc0 	call	801d2fc <alt_get_errno>
 801d3f8:	1007883a 	mov	r3,r2
 801d3fc:	00800344 	movi	r2,13
 801d400:	18800015 	stw	r2,0(r3)
 801d404:	00000406 	br	801d418 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 801d408:	801d2fc0 	call	801d2fc <alt_get_errno>
 801d40c:	1007883a 	mov	r3,r2
 801d410:	00801444 	movi	r2,81
 801d414:	18800015 	stw	r2,0(r3)
  }
  return -1;
 801d418:	00bfffc4 	movi	r2,-1
}
 801d41c:	e037883a 	mov	sp,fp
 801d420:	dfc00117 	ldw	ra,4(sp)
 801d424:	df000017 	ldw	fp,0(sp)
 801d428:	dec00204 	addi	sp,sp,8
 801d42c:	f800283a 	ret

0801d430 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 801d430:	defffd04 	addi	sp,sp,-12
 801d434:	dfc00215 	stw	ra,8(sp)
 801d438:	df000115 	stw	fp,4(sp)
 801d43c:	df000104 	addi	fp,sp,4
 801d440:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 801d444:	d1601d04 	addi	r5,gp,-32652
 801d448:	e13fff17 	ldw	r4,-4(fp)
 801d44c:	801ec540 	call	801ec54 <alt_dev_llist_insert>
}
 801d450:	e037883a 	mov	sp,fp
 801d454:	dfc00117 	ldw	ra,4(sp)
 801d458:	df000017 	ldw	fp,0(sp)
 801d45c:	dec00204 	addi	sp,sp,8
 801d460:	f800283a 	ret

0801d464 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 801d464:	defffd04 	addi	sp,sp,-12
 801d468:	dfc00215 	stw	ra,8(sp)
 801d46c:	df000115 	stw	fp,4(sp)
 801d470:	df000104 	addi	fp,sp,4
 801d474:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 801d478:	801f4080 	call	801f408 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 801d47c:	00800044 	movi	r2,1
 801d480:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 801d484:	0001883a 	nop
 801d488:	e037883a 	mov	sp,fp
 801d48c:	dfc00117 	ldw	ra,4(sp)
 801d490:	df000017 	ldw	fp,0(sp)
 801d494:	dec00204 	addi	sp,sp,8
 801d498:	f800283a 	ret

0801d49c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 801d49c:	defffe04 	addi	sp,sp,-8
 801d4a0:	dfc00115 	stw	ra,4(sp)
 801d4a4:	df000015 	stw	fp,0(sp)
 801d4a8:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 801d4ac:	01c0fa04 	movi	r7,1000
 801d4b0:	01800044 	movi	r6,1
 801d4b4:	000b883a 	mov	r5,zero
 801d4b8:	01040034 	movhi	r4,4096
 801d4bc:	801dff80 	call	801dff8 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 801d4c0:	000d883a 	mov	r6,zero
 801d4c4:	000b883a 	mov	r5,zero
 801d4c8:	010200b4 	movhi	r4,2050
 801d4cc:	2103be04 	addi	r4,r4,3832
 801d4d0:	801d67c0 	call	801d67c <altera_avalon_jtag_uart_init>
 801d4d4:	010200b4 	movhi	r4,2050
 801d4d8:	2103b404 	addi	r4,r4,3792
 801d4dc:	801d4300 	call	801d430 <alt_dev_reg>
    ALTERA_AVALON_UART_INIT ( HC_05_UART, hc_05_uart);
 801d4e0:	01800084 	movi	r6,2
 801d4e4:	000b883a 	mov	r5,zero
 801d4e8:	010200b4 	movhi	r4,2050
 801d4ec:	2107d604 	addi	r4,r4,8024
 801d4f0:	801e1840 	call	801e184 <altera_avalon_uart_init>
 801d4f4:	010200b4 	movhi	r4,2050
 801d4f8:	2107cc04 	addi	r4,r4,7984
 801d4fc:	801d4300 	call	801d430 <alt_dev_reg>
}
 801d500:	0001883a 	nop
 801d504:	e037883a 	mov	sp,fp
 801d508:	dfc00117 	ldw	ra,4(sp)
 801d50c:	df000017 	ldw	fp,0(sp)
 801d510:	dec00204 	addi	sp,sp,8
 801d514:	f800283a 	ret

0801d518 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 801d518:	defffa04 	addi	sp,sp,-24
 801d51c:	dfc00515 	stw	ra,20(sp)
 801d520:	df000415 	stw	fp,16(sp)
 801d524:	df000404 	addi	fp,sp,16
 801d528:	e13ffd15 	stw	r4,-12(fp)
 801d52c:	e17ffe15 	stw	r5,-8(fp)
 801d530:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801d534:	e0bffd17 	ldw	r2,-12(fp)
 801d538:	10800017 	ldw	r2,0(r2)
 801d53c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 801d540:	e0bffc17 	ldw	r2,-16(fp)
 801d544:	10c00a04 	addi	r3,r2,40
 801d548:	e0bffd17 	ldw	r2,-12(fp)
 801d54c:	10800217 	ldw	r2,8(r2)
 801d550:	100f883a 	mov	r7,r2
 801d554:	e1bfff17 	ldw	r6,-4(fp)
 801d558:	e17ffe17 	ldw	r5,-8(fp)
 801d55c:	1809883a 	mov	r4,r3
 801d560:	801db400 	call	801db40 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 801d564:	e037883a 	mov	sp,fp
 801d568:	dfc00117 	ldw	ra,4(sp)
 801d56c:	df000017 	ldw	fp,0(sp)
 801d570:	dec00204 	addi	sp,sp,8
 801d574:	f800283a 	ret

0801d578 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 801d578:	defffa04 	addi	sp,sp,-24
 801d57c:	dfc00515 	stw	ra,20(sp)
 801d580:	df000415 	stw	fp,16(sp)
 801d584:	df000404 	addi	fp,sp,16
 801d588:	e13ffd15 	stw	r4,-12(fp)
 801d58c:	e17ffe15 	stw	r5,-8(fp)
 801d590:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801d594:	e0bffd17 	ldw	r2,-12(fp)
 801d598:	10800017 	ldw	r2,0(r2)
 801d59c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 801d5a0:	e0bffc17 	ldw	r2,-16(fp)
 801d5a4:	10c00a04 	addi	r3,r2,40
 801d5a8:	e0bffd17 	ldw	r2,-12(fp)
 801d5ac:	10800217 	ldw	r2,8(r2)
 801d5b0:	100f883a 	mov	r7,r2
 801d5b4:	e1bfff17 	ldw	r6,-4(fp)
 801d5b8:	e17ffe17 	ldw	r5,-8(fp)
 801d5bc:	1809883a 	mov	r4,r3
 801d5c0:	801dd5c0 	call	801dd5c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 801d5c4:	e037883a 	mov	sp,fp
 801d5c8:	dfc00117 	ldw	ra,4(sp)
 801d5cc:	df000017 	ldw	fp,0(sp)
 801d5d0:	dec00204 	addi	sp,sp,8
 801d5d4:	f800283a 	ret

0801d5d8 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 801d5d8:	defffc04 	addi	sp,sp,-16
 801d5dc:	dfc00315 	stw	ra,12(sp)
 801d5e0:	df000215 	stw	fp,8(sp)
 801d5e4:	df000204 	addi	fp,sp,8
 801d5e8:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 801d5ec:	e0bfff17 	ldw	r2,-4(fp)
 801d5f0:	10800017 	ldw	r2,0(r2)
 801d5f4:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 801d5f8:	e0bffe17 	ldw	r2,-8(fp)
 801d5fc:	10c00a04 	addi	r3,r2,40
 801d600:	e0bfff17 	ldw	r2,-4(fp)
 801d604:	10800217 	ldw	r2,8(r2)
 801d608:	100b883a 	mov	r5,r2
 801d60c:	1809883a 	mov	r4,r3
 801d610:	801d9e80 	call	801d9e8 <altera_avalon_jtag_uart_close>
}
 801d614:	e037883a 	mov	sp,fp
 801d618:	dfc00117 	ldw	ra,4(sp)
 801d61c:	df000017 	ldw	fp,0(sp)
 801d620:	dec00204 	addi	sp,sp,8
 801d624:	f800283a 	ret

0801d628 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 801d628:	defffa04 	addi	sp,sp,-24
 801d62c:	dfc00515 	stw	ra,20(sp)
 801d630:	df000415 	stw	fp,16(sp)
 801d634:	df000404 	addi	fp,sp,16
 801d638:	e13ffd15 	stw	r4,-12(fp)
 801d63c:	e17ffe15 	stw	r5,-8(fp)
 801d640:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 801d644:	e0bffd17 	ldw	r2,-12(fp)
 801d648:	10800017 	ldw	r2,0(r2)
 801d64c:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 801d650:	e0bffc17 	ldw	r2,-16(fp)
 801d654:	10800a04 	addi	r2,r2,40
 801d658:	e1bfff17 	ldw	r6,-4(fp)
 801d65c:	e17ffe17 	ldw	r5,-8(fp)
 801d660:	1009883a 	mov	r4,r2
 801d664:	801da500 	call	801da50 <altera_avalon_jtag_uart_ioctl>
}
 801d668:	e037883a 	mov	sp,fp
 801d66c:	dfc00117 	ldw	ra,4(sp)
 801d670:	df000017 	ldw	fp,0(sp)
 801d674:	dec00204 	addi	sp,sp,8
 801d678:	f800283a 	ret

0801d67c <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 801d67c:	defffa04 	addi	sp,sp,-24
 801d680:	dfc00515 	stw	ra,20(sp)
 801d684:	df000415 	stw	fp,16(sp)
 801d688:	df000404 	addi	fp,sp,16
 801d68c:	e13ffd15 	stw	r4,-12(fp)
 801d690:	e17ffe15 	stw	r5,-8(fp)
 801d694:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801d698:	e0bffd17 	ldw	r2,-12(fp)
 801d69c:	00c00044 	movi	r3,1
 801d6a0:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 801d6a4:	e0bffd17 	ldw	r2,-12(fp)
 801d6a8:	10800017 	ldw	r2,0(r2)
 801d6ac:	10800104 	addi	r2,r2,4
 801d6b0:	1007883a 	mov	r3,r2
 801d6b4:	e0bffd17 	ldw	r2,-12(fp)
 801d6b8:	10800817 	ldw	r2,32(r2)
 801d6bc:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 801d6c0:	e0bffe17 	ldw	r2,-8(fp)
 801d6c4:	e0ffff17 	ldw	r3,-4(fp)
 801d6c8:	d8000015 	stw	zero,0(sp)
 801d6cc:	e1fffd17 	ldw	r7,-12(fp)
 801d6d0:	018200b4 	movhi	r6,2050
 801d6d4:	31b5cf04 	addi	r6,r6,-10436
 801d6d8:	180b883a 	mov	r5,r3
 801d6dc:	1009883a 	mov	r4,r2
 801d6e0:	801f0280 	call	801f028 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 801d6e4:	e0bffd17 	ldw	r2,-12(fp)
 801d6e8:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 801d6ec:	e0bffd17 	ldw	r2,-12(fp)
 801d6f0:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 801d6f4:	d0e73317 	ldw	r3,-25396(gp)
 801d6f8:	e1fffd17 	ldw	r7,-12(fp)
 801d6fc:	018200b4 	movhi	r6,2050
 801d700:	31b65204 	addi	r6,r6,-9912
 801d704:	180b883a 	mov	r5,r3
 801d708:	1009883a 	mov	r4,r2
 801d70c:	801e94c0 	call	801e94c <alt_alarm_start>
 801d710:	1000040e 	bge	r2,zero,801d724 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 801d714:	e0fffd17 	ldw	r3,-12(fp)
 801d718:	00a00034 	movhi	r2,32768
 801d71c:	10bfffc4 	addi	r2,r2,-1
 801d720:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 801d724:	0001883a 	nop
 801d728:	e037883a 	mov	sp,fp
 801d72c:	dfc00117 	ldw	ra,4(sp)
 801d730:	df000017 	ldw	fp,0(sp)
 801d734:	dec00204 	addi	sp,sp,8
 801d738:	f800283a 	ret

0801d73c <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 801d73c:	defff804 	addi	sp,sp,-32
 801d740:	df000715 	stw	fp,28(sp)
 801d744:	df000704 	addi	fp,sp,28
 801d748:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 801d74c:	e0bfff17 	ldw	r2,-4(fp)
 801d750:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 801d754:	e0bffb17 	ldw	r2,-20(fp)
 801d758:	10800017 	ldw	r2,0(r2)
 801d75c:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801d760:	e0bffc17 	ldw	r2,-16(fp)
 801d764:	10800104 	addi	r2,r2,4
 801d768:	10800037 	ldwio	r2,0(r2)
 801d76c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 801d770:	e0bffd17 	ldw	r2,-12(fp)
 801d774:	1080c00c 	andi	r2,r2,768
 801d778:	10006d26 	beq	r2,zero,801d930 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 801d77c:	e0bffd17 	ldw	r2,-12(fp)
 801d780:	1080400c 	andi	r2,r2,256
 801d784:	10003526 	beq	r2,zero,801d85c <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 801d788:	00800074 	movhi	r2,1
 801d78c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801d790:	e0bffb17 	ldw	r2,-20(fp)
 801d794:	10800a17 	ldw	r2,40(r2)
 801d798:	10800044 	addi	r2,r2,1
 801d79c:	1081ffcc 	andi	r2,r2,2047
 801d7a0:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 801d7a4:	e0bffb17 	ldw	r2,-20(fp)
 801d7a8:	10c00b17 	ldw	r3,44(r2)
 801d7ac:	e0bffe17 	ldw	r2,-8(fp)
 801d7b0:	18801526 	beq	r3,r2,801d808 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 801d7b4:	e0bffc17 	ldw	r2,-16(fp)
 801d7b8:	10800037 	ldwio	r2,0(r2)
 801d7bc:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 801d7c0:	e0bff917 	ldw	r2,-28(fp)
 801d7c4:	10a0000c 	andi	r2,r2,32768
 801d7c8:	10001126 	beq	r2,zero,801d810 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 801d7cc:	e0bffb17 	ldw	r2,-20(fp)
 801d7d0:	10800a17 	ldw	r2,40(r2)
 801d7d4:	e0fff917 	ldw	r3,-28(fp)
 801d7d8:	1809883a 	mov	r4,r3
 801d7dc:	e0fffb17 	ldw	r3,-20(fp)
 801d7e0:	1885883a 	add	r2,r3,r2
 801d7e4:	10800e04 	addi	r2,r2,56
 801d7e8:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801d7ec:	e0bffb17 	ldw	r2,-20(fp)
 801d7f0:	10800a17 	ldw	r2,40(r2)
 801d7f4:	10800044 	addi	r2,r2,1
 801d7f8:	10c1ffcc 	andi	r3,r2,2047
 801d7fc:	e0bffb17 	ldw	r2,-20(fp)
 801d800:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 801d804:	003fe206 	br	801d790 <__alt_data_end+0xf801d790>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 801d808:	0001883a 	nop
 801d80c:	00000106 	br	801d814 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 801d810:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 801d814:	e0bff917 	ldw	r2,-28(fp)
 801d818:	10bfffec 	andhi	r2,r2,65535
 801d81c:	10000f26 	beq	r2,zero,801d85c <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801d820:	e0bffb17 	ldw	r2,-20(fp)
 801d824:	10c00817 	ldw	r3,32(r2)
 801d828:	00bfff84 	movi	r2,-2
 801d82c:	1886703a 	and	r3,r3,r2
 801d830:	e0bffb17 	ldw	r2,-20(fp)
 801d834:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 801d838:	e0bffc17 	ldw	r2,-16(fp)
 801d83c:	10800104 	addi	r2,r2,4
 801d840:	1007883a 	mov	r3,r2
 801d844:	e0bffb17 	ldw	r2,-20(fp)
 801d848:	10800817 	ldw	r2,32(r2)
 801d84c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801d850:	e0bffc17 	ldw	r2,-16(fp)
 801d854:	10800104 	addi	r2,r2,4
 801d858:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 801d85c:	e0bffd17 	ldw	r2,-12(fp)
 801d860:	1080800c 	andi	r2,r2,512
 801d864:	103fbe26 	beq	r2,zero,801d760 <__alt_data_end+0xf801d760>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 801d868:	e0bffd17 	ldw	r2,-12(fp)
 801d86c:	1004d43a 	srli	r2,r2,16
 801d870:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 801d874:	00001406 	br	801d8c8 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 801d878:	e0bffc17 	ldw	r2,-16(fp)
 801d87c:	e0fffb17 	ldw	r3,-20(fp)
 801d880:	18c00d17 	ldw	r3,52(r3)
 801d884:	e13ffb17 	ldw	r4,-20(fp)
 801d888:	20c7883a 	add	r3,r4,r3
 801d88c:	18c20e04 	addi	r3,r3,2104
 801d890:	18c00003 	ldbu	r3,0(r3)
 801d894:	18c03fcc 	andi	r3,r3,255
 801d898:	18c0201c 	xori	r3,r3,128
 801d89c:	18ffe004 	addi	r3,r3,-128
 801d8a0:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801d8a4:	e0bffb17 	ldw	r2,-20(fp)
 801d8a8:	10800d17 	ldw	r2,52(r2)
 801d8ac:	10800044 	addi	r2,r2,1
 801d8b0:	10c1ffcc 	andi	r3,r2,2047
 801d8b4:	e0bffb17 	ldw	r2,-20(fp)
 801d8b8:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 801d8bc:	e0bffa17 	ldw	r2,-24(fp)
 801d8c0:	10bfffc4 	addi	r2,r2,-1
 801d8c4:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 801d8c8:	e0bffa17 	ldw	r2,-24(fp)
 801d8cc:	10000526 	beq	r2,zero,801d8e4 <altera_avalon_jtag_uart_irq+0x1a8>
 801d8d0:	e0bffb17 	ldw	r2,-20(fp)
 801d8d4:	10c00d17 	ldw	r3,52(r2)
 801d8d8:	e0bffb17 	ldw	r2,-20(fp)
 801d8dc:	10800c17 	ldw	r2,48(r2)
 801d8e0:	18bfe51e 	bne	r3,r2,801d878 <__alt_data_end+0xf801d878>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 801d8e4:	e0bffa17 	ldw	r2,-24(fp)
 801d8e8:	103f9d26 	beq	r2,zero,801d760 <__alt_data_end+0xf801d760>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 801d8ec:	e0bffb17 	ldw	r2,-20(fp)
 801d8f0:	10c00817 	ldw	r3,32(r2)
 801d8f4:	00bfff44 	movi	r2,-3
 801d8f8:	1886703a 	and	r3,r3,r2
 801d8fc:	e0bffb17 	ldw	r2,-20(fp)
 801d900:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801d904:	e0bffb17 	ldw	r2,-20(fp)
 801d908:	10800017 	ldw	r2,0(r2)
 801d90c:	10800104 	addi	r2,r2,4
 801d910:	1007883a 	mov	r3,r2
 801d914:	e0bffb17 	ldw	r2,-20(fp)
 801d918:	10800817 	ldw	r2,32(r2)
 801d91c:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 801d920:	e0bffc17 	ldw	r2,-16(fp)
 801d924:	10800104 	addi	r2,r2,4
 801d928:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 801d92c:	003f8c06 	br	801d760 <__alt_data_end+0xf801d760>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 801d930:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 801d934:	0001883a 	nop
 801d938:	e037883a 	mov	sp,fp
 801d93c:	df000017 	ldw	fp,0(sp)
 801d940:	dec00104 	addi	sp,sp,4
 801d944:	f800283a 	ret

0801d948 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 801d948:	defff804 	addi	sp,sp,-32
 801d94c:	df000715 	stw	fp,28(sp)
 801d950:	df000704 	addi	fp,sp,28
 801d954:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 801d958:	e0bffb17 	ldw	r2,-20(fp)
 801d95c:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 801d960:	e0bff917 	ldw	r2,-28(fp)
 801d964:	10800017 	ldw	r2,0(r2)
 801d968:	10800104 	addi	r2,r2,4
 801d96c:	10800037 	ldwio	r2,0(r2)
 801d970:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 801d974:	e0bffa17 	ldw	r2,-24(fp)
 801d978:	1081000c 	andi	r2,r2,1024
 801d97c:	10000b26 	beq	r2,zero,801d9ac <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 801d980:	e0bff917 	ldw	r2,-28(fp)
 801d984:	10800017 	ldw	r2,0(r2)
 801d988:	10800104 	addi	r2,r2,4
 801d98c:	1007883a 	mov	r3,r2
 801d990:	e0bff917 	ldw	r2,-28(fp)
 801d994:	10800817 	ldw	r2,32(r2)
 801d998:	10810014 	ori	r2,r2,1024
 801d99c:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 801d9a0:	e0bff917 	ldw	r2,-28(fp)
 801d9a4:	10000915 	stw	zero,36(r2)
 801d9a8:	00000a06 	br	801d9d4 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 801d9ac:	e0bff917 	ldw	r2,-28(fp)
 801d9b0:	10c00917 	ldw	r3,36(r2)
 801d9b4:	00a00034 	movhi	r2,32768
 801d9b8:	10bfff04 	addi	r2,r2,-4
 801d9bc:	10c00536 	bltu	r2,r3,801d9d4 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 801d9c0:	e0bff917 	ldw	r2,-28(fp)
 801d9c4:	10800917 	ldw	r2,36(r2)
 801d9c8:	10c00044 	addi	r3,r2,1
 801d9cc:	e0bff917 	ldw	r2,-28(fp)
 801d9d0:	10c00915 	stw	r3,36(r2)
 801d9d4:	d0a73317 	ldw	r2,-25396(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 801d9d8:	e037883a 	mov	sp,fp
 801d9dc:	df000017 	ldw	fp,0(sp)
 801d9e0:	dec00104 	addi	sp,sp,4
 801d9e4:	f800283a 	ret

0801d9e8 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 801d9e8:	defffd04 	addi	sp,sp,-12
 801d9ec:	df000215 	stw	fp,8(sp)
 801d9f0:	df000204 	addi	fp,sp,8
 801d9f4:	e13ffe15 	stw	r4,-8(fp)
 801d9f8:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 801d9fc:	00000506 	br	801da14 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 801da00:	e0bfff17 	ldw	r2,-4(fp)
 801da04:	1090000c 	andi	r2,r2,16384
 801da08:	10000226 	beq	r2,zero,801da14 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 801da0c:	00bffd44 	movi	r2,-11
 801da10:	00000b06 	br	801da40 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 801da14:	e0bffe17 	ldw	r2,-8(fp)
 801da18:	10c00d17 	ldw	r3,52(r2)
 801da1c:	e0bffe17 	ldw	r2,-8(fp)
 801da20:	10800c17 	ldw	r2,48(r2)
 801da24:	18800526 	beq	r3,r2,801da3c <altera_avalon_jtag_uart_close+0x54>
 801da28:	e0bffe17 	ldw	r2,-8(fp)
 801da2c:	10c00917 	ldw	r3,36(r2)
 801da30:	e0bffe17 	ldw	r2,-8(fp)
 801da34:	10800117 	ldw	r2,4(r2)
 801da38:	18bff136 	bltu	r3,r2,801da00 <__alt_data_end+0xf801da00>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 801da3c:	0005883a 	mov	r2,zero
}
 801da40:	e037883a 	mov	sp,fp
 801da44:	df000017 	ldw	fp,0(sp)
 801da48:	dec00104 	addi	sp,sp,4
 801da4c:	f800283a 	ret

0801da50 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 801da50:	defffa04 	addi	sp,sp,-24
 801da54:	df000515 	stw	fp,20(sp)
 801da58:	df000504 	addi	fp,sp,20
 801da5c:	e13ffd15 	stw	r4,-12(fp)
 801da60:	e17ffe15 	stw	r5,-8(fp)
 801da64:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 801da68:	00bff9c4 	movi	r2,-25
 801da6c:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 801da70:	e0bffe17 	ldw	r2,-8(fp)
 801da74:	10da8060 	cmpeqi	r3,r2,27137
 801da78:	1800031e 	bne	r3,zero,801da88 <altera_avalon_jtag_uart_ioctl+0x38>
 801da7c:	109a80a0 	cmpeqi	r2,r2,27138
 801da80:	1000181e 	bne	r2,zero,801dae4 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 801da84:	00002906 	br	801db2c <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 801da88:	e0bffd17 	ldw	r2,-12(fp)
 801da8c:	10c00117 	ldw	r3,4(r2)
 801da90:	00a00034 	movhi	r2,32768
 801da94:	10bfffc4 	addi	r2,r2,-1
 801da98:	18802126 	beq	r3,r2,801db20 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 801da9c:	e0bfff17 	ldw	r2,-4(fp)
 801daa0:	10800017 	ldw	r2,0(r2)
 801daa4:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 801daa8:	e0bffc17 	ldw	r2,-16(fp)
 801daac:	10800090 	cmplti	r2,r2,2
 801dab0:	1000061e 	bne	r2,zero,801dacc <altera_avalon_jtag_uart_ioctl+0x7c>
 801dab4:	e0fffc17 	ldw	r3,-16(fp)
 801dab8:	00a00034 	movhi	r2,32768
 801dabc:	10bfffc4 	addi	r2,r2,-1
 801dac0:	18800226 	beq	r3,r2,801dacc <altera_avalon_jtag_uart_ioctl+0x7c>
 801dac4:	e0bffc17 	ldw	r2,-16(fp)
 801dac8:	00000206 	br	801dad4 <altera_avalon_jtag_uart_ioctl+0x84>
 801dacc:	00a00034 	movhi	r2,32768
 801dad0:	10bfff84 	addi	r2,r2,-2
 801dad4:	e0fffd17 	ldw	r3,-12(fp)
 801dad8:	18800115 	stw	r2,4(r3)
      rc = 0;
 801dadc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801dae0:	00000f06 	br	801db20 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 801dae4:	e0bffd17 	ldw	r2,-12(fp)
 801dae8:	10c00117 	ldw	r3,4(r2)
 801daec:	00a00034 	movhi	r2,32768
 801daf0:	10bfffc4 	addi	r2,r2,-1
 801daf4:	18800c26 	beq	r3,r2,801db28 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 801daf8:	e0bffd17 	ldw	r2,-12(fp)
 801dafc:	10c00917 	ldw	r3,36(r2)
 801db00:	e0bffd17 	ldw	r2,-12(fp)
 801db04:	10800117 	ldw	r2,4(r2)
 801db08:	1885803a 	cmpltu	r2,r3,r2
 801db0c:	10c03fcc 	andi	r3,r2,255
 801db10:	e0bfff17 	ldw	r2,-4(fp)
 801db14:	10c00015 	stw	r3,0(r2)
      rc = 0;
 801db18:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 801db1c:	00000206 	br	801db28 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 801db20:	0001883a 	nop
 801db24:	00000106 	br	801db2c <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 801db28:	0001883a 	nop

  default:
    break;
  }

  return rc;
 801db2c:	e0bffb17 	ldw	r2,-20(fp)
}
 801db30:	e037883a 	mov	sp,fp
 801db34:	df000017 	ldw	fp,0(sp)
 801db38:	dec00104 	addi	sp,sp,4
 801db3c:	f800283a 	ret

0801db40 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 801db40:	defff304 	addi	sp,sp,-52
 801db44:	dfc00c15 	stw	ra,48(sp)
 801db48:	df000b15 	stw	fp,44(sp)
 801db4c:	df000b04 	addi	fp,sp,44
 801db50:	e13ffc15 	stw	r4,-16(fp)
 801db54:	e17ffd15 	stw	r5,-12(fp)
 801db58:	e1bffe15 	stw	r6,-8(fp)
 801db5c:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 801db60:	e0bffd17 	ldw	r2,-12(fp)
 801db64:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801db68:	00004706 	br	801dc88 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 801db6c:	e0bffc17 	ldw	r2,-16(fp)
 801db70:	10800a17 	ldw	r2,40(r2)
 801db74:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 801db78:	e0bffc17 	ldw	r2,-16(fp)
 801db7c:	10800b17 	ldw	r2,44(r2)
 801db80:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 801db84:	e0fff717 	ldw	r3,-36(fp)
 801db88:	e0bff817 	ldw	r2,-32(fp)
 801db8c:	18800536 	bltu	r3,r2,801dba4 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 801db90:	e0fff717 	ldw	r3,-36(fp)
 801db94:	e0bff817 	ldw	r2,-32(fp)
 801db98:	1885c83a 	sub	r2,r3,r2
 801db9c:	e0bff615 	stw	r2,-40(fp)
 801dba0:	00000406 	br	801dbb4 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 801dba4:	00c20004 	movi	r3,2048
 801dba8:	e0bff817 	ldw	r2,-32(fp)
 801dbac:	1885c83a 	sub	r2,r3,r2
 801dbb0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801dbb4:	e0bff617 	ldw	r2,-40(fp)
 801dbb8:	10001e26 	beq	r2,zero,801dc34 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 801dbbc:	e0fffe17 	ldw	r3,-8(fp)
 801dbc0:	e0bff617 	ldw	r2,-40(fp)
 801dbc4:	1880022e 	bgeu	r3,r2,801dbd0 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 801dbc8:	e0bffe17 	ldw	r2,-8(fp)
 801dbcc:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 801dbd0:	e0bffc17 	ldw	r2,-16(fp)
 801dbd4:	10c00e04 	addi	r3,r2,56
 801dbd8:	e0bff817 	ldw	r2,-32(fp)
 801dbdc:	1885883a 	add	r2,r3,r2
 801dbe0:	e1bff617 	ldw	r6,-40(fp)
 801dbe4:	100b883a 	mov	r5,r2
 801dbe8:	e13ff517 	ldw	r4,-44(fp)
 801dbec:	800fbd40 	call	800fbd4 <memcpy>
      ptr   += n;
 801dbf0:	e0fff517 	ldw	r3,-44(fp)
 801dbf4:	e0bff617 	ldw	r2,-40(fp)
 801dbf8:	1885883a 	add	r2,r3,r2
 801dbfc:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 801dc00:	e0fffe17 	ldw	r3,-8(fp)
 801dc04:	e0bff617 	ldw	r2,-40(fp)
 801dc08:	1885c83a 	sub	r2,r3,r2
 801dc0c:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801dc10:	e0fff817 	ldw	r3,-32(fp)
 801dc14:	e0bff617 	ldw	r2,-40(fp)
 801dc18:	1885883a 	add	r2,r3,r2
 801dc1c:	10c1ffcc 	andi	r3,r2,2047
 801dc20:	e0bffc17 	ldw	r2,-16(fp)
 801dc24:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 801dc28:	e0bffe17 	ldw	r2,-8(fp)
 801dc2c:	00bfcf16 	blt	zero,r2,801db6c <__alt_data_end+0xf801db6c>
 801dc30:	00000106 	br	801dc38 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 801dc34:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 801dc38:	e0fff517 	ldw	r3,-44(fp)
 801dc3c:	e0bffd17 	ldw	r2,-12(fp)
 801dc40:	1880141e 	bne	r3,r2,801dc94 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 801dc44:	e0bfff17 	ldw	r2,-4(fp)
 801dc48:	1090000c 	andi	r2,r2,16384
 801dc4c:	1000131e 	bne	r2,zero,801dc9c <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 801dc50:	0001883a 	nop
 801dc54:	e0bffc17 	ldw	r2,-16(fp)
 801dc58:	10c00a17 	ldw	r3,40(r2)
 801dc5c:	e0bff717 	ldw	r2,-36(fp)
 801dc60:	1880051e 	bne	r3,r2,801dc78 <altera_avalon_jtag_uart_read+0x138>
 801dc64:	e0bffc17 	ldw	r2,-16(fp)
 801dc68:	10c00917 	ldw	r3,36(r2)
 801dc6c:	e0bffc17 	ldw	r2,-16(fp)
 801dc70:	10800117 	ldw	r2,4(r2)
 801dc74:	18bff736 	bltu	r3,r2,801dc54 <__alt_data_end+0xf801dc54>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 801dc78:	e0bffc17 	ldw	r2,-16(fp)
 801dc7c:	10c00a17 	ldw	r3,40(r2)
 801dc80:	e0bff717 	ldw	r2,-36(fp)
 801dc84:	18800726 	beq	r3,r2,801dca4 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 801dc88:	e0bffe17 	ldw	r2,-8(fp)
 801dc8c:	00bfb716 	blt	zero,r2,801db6c <__alt_data_end+0xf801db6c>
 801dc90:	00000506 	br	801dca8 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 801dc94:	0001883a 	nop
 801dc98:	00000306 	br	801dca8 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 801dc9c:	0001883a 	nop
 801dca0:	00000106 	br	801dca8 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 801dca4:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 801dca8:	e0fff517 	ldw	r3,-44(fp)
 801dcac:	e0bffd17 	ldw	r2,-12(fp)
 801dcb0:	18801826 	beq	r3,r2,801dd14 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801dcb4:	0005303a 	rdctl	r2,status
 801dcb8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801dcbc:	e0fffb17 	ldw	r3,-20(fp)
 801dcc0:	00bfff84 	movi	r2,-2
 801dcc4:	1884703a 	and	r2,r3,r2
 801dcc8:	1001703a 	wrctl	status,r2
  
  return context;
 801dccc:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 801dcd0:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 801dcd4:	e0bffc17 	ldw	r2,-16(fp)
 801dcd8:	10800817 	ldw	r2,32(r2)
 801dcdc:	10c00054 	ori	r3,r2,1
 801dce0:	e0bffc17 	ldw	r2,-16(fp)
 801dce4:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801dce8:	e0bffc17 	ldw	r2,-16(fp)
 801dcec:	10800017 	ldw	r2,0(r2)
 801dcf0:	10800104 	addi	r2,r2,4
 801dcf4:	1007883a 	mov	r3,r2
 801dcf8:	e0bffc17 	ldw	r2,-16(fp)
 801dcfc:	10800817 	ldw	r2,32(r2)
 801dd00:	18800035 	stwio	r2,0(r3)
 801dd04:	e0bffa17 	ldw	r2,-24(fp)
 801dd08:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801dd0c:	e0bff917 	ldw	r2,-28(fp)
 801dd10:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 801dd14:	e0fff517 	ldw	r3,-44(fp)
 801dd18:	e0bffd17 	ldw	r2,-12(fp)
 801dd1c:	18800426 	beq	r3,r2,801dd30 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 801dd20:	e0fff517 	ldw	r3,-44(fp)
 801dd24:	e0bffd17 	ldw	r2,-12(fp)
 801dd28:	1885c83a 	sub	r2,r3,r2
 801dd2c:	00000606 	br	801dd48 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 801dd30:	e0bfff17 	ldw	r2,-4(fp)
 801dd34:	1090000c 	andi	r2,r2,16384
 801dd38:	10000226 	beq	r2,zero,801dd44 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 801dd3c:	00bffd44 	movi	r2,-11
 801dd40:	00000106 	br	801dd48 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 801dd44:	00bffec4 	movi	r2,-5
}
 801dd48:	e037883a 	mov	sp,fp
 801dd4c:	dfc00117 	ldw	ra,4(sp)
 801dd50:	df000017 	ldw	fp,0(sp)
 801dd54:	dec00204 	addi	sp,sp,8
 801dd58:	f800283a 	ret

0801dd5c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 801dd5c:	defff304 	addi	sp,sp,-52
 801dd60:	dfc00c15 	stw	ra,48(sp)
 801dd64:	df000b15 	stw	fp,44(sp)
 801dd68:	df000b04 	addi	fp,sp,44
 801dd6c:	e13ffc15 	stw	r4,-16(fp)
 801dd70:	e17ffd15 	stw	r5,-12(fp)
 801dd74:	e1bffe15 	stw	r6,-8(fp)
 801dd78:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 801dd7c:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 801dd80:	e0bffd17 	ldw	r2,-12(fp)
 801dd84:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801dd88:	00003706 	br	801de68 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 801dd8c:	e0bffc17 	ldw	r2,-16(fp)
 801dd90:	10800c17 	ldw	r2,48(r2)
 801dd94:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 801dd98:	e0bffc17 	ldw	r2,-16(fp)
 801dd9c:	10800d17 	ldw	r2,52(r2)
 801dda0:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 801dda4:	e0fff917 	ldw	r3,-28(fp)
 801dda8:	e0bff517 	ldw	r2,-44(fp)
 801ddac:	1880062e 	bgeu	r3,r2,801ddc8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 801ddb0:	e0fff517 	ldw	r3,-44(fp)
 801ddb4:	e0bff917 	ldw	r2,-28(fp)
 801ddb8:	1885c83a 	sub	r2,r3,r2
 801ddbc:	10bfffc4 	addi	r2,r2,-1
 801ddc0:	e0bff615 	stw	r2,-40(fp)
 801ddc4:	00000b06 	br	801ddf4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 801ddc8:	e0bff517 	ldw	r2,-44(fp)
 801ddcc:	10000526 	beq	r2,zero,801dde4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 801ddd0:	00c20004 	movi	r3,2048
 801ddd4:	e0bff917 	ldw	r2,-28(fp)
 801ddd8:	1885c83a 	sub	r2,r3,r2
 801dddc:	e0bff615 	stw	r2,-40(fp)
 801dde0:	00000406 	br	801ddf4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 801dde4:	00c1ffc4 	movi	r3,2047
 801dde8:	e0bff917 	ldw	r2,-28(fp)
 801ddec:	1885c83a 	sub	r2,r3,r2
 801ddf0:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 801ddf4:	e0bff617 	ldw	r2,-40(fp)
 801ddf8:	10001e26 	beq	r2,zero,801de74 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 801ddfc:	e0fffe17 	ldw	r3,-8(fp)
 801de00:	e0bff617 	ldw	r2,-40(fp)
 801de04:	1880022e 	bgeu	r3,r2,801de10 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 801de08:	e0bffe17 	ldw	r2,-8(fp)
 801de0c:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 801de10:	e0bffc17 	ldw	r2,-16(fp)
 801de14:	10c20e04 	addi	r3,r2,2104
 801de18:	e0bff917 	ldw	r2,-28(fp)
 801de1c:	1885883a 	add	r2,r3,r2
 801de20:	e1bff617 	ldw	r6,-40(fp)
 801de24:	e17ffd17 	ldw	r5,-12(fp)
 801de28:	1009883a 	mov	r4,r2
 801de2c:	800fbd40 	call	800fbd4 <memcpy>
      ptr   += n;
 801de30:	e0fffd17 	ldw	r3,-12(fp)
 801de34:	e0bff617 	ldw	r2,-40(fp)
 801de38:	1885883a 	add	r2,r3,r2
 801de3c:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 801de40:	e0fffe17 	ldw	r3,-8(fp)
 801de44:	e0bff617 	ldw	r2,-40(fp)
 801de48:	1885c83a 	sub	r2,r3,r2
 801de4c:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 801de50:	e0fff917 	ldw	r3,-28(fp)
 801de54:	e0bff617 	ldw	r2,-40(fp)
 801de58:	1885883a 	add	r2,r3,r2
 801de5c:	10c1ffcc 	andi	r3,r2,2047
 801de60:	e0bffc17 	ldw	r2,-16(fp)
 801de64:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 801de68:	e0bffe17 	ldw	r2,-8(fp)
 801de6c:	00bfc716 	blt	zero,r2,801dd8c <__alt_data_end+0xf801dd8c>
 801de70:	00000106 	br	801de78 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 801de74:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801de78:	0005303a 	rdctl	r2,status
 801de7c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801de80:	e0fffb17 	ldw	r3,-20(fp)
 801de84:	00bfff84 	movi	r2,-2
 801de88:	1884703a 	and	r2,r3,r2
 801de8c:	1001703a 	wrctl	status,r2
  
  return context;
 801de90:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 801de94:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 801de98:	e0bffc17 	ldw	r2,-16(fp)
 801de9c:	10800817 	ldw	r2,32(r2)
 801dea0:	10c00094 	ori	r3,r2,2
 801dea4:	e0bffc17 	ldw	r2,-16(fp)
 801dea8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 801deac:	e0bffc17 	ldw	r2,-16(fp)
 801deb0:	10800017 	ldw	r2,0(r2)
 801deb4:	10800104 	addi	r2,r2,4
 801deb8:	1007883a 	mov	r3,r2
 801debc:	e0bffc17 	ldw	r2,-16(fp)
 801dec0:	10800817 	ldw	r2,32(r2)
 801dec4:	18800035 	stwio	r2,0(r3)
 801dec8:	e0bffa17 	ldw	r2,-24(fp)
 801decc:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801ded0:	e0bff817 	ldw	r2,-32(fp)
 801ded4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 801ded8:	e0bffe17 	ldw	r2,-8(fp)
 801dedc:	0080100e 	bge	zero,r2,801df20 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 801dee0:	e0bfff17 	ldw	r2,-4(fp)
 801dee4:	1090000c 	andi	r2,r2,16384
 801dee8:	1000101e 	bne	r2,zero,801df2c <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 801deec:	0001883a 	nop
 801def0:	e0bffc17 	ldw	r2,-16(fp)
 801def4:	10c00d17 	ldw	r3,52(r2)
 801def8:	e0bff517 	ldw	r2,-44(fp)
 801defc:	1880051e 	bne	r3,r2,801df14 <altera_avalon_jtag_uart_write+0x1b8>
 801df00:	e0bffc17 	ldw	r2,-16(fp)
 801df04:	10c00917 	ldw	r3,36(r2)
 801df08:	e0bffc17 	ldw	r2,-16(fp)
 801df0c:	10800117 	ldw	r2,4(r2)
 801df10:	18bff736 	bltu	r3,r2,801def0 <__alt_data_end+0xf801def0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 801df14:	e0bffc17 	ldw	r2,-16(fp)
 801df18:	10800917 	ldw	r2,36(r2)
 801df1c:	1000051e 	bne	r2,zero,801df34 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 801df20:	e0bffe17 	ldw	r2,-8(fp)
 801df24:	00bfd016 	blt	zero,r2,801de68 <__alt_data_end+0xf801de68>
 801df28:	00000306 	br	801df38 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 801df2c:	0001883a 	nop
 801df30:	00000106 	br	801df38 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 801df34:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 801df38:	e0fffd17 	ldw	r3,-12(fp)
 801df3c:	e0bff717 	ldw	r2,-36(fp)
 801df40:	18800426 	beq	r3,r2,801df54 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 801df44:	e0fffd17 	ldw	r3,-12(fp)
 801df48:	e0bff717 	ldw	r2,-36(fp)
 801df4c:	1885c83a 	sub	r2,r3,r2
 801df50:	00000606 	br	801df6c <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 801df54:	e0bfff17 	ldw	r2,-4(fp)
 801df58:	1090000c 	andi	r2,r2,16384
 801df5c:	10000226 	beq	r2,zero,801df68 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 801df60:	00bffd44 	movi	r2,-11
 801df64:	00000106 	br	801df6c <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 801df68:	00bffec4 	movi	r2,-5
}
 801df6c:	e037883a 	mov	sp,fp
 801df70:	dfc00117 	ldw	ra,4(sp)
 801df74:	df000017 	ldw	fp,0(sp)
 801df78:	dec00204 	addi	sp,sp,8
 801df7c:	f800283a 	ret

0801df80 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 801df80:	defffa04 	addi	sp,sp,-24
 801df84:	dfc00515 	stw	ra,20(sp)
 801df88:	df000415 	stw	fp,16(sp)
 801df8c:	df000404 	addi	fp,sp,16
 801df90:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 801df94:	0007883a 	mov	r3,zero
 801df98:	e0bfff17 	ldw	r2,-4(fp)
 801df9c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 801dfa0:	e0bfff17 	ldw	r2,-4(fp)
 801dfa4:	10800104 	addi	r2,r2,4
 801dfa8:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801dfac:	0005303a 	rdctl	r2,status
 801dfb0:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801dfb4:	e0fffd17 	ldw	r3,-12(fp)
 801dfb8:	00bfff84 	movi	r2,-2
 801dfbc:	1884703a 	and	r2,r3,r2
 801dfc0:	1001703a 	wrctl	status,r2
  
  return context;
 801dfc4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 801dfc8:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 801dfcc:	801d1c40 	call	801d1c4 <alt_tick>
 801dfd0:	e0bffc17 	ldw	r2,-16(fp)
 801dfd4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801dfd8:	e0bffe17 	ldw	r2,-8(fp)
 801dfdc:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 801dfe0:	0001883a 	nop
 801dfe4:	e037883a 	mov	sp,fp
 801dfe8:	dfc00117 	ldw	ra,4(sp)
 801dfec:	df000017 	ldw	fp,0(sp)
 801dff0:	dec00204 	addi	sp,sp,8
 801dff4:	f800283a 	ret

0801dff8 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 801dff8:	defff804 	addi	sp,sp,-32
 801dffc:	dfc00715 	stw	ra,28(sp)
 801e000:	df000615 	stw	fp,24(sp)
 801e004:	df000604 	addi	fp,sp,24
 801e008:	e13ffc15 	stw	r4,-16(fp)
 801e00c:	e17ffd15 	stw	r5,-12(fp)
 801e010:	e1bffe15 	stw	r6,-8(fp)
 801e014:	e1ffff15 	stw	r7,-4(fp)
 801e018:	e0bfff17 	ldw	r2,-4(fp)
 801e01c:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 801e020:	d0a73317 	ldw	r2,-25396(gp)
 801e024:	1000021e 	bne	r2,zero,801e030 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 801e028:	e0bffb17 	ldw	r2,-20(fp)
 801e02c:	d0a73315 	stw	r2,-25396(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 801e030:	e0bffc17 	ldw	r2,-16(fp)
 801e034:	10800104 	addi	r2,r2,4
 801e038:	00c001c4 	movi	r3,7
 801e03c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 801e040:	d8000015 	stw	zero,0(sp)
 801e044:	e1fffc17 	ldw	r7,-16(fp)
 801e048:	018200b4 	movhi	r6,2050
 801e04c:	31b7e004 	addi	r6,r6,-8320
 801e050:	e17ffe17 	ldw	r5,-8(fp)
 801e054:	e13ffd17 	ldw	r4,-12(fp)
 801e058:	801f0280 	call	801f028 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 801e05c:	0001883a 	nop
 801e060:	e037883a 	mov	sp,fp
 801e064:	dfc00117 	ldw	ra,4(sp)
 801e068:	df000017 	ldw	fp,0(sp)
 801e06c:	dec00204 	addi	sp,sp,8
 801e070:	f800283a 	ret

0801e074 <altera_avalon_uart_read_fd>:
 *
 */

int 
altera_avalon_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 801e074:	defffa04 	addi	sp,sp,-24
 801e078:	dfc00515 	stw	ra,20(sp)
 801e07c:	df000415 	stw	fp,16(sp)
 801e080:	df000404 	addi	fp,sp,16
 801e084:	e13ffd15 	stw	r4,-12(fp)
 801e088:	e17ffe15 	stw	r5,-8(fp)
 801e08c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
 801e090:	e0bffd17 	ldw	r2,-12(fp)
 801e094:	10800017 	ldw	r2,0(r2)
 801e098:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_read(&dev->state, buffer, space,
 801e09c:	e0bffc17 	ldw	r2,-16(fp)
 801e0a0:	10c00a04 	addi	r3,r2,40
 801e0a4:	e0bffd17 	ldw	r2,-12(fp)
 801e0a8:	10800217 	ldw	r2,8(r2)
 801e0ac:	100f883a 	mov	r7,r2
 801e0b0:	e1bfff17 	ldw	r6,-4(fp)
 801e0b4:	e17ffe17 	ldw	r5,-8(fp)
 801e0b8:	1809883a 	mov	r4,r3
 801e0bc:	801e5880 	call	801e588 <altera_avalon_uart_read>
      fd->fd_flags);
}
 801e0c0:	e037883a 	mov	sp,fp
 801e0c4:	dfc00117 	ldw	ra,4(sp)
 801e0c8:	df000017 	ldw	fp,0(sp)
 801e0cc:	dec00204 	addi	sp,sp,8
 801e0d0:	f800283a 	ret

0801e0d4 <altera_avalon_uart_write_fd>:

int 
altera_avalon_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 801e0d4:	defffa04 	addi	sp,sp,-24
 801e0d8:	dfc00515 	stw	ra,20(sp)
 801e0dc:	df000415 	stw	fp,16(sp)
 801e0e0:	df000404 	addi	fp,sp,16
 801e0e4:	e13ffd15 	stw	r4,-12(fp)
 801e0e8:	e17ffe15 	stw	r5,-8(fp)
 801e0ec:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
 801e0f0:	e0bffd17 	ldw	r2,-12(fp)
 801e0f4:	10800017 	ldw	r2,0(r2)
 801e0f8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_uart_write(&dev->state, buffer, space,
 801e0fc:	e0bffc17 	ldw	r2,-16(fp)
 801e100:	10c00a04 	addi	r3,r2,40
 801e104:	e0bffd17 	ldw	r2,-12(fp)
 801e108:	10800217 	ldw	r2,8(r2)
 801e10c:	100f883a 	mov	r7,r2
 801e110:	e1bfff17 	ldw	r6,-4(fp)
 801e114:	e17ffe17 	ldw	r5,-8(fp)
 801e118:	1809883a 	mov	r4,r3
 801e11c:	801e7a00 	call	801e7a0 <altera_avalon_uart_write>
      fd->fd_flags);
}
 801e120:	e037883a 	mov	sp,fp
 801e124:	dfc00117 	ldw	ra,4(sp)
 801e128:	df000017 	ldw	fp,0(sp)
 801e12c:	dec00204 	addi	sp,sp,8
 801e130:	f800283a 	ret

0801e134 <altera_avalon_uart_close_fd>:

#endif /* ALTERA_AVALON_UART_USE_IOCTL */

int 
altera_avalon_uart_close_fd(alt_fd* fd)
{
 801e134:	defffc04 	addi	sp,sp,-16
 801e138:	dfc00315 	stw	ra,12(sp)
 801e13c:	df000215 	stw	fp,8(sp)
 801e140:	df000204 	addi	fp,sp,8
 801e144:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_uart_dev* dev = (altera_avalon_uart_dev*) fd->dev; 
 801e148:	e0bfff17 	ldw	r2,-4(fp)
 801e14c:	10800017 	ldw	r2,0(r2)
 801e150:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_uart_close(&dev->state, fd->fd_flags);
 801e154:	e0bffe17 	ldw	r2,-8(fp)
 801e158:	10c00a04 	addi	r3,r2,40
 801e15c:	e0bfff17 	ldw	r2,-4(fp)
 801e160:	10800217 	ldw	r2,8(r2)
 801e164:	100b883a 	mov	r5,r2
 801e168:	1809883a 	mov	r4,r3
 801e16c:	801e4f80 	call	801e4f8 <altera_avalon_uart_close>
}
 801e170:	e037883a 	mov	sp,fp
 801e174:	dfc00117 	ldw	ra,4(sp)
 801e178:	df000017 	ldw	fp,0(sp)
 801e17c:	dec00204 	addi	sp,sp,8
 801e180:	f800283a 	ret

0801e184 <altera_avalon_uart_init>:
  alt_u32 status);

void 
altera_avalon_uart_init(altera_avalon_uart_state* sp, 
  alt_u32 irq_controller_id,  alt_u32 irq)
{
 801e184:	defff804 	addi	sp,sp,-32
 801e188:	dfc00715 	stw	ra,28(sp)
 801e18c:	df000615 	stw	fp,24(sp)
 801e190:	df000604 	addi	fp,sp,24
 801e194:	e13ffd15 	stw	r4,-12(fp)
 801e198:	e17ffe15 	stw	r5,-8(fp)
 801e19c:	e1bfff15 	stw	r6,-4(fp)
  void* base = sp->base;
 801e1a0:	e0bffd17 	ldw	r2,-12(fp)
 801e1a4:	10800017 	ldw	r2,0(r2)
 801e1a8:	e0bffb15 	stw	r2,-20(fp)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
 801e1ac:	0005883a 	mov	r2,zero
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
 801e1b0:	1000041e 	bne	r2,zero,801e1c4 <altera_avalon_uart_init+0x40>
 801e1b4:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
 801e1b8:	1000021e 	bne	r2,zero,801e1c4 <altera_avalon_uart_init+0x40>
 801e1bc:	0005883a 	mov	r2,zero
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
 801e1c0:	10000226 	beq	r2,zero,801e1cc <altera_avalon_uart_init+0x48>
 801e1c4:	00800044 	movi	r2,1
 801e1c8:	00000106 	br	801e1d0 <altera_avalon_uart_init+0x4c>
 801e1cc:	0005883a 	mov	r2,zero
  /* 
   * Initialise the read and write flags and the semaphores used to 
   * protect access to the circular buffers when running in a multi-threaded
   * environment.
   */
  error = ALT_FLAG_CREATE (&sp->events, 0)    || 
 801e1d0:	e0bffc15 	stw	r2,-16(fp)
          ALT_SEM_CREATE (&sp->read_lock, 1)  ||
          ALT_SEM_CREATE (&sp->write_lock, 1);

  if (!error)
 801e1d4:	e0bffc17 	ldw	r2,-16(fp)
 801e1d8:	10000f1e 	bne	r2,zero,801e218 <altera_avalon_uart_init+0x94>
  {
    /* enable interrupts at the device */
    sp->ctrl = ALTERA_AVALON_UART_CONTROL_RTS_MSK  |
 801e1dc:	e0bffd17 	ldw	r2,-12(fp)
 801e1e0:	00c32004 	movi	r3,3200
 801e1e4:	10c00115 	stw	r3,4(r2)
                ALTERA_AVALON_UART_CONTROL_RRDY_MSK |
                ALTERA_AVALON_UART_CONTROL_DCTS_MSK;

    IOWR_ALTERA_AVALON_UART_CONTROL(base, sp->ctrl); 
 801e1e8:	e0bffb17 	ldw	r2,-20(fp)
 801e1ec:	10800304 	addi	r2,r2,12
 801e1f0:	e0fffd17 	ldw	r3,-12(fp)
 801e1f4:	18c00117 	ldw	r3,4(r3)
 801e1f8:	10c00035 	stwio	r3,0(r2)
  
    /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
    alt_ic_isr_register(irq_controller_id, irq, altera_avalon_uart_irq, sp, 
 801e1fc:	d8000015 	stw	zero,0(sp)
 801e200:	e1fffd17 	ldw	r7,-12(fp)
 801e204:	018200b4 	movhi	r6,2050
 801e208:	31b88c04 	addi	r6,r6,-7632
 801e20c:	e17fff17 	ldw	r5,-4(fp)
 801e210:	e13ffe17 	ldw	r4,-8(fp)
 801e214:	801f0280 	call	801f028 <alt_ic_isr_register>
      0x0);
#else
    alt_irq_register (irq, sp, altera_avalon_uart_irq);
#endif  
  }
}
 801e218:	0001883a 	nop
 801e21c:	e037883a 	mov	sp,fp
 801e220:	dfc00117 	ldw	ra,4(sp)
 801e224:	df000017 	ldw	fp,0(sp)
 801e228:	dec00204 	addi	sp,sp,8
 801e22c:	f800283a 	ret

0801e230 <altera_avalon_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_uart_irq(void* context)
#else
static void altera_avalon_uart_irq(void* context, alt_u32 id)
#endif
{
 801e230:	defffa04 	addi	sp,sp,-24
 801e234:	dfc00515 	stw	ra,20(sp)
 801e238:	df000415 	stw	fp,16(sp)
 801e23c:	df000404 	addi	fp,sp,16
 801e240:	e13fff15 	stw	r4,-4(fp)
  alt_u32 status;

  altera_avalon_uart_state* sp = (altera_avalon_uart_state*) context;
 801e244:	e0bfff17 	ldw	r2,-4(fp)
 801e248:	e0bffc15 	stw	r2,-16(fp)
  void* base               = sp->base;
 801e24c:	e0bffc17 	ldw	r2,-16(fp)
 801e250:	10800017 	ldw	r2,0(r2)
 801e254:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Read the status register in order to determine the cause of the
   * interrupt.
   */

  status = IORD_ALTERA_AVALON_UART_STATUS(base);
 801e258:	e0bffd17 	ldw	r2,-12(fp)
 801e25c:	10800204 	addi	r2,r2,8
 801e260:	10800037 	ldwio	r2,0(r2)
 801e264:	e0bffe15 	stw	r2,-8(fp)

  /* Clear any error flags set at the device */
  IOWR_ALTERA_AVALON_UART_STATUS(base, 0);
 801e268:	e0bffd17 	ldw	r2,-12(fp)
 801e26c:	10800204 	addi	r2,r2,8
 801e270:	0007883a 	mov	r3,zero
 801e274:	10c00035 	stwio	r3,0(r2)

  /* Dummy read to ensure IRQ is negated before ISR returns */
  IORD_ALTERA_AVALON_UART_STATUS(base);
 801e278:	e0bffd17 	ldw	r2,-12(fp)
 801e27c:	10800204 	addi	r2,r2,8
 801e280:	10800037 	ldwio	r2,0(r2)
  
  /* process a read irq */
  if (status & ALTERA_AVALON_UART_STATUS_RRDY_MSK)
 801e284:	e0bffe17 	ldw	r2,-8(fp)
 801e288:	1080200c 	andi	r2,r2,128
 801e28c:	10000326 	beq	r2,zero,801e29c <altera_avalon_uart_irq+0x6c>
  {
    altera_avalon_uart_rxirq(sp, status);
 801e290:	e17ffe17 	ldw	r5,-8(fp)
 801e294:	e13ffc17 	ldw	r4,-16(fp)
 801e298:	801e2cc0 	call	801e2cc <altera_avalon_uart_rxirq>
  }

  /* process a write irq */
  if (status & (ALTERA_AVALON_UART_STATUS_TRDY_MSK | 
 801e29c:	e0bffe17 	ldw	r2,-8(fp)
 801e2a0:	1081100c 	andi	r2,r2,1088
 801e2a4:	10000326 	beq	r2,zero,801e2b4 <altera_avalon_uart_irq+0x84>
                  ALTERA_AVALON_UART_STATUS_DCTS_MSK))
  {
    altera_avalon_uart_txirq(sp, status);
 801e2a8:	e17ffe17 	ldw	r5,-8(fp)
 801e2ac:	e13ffc17 	ldw	r4,-16(fp)
 801e2b0:	801e3b00 	call	801e3b0 <altera_avalon_uart_txirq>
  }
  

}
 801e2b4:	0001883a 	nop
 801e2b8:	e037883a 	mov	sp,fp
 801e2bc:	dfc00117 	ldw	ra,4(sp)
 801e2c0:	df000017 	ldw	fp,0(sp)
 801e2c4:	dec00204 	addi	sp,sp,8
 801e2c8:	f800283a 	ret

0801e2cc <altera_avalon_uart_rxirq>:
 * the receive circular buffer, and sets the apropriate flags to indicate 
 * that there is data ready to be processed.
 */
static void 
altera_avalon_uart_rxirq(altera_avalon_uart_state* sp, alt_u32 status)
{
 801e2cc:	defffc04 	addi	sp,sp,-16
 801e2d0:	df000315 	stw	fp,12(sp)
 801e2d4:	df000304 	addi	fp,sp,12
 801e2d8:	e13ffe15 	stw	r4,-8(fp)
 801e2dc:	e17fff15 	stw	r5,-4(fp)
  alt_u32 next;
  
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
 801e2e0:	e0bfff17 	ldw	r2,-4(fp)
 801e2e4:	108000cc 	andi	r2,r2,3
 801e2e8:	10002c1e 	bne	r2,zero,801e39c <altera_avalon_uart_rxirq+0xd0>
   * In a multi-threaded environment, set the read event flag to indicate
   * that there is data ready. This is only done if the circular buffer was
   * previously empty.
   */

  if (sp->rx_end == sp->rx_start)
 801e2ec:	e0bffe17 	ldw	r2,-8(fp)
 801e2f0:	10800317 	ldw	r2,12(r2)
 801e2f4:	e0bffe17 	ldw	r2,-8(fp)
 801e2f8:	10800217 	ldw	r2,8(r2)
    ALT_FLAG_POST (sp->events, ALT_UART_READ_RDY, OS_FLAG_SET);
  }

  /* Determine which slot to use next in the circular buffer */

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
 801e2fc:	e0bffe17 	ldw	r2,-8(fp)
 801e300:	10800317 	ldw	r2,12(r2)
 801e304:	10800044 	addi	r2,r2,1
 801e308:	10800fcc 	andi	r2,r2,63
 801e30c:	e0bffd15 	stw	r2,-12(fp)

  /* Transfer data from the device to the circular buffer */

  sp->rx_buf[sp->rx_end] = IORD_ALTERA_AVALON_UART_RXDATA(sp->base);
 801e310:	e0bffe17 	ldw	r2,-8(fp)
 801e314:	10800317 	ldw	r2,12(r2)
 801e318:	e0fffe17 	ldw	r3,-8(fp)
 801e31c:	18c00017 	ldw	r3,0(r3)
 801e320:	18c00037 	ldwio	r3,0(r3)
 801e324:	1809883a 	mov	r4,r3
 801e328:	e0fffe17 	ldw	r3,-8(fp)
 801e32c:	1885883a 	add	r2,r3,r2
 801e330:	10800704 	addi	r2,r2,28
 801e334:	11000005 	stb	r4,0(r2)

  sp->rx_end = next;
 801e338:	e0bffe17 	ldw	r2,-8(fp)
 801e33c:	e0fffd17 	ldw	r3,-12(fp)
 801e340:	10c00315 	stw	r3,12(r2)

  next = (sp->rx_end + 1) & ALT_AVALON_UART_BUF_MSK;
 801e344:	e0bffe17 	ldw	r2,-8(fp)
 801e348:	10800317 	ldw	r2,12(r2)
 801e34c:	10800044 	addi	r2,r2,1
 801e350:	10800fcc 	andi	r2,r2,63
 801e354:	e0bffd15 	stw	r2,-12(fp)
  /*
   * If the cicular buffer was full, disable interrupts. Interrupts will be
   * re-enabled when data is removed from the buffer.
   */

  if (next == sp->rx_start)
 801e358:	e0bffe17 	ldw	r2,-8(fp)
 801e35c:	10c00217 	ldw	r3,8(r2)
 801e360:	e0bffd17 	ldw	r2,-12(fp)
 801e364:	18800e1e 	bne	r3,r2,801e3a0 <altera_avalon_uart_rxirq+0xd4>
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
 801e368:	e0bffe17 	ldw	r2,-8(fp)
 801e36c:	10c00117 	ldw	r3,4(r2)
 801e370:	00bfdfc4 	movi	r2,-129
 801e374:	1886703a 	and	r3,r3,r2
 801e378:	e0bffe17 	ldw	r2,-8(fp)
 801e37c:	10c00115 	stw	r3,4(r2)
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
 801e380:	e0bffe17 	ldw	r2,-8(fp)
 801e384:	10800017 	ldw	r2,0(r2)
 801e388:	10800304 	addi	r2,r2,12
 801e38c:	e0fffe17 	ldw	r3,-8(fp)
 801e390:	18c00117 	ldw	r3,4(r3)
 801e394:	10c00035 	stwio	r3,0(r2)
 801e398:	00000106 	br	801e3a0 <altera_avalon_uart_rxirq+0xd4>
  /* If there was an error, discard the data */

  if (status & (ALTERA_AVALON_UART_STATUS_PE_MSK | 
                  ALTERA_AVALON_UART_STATUS_FE_MSK))
  {
    return;
 801e39c:	0001883a 	nop
  if (next == sp->rx_start)
  {
    sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
    IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl); 
  }   
}
 801e3a0:	e037883a 	mov	sp,fp
 801e3a4:	df000017 	ldw	fp,0(sp)
 801e3a8:	dec00104 	addi	sp,sp,4
 801e3ac:	f800283a 	ret

0801e3b0 <altera_avalon_uart_txirq>:
 * buffer to the device, and sets the apropriate flags to indicate that 
 * there is data ready to be processed.
 */
static void 
altera_avalon_uart_txirq(altera_avalon_uart_state* sp, alt_u32 status)
{
 801e3b0:	defffb04 	addi	sp,sp,-20
 801e3b4:	df000415 	stw	fp,16(sp)
 801e3b8:	df000404 	addi	fp,sp,16
 801e3bc:	e13ffc15 	stw	r4,-16(fp)
 801e3c0:	e17ffd15 	stw	r5,-12(fp)
  /* Transfer data if there is some ready to be transfered */

  if (sp->tx_start != sp->tx_end)
 801e3c4:	e0bffc17 	ldw	r2,-16(fp)
 801e3c8:	10c00417 	ldw	r3,16(r2)
 801e3cc:	e0bffc17 	ldw	r2,-16(fp)
 801e3d0:	10800517 	ldw	r2,20(r2)
 801e3d4:	18803226 	beq	r3,r2,801e4a0 <altera_avalon_uart_txirq+0xf0>
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
 801e3d8:	e0bffc17 	ldw	r2,-16(fp)
 801e3dc:	10800617 	ldw	r2,24(r2)
 801e3e0:	1080008c 	andi	r2,r2,2
 801e3e4:	10000326 	beq	r2,zero,801e3f4 <altera_avalon_uart_txirq+0x44>
      (status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
 801e3e8:	e0bffd17 	ldw	r2,-12(fp)
 801e3ec:	1082000c 	andi	r2,r2,2048
    /* 
     * If the device is using flow control (i.e. RTS/CTS), then the
     * transmitter is required to throttle if CTS is high.
     */

    if (!(sp->flags & ALT_AVALON_UART_FC) ||
 801e3f0:	10001d26 	beq	r2,zero,801e468 <altera_avalon_uart_txirq+0xb8>
       * In a multi-threaded environment, set the write event flag to indicate
       * that there is space in the circular buffer. This is only done if the
       * buffer was previously empty.
       */

      if (sp->tx_start == ((sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK))
 801e3f4:	e0bffc17 	ldw	r2,-16(fp)
 801e3f8:	10800417 	ldw	r2,16(r2)
 801e3fc:	e0bffc17 	ldw	r2,-16(fp)
 801e400:	10800517 	ldw	r2,20(r2)
                       OS_FLAG_SET);
      }

      /* Write the data to the device */

      IOWR_ALTERA_AVALON_UART_TXDATA(sp->base, sp->tx_buf[sp->tx_start]);
 801e404:	e0bffc17 	ldw	r2,-16(fp)
 801e408:	10800017 	ldw	r2,0(r2)
 801e40c:	10800104 	addi	r2,r2,4
 801e410:	e0fffc17 	ldw	r3,-16(fp)
 801e414:	18c00417 	ldw	r3,16(r3)
 801e418:	e13ffc17 	ldw	r4,-16(fp)
 801e41c:	20c7883a 	add	r3,r4,r3
 801e420:	18c01704 	addi	r3,r3,92
 801e424:	18c00003 	ldbu	r3,0(r3)
 801e428:	18c03fcc 	andi	r3,r3,255
 801e42c:	10c00035 	stwio	r3,0(r2)

      sp->tx_start = (++sp->tx_start) & ALT_AVALON_UART_BUF_MSK;
 801e430:	e0bffc17 	ldw	r2,-16(fp)
 801e434:	10800417 	ldw	r2,16(r2)
 801e438:	10800044 	addi	r2,r2,1
 801e43c:	e0fffc17 	ldw	r3,-16(fp)
 801e440:	18800415 	stw	r2,16(r3)
 801e444:	10c00fcc 	andi	r3,r2,63
 801e448:	e0bffc17 	ldw	r2,-16(fp)
 801e44c:	10c00415 	stw	r3,16(r2)
      /*
       * In case the tranmit interrupt had previously been disabled by 
       * detecting a low value on CTS, it is reenabled here.
       */ 

      sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
 801e450:	e0bffc17 	ldw	r2,-16(fp)
 801e454:	10800117 	ldw	r2,4(r2)
 801e458:	10c01014 	ori	r3,r2,64
 801e45c:	e0bffc17 	ldw	r2,-16(fp)
 801e460:	10c00115 	stw	r3,4(r2)
 801e464:	00000e06 	br	801e4a0 <altera_avalon_uart_txirq+0xf0>
       * the last write to the status register. To avoid this resulting in
       * deadlock, it's necessary to re-check the status register here
       * before throttling.
       */
 
      status = IORD_ALTERA_AVALON_UART_STATUS(sp->base); 
 801e468:	e0bffc17 	ldw	r2,-16(fp)
 801e46c:	10800017 	ldw	r2,0(r2)
 801e470:	10800204 	addi	r2,r2,8
 801e474:	10800037 	ldwio	r2,0(r2)
 801e478:	e0bffd15 	stw	r2,-12(fp)

      if (!(status & ALTERA_AVALON_UART_STATUS_CTS_MSK))
 801e47c:	e0bffd17 	ldw	r2,-12(fp)
 801e480:	1082000c 	andi	r2,r2,2048
 801e484:	1000061e 	bne	r2,zero,801e4a0 <altera_avalon_uart_txirq+0xf0>
      {
        sp->ctrl &= ~ALTERA_AVALON_UART_CONTROL_TRDY_MSK;
 801e488:	e0bffc17 	ldw	r2,-16(fp)
 801e48c:	10c00117 	ldw	r3,4(r2)
 801e490:	00bfefc4 	movi	r2,-65
 801e494:	1886703a 	and	r3,r3,r2
 801e498:	e0bffc17 	ldw	r2,-16(fp)
 801e49c:	10c00115 	stw	r3,4(r2)
  /*
   * If the circular buffer is empty, disable the interrupt. This will be
   * re-enabled when new data is placed in the buffer.
   */

  if (sp->tx_start == sp->tx_end)
 801e4a0:	e0bffc17 	ldw	r2,-16(fp)
 801e4a4:	10c00417 	ldw	r3,16(r2)
 801e4a8:	e0bffc17 	ldw	r2,-16(fp)
 801e4ac:	10800517 	ldw	r2,20(r2)
 801e4b0:	1880061e 	bne	r3,r2,801e4cc <altera_avalon_uart_txirq+0x11c>
  {
    sp->ctrl &= ~(ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
 801e4b4:	e0bffc17 	ldw	r2,-16(fp)
 801e4b8:	10c00117 	ldw	r3,4(r2)
 801e4bc:	00beefc4 	movi	r2,-1089
 801e4c0:	1886703a 	and	r3,r3,r2
 801e4c4:	e0bffc17 	ldw	r2,-16(fp)
 801e4c8:	10c00115 	stw	r3,4(r2)
                    ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
  }

  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 801e4cc:	e0bffc17 	ldw	r2,-16(fp)
 801e4d0:	10800017 	ldw	r2,0(r2)
 801e4d4:	10800304 	addi	r2,r2,12
 801e4d8:	e0fffc17 	ldw	r3,-16(fp)
 801e4dc:	18c00117 	ldw	r3,4(r3)
 801e4e0:	10c00035 	stwio	r3,0(r2)
}
 801e4e4:	0001883a 	nop
 801e4e8:	e037883a 	mov	sp,fp
 801e4ec:	df000017 	ldw	fp,0(sp)
 801e4f0:	dec00104 	addi	sp,sp,4
 801e4f4:	f800283a 	ret

0801e4f8 <altera_avalon_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
 801e4f8:	defffd04 	addi	sp,sp,-12
 801e4fc:	df000215 	stw	fp,8(sp)
 801e500:	df000204 	addi	fp,sp,8
 801e504:	e13ffe15 	stw	r4,-8(fp)
 801e508:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
 801e50c:	00000506 	br	801e524 <altera_avalon_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 801e510:	e0bfff17 	ldw	r2,-4(fp)
 801e514:	1090000c 	andi	r2,r2,16384
 801e518:	10000226 	beq	r2,zero,801e524 <altera_avalon_uart_close+0x2c>
      return -EWOULDBLOCK; 
 801e51c:	00bffd44 	movi	r2,-11
 801e520:	00000606 	br	801e53c <altera_avalon_uart_close+0x44>
int altera_avalon_uart_close(altera_avalon_uart_state* sp, int flags)
{
  /* 
   * Wait for all transmit data to be emptied by the UART ISR.
   */
  while (sp->tx_start != sp->tx_end) {
 801e524:	e0bffe17 	ldw	r2,-8(fp)
 801e528:	10c00417 	ldw	r3,16(r2)
 801e52c:	e0bffe17 	ldw	r2,-8(fp)
 801e530:	10800517 	ldw	r2,20(r2)
 801e534:	18bff61e 	bne	r3,r2,801e510 <__alt_data_end+0xf801e510>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 801e538:	0005883a 	mov	r2,zero
}
 801e53c:	e037883a 	mov	sp,fp
 801e540:	df000017 	ldw	fp,0(sp)
 801e544:	dec00104 	addi	sp,sp,4
 801e548:	f800283a 	ret

0801e54c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801e54c:	defffe04 	addi	sp,sp,-8
 801e550:	dfc00115 	stw	ra,4(sp)
 801e554:	df000015 	stw	fp,0(sp)
 801e558:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801e55c:	d0a02017 	ldw	r2,-32640(gp)
 801e560:	10000326 	beq	r2,zero,801e570 <alt_get_errno+0x24>
 801e564:	d0a02017 	ldw	r2,-32640(gp)
 801e568:	103ee83a 	callr	r2
 801e56c:	00000106 	br	801e574 <alt_get_errno+0x28>
 801e570:	d0a72c04 	addi	r2,gp,-25424
}
 801e574:	e037883a 	mov	sp,fp
 801e578:	dfc00117 	ldw	ra,4(sp)
 801e57c:	df000017 	ldw	fp,0(sp)
 801e580:	dec00204 	addi	sp,sp,8
 801e584:	f800283a 	ret

0801e588 <altera_avalon_uart_read>:
 */

int 
altera_avalon_uart_read(altera_avalon_uart_state* sp, char* ptr, int len,
  int flags)
{
 801e588:	defff204 	addi	sp,sp,-56
 801e58c:	dfc00d15 	stw	ra,52(sp)
 801e590:	df000c15 	stw	fp,48(sp)
 801e594:	df000c04 	addi	fp,sp,48
 801e598:	e13ffc15 	stw	r4,-16(fp)
 801e59c:	e17ffd15 	stw	r5,-12(fp)
 801e5a0:	e1bffe15 	stw	r6,-8(fp)
 801e5a4:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             block;
  alt_u8          read_would_block = 0;
 801e5a8:	e03ff405 	stb	zero,-48(fp)
  int             count = 0;
 801e5ac:	e03ff515 	stw	zero,-44(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  block = !(flags & O_NONBLOCK);
 801e5b0:	e0bfff17 	ldw	r2,-4(fp)
 801e5b4:	1090000c 	andi	r2,r2,16384
 801e5b8:	1005003a 	cmpeq	r2,r2,zero
 801e5bc:	10803fcc 	andi	r2,r2,255
 801e5c0:	e0bff615 	stw	r2,-40(fp)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
 801e5c4:	00001306 	br	801e614 <altera_avalon_uart_read+0x8c>
    {
      count++;
 801e5c8:	e0bff517 	ldw	r2,-44(fp)
 801e5cc:	10800044 	addi	r2,r2,1
 801e5d0:	e0bff515 	stw	r2,-44(fp)
      *ptr++ = sp->rx_buf[sp->rx_start];
 801e5d4:	e0bffd17 	ldw	r2,-12(fp)
 801e5d8:	10c00044 	addi	r3,r2,1
 801e5dc:	e0fffd15 	stw	r3,-12(fp)
 801e5e0:	e0fffc17 	ldw	r3,-16(fp)
 801e5e4:	18c00217 	ldw	r3,8(r3)
 801e5e8:	e13ffc17 	ldw	r4,-16(fp)
 801e5ec:	20c7883a 	add	r3,r4,r3
 801e5f0:	18c00704 	addi	r3,r3,28
 801e5f4:	18c00003 	ldbu	r3,0(r3)
 801e5f8:	10c00005 	stb	r3,0(r2)
      
      sp->rx_start = (sp->rx_start+1) & ALT_AVALON_UART_BUF_MSK;
 801e5fc:	e0bffc17 	ldw	r2,-16(fp)
 801e600:	10800217 	ldw	r2,8(r2)
 801e604:	10800044 	addi	r2,r2,1
 801e608:	10c00fcc 	andi	r3,r2,63
 801e60c:	e0bffc17 	ldw	r2,-16(fp)
 801e610:	10c00215 	stw	r3,8(r2)
    /*
     * Read the required amount of data, until the circular buffer runs
     * empty
     */

    while ((count < len) && (sp->rx_start != sp->rx_end))
 801e614:	e0fff517 	ldw	r3,-44(fp)
 801e618:	e0bffe17 	ldw	r2,-8(fp)
 801e61c:	1880050e 	bge	r3,r2,801e634 <altera_avalon_uart_read+0xac>
 801e620:	e0bffc17 	ldw	r2,-16(fp)
 801e624:	10c00217 	ldw	r3,8(r2)
 801e628:	e0bffc17 	ldw	r2,-16(fp)
 801e62c:	10800317 	ldw	r2,12(r2)
 801e630:	18bfe51e 	bne	r3,r2,801e5c8 <__alt_data_end+0xf801e5c8>
    /*
     * If no data has been transferred, the circular buffer is empty, and
     * this is not a non-blocking access, block waiting for data to arrive.
     */

    if (!count && (sp->rx_start == sp->rx_end))
 801e634:	e0bff517 	ldw	r2,-44(fp)
 801e638:	1000251e 	bne	r2,zero,801e6d0 <altera_avalon_uart_read+0x148>
 801e63c:	e0bffc17 	ldw	r2,-16(fp)
 801e640:	10c00217 	ldw	r3,8(r2)
 801e644:	e0bffc17 	ldw	r2,-16(fp)
 801e648:	10800317 	ldw	r2,12(r2)
 801e64c:	1880201e 	bne	r3,r2,801e6d0 <altera_avalon_uart_read+0x148>
    {
      if (!block)
 801e650:	e0bff617 	ldw	r2,-40(fp)
 801e654:	1000071e 	bne	r2,zero,801e674 <altera_avalon_uart_read+0xec>
      {
        /* Set errno to indicate the reason we're not returning any data */

        ALT_ERRNO = EWOULDBLOCK;
 801e658:	801e54c0 	call	801e54c <alt_get_errno>
 801e65c:	1007883a 	mov	r3,r2
 801e660:	008002c4 	movi	r2,11
 801e664:	18800015 	stw	r2,0(r3)
        read_would_block = 1;
 801e668:	00800044 	movi	r2,1
 801e66c:	e0bff405 	stb	r2,-48(fp)
        break;
 801e670:	00001b06 	br	801e6e0 <altera_avalon_uart_read+0x158>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e674:	0005303a 	rdctl	r2,status
 801e678:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e67c:	e0fff917 	ldw	r3,-28(fp)
 801e680:	00bfff84 	movi	r2,-2
 801e684:	1884703a 	and	r2,r3,r2
 801e688:	1001703a 	wrctl	status,r2
  
  return context;
 801e68c:	e0bff917 	ldw	r2,-28(fp)
      {
       /* Block waiting for some data to arrive */

       /* First, ensure read interrupts are enabled to avoid deadlock */

       context = alt_irq_disable_all ();
 801e690:	e0bff815 	stw	r2,-32(fp)
       sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
 801e694:	e0bffc17 	ldw	r2,-16(fp)
 801e698:	10800117 	ldw	r2,4(r2)
 801e69c:	10c02014 	ori	r3,r2,128
 801e6a0:	e0bffc17 	ldw	r2,-16(fp)
 801e6a4:	10c00115 	stw	r3,4(r2)
       IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 801e6a8:	e0bffc17 	ldw	r2,-16(fp)
 801e6ac:	10800017 	ldw	r2,0(r2)
 801e6b0:	10800304 	addi	r2,r2,12
 801e6b4:	e0fffc17 	ldw	r3,-16(fp)
 801e6b8:	18c00117 	ldw	r3,4(r3)
 801e6bc:	10c00035 	stwio	r3,0(r2)
 801e6c0:	e0bff817 	ldw	r2,-32(fp)
 801e6c4:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e6c8:	e0bffa17 	ldw	r2,-24(fp)
 801e6cc:	1001703a 	wrctl	status,r2
                      OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                      0);
      }
    }
  }
  while (!count && len);
 801e6d0:	e0bff517 	ldw	r2,-44(fp)
 801e6d4:	1000021e 	bne	r2,zero,801e6e0 <altera_avalon_uart_read+0x158>
 801e6d8:	e0bffe17 	ldw	r2,-8(fp)
 801e6dc:	103fcd1e 	bne	r2,zero,801e614 <__alt_data_end+0xf801e614>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e6e0:	0005303a 	rdctl	r2,status
 801e6e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e6e8:	e0fffb17 	ldw	r3,-20(fp)
 801e6ec:	00bfff84 	movi	r2,-2
 801e6f0:	1884703a 	and	r2,r3,r2
 801e6f4:	1001703a 	wrctl	status,r2
  
  return context;
 801e6f8:	e0bffb17 	ldw	r2,-20(fp)
  /*
   * Ensure that interrupts are enabled, so that the circular buffer can
   * re-fill.
   */

  context = alt_irq_disable_all ();
 801e6fc:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_RRDY_MSK;
 801e700:	e0bffc17 	ldw	r2,-16(fp)
 801e704:	10800117 	ldw	r2,4(r2)
 801e708:	10c02014 	ori	r3,r2,128
 801e70c:	e0bffc17 	ldw	r2,-16(fp)
 801e710:	10c00115 	stw	r3,4(r2)
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 801e714:	e0bffc17 	ldw	r2,-16(fp)
 801e718:	10800017 	ldw	r2,0(r2)
 801e71c:	10800304 	addi	r2,r2,12
 801e720:	e0fffc17 	ldw	r3,-16(fp)
 801e724:	18c00117 	ldw	r3,4(r3)
 801e728:	10c00035 	stwio	r3,0(r2)
 801e72c:	e0bff817 	ldw	r2,-32(fp)
 801e730:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e734:	e0bff717 	ldw	r2,-36(fp)
 801e738:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* Return the number of bytes read */
  if(read_would_block) {
 801e73c:	e0bff403 	ldbu	r2,-48(fp)
 801e740:	10000226 	beq	r2,zero,801e74c <altera_avalon_uart_read+0x1c4>
    return -EWOULDBLOCK;
 801e744:	00bffd44 	movi	r2,-11
 801e748:	00000106 	br	801e750 <altera_avalon_uart_read+0x1c8>
  }
  else {
    return count;
 801e74c:	e0bff517 	ldw	r2,-44(fp)
  }
}
 801e750:	e037883a 	mov	sp,fp
 801e754:	dfc00117 	ldw	ra,4(sp)
 801e758:	df000017 	ldw	fp,0(sp)
 801e75c:	dec00204 	addi	sp,sp,8
 801e760:	f800283a 	ret

0801e764 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801e764:	defffe04 	addi	sp,sp,-8
 801e768:	dfc00115 	stw	ra,4(sp)
 801e76c:	df000015 	stw	fp,0(sp)
 801e770:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801e774:	d0a02017 	ldw	r2,-32640(gp)
 801e778:	10000326 	beq	r2,zero,801e788 <alt_get_errno+0x24>
 801e77c:	d0a02017 	ldw	r2,-32640(gp)
 801e780:	103ee83a 	callr	r2
 801e784:	00000106 	br	801e78c <alt_get_errno+0x28>
 801e788:	d0a72c04 	addi	r2,gp,-25424
}
 801e78c:	e037883a 	mov	sp,fp
 801e790:	dfc00117 	ldw	ra,4(sp)
 801e794:	df000017 	ldw	fp,0(sp)
 801e798:	dec00204 	addi	sp,sp,8
 801e79c:	f800283a 	ret

0801e7a0 <altera_avalon_uart_write>:
 */

int
altera_avalon_uart_write(altera_avalon_uart_state* sp, const char* ptr, int len,
  int flags)
{
 801e7a0:	defff204 	addi	sp,sp,-56
 801e7a4:	dfc00d15 	stw	ra,52(sp)
 801e7a8:	df000c15 	stw	fp,48(sp)
 801e7ac:	df000c04 	addi	fp,sp,48
 801e7b0:	e13ffc15 	stw	r4,-16(fp)
 801e7b4:	e17ffd15 	stw	r5,-12(fp)
 801e7b8:	e1bffe15 	stw	r6,-8(fp)
 801e7bc:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context context;
  int             no_block;
  alt_u32         next;
  int             count = len;
 801e7c0:	e0bffe17 	ldw	r2,-8(fp)
 801e7c4:	e0bff415 	stw	r2,-48(fp)
  /* 
   * Construct a flag to indicate whether the device is being accessed in
   * blocking or non-blocking mode.
   */

  no_block = (flags & O_NONBLOCK);
 801e7c8:	e0bfff17 	ldw	r2,-4(fp)
 801e7cc:	1090000c 	andi	r2,r2,16384
 801e7d0:	e0bff515 	stw	r2,-44(fp)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
 801e7d4:	00003c06 	br	801e8c8 <altera_avalon_uart_write+0x128>
  {
    /* Determine the next slot in the buffer to access */

    next = (sp->tx_end + 1) & ALT_AVALON_UART_BUF_MSK;
 801e7d8:	e0bffc17 	ldw	r2,-16(fp)
 801e7dc:	10800517 	ldw	r2,20(r2)
 801e7e0:	10800044 	addi	r2,r2,1
 801e7e4:	10800fcc 	andi	r2,r2,63
 801e7e8:	e0bff715 	stw	r2,-36(fp)

    /* block waiting for space if necessary */

    if (next == sp->tx_start)
 801e7ec:	e0bffc17 	ldw	r2,-16(fp)
 801e7f0:	10c00417 	ldw	r3,16(r2)
 801e7f4:	e0bff717 	ldw	r2,-36(fp)
 801e7f8:	1880221e 	bne	r3,r2,801e884 <altera_avalon_uart_write+0xe4>
    {
      if (no_block)
 801e7fc:	e0bff517 	ldw	r2,-44(fp)
 801e800:	10000526 	beq	r2,zero,801e818 <altera_avalon_uart_write+0x78>
      {
        /* Set errno to indicate why this function returned early */
 
        ALT_ERRNO = EWOULDBLOCK;
 801e804:	801e7640 	call	801e764 <alt_get_errno>
 801e808:	1007883a 	mov	r3,r2
 801e80c:	008002c4 	movi	r2,11
 801e810:	18800015 	stw	r2,0(r3)
        break;
 801e814:	00002e06 	br	801e8d0 <altera_avalon_uart_write+0x130>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e818:	0005303a 	rdctl	r2,status
 801e81c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e820:	e0fff917 	ldw	r3,-28(fp)
 801e824:	00bfff84 	movi	r2,-2
 801e828:	1884703a 	and	r2,r3,r2
 801e82c:	1001703a 	wrctl	status,r2
  
  return context;
 801e830:	e0bff917 	ldw	r2,-28(fp)
      {
        /* Block waiting for space in the circular buffer */

        /* First, ensure transmit interrupts are enabled to avoid deadlock */

        context = alt_irq_disable_all ();
 801e834:	e0bff815 	stw	r2,-32(fp)
        sp->ctrl |= (ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
 801e838:	e0bffc17 	ldw	r2,-16(fp)
 801e83c:	10800117 	ldw	r2,4(r2)
 801e840:	10c11014 	ori	r3,r2,1088
 801e844:	e0bffc17 	ldw	r2,-16(fp)
 801e848:	10c00115 	stw	r3,4(r2)
                        ALTERA_AVALON_UART_CONTROL_DCTS_MSK);
        IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 801e84c:	e0bffc17 	ldw	r2,-16(fp)
 801e850:	10800017 	ldw	r2,0(r2)
 801e854:	10800304 	addi	r2,r2,12
 801e858:	e0fffc17 	ldw	r3,-16(fp)
 801e85c:	18c00117 	ldw	r3,4(r3)
 801e860:	10c00035 	stwio	r3,0(r2)
 801e864:	e0bff817 	ldw	r2,-32(fp)
 801e868:	e0bff615 	stw	r2,-40(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e86c:	e0bff617 	ldw	r2,-40(fp)
 801e870:	1001703a 	wrctl	status,r2
          ALT_FLAG_PEND (sp->events, 
                         ALT_UART_WRITE_RDY,
                         OS_FLAG_WAIT_SET_ANY + OS_FLAG_CONSUME,
                         0);
        }
        while ((next == sp->tx_start));
 801e874:	e0bffc17 	ldw	r2,-16(fp)
 801e878:	10c00417 	ldw	r3,16(r2)
 801e87c:	e0bff717 	ldw	r2,-36(fp)
 801e880:	18bffc26 	beq	r3,r2,801e874 <__alt_data_end+0xf801e874>
      }
    }

    count--;
 801e884:	e0bff417 	ldw	r2,-48(fp)
 801e888:	10bfffc4 	addi	r2,r2,-1
 801e88c:	e0bff415 	stw	r2,-48(fp)

    /* Add the next character to the transmit buffer */

    sp->tx_buf[sp->tx_end] = *ptr++;
 801e890:	e0bffc17 	ldw	r2,-16(fp)
 801e894:	10c00517 	ldw	r3,20(r2)
 801e898:	e0bffd17 	ldw	r2,-12(fp)
 801e89c:	11000044 	addi	r4,r2,1
 801e8a0:	e13ffd15 	stw	r4,-12(fp)
 801e8a4:	10800003 	ldbu	r2,0(r2)
 801e8a8:	1009883a 	mov	r4,r2
 801e8ac:	e0bffc17 	ldw	r2,-16(fp)
 801e8b0:	10c5883a 	add	r2,r2,r3
 801e8b4:	10801704 	addi	r2,r2,92
 801e8b8:	11000005 	stb	r4,0(r2)
    sp->tx_end = next;
 801e8bc:	e0bffc17 	ldw	r2,-16(fp)
 801e8c0:	e0fff717 	ldw	r3,-36(fp)
 801e8c4:	10c00515 	stw	r3,20(r2)
   * Loop transferring data from the input buffer to the transmit circular
   * buffer. The loop is terminated once all the data has been transferred,
   * or, (if in non-blocking mode) the buffer becomes full.
   */

  while (count)
 801e8c8:	e0bff417 	ldw	r2,-48(fp)
 801e8cc:	103fc21e 	bne	r2,zero,801e7d8 <__alt_data_end+0xf801e7d8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e8d0:	0005303a 	rdctl	r2,status
 801e8d4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e8d8:	e0fffb17 	ldw	r3,-20(fp)
 801e8dc:	00bfff84 	movi	r2,-2
 801e8e0:	1884703a 	and	r2,r3,r2
 801e8e4:	1001703a 	wrctl	status,r2
  
  return context;
 801e8e8:	e0bffb17 	ldw	r2,-20(fp)
  /* 
   * Ensure that interrupts are enabled, so that the circular buffer can 
   * drain.
   */

  context = alt_irq_disable_all ();
 801e8ec:	e0bff815 	stw	r2,-32(fp)
  sp->ctrl |= ALTERA_AVALON_UART_CONTROL_TRDY_MSK |
 801e8f0:	e0bffc17 	ldw	r2,-16(fp)
 801e8f4:	10800117 	ldw	r2,4(r2)
 801e8f8:	10c11014 	ori	r3,r2,1088
 801e8fc:	e0bffc17 	ldw	r2,-16(fp)
 801e900:	10c00115 	stw	r3,4(r2)
                 ALTERA_AVALON_UART_CONTROL_DCTS_MSK;
  IOWR_ALTERA_AVALON_UART_CONTROL(sp->base, sp->ctrl);
 801e904:	e0bffc17 	ldw	r2,-16(fp)
 801e908:	10800017 	ldw	r2,0(r2)
 801e90c:	10800304 	addi	r2,r2,12
 801e910:	e0fffc17 	ldw	r3,-16(fp)
 801e914:	18c00117 	ldw	r3,4(r3)
 801e918:	10c00035 	stwio	r3,0(r2)
 801e91c:	e0bff817 	ldw	r2,-32(fp)
 801e920:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801e924:	e0bffa17 	ldw	r2,-24(fp)
 801e928:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (context);

  /* return the number of bytes written */

  return (len - count);
 801e92c:	e0fffe17 	ldw	r3,-8(fp)
 801e930:	e0bff417 	ldw	r2,-48(fp)
 801e934:	1885c83a 	sub	r2,r3,r2
}
 801e938:	e037883a 	mov	sp,fp
 801e93c:	dfc00117 	ldw	ra,4(sp)
 801e940:	df000017 	ldw	fp,0(sp)
 801e944:	dec00204 	addi	sp,sp,8
 801e948:	f800283a 	ret

0801e94c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 801e94c:	defff504 	addi	sp,sp,-44
 801e950:	df000a15 	stw	fp,40(sp)
 801e954:	df000a04 	addi	fp,sp,40
 801e958:	e13ffc15 	stw	r4,-16(fp)
 801e95c:	e17ffd15 	stw	r5,-12(fp)
 801e960:	e1bffe15 	stw	r6,-8(fp)
 801e964:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 801e968:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 801e96c:	d0a73317 	ldw	r2,-25396(gp)
  
  if (alt_ticks_per_second ())
 801e970:	10003c26 	beq	r2,zero,801ea64 <alt_alarm_start+0x118>
  {
    if (alarm)
 801e974:	e0bffc17 	ldw	r2,-16(fp)
 801e978:	10003826 	beq	r2,zero,801ea5c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 801e97c:	e0bffc17 	ldw	r2,-16(fp)
 801e980:	e0fffe17 	ldw	r3,-8(fp)
 801e984:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 801e988:	e0bffc17 	ldw	r2,-16(fp)
 801e98c:	e0ffff17 	ldw	r3,-4(fp)
 801e990:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801e994:	0005303a 	rdctl	r2,status
 801e998:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801e99c:	e0fff917 	ldw	r3,-28(fp)
 801e9a0:	00bfff84 	movi	r2,-2
 801e9a4:	1884703a 	and	r2,r3,r2
 801e9a8:	1001703a 	wrctl	status,r2
  
  return context;
 801e9ac:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 801e9b0:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 801e9b4:	d0a73417 	ldw	r2,-25392(gp)
      
      current_nticks = alt_nticks();
 801e9b8:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 801e9bc:	e0fffd17 	ldw	r3,-12(fp)
 801e9c0:	e0bff617 	ldw	r2,-40(fp)
 801e9c4:	1885883a 	add	r2,r3,r2
 801e9c8:	10c00044 	addi	r3,r2,1
 801e9cc:	e0bffc17 	ldw	r2,-16(fp)
 801e9d0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 801e9d4:	e0bffc17 	ldw	r2,-16(fp)
 801e9d8:	10c00217 	ldw	r3,8(r2)
 801e9dc:	e0bff617 	ldw	r2,-40(fp)
 801e9e0:	1880042e 	bgeu	r3,r2,801e9f4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 801e9e4:	e0bffc17 	ldw	r2,-16(fp)
 801e9e8:	00c00044 	movi	r3,1
 801e9ec:	10c00405 	stb	r3,16(r2)
 801e9f0:	00000206 	br	801e9fc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 801e9f4:	e0bffc17 	ldw	r2,-16(fp)
 801e9f8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 801e9fc:	e0bffc17 	ldw	r2,-16(fp)
 801ea00:	d0e02204 	addi	r3,gp,-32632
 801ea04:	e0fffa15 	stw	r3,-24(fp)
 801ea08:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801ea0c:	e0bffb17 	ldw	r2,-20(fp)
 801ea10:	e0fffa17 	ldw	r3,-24(fp)
 801ea14:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801ea18:	e0bffa17 	ldw	r2,-24(fp)
 801ea1c:	10c00017 	ldw	r3,0(r2)
 801ea20:	e0bffb17 	ldw	r2,-20(fp)
 801ea24:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801ea28:	e0bffa17 	ldw	r2,-24(fp)
 801ea2c:	10800017 	ldw	r2,0(r2)
 801ea30:	e0fffb17 	ldw	r3,-20(fp)
 801ea34:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801ea38:	e0bffa17 	ldw	r2,-24(fp)
 801ea3c:	e0fffb17 	ldw	r3,-20(fp)
 801ea40:	10c00015 	stw	r3,0(r2)
 801ea44:	e0bff817 	ldw	r2,-32(fp)
 801ea48:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801ea4c:	e0bff717 	ldw	r2,-36(fp)
 801ea50:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 801ea54:	0005883a 	mov	r2,zero
 801ea58:	00000306 	br	801ea68 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 801ea5c:	00bffa84 	movi	r2,-22
 801ea60:	00000106 	br	801ea68 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 801ea64:	00bfde84 	movi	r2,-134
  }
}
 801ea68:	e037883a 	mov	sp,fp
 801ea6c:	df000017 	ldw	fp,0(sp)
 801ea70:	dec00104 	addi	sp,sp,4
 801ea74:	f800283a 	ret

0801ea78 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 801ea78:	defffa04 	addi	sp,sp,-24
 801ea7c:	dfc00515 	stw	ra,20(sp)
 801ea80:	df000415 	stw	fp,16(sp)
 801ea84:	df000404 	addi	fp,sp,16
 801ea88:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 801ea8c:	008000c4 	movi	r2,3
 801ea90:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 801ea94:	e0fffd17 	ldw	r3,-12(fp)
 801ea98:	008003f4 	movhi	r2,15
 801ea9c:	10909004 	addi	r2,r2,16960
 801eaa0:	1885383a 	mul	r2,r3,r2
 801eaa4:	100b883a 	mov	r5,r2
 801eaa8:	01017db4 	movhi	r4,1526
 801eaac:	21384004 	addi	r4,r4,-7936
 801eab0:	80039b80 	call	80039b8 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 801eab4:	100b883a 	mov	r5,r2
 801eab8:	01200034 	movhi	r4,32768
 801eabc:	213fffc4 	addi	r4,r4,-1
 801eac0:	80039b80 	call	80039b8 <__udivsi3>
 801eac4:	100b883a 	mov	r5,r2
 801eac8:	e13fff17 	ldw	r4,-4(fp)
 801eacc:	80039b80 	call	80039b8 <__udivsi3>
 801ead0:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 801ead4:	e0bffe17 	ldw	r2,-8(fp)
 801ead8:	10002a26 	beq	r2,zero,801eb84 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 801eadc:	e03ffc15 	stw	zero,-16(fp)
 801eae0:	00001706 	br	801eb40 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 801eae4:	00a00034 	movhi	r2,32768
 801eae8:	10bfffc4 	addi	r2,r2,-1
 801eaec:	10bfffc4 	addi	r2,r2,-1
 801eaf0:	103ffe1e 	bne	r2,zero,801eaec <__alt_data_end+0xf801eaec>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 801eaf4:	e0fffd17 	ldw	r3,-12(fp)
 801eaf8:	008003f4 	movhi	r2,15
 801eafc:	10909004 	addi	r2,r2,16960
 801eb00:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 801eb04:	100b883a 	mov	r5,r2
 801eb08:	01017db4 	movhi	r4,1526
 801eb0c:	21384004 	addi	r4,r4,-7936
 801eb10:	80039b80 	call	80039b8 <__udivsi3>
 801eb14:	100b883a 	mov	r5,r2
 801eb18:	01200034 	movhi	r4,32768
 801eb1c:	213fffc4 	addi	r4,r4,-1
 801eb20:	80039b80 	call	80039b8 <__udivsi3>
 801eb24:	1007883a 	mov	r3,r2
 801eb28:	e0bfff17 	ldw	r2,-4(fp)
 801eb2c:	10c5c83a 	sub	r2,r2,r3
 801eb30:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 801eb34:	e0bffc17 	ldw	r2,-16(fp)
 801eb38:	10800044 	addi	r2,r2,1
 801eb3c:	e0bffc15 	stw	r2,-16(fp)
 801eb40:	e0fffc17 	ldw	r3,-16(fp)
 801eb44:	e0bffe17 	ldw	r2,-8(fp)
 801eb48:	18bfe616 	blt	r3,r2,801eae4 <__alt_data_end+0xf801eae4>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 801eb4c:	e0fffd17 	ldw	r3,-12(fp)
 801eb50:	008003f4 	movhi	r2,15
 801eb54:	10909004 	addi	r2,r2,16960
 801eb58:	1885383a 	mul	r2,r3,r2
 801eb5c:	100b883a 	mov	r5,r2
 801eb60:	01017db4 	movhi	r4,1526
 801eb64:	21384004 	addi	r4,r4,-7936
 801eb68:	80039b80 	call	80039b8 <__udivsi3>
 801eb6c:	1007883a 	mov	r3,r2
 801eb70:	e0bfff17 	ldw	r2,-4(fp)
 801eb74:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 801eb78:	10bfffc4 	addi	r2,r2,-1
 801eb7c:	103ffe1e 	bne	r2,zero,801eb78 <__alt_data_end+0xf801eb78>
 801eb80:	00000d06 	br	801ebb8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 801eb84:	e0fffd17 	ldw	r3,-12(fp)
 801eb88:	008003f4 	movhi	r2,15
 801eb8c:	10909004 	addi	r2,r2,16960
 801eb90:	1885383a 	mul	r2,r3,r2
 801eb94:	100b883a 	mov	r5,r2
 801eb98:	01017db4 	movhi	r4,1526
 801eb9c:	21384004 	addi	r4,r4,-7936
 801eba0:	80039b80 	call	80039b8 <__udivsi3>
 801eba4:	1007883a 	mov	r3,r2
 801eba8:	e0bfff17 	ldw	r2,-4(fp)
 801ebac:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 801ebb0:	10bfffc4 	addi	r2,r2,-1
 801ebb4:	00bffe16 	blt	zero,r2,801ebb0 <__alt_data_end+0xf801ebb0>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 801ebb8:	0005883a 	mov	r2,zero
}
 801ebbc:	e037883a 	mov	sp,fp
 801ebc0:	dfc00117 	ldw	ra,4(sp)
 801ebc4:	df000017 	ldw	fp,0(sp)
 801ebc8:	dec00204 	addi	sp,sp,8
 801ebcc:	f800283a 	ret

0801ebd0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 801ebd0:	defffe04 	addi	sp,sp,-8
 801ebd4:	df000115 	stw	fp,4(sp)
 801ebd8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 801ebdc:	e03fff15 	stw	zero,-4(fp)
 801ebe0:	00000506 	br	801ebf8 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 801ebe4:	e0bfff17 	ldw	r2,-4(fp)
 801ebe8:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 801ebec:	e0bfff17 	ldw	r2,-4(fp)
 801ebf0:	10800804 	addi	r2,r2,32
 801ebf4:	e0bfff15 	stw	r2,-4(fp)
 801ebf8:	e0bfff17 	ldw	r2,-4(fp)
 801ebfc:	10820030 	cmpltui	r2,r2,2048
 801ec00:	103ff81e 	bne	r2,zero,801ebe4 <__alt_data_end+0xf801ebe4>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 801ec04:	0001883a 	nop
 801ec08:	e037883a 	mov	sp,fp
 801ec0c:	df000017 	ldw	fp,0(sp)
 801ec10:	dec00104 	addi	sp,sp,4
 801ec14:	f800283a 	ret

0801ec18 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 801ec18:	defffe04 	addi	sp,sp,-8
 801ec1c:	dfc00115 	stw	ra,4(sp)
 801ec20:	df000015 	stw	fp,0(sp)
 801ec24:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 801ec28:	d0a02017 	ldw	r2,-32640(gp)
 801ec2c:	10000326 	beq	r2,zero,801ec3c <alt_get_errno+0x24>
 801ec30:	d0a02017 	ldw	r2,-32640(gp)
 801ec34:	103ee83a 	callr	r2
 801ec38:	00000106 	br	801ec40 <alt_get_errno+0x28>
 801ec3c:	d0a72c04 	addi	r2,gp,-25424
}
 801ec40:	e037883a 	mov	sp,fp
 801ec44:	dfc00117 	ldw	ra,4(sp)
 801ec48:	df000017 	ldw	fp,0(sp)
 801ec4c:	dec00204 	addi	sp,sp,8
 801ec50:	f800283a 	ret

0801ec54 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 801ec54:	defffa04 	addi	sp,sp,-24
 801ec58:	dfc00515 	stw	ra,20(sp)
 801ec5c:	df000415 	stw	fp,16(sp)
 801ec60:	df000404 	addi	fp,sp,16
 801ec64:	e13ffe15 	stw	r4,-8(fp)
 801ec68:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 801ec6c:	e0bffe17 	ldw	r2,-8(fp)
 801ec70:	10000326 	beq	r2,zero,801ec80 <alt_dev_llist_insert+0x2c>
 801ec74:	e0bffe17 	ldw	r2,-8(fp)
 801ec78:	10800217 	ldw	r2,8(r2)
 801ec7c:	1000061e 	bne	r2,zero,801ec98 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 801ec80:	801ec180 	call	801ec18 <alt_get_errno>
 801ec84:	1007883a 	mov	r3,r2
 801ec88:	00800584 	movi	r2,22
 801ec8c:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 801ec90:	00bffa84 	movi	r2,-22
 801ec94:	00001306 	br	801ece4 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 801ec98:	e0bffe17 	ldw	r2,-8(fp)
 801ec9c:	e0ffff17 	ldw	r3,-4(fp)
 801eca0:	e0fffc15 	stw	r3,-16(fp)
 801eca4:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 801eca8:	e0bffd17 	ldw	r2,-12(fp)
 801ecac:	e0fffc17 	ldw	r3,-16(fp)
 801ecb0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 801ecb4:	e0bffc17 	ldw	r2,-16(fp)
 801ecb8:	10c00017 	ldw	r3,0(r2)
 801ecbc:	e0bffd17 	ldw	r2,-12(fp)
 801ecc0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 801ecc4:	e0bffc17 	ldw	r2,-16(fp)
 801ecc8:	10800017 	ldw	r2,0(r2)
 801eccc:	e0fffd17 	ldw	r3,-12(fp)
 801ecd0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 801ecd4:	e0bffc17 	ldw	r2,-16(fp)
 801ecd8:	e0fffd17 	ldw	r3,-12(fp)
 801ecdc:	10c00015 	stw	r3,0(r2)

  return 0;  
 801ece0:	0005883a 	mov	r2,zero
}
 801ece4:	e037883a 	mov	sp,fp
 801ece8:	dfc00117 	ldw	ra,4(sp)
 801ecec:	df000017 	ldw	fp,0(sp)
 801ecf0:	dec00204 	addi	sp,sp,8
 801ecf4:	f800283a 	ret

0801ecf8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 801ecf8:	defffd04 	addi	sp,sp,-12
 801ecfc:	dfc00215 	stw	ra,8(sp)
 801ed00:	df000115 	stw	fp,4(sp)
 801ed04:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 801ed08:	008200b4 	movhi	r2,2050
 801ed0c:	10be4404 	addi	r2,r2,-1776
 801ed10:	e0bfff15 	stw	r2,-4(fp)
 801ed14:	00000606 	br	801ed30 <_do_ctors+0x38>
        (*ctor) (); 
 801ed18:	e0bfff17 	ldw	r2,-4(fp)
 801ed1c:	10800017 	ldw	r2,0(r2)
 801ed20:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 801ed24:	e0bfff17 	ldw	r2,-4(fp)
 801ed28:	10bfff04 	addi	r2,r2,-4
 801ed2c:	e0bfff15 	stw	r2,-4(fp)
 801ed30:	e0ffff17 	ldw	r3,-4(fp)
 801ed34:	008200b4 	movhi	r2,2050
 801ed38:	10be4344 	addi	r2,r2,-1779
 801ed3c:	18bff62e 	bgeu	r3,r2,801ed18 <__alt_data_end+0xf801ed18>
        (*ctor) (); 
}
 801ed40:	0001883a 	nop
 801ed44:	e037883a 	mov	sp,fp
 801ed48:	dfc00117 	ldw	ra,4(sp)
 801ed4c:	df000017 	ldw	fp,0(sp)
 801ed50:	dec00204 	addi	sp,sp,8
 801ed54:	f800283a 	ret

0801ed58 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 801ed58:	defffd04 	addi	sp,sp,-12
 801ed5c:	dfc00215 	stw	ra,8(sp)
 801ed60:	df000115 	stw	fp,4(sp)
 801ed64:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801ed68:	008200b4 	movhi	r2,2050
 801ed6c:	10be4404 	addi	r2,r2,-1776
 801ed70:	e0bfff15 	stw	r2,-4(fp)
 801ed74:	00000606 	br	801ed90 <_do_dtors+0x38>
        (*dtor) (); 
 801ed78:	e0bfff17 	ldw	r2,-4(fp)
 801ed7c:	10800017 	ldw	r2,0(r2)
 801ed80:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 801ed84:	e0bfff17 	ldw	r2,-4(fp)
 801ed88:	10bfff04 	addi	r2,r2,-4
 801ed8c:	e0bfff15 	stw	r2,-4(fp)
 801ed90:	e0ffff17 	ldw	r3,-4(fp)
 801ed94:	008200b4 	movhi	r2,2050
 801ed98:	10be4504 	addi	r2,r2,-1772
 801ed9c:	18bff62e 	bgeu	r3,r2,801ed78 <__alt_data_end+0xf801ed78>
        (*dtor) (); 
}
 801eda0:	0001883a 	nop
 801eda4:	e037883a 	mov	sp,fp
 801eda8:	dfc00117 	ldw	ra,4(sp)
 801edac:	df000017 	ldw	fp,0(sp)
 801edb0:	dec00204 	addi	sp,sp,8
 801edb4:	f800283a 	ret

0801edb8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 801edb8:	defffa04 	addi	sp,sp,-24
 801edbc:	dfc00515 	stw	ra,20(sp)
 801edc0:	df000415 	stw	fp,16(sp)
 801edc4:	df000404 	addi	fp,sp,16
 801edc8:	e13ffe15 	stw	r4,-8(fp)
 801edcc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 801edd0:	e0bfff17 	ldw	r2,-4(fp)
 801edd4:	10800017 	ldw	r2,0(r2)
 801edd8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 801eddc:	e13ffe17 	ldw	r4,-8(fp)
 801ede0:	800526c0 	call	800526c <strlen>
 801ede4:	10800044 	addi	r2,r2,1
 801ede8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 801edec:	00000d06 	br	801ee24 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 801edf0:	e0bffc17 	ldw	r2,-16(fp)
 801edf4:	10800217 	ldw	r2,8(r2)
 801edf8:	e0fffd17 	ldw	r3,-12(fp)
 801edfc:	180d883a 	mov	r6,r3
 801ee00:	e17ffe17 	ldw	r5,-8(fp)
 801ee04:	1009883a 	mov	r4,r2
 801ee08:	801f5a40 	call	801f5a4 <memcmp>
 801ee0c:	1000021e 	bne	r2,zero,801ee18 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 801ee10:	e0bffc17 	ldw	r2,-16(fp)
 801ee14:	00000706 	br	801ee34 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 801ee18:	e0bffc17 	ldw	r2,-16(fp)
 801ee1c:	10800017 	ldw	r2,0(r2)
 801ee20:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 801ee24:	e0fffc17 	ldw	r3,-16(fp)
 801ee28:	e0bfff17 	ldw	r2,-4(fp)
 801ee2c:	18bff01e 	bne	r3,r2,801edf0 <__alt_data_end+0xf801edf0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 801ee30:	0005883a 	mov	r2,zero
}
 801ee34:	e037883a 	mov	sp,fp
 801ee38:	dfc00117 	ldw	ra,4(sp)
 801ee3c:	df000017 	ldw	fp,0(sp)
 801ee40:	dec00204 	addi	sp,sp,8
 801ee44:	f800283a 	ret

0801ee48 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 801ee48:	defffb04 	addi	sp,sp,-20
 801ee4c:	dfc00415 	stw	ra,16(sp)
 801ee50:	df000315 	stw	fp,12(sp)
 801ee54:	df000304 	addi	fp,sp,12
 801ee58:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 801ee5c:	d0a01b17 	ldw	r2,-32660(gp)
 801ee60:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801ee64:	00003106 	br	801ef2c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 801ee68:	e0bffd17 	ldw	r2,-12(fp)
 801ee6c:	10800217 	ldw	r2,8(r2)
 801ee70:	1009883a 	mov	r4,r2
 801ee74:	800526c0 	call	800526c <strlen>
 801ee78:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 801ee7c:	e0bffd17 	ldw	r2,-12(fp)
 801ee80:	10c00217 	ldw	r3,8(r2)
 801ee84:	e0bffe17 	ldw	r2,-8(fp)
 801ee88:	10bfffc4 	addi	r2,r2,-1
 801ee8c:	1885883a 	add	r2,r3,r2
 801ee90:	10800003 	ldbu	r2,0(r2)
 801ee94:	10803fcc 	andi	r2,r2,255
 801ee98:	1080201c 	xori	r2,r2,128
 801ee9c:	10bfe004 	addi	r2,r2,-128
 801eea0:	10800bd8 	cmpnei	r2,r2,47
 801eea4:	1000031e 	bne	r2,zero,801eeb4 <alt_find_file+0x6c>
    {
      len -= 1;
 801eea8:	e0bffe17 	ldw	r2,-8(fp)
 801eeac:	10bfffc4 	addi	r2,r2,-1
 801eeb0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801eeb4:	e0bffe17 	ldw	r2,-8(fp)
 801eeb8:	e0ffff17 	ldw	r3,-4(fp)
 801eebc:	1885883a 	add	r2,r3,r2
 801eec0:	10800003 	ldbu	r2,0(r2)
 801eec4:	10803fcc 	andi	r2,r2,255
 801eec8:	1080201c 	xori	r2,r2,128
 801eecc:	10bfe004 	addi	r2,r2,-128
 801eed0:	10800be0 	cmpeqi	r2,r2,47
 801eed4:	1000081e 	bne	r2,zero,801eef8 <alt_find_file+0xb0>
 801eed8:	e0bffe17 	ldw	r2,-8(fp)
 801eedc:	e0ffff17 	ldw	r3,-4(fp)
 801eee0:	1885883a 	add	r2,r3,r2
 801eee4:	10800003 	ldbu	r2,0(r2)
 801eee8:	10803fcc 	andi	r2,r2,255
 801eeec:	1080201c 	xori	r2,r2,128
 801eef0:	10bfe004 	addi	r2,r2,-128
 801eef4:	10000a1e 	bne	r2,zero,801ef20 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 801eef8:	e0bffd17 	ldw	r2,-12(fp)
 801eefc:	10800217 	ldw	r2,8(r2)
 801ef00:	e0fffe17 	ldw	r3,-8(fp)
 801ef04:	180d883a 	mov	r6,r3
 801ef08:	e17fff17 	ldw	r5,-4(fp)
 801ef0c:	1009883a 	mov	r4,r2
 801ef10:	801f5a40 	call	801f5a4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 801ef14:	1000021e 	bne	r2,zero,801ef20 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 801ef18:	e0bffd17 	ldw	r2,-12(fp)
 801ef1c:	00000706 	br	801ef3c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 801ef20:	e0bffd17 	ldw	r2,-12(fp)
 801ef24:	10800017 	ldw	r2,0(r2)
 801ef28:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 801ef2c:	e0fffd17 	ldw	r3,-12(fp)
 801ef30:	d0a01b04 	addi	r2,gp,-32660
 801ef34:	18bfcc1e 	bne	r3,r2,801ee68 <__alt_data_end+0xf801ee68>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 801ef38:	0005883a 	mov	r2,zero
}
 801ef3c:	e037883a 	mov	sp,fp
 801ef40:	dfc00117 	ldw	ra,4(sp)
 801ef44:	df000017 	ldw	fp,0(sp)
 801ef48:	dec00204 	addi	sp,sp,8
 801ef4c:	f800283a 	ret

0801ef50 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 801ef50:	defffc04 	addi	sp,sp,-16
 801ef54:	df000315 	stw	fp,12(sp)
 801ef58:	df000304 	addi	fp,sp,12
 801ef5c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 801ef60:	00bffa04 	movi	r2,-24
 801ef64:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801ef68:	e03ffd15 	stw	zero,-12(fp)
 801ef6c:	00001906 	br	801efd4 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 801ef70:	008200b4 	movhi	r2,2050
 801ef74:	10835404 	addi	r2,r2,3408
 801ef78:	e0fffd17 	ldw	r3,-12(fp)
 801ef7c:	18c00324 	muli	r3,r3,12
 801ef80:	10c5883a 	add	r2,r2,r3
 801ef84:	10800017 	ldw	r2,0(r2)
 801ef88:	10000f1e 	bne	r2,zero,801efc8 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 801ef8c:	008200b4 	movhi	r2,2050
 801ef90:	10835404 	addi	r2,r2,3408
 801ef94:	e0fffd17 	ldw	r3,-12(fp)
 801ef98:	18c00324 	muli	r3,r3,12
 801ef9c:	10c5883a 	add	r2,r2,r3
 801efa0:	e0ffff17 	ldw	r3,-4(fp)
 801efa4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 801efa8:	d0e01f17 	ldw	r3,-32644(gp)
 801efac:	e0bffd17 	ldw	r2,-12(fp)
 801efb0:	1880020e 	bge	r3,r2,801efbc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 801efb4:	e0bffd17 	ldw	r2,-12(fp)
 801efb8:	d0a01f15 	stw	r2,-32644(gp)
      }
      rc = i;
 801efbc:	e0bffd17 	ldw	r2,-12(fp)
 801efc0:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 801efc4:	00000606 	br	801efe0 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 801efc8:	e0bffd17 	ldw	r2,-12(fp)
 801efcc:	10800044 	addi	r2,r2,1
 801efd0:	e0bffd15 	stw	r2,-12(fp)
 801efd4:	e0bffd17 	ldw	r2,-12(fp)
 801efd8:	10800810 	cmplti	r2,r2,32
 801efdc:	103fe41e 	bne	r2,zero,801ef70 <__alt_data_end+0xf801ef70>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 801efe0:	e0bffe17 	ldw	r2,-8(fp)
}
 801efe4:	e037883a 	mov	sp,fp
 801efe8:	df000017 	ldw	fp,0(sp)
 801efec:	dec00104 	addi	sp,sp,4
 801eff0:	f800283a 	ret

0801eff4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 801eff4:	defffe04 	addi	sp,sp,-8
 801eff8:	dfc00115 	stw	ra,4(sp)
 801effc:	df000015 	stw	fp,0(sp)
 801f000:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 801f004:	01440004 	movi	r5,4096
 801f008:	0009883a 	mov	r4,zero
 801f00c:	801f42c0 	call	801f42c <alt_icache_flush>
#endif
}
 801f010:	0001883a 	nop
 801f014:	e037883a 	mov	sp,fp
 801f018:	dfc00117 	ldw	ra,4(sp)
 801f01c:	df000017 	ldw	fp,0(sp)
 801f020:	dec00204 	addi	sp,sp,8
 801f024:	f800283a 	ret

0801f028 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 801f028:	defff904 	addi	sp,sp,-28
 801f02c:	dfc00615 	stw	ra,24(sp)
 801f030:	df000515 	stw	fp,20(sp)
 801f034:	df000504 	addi	fp,sp,20
 801f038:	e13ffc15 	stw	r4,-16(fp)
 801f03c:	e17ffd15 	stw	r5,-12(fp)
 801f040:	e1bffe15 	stw	r6,-8(fp)
 801f044:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 801f048:	e0800217 	ldw	r2,8(fp)
 801f04c:	d8800015 	stw	r2,0(sp)
 801f050:	e1ffff17 	ldw	r7,-4(fp)
 801f054:	e1bffe17 	ldw	r6,-8(fp)
 801f058:	e17ffd17 	ldw	r5,-12(fp)
 801f05c:	e13ffc17 	ldw	r4,-16(fp)
 801f060:	801f1d80 	call	801f1d8 <alt_iic_isr_register>
}  
 801f064:	e037883a 	mov	sp,fp
 801f068:	dfc00117 	ldw	ra,4(sp)
 801f06c:	df000017 	ldw	fp,0(sp)
 801f070:	dec00204 	addi	sp,sp,8
 801f074:	f800283a 	ret

0801f078 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 801f078:	defff904 	addi	sp,sp,-28
 801f07c:	df000615 	stw	fp,24(sp)
 801f080:	df000604 	addi	fp,sp,24
 801f084:	e13ffe15 	stw	r4,-8(fp)
 801f088:	e17fff15 	stw	r5,-4(fp)
 801f08c:	e0bfff17 	ldw	r2,-4(fp)
 801f090:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801f094:	0005303a 	rdctl	r2,status
 801f098:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801f09c:	e0fffb17 	ldw	r3,-20(fp)
 801f0a0:	00bfff84 	movi	r2,-2
 801f0a4:	1884703a 	and	r2,r3,r2
 801f0a8:	1001703a 	wrctl	status,r2
  
  return context;
 801f0ac:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801f0b0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 801f0b4:	00c00044 	movi	r3,1
 801f0b8:	e0bffa17 	ldw	r2,-24(fp)
 801f0bc:	1884983a 	sll	r2,r3,r2
 801f0c0:	1007883a 	mov	r3,r2
 801f0c4:	d0a73517 	ldw	r2,-25388(gp)
 801f0c8:	1884b03a 	or	r2,r3,r2
 801f0cc:	d0a73515 	stw	r2,-25388(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801f0d0:	d0a73517 	ldw	r2,-25388(gp)
 801f0d4:	100170fa 	wrctl	ienable,r2
 801f0d8:	e0bffc17 	ldw	r2,-16(fp)
 801f0dc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801f0e0:	e0bffd17 	ldw	r2,-12(fp)
 801f0e4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 801f0e8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 801f0ec:	0001883a 	nop
}
 801f0f0:	e037883a 	mov	sp,fp
 801f0f4:	df000017 	ldw	fp,0(sp)
 801f0f8:	dec00104 	addi	sp,sp,4
 801f0fc:	f800283a 	ret

0801f100 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 801f100:	defff904 	addi	sp,sp,-28
 801f104:	df000615 	stw	fp,24(sp)
 801f108:	df000604 	addi	fp,sp,24
 801f10c:	e13ffe15 	stw	r4,-8(fp)
 801f110:	e17fff15 	stw	r5,-4(fp)
 801f114:	e0bfff17 	ldw	r2,-4(fp)
 801f118:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801f11c:	0005303a 	rdctl	r2,status
 801f120:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801f124:	e0fffb17 	ldw	r3,-20(fp)
 801f128:	00bfff84 	movi	r2,-2
 801f12c:	1884703a 	and	r2,r3,r2
 801f130:	1001703a 	wrctl	status,r2
  
  return context;
 801f134:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 801f138:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 801f13c:	00c00044 	movi	r3,1
 801f140:	e0bffa17 	ldw	r2,-24(fp)
 801f144:	1884983a 	sll	r2,r3,r2
 801f148:	0084303a 	nor	r2,zero,r2
 801f14c:	1007883a 	mov	r3,r2
 801f150:	d0a73517 	ldw	r2,-25388(gp)
 801f154:	1884703a 	and	r2,r3,r2
 801f158:	d0a73515 	stw	r2,-25388(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 801f15c:	d0a73517 	ldw	r2,-25388(gp)
 801f160:	100170fa 	wrctl	ienable,r2
 801f164:	e0bffc17 	ldw	r2,-16(fp)
 801f168:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801f16c:	e0bffd17 	ldw	r2,-12(fp)
 801f170:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 801f174:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 801f178:	0001883a 	nop
}
 801f17c:	e037883a 	mov	sp,fp
 801f180:	df000017 	ldw	fp,0(sp)
 801f184:	dec00104 	addi	sp,sp,4
 801f188:	f800283a 	ret

0801f18c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 801f18c:	defffc04 	addi	sp,sp,-16
 801f190:	df000315 	stw	fp,12(sp)
 801f194:	df000304 	addi	fp,sp,12
 801f198:	e13ffe15 	stw	r4,-8(fp)
 801f19c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 801f1a0:	000530fa 	rdctl	r2,ienable
 801f1a4:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 801f1a8:	00c00044 	movi	r3,1
 801f1ac:	e0bfff17 	ldw	r2,-4(fp)
 801f1b0:	1884983a 	sll	r2,r3,r2
 801f1b4:	1007883a 	mov	r3,r2
 801f1b8:	e0bffd17 	ldw	r2,-12(fp)
 801f1bc:	1884703a 	and	r2,r3,r2
 801f1c0:	1004c03a 	cmpne	r2,r2,zero
 801f1c4:	10803fcc 	andi	r2,r2,255
}
 801f1c8:	e037883a 	mov	sp,fp
 801f1cc:	df000017 	ldw	fp,0(sp)
 801f1d0:	dec00104 	addi	sp,sp,4
 801f1d4:	f800283a 	ret

0801f1d8 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 801f1d8:	defff504 	addi	sp,sp,-44
 801f1dc:	dfc00a15 	stw	ra,40(sp)
 801f1e0:	df000915 	stw	fp,36(sp)
 801f1e4:	df000904 	addi	fp,sp,36
 801f1e8:	e13ffc15 	stw	r4,-16(fp)
 801f1ec:	e17ffd15 	stw	r5,-12(fp)
 801f1f0:	e1bffe15 	stw	r6,-8(fp)
 801f1f4:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 801f1f8:	00bffa84 	movi	r2,-22
 801f1fc:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 801f200:	e0bffd17 	ldw	r2,-12(fp)
 801f204:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 801f208:	e0bff817 	ldw	r2,-32(fp)
 801f20c:	10800808 	cmpgei	r2,r2,32
 801f210:	1000271e 	bne	r2,zero,801f2b0 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 801f214:	0005303a 	rdctl	r2,status
 801f218:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 801f21c:	e0fffb17 	ldw	r3,-20(fp)
 801f220:	00bfff84 	movi	r2,-2
 801f224:	1884703a 	and	r2,r3,r2
 801f228:	1001703a 	wrctl	status,r2
  
  return context;
 801f22c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 801f230:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 801f234:	008200b4 	movhi	r2,2050
 801f238:	108f4204 	addi	r2,r2,15624
 801f23c:	e0fff817 	ldw	r3,-32(fp)
 801f240:	180690fa 	slli	r3,r3,3
 801f244:	10c5883a 	add	r2,r2,r3
 801f248:	e0fffe17 	ldw	r3,-8(fp)
 801f24c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 801f250:	008200b4 	movhi	r2,2050
 801f254:	108f4204 	addi	r2,r2,15624
 801f258:	e0fff817 	ldw	r3,-32(fp)
 801f25c:	180690fa 	slli	r3,r3,3
 801f260:	10c5883a 	add	r2,r2,r3
 801f264:	10800104 	addi	r2,r2,4
 801f268:	e0ffff17 	ldw	r3,-4(fp)
 801f26c:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 801f270:	e0bffe17 	ldw	r2,-8(fp)
 801f274:	10000526 	beq	r2,zero,801f28c <alt_iic_isr_register+0xb4>
 801f278:	e0bff817 	ldw	r2,-32(fp)
 801f27c:	100b883a 	mov	r5,r2
 801f280:	e13ffc17 	ldw	r4,-16(fp)
 801f284:	801f0780 	call	801f078 <alt_ic_irq_enable>
 801f288:	00000406 	br	801f29c <alt_iic_isr_register+0xc4>
 801f28c:	e0bff817 	ldw	r2,-32(fp)
 801f290:	100b883a 	mov	r5,r2
 801f294:	e13ffc17 	ldw	r4,-16(fp)
 801f298:	801f1000 	call	801f100 <alt_ic_irq_disable>
 801f29c:	e0bff715 	stw	r2,-36(fp)
 801f2a0:	e0bffa17 	ldw	r2,-24(fp)
 801f2a4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 801f2a8:	e0bff917 	ldw	r2,-28(fp)
 801f2ac:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 801f2b0:	e0bff717 	ldw	r2,-36(fp)
}
 801f2b4:	e037883a 	mov	sp,fp
 801f2b8:	dfc00117 	ldw	ra,4(sp)
 801f2bc:	df000017 	ldw	fp,0(sp)
 801f2c0:	dec00204 	addi	sp,sp,8
 801f2c4:	f800283a 	ret

0801f2c8 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 801f2c8:	defff904 	addi	sp,sp,-28
 801f2cc:	dfc00615 	stw	ra,24(sp)
 801f2d0:	df000515 	stw	fp,20(sp)
 801f2d4:	df000504 	addi	fp,sp,20
 801f2d8:	e13ffc15 	stw	r4,-16(fp)
 801f2dc:	e17ffd15 	stw	r5,-12(fp)
 801f2e0:	e1bffe15 	stw	r6,-8(fp)
 801f2e4:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 801f2e8:	e1bfff17 	ldw	r6,-4(fp)
 801f2ec:	e17ffe17 	ldw	r5,-8(fp)
 801f2f0:	e13ffd17 	ldw	r4,-12(fp)
 801f2f4:	801cd880 	call	801cd88 <open>
 801f2f8:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 801f2fc:	e0bffb17 	ldw	r2,-20(fp)
 801f300:	10001c16 	blt	r2,zero,801f374 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 801f304:	008200b4 	movhi	r2,2050
 801f308:	10835404 	addi	r2,r2,3408
 801f30c:	e0fffb17 	ldw	r3,-20(fp)
 801f310:	18c00324 	muli	r3,r3,12
 801f314:	10c5883a 	add	r2,r2,r3
 801f318:	10c00017 	ldw	r3,0(r2)
 801f31c:	e0bffc17 	ldw	r2,-16(fp)
 801f320:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 801f324:	008200b4 	movhi	r2,2050
 801f328:	10835404 	addi	r2,r2,3408
 801f32c:	e0fffb17 	ldw	r3,-20(fp)
 801f330:	18c00324 	muli	r3,r3,12
 801f334:	10c5883a 	add	r2,r2,r3
 801f338:	10800104 	addi	r2,r2,4
 801f33c:	10c00017 	ldw	r3,0(r2)
 801f340:	e0bffc17 	ldw	r2,-16(fp)
 801f344:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 801f348:	008200b4 	movhi	r2,2050
 801f34c:	10835404 	addi	r2,r2,3408
 801f350:	e0fffb17 	ldw	r3,-20(fp)
 801f354:	18c00324 	muli	r3,r3,12
 801f358:	10c5883a 	add	r2,r2,r3
 801f35c:	10800204 	addi	r2,r2,8
 801f360:	10c00017 	ldw	r3,0(r2)
 801f364:	e0bffc17 	ldw	r2,-16(fp)
 801f368:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 801f36c:	e13ffb17 	ldw	r4,-20(fp)
 801f370:	801d0140 	call	801d014 <alt_release_fd>
  }
} 
 801f374:	0001883a 	nop
 801f378:	e037883a 	mov	sp,fp
 801f37c:	dfc00117 	ldw	ra,4(sp)
 801f380:	df000017 	ldw	fp,0(sp)
 801f384:	dec00204 	addi	sp,sp,8
 801f388:	f800283a 	ret

0801f38c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 801f38c:	defffb04 	addi	sp,sp,-20
 801f390:	dfc00415 	stw	ra,16(sp)
 801f394:	df000315 	stw	fp,12(sp)
 801f398:	df000304 	addi	fp,sp,12
 801f39c:	e13ffd15 	stw	r4,-12(fp)
 801f3a0:	e17ffe15 	stw	r5,-8(fp)
 801f3a4:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 801f3a8:	01c07fc4 	movi	r7,511
 801f3ac:	01800044 	movi	r6,1
 801f3b0:	e17ffd17 	ldw	r5,-12(fp)
 801f3b4:	010200b4 	movhi	r4,2050
 801f3b8:	21035704 	addi	r4,r4,3420
 801f3bc:	801f2c80 	call	801f2c8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 801f3c0:	01c07fc4 	movi	r7,511
 801f3c4:	000d883a 	mov	r6,zero
 801f3c8:	e17ffe17 	ldw	r5,-8(fp)
 801f3cc:	010200b4 	movhi	r4,2050
 801f3d0:	21035404 	addi	r4,r4,3408
 801f3d4:	801f2c80 	call	801f2c8 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 801f3d8:	01c07fc4 	movi	r7,511
 801f3dc:	01800044 	movi	r6,1
 801f3e0:	e17fff17 	ldw	r5,-4(fp)
 801f3e4:	010200b4 	movhi	r4,2050
 801f3e8:	21035a04 	addi	r4,r4,3432
 801f3ec:	801f2c80 	call	801f2c8 <alt_open_fd>
}  
 801f3f0:	0001883a 	nop
 801f3f4:	e037883a 	mov	sp,fp
 801f3f8:	dfc00117 	ldw	ra,4(sp)
 801f3fc:	df000017 	ldw	fp,0(sp)
 801f400:	dec00204 	addi	sp,sp,8
 801f404:	f800283a 	ret

0801f408 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 801f408:	deffff04 	addi	sp,sp,-4
 801f40c:	df000015 	stw	fp,0(sp)
 801f410:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 801f414:	000170fa 	wrctl	ienable,zero
}
 801f418:	0001883a 	nop
 801f41c:	e037883a 	mov	sp,fp
 801f420:	df000017 	ldw	fp,0(sp)
 801f424:	dec00104 	addi	sp,sp,4
 801f428:	f800283a 	ret

0801f42c <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 801f42c:	defffb04 	addi	sp,sp,-20
 801f430:	df000415 	stw	fp,16(sp)
 801f434:	df000404 	addi	fp,sp,16
 801f438:	e13ffe15 	stw	r4,-8(fp)
 801f43c:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 801f440:	e0bfff17 	ldw	r2,-4(fp)
 801f444:	10840070 	cmpltui	r2,r2,4097
 801f448:	1000021e 	bne	r2,zero,801f454 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 801f44c:	00840004 	movi	r2,4096
 801f450:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 801f454:	e0fffe17 	ldw	r3,-8(fp)
 801f458:	e0bfff17 	ldw	r2,-4(fp)
 801f45c:	1885883a 	add	r2,r3,r2
 801f460:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 801f464:	e0bffe17 	ldw	r2,-8(fp)
 801f468:	e0bffc15 	stw	r2,-16(fp)
 801f46c:	00000506 	br	801f484 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 801f470:	e0bffc17 	ldw	r2,-16(fp)
 801f474:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 801f478:	e0bffc17 	ldw	r2,-16(fp)
 801f47c:	10800804 	addi	r2,r2,32
 801f480:	e0bffc15 	stw	r2,-16(fp)
 801f484:	e0fffc17 	ldw	r3,-16(fp)
 801f488:	e0bffd17 	ldw	r2,-12(fp)
 801f48c:	18bff836 	bltu	r3,r2,801f470 <__alt_data_end+0xf801f470>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 801f490:	e0bffe17 	ldw	r2,-8(fp)
 801f494:	108007cc 	andi	r2,r2,31
 801f498:	10000226 	beq	r2,zero,801f4a4 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 801f49c:	e0bffc17 	ldw	r2,-16(fp)
 801f4a0:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 801f4a4:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 801f4a8:	0001883a 	nop
 801f4ac:	e037883a 	mov	sp,fp
 801f4b0:	df000017 	ldw	fp,0(sp)
 801f4b4:	dec00104 	addi	sp,sp,4
 801f4b8:	f800283a 	ret

0801f4bc <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 801f4bc:	defffe04 	addi	sp,sp,-8
 801f4c0:	df000115 	stw	fp,4(sp)
 801f4c4:	df000104 	addi	fp,sp,4
 801f4c8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 801f4cc:	e0bfff17 	ldw	r2,-4(fp)
 801f4d0:	10bffe84 	addi	r2,r2,-6
 801f4d4:	10c00428 	cmpgeui	r3,r2,16
 801f4d8:	18001a1e 	bne	r3,zero,801f544 <alt_exception_cause_generated_bad_addr+0x88>
 801f4dc:	100690ba 	slli	r3,r2,2
 801f4e0:	008200b4 	movhi	r2,2050
 801f4e4:	10bd3d04 	addi	r2,r2,-2828
 801f4e8:	1885883a 	add	r2,r3,r2
 801f4ec:	10800017 	ldw	r2,0(r2)
 801f4f0:	1000683a 	jmp	r2
 801f4f4:	0801f534 	orhi	zero,at,2004
 801f4f8:	0801f534 	orhi	zero,at,2004
 801f4fc:	0801f544 	addi	zero,at,2005
 801f500:	0801f544 	addi	zero,at,2005
 801f504:	0801f544 	addi	zero,at,2005
 801f508:	0801f534 	orhi	zero,at,2004
 801f50c:	0801f53c 	xorhi	zero,at,2004
 801f510:	0801f544 	addi	zero,at,2005
 801f514:	0801f534 	orhi	zero,at,2004
 801f518:	0801f534 	orhi	zero,at,2004
 801f51c:	0801f544 	addi	zero,at,2005
 801f520:	0801f534 	orhi	zero,at,2004
 801f524:	0801f53c 	xorhi	zero,at,2004
 801f528:	0801f544 	addi	zero,at,2005
 801f52c:	0801f544 	addi	zero,at,2005
 801f530:	0801f534 	orhi	zero,at,2004
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 801f534:	00800044 	movi	r2,1
 801f538:	00000306 	br	801f548 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 801f53c:	0005883a 	mov	r2,zero
 801f540:	00000106 	br	801f548 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 801f544:	0005883a 	mov	r2,zero
  }
}
 801f548:	e037883a 	mov	sp,fp
 801f54c:	df000017 	ldw	fp,0(sp)
 801f550:	dec00104 	addi	sp,sp,4
 801f554:	f800283a 	ret

0801f558 <atexit>:
 801f558:	200b883a 	mov	r5,r4
 801f55c:	000f883a 	mov	r7,zero
 801f560:	000d883a 	mov	r6,zero
 801f564:	0009883a 	mov	r4,zero
 801f568:	801f6201 	jmpi	801f620 <__register_exitproc>

0801f56c <exit>:
 801f56c:	defffe04 	addi	sp,sp,-8
 801f570:	000b883a 	mov	r5,zero
 801f574:	dc000015 	stw	r16,0(sp)
 801f578:	dfc00115 	stw	ra,4(sp)
 801f57c:	2021883a 	mov	r16,r4
 801f580:	801f7380 	call	801f738 <__call_exitprocs>
 801f584:	008200b4 	movhi	r2,2050
 801f588:	10881304 	addi	r2,r2,8268
 801f58c:	11000017 	ldw	r4,0(r2)
 801f590:	20800f17 	ldw	r2,60(r4)
 801f594:	10000126 	beq	r2,zero,801f59c <exit+0x30>
 801f598:	103ee83a 	callr	r2
 801f59c:	8009883a 	mov	r4,r16
 801f5a0:	801c4e00 	call	801c4e0 <_exit>

0801f5a4 <memcmp>:
 801f5a4:	01c000c4 	movi	r7,3
 801f5a8:	3980192e 	bgeu	r7,r6,801f610 <memcmp+0x6c>
 801f5ac:	2144b03a 	or	r2,r4,r5
 801f5b0:	11c4703a 	and	r2,r2,r7
 801f5b4:	10000f26 	beq	r2,zero,801f5f4 <memcmp+0x50>
 801f5b8:	20800003 	ldbu	r2,0(r4)
 801f5bc:	28c00003 	ldbu	r3,0(r5)
 801f5c0:	10c0151e 	bne	r2,r3,801f618 <memcmp+0x74>
 801f5c4:	31bfff84 	addi	r6,r6,-2
 801f5c8:	01ffffc4 	movi	r7,-1
 801f5cc:	00000406 	br	801f5e0 <memcmp+0x3c>
 801f5d0:	20800003 	ldbu	r2,0(r4)
 801f5d4:	28c00003 	ldbu	r3,0(r5)
 801f5d8:	31bfffc4 	addi	r6,r6,-1
 801f5dc:	10c00e1e 	bne	r2,r3,801f618 <memcmp+0x74>
 801f5e0:	21000044 	addi	r4,r4,1
 801f5e4:	29400044 	addi	r5,r5,1
 801f5e8:	31fff91e 	bne	r6,r7,801f5d0 <__alt_data_end+0xf801f5d0>
 801f5ec:	0005883a 	mov	r2,zero
 801f5f0:	f800283a 	ret
 801f5f4:	20c00017 	ldw	r3,0(r4)
 801f5f8:	28800017 	ldw	r2,0(r5)
 801f5fc:	18bfee1e 	bne	r3,r2,801f5b8 <__alt_data_end+0xf801f5b8>
 801f600:	31bfff04 	addi	r6,r6,-4
 801f604:	21000104 	addi	r4,r4,4
 801f608:	29400104 	addi	r5,r5,4
 801f60c:	39bff936 	bltu	r7,r6,801f5f4 <__alt_data_end+0xf801f5f4>
 801f610:	303fe91e 	bne	r6,zero,801f5b8 <__alt_data_end+0xf801f5b8>
 801f614:	003ff506 	br	801f5ec <__alt_data_end+0xf801f5ec>
 801f618:	10c5c83a 	sub	r2,r2,r3
 801f61c:	f800283a 	ret

0801f620 <__register_exitproc>:
 801f620:	defffa04 	addi	sp,sp,-24
 801f624:	dc000315 	stw	r16,12(sp)
 801f628:	040200b4 	movhi	r16,2050
 801f62c:	84081304 	addi	r16,r16,8268
 801f630:	80c00017 	ldw	r3,0(r16)
 801f634:	dc400415 	stw	r17,16(sp)
 801f638:	dfc00515 	stw	ra,20(sp)
 801f63c:	18805217 	ldw	r2,328(r3)
 801f640:	2023883a 	mov	r17,r4
 801f644:	10003726 	beq	r2,zero,801f724 <__register_exitproc+0x104>
 801f648:	10c00117 	ldw	r3,4(r2)
 801f64c:	010007c4 	movi	r4,31
 801f650:	20c00e16 	blt	r4,r3,801f68c <__register_exitproc+0x6c>
 801f654:	1a000044 	addi	r8,r3,1
 801f658:	8800221e 	bne	r17,zero,801f6e4 <__register_exitproc+0xc4>
 801f65c:	18c00084 	addi	r3,r3,2
 801f660:	18c7883a 	add	r3,r3,r3
 801f664:	18c7883a 	add	r3,r3,r3
 801f668:	12000115 	stw	r8,4(r2)
 801f66c:	10c7883a 	add	r3,r2,r3
 801f670:	19400015 	stw	r5,0(r3)
 801f674:	0005883a 	mov	r2,zero
 801f678:	dfc00517 	ldw	ra,20(sp)
 801f67c:	dc400417 	ldw	r17,16(sp)
 801f680:	dc000317 	ldw	r16,12(sp)
 801f684:	dec00604 	addi	sp,sp,24
 801f688:	f800283a 	ret
 801f68c:	00820034 	movhi	r2,2048
 801f690:	108feb04 	addi	r2,r2,16300
 801f694:	10002626 	beq	r2,zero,801f730 <__register_exitproc+0x110>
 801f698:	01006404 	movi	r4,400
 801f69c:	d9400015 	stw	r5,0(sp)
 801f6a0:	d9800115 	stw	r6,4(sp)
 801f6a4:	d9c00215 	stw	r7,8(sp)
 801f6a8:	8003fac0 	call	8003fac <malloc>
 801f6ac:	d9400017 	ldw	r5,0(sp)
 801f6b0:	d9800117 	ldw	r6,4(sp)
 801f6b4:	d9c00217 	ldw	r7,8(sp)
 801f6b8:	10001d26 	beq	r2,zero,801f730 <__register_exitproc+0x110>
 801f6bc:	81000017 	ldw	r4,0(r16)
 801f6c0:	10000115 	stw	zero,4(r2)
 801f6c4:	02000044 	movi	r8,1
 801f6c8:	22405217 	ldw	r9,328(r4)
 801f6cc:	0007883a 	mov	r3,zero
 801f6d0:	12400015 	stw	r9,0(r2)
 801f6d4:	20805215 	stw	r2,328(r4)
 801f6d8:	10006215 	stw	zero,392(r2)
 801f6dc:	10006315 	stw	zero,396(r2)
 801f6e0:	883fde26 	beq	r17,zero,801f65c <__alt_data_end+0xf801f65c>
 801f6e4:	18c9883a 	add	r4,r3,r3
 801f6e8:	2109883a 	add	r4,r4,r4
 801f6ec:	1109883a 	add	r4,r2,r4
 801f6f0:	21802215 	stw	r6,136(r4)
 801f6f4:	01800044 	movi	r6,1
 801f6f8:	12406217 	ldw	r9,392(r2)
 801f6fc:	30cc983a 	sll	r6,r6,r3
 801f700:	4992b03a 	or	r9,r9,r6
 801f704:	12406215 	stw	r9,392(r2)
 801f708:	21c04215 	stw	r7,264(r4)
 801f70c:	01000084 	movi	r4,2
 801f710:	893fd21e 	bne	r17,r4,801f65c <__alt_data_end+0xf801f65c>
 801f714:	11006317 	ldw	r4,396(r2)
 801f718:	218cb03a 	or	r6,r4,r6
 801f71c:	11806315 	stw	r6,396(r2)
 801f720:	003fce06 	br	801f65c <__alt_data_end+0xf801f65c>
 801f724:	18805304 	addi	r2,r3,332
 801f728:	18805215 	stw	r2,328(r3)
 801f72c:	003fc606 	br	801f648 <__alt_data_end+0xf801f648>
 801f730:	00bfffc4 	movi	r2,-1
 801f734:	003fd006 	br	801f678 <__alt_data_end+0xf801f678>

0801f738 <__call_exitprocs>:
 801f738:	defff504 	addi	sp,sp,-44
 801f73c:	df000915 	stw	fp,36(sp)
 801f740:	dd400615 	stw	r21,24(sp)
 801f744:	dc800315 	stw	r18,12(sp)
 801f748:	dfc00a15 	stw	ra,40(sp)
 801f74c:	ddc00815 	stw	r23,32(sp)
 801f750:	dd800715 	stw	r22,28(sp)
 801f754:	dd000515 	stw	r20,20(sp)
 801f758:	dcc00415 	stw	r19,16(sp)
 801f75c:	dc400215 	stw	r17,8(sp)
 801f760:	dc000115 	stw	r16,4(sp)
 801f764:	d9000015 	stw	r4,0(sp)
 801f768:	2839883a 	mov	fp,r5
 801f76c:	04800044 	movi	r18,1
 801f770:	057fffc4 	movi	r21,-1
 801f774:	008200b4 	movhi	r2,2050
 801f778:	10881304 	addi	r2,r2,8268
 801f77c:	12000017 	ldw	r8,0(r2)
 801f780:	45005217 	ldw	r20,328(r8)
 801f784:	44c05204 	addi	r19,r8,328
 801f788:	a0001c26 	beq	r20,zero,801f7fc <__call_exitprocs+0xc4>
 801f78c:	a0800117 	ldw	r2,4(r20)
 801f790:	15ffffc4 	addi	r23,r2,-1
 801f794:	b8000d16 	blt	r23,zero,801f7cc <__call_exitprocs+0x94>
 801f798:	14000044 	addi	r16,r2,1
 801f79c:	8421883a 	add	r16,r16,r16
 801f7a0:	8421883a 	add	r16,r16,r16
 801f7a4:	84402004 	addi	r17,r16,128
 801f7a8:	a463883a 	add	r17,r20,r17
 801f7ac:	a421883a 	add	r16,r20,r16
 801f7b0:	e0001e26 	beq	fp,zero,801f82c <__call_exitprocs+0xf4>
 801f7b4:	80804017 	ldw	r2,256(r16)
 801f7b8:	e0801c26 	beq	fp,r2,801f82c <__call_exitprocs+0xf4>
 801f7bc:	bdffffc4 	addi	r23,r23,-1
 801f7c0:	843fff04 	addi	r16,r16,-4
 801f7c4:	8c7fff04 	addi	r17,r17,-4
 801f7c8:	bd7ff91e 	bne	r23,r21,801f7b0 <__alt_data_end+0xf801f7b0>
 801f7cc:	00820034 	movhi	r2,2048
 801f7d0:	108ff004 	addi	r2,r2,16320
 801f7d4:	10000926 	beq	r2,zero,801f7fc <__call_exitprocs+0xc4>
 801f7d8:	a0800117 	ldw	r2,4(r20)
 801f7dc:	1000301e 	bne	r2,zero,801f8a0 <__call_exitprocs+0x168>
 801f7e0:	a0800017 	ldw	r2,0(r20)
 801f7e4:	10003226 	beq	r2,zero,801f8b0 <__call_exitprocs+0x178>
 801f7e8:	a009883a 	mov	r4,r20
 801f7ec:	98800015 	stw	r2,0(r19)
 801f7f0:	8003fc00 	call	8003fc0 <free>
 801f7f4:	9d000017 	ldw	r20,0(r19)
 801f7f8:	a03fe41e 	bne	r20,zero,801f78c <__alt_data_end+0xf801f78c>
 801f7fc:	dfc00a17 	ldw	ra,40(sp)
 801f800:	df000917 	ldw	fp,36(sp)
 801f804:	ddc00817 	ldw	r23,32(sp)
 801f808:	dd800717 	ldw	r22,28(sp)
 801f80c:	dd400617 	ldw	r21,24(sp)
 801f810:	dd000517 	ldw	r20,20(sp)
 801f814:	dcc00417 	ldw	r19,16(sp)
 801f818:	dc800317 	ldw	r18,12(sp)
 801f81c:	dc400217 	ldw	r17,8(sp)
 801f820:	dc000117 	ldw	r16,4(sp)
 801f824:	dec00b04 	addi	sp,sp,44
 801f828:	f800283a 	ret
 801f82c:	a0800117 	ldw	r2,4(r20)
 801f830:	80c00017 	ldw	r3,0(r16)
 801f834:	10bfffc4 	addi	r2,r2,-1
 801f838:	15c01426 	beq	r2,r23,801f88c <__call_exitprocs+0x154>
 801f83c:	80000015 	stw	zero,0(r16)
 801f840:	183fde26 	beq	r3,zero,801f7bc <__alt_data_end+0xf801f7bc>
 801f844:	95c8983a 	sll	r4,r18,r23
 801f848:	a0806217 	ldw	r2,392(r20)
 801f84c:	a5800117 	ldw	r22,4(r20)
 801f850:	2084703a 	and	r2,r4,r2
 801f854:	10000b26 	beq	r2,zero,801f884 <__call_exitprocs+0x14c>
 801f858:	a0806317 	ldw	r2,396(r20)
 801f85c:	2088703a 	and	r4,r4,r2
 801f860:	20000c1e 	bne	r4,zero,801f894 <__call_exitprocs+0x15c>
 801f864:	89400017 	ldw	r5,0(r17)
 801f868:	d9000017 	ldw	r4,0(sp)
 801f86c:	183ee83a 	callr	r3
 801f870:	a0800117 	ldw	r2,4(r20)
 801f874:	15bfbf1e 	bne	r2,r22,801f774 <__alt_data_end+0xf801f774>
 801f878:	98800017 	ldw	r2,0(r19)
 801f87c:	153fcf26 	beq	r2,r20,801f7bc <__alt_data_end+0xf801f7bc>
 801f880:	003fbc06 	br	801f774 <__alt_data_end+0xf801f774>
 801f884:	183ee83a 	callr	r3
 801f888:	003ff906 	br	801f870 <__alt_data_end+0xf801f870>
 801f88c:	a5c00115 	stw	r23,4(r20)
 801f890:	003feb06 	br	801f840 <__alt_data_end+0xf801f840>
 801f894:	89000017 	ldw	r4,0(r17)
 801f898:	183ee83a 	callr	r3
 801f89c:	003ff406 	br	801f870 <__alt_data_end+0xf801f870>
 801f8a0:	a0800017 	ldw	r2,0(r20)
 801f8a4:	a027883a 	mov	r19,r20
 801f8a8:	1029883a 	mov	r20,r2
 801f8ac:	003fb606 	br	801f788 <__alt_data_end+0xf801f788>
 801f8b0:	0005883a 	mov	r2,zero
 801f8b4:	003ffb06 	br	801f8a4 <__alt_data_end+0xf801f8a4>
 801f8b8:	0201ffff 	0x201ffff
 801f8bc:	ffff0000 	call	ffff000 <_gp+0x7fd500c>
 801f8c0:	00001601 	jmpi	160 <__alt_mem_sdram-0x7fffea0>
 801f8c4:	00020001 	jmpi	2000 <__alt_mem_sdram-0x7ffe000>
 801f8c8:	00040003 	ldbu	zero,4096(zero)
 801f8cc:	00060005 	stb	zero,6144(zero)
 801f8d0:	00080007 	ldb	zero,8192(zero)
 801f8d4:	000a0009 	0xa0009
 801f8d8:	010d0bff 	0x10d0bff
 801f8dc:	01010002 	0x1010002
	...
 801f8e8:	010d0bff 	0x10d0bff
 801f8ec:	01010004 	movi	r4,1024
 801f8f0:	00000100 	call	10 <__alt_mem_sdram-0x7fffff0>
 801f8f4:	00000000 	call	0 <__alt_mem_sdram-0x8000000>
 801f8f8:	01110bff 	0x1110bff
 801f8fc:	01010004 	movi	r4,1024
 801f900:	7f000105 	stb	fp,4(r15)
 801f904:	007d0000 	call	7d000 <__alt_mem_sdram-0x7f83000>
 801f908:	00000000 	call	0 <__alt_mem_sdram-0x8000000>
 801f90c:	01883a00 	call	1883a0 <__alt_mem_sdram-0x7e77c60>
 801f910:	08003054 	ori	zero,at,193
